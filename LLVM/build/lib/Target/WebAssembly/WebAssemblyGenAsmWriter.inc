/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// getMnemonic - This method is automatically generated by tablegen
/// from the instruction set description.
std::pair<const char *, uint64_t> WebAssemblyInstPrinter::getMnemonic(const MCInst *MI) {

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ "br      \t\0"
  /* 10 */ "try     \t\0"
  /* 20 */ "if    \t\0"
  /* 28 */ "return_call    \t\0"
  /* 45 */ "loop    \t\0"
  /* 55 */ "br_if   \t\0"
  /* 65 */ "catch   \t\0"
  /* 75 */ "block   \t\0"
  /* 85 */ "throw   \t\0"
  /* 95 */ "f32.ge  \t\0"
  /* 105 */ "f64.ge  \t\0"
  /* 115 */ "f32.le  \t\0"
  /* 125 */ "f64.le  \t\0"
  /* 135 */ "f32.ne  \t\0"
  /* 145 */ "i32.ne  \t\0"
  /* 155 */ "f64.ne  \t\0"
  /* 165 */ "i64.ne  \t\0"
  /* 175 */ "f32.eq  \t\0"
  /* 185 */ "i32.eq  \t\0"
  /* 195 */ "f64.eq  \t\0"
  /* 205 */ "i64.eq  \t\0"
  /* 215 */ "i32.or  \t\0"
  /* 225 */ "i64.or  \t\0"
  /* 235 */ "f32.gt  \t\0"
  /* 245 */ "f64.gt  \t\0"
  /* 255 */ "f32.lt  \t\0"
  /* 265 */ "f64.lt  \t\0"
  /* 275 */ "memory.atomic.wait32 \t\0"
  /* 298 */ "memory.atomic.wait64 \t\0"
  /* 321 */ "f32.sub \t\0"
  /* 331 */ "i32.sub \t\0"
  /* 341 */ "f64.sub \t\0"
  /* 351 */ "i64.sub \t\0"
  /* 361 */ "f32.add \t\0"
  /* 371 */ "i32.add \t\0"
  /* 381 */ "f64.add \t\0"
  /* 391 */ "i64.add \t\0"
  /* 401 */ "i32.and \t\0"
  /* 411 */ "i64.and \t\0"
  /* 421 */ "br_table \t\0"
  /* 432 */ "f32.neg \t\0"
  /* 442 */ "f64.neg \t\0"
  /* 452 */ "i32.shl \t\0"
  /* 462 */ "i64.shl \t\0"
  /* 472 */ "f32.mul \t\0"
  /* 482 */ "i32.mul \t\0"
  /* 492 */ "f64.mul \t\0"
  /* 502 */ "i64.mul \t\0"
  /* 512 */ "f32.min \t\0"
  /* 522 */ "f64.min \t\0"
  /* 532 */ "i32.xor \t\0"
  /* 542 */ "i64.xor \t\0"
  /* 552 */ "f32.abs \t\0"
  /* 562 */ "f64.abs \t\0"
  /* 572 */ "f32.div \t\0"
  /* 582 */ "f64.div \t\0"
  /* 592 */ "rethrow \t\0"
  /* 602 */ "f32.max \t\0"
  /* 612 */ "f64.max \t\0"
  /* 622 */ "memory.atomic.notify \t\0"
  /* 645 */ "i32.clz \t\0"
  /* 655 */ "i64.clz \t\0"
  /* 665 */ "i32.eqz \t\0"
  /* 675 */ "i64.eqz \t\0"
  /* 685 */ "i32.ctz \t\0"
  /* 695 */ "i64.ctz \t\0"
  /* 705 */ "i64.store32\t\0"
  /* 718 */ "i64.atomic.store32\t\0"
  /* 738 */ "f64.promote_f32\t\0"
  /* 755 */ "i32.reinterpret_f32\t\0"
  /* 776 */ "f32.reinterpret_i32\t\0"
  /* 797 */ "f32x4.demote_zero_f64x2\t\0"
  /* 822 */ "f32.demote_f64\t\0"
  /* 838 */ "i64.reinterpret_f64\t\0"
  /* 859 */ "i32.wrap_i64\t\0"
  /* 873 */ "f64.reinterpret_i64\t\0"
  /* 894 */ "f64x2.promote_low_f32x4\t\0"
  /* 919 */ "i32.store16\t\0"
  /* 932 */ "i64.store16\t\0"
  /* 945 */ "i32.atomic.store16\t\0"
  /* 965 */ "i64.atomic.store16\t\0"
  /* 985 */ "i32.store8\t\0"
  /* 997 */ "i64.store8\t\0"
  /* 1009 */ "i32.atomic.store8\t\0"
  /* 1028 */ "i64.atomic.store8\t\0"
  /* 1047 */ "f64x2.qfma\t\0"
  /* 1059 */ "f32x4.qfma\t\0"
  /* 1071 */ "f64x2.sub\t\0"
  /* 1082 */ "i64x2.sub\t\0"
  /* 1093 */ "f32x4.sub\t\0"
  /* 1104 */ "i32x4.sub\t\0"
  /* 1115 */ "i8x16.sub\t\0"
  /* 1126 */ "i16x8.sub\t\0"
  /* 1137 */ "i32.atomic.rmw.sub\t\0"
  /* 1157 */ "i64.atomic.rmw.sub\t\0"
  /* 1177 */ "f32.trunc\t\0"
  /* 1188 */ "f64x2.trunc\t\0"
  /* 1201 */ "f64.trunc\t\0"
  /* 1212 */ "f32x4.trunc\t\0"
  /* 1225 */ "f32.load\t\0"
  /* 1235 */ "i32.load\t\0"
  /* 1245 */ "f64.load\t\0"
  /* 1255 */ "i64.load\t\0"
  /* 1265 */ "v128.load\t\0"
  /* 1276 */ "i32.atomic.load\t\0"
  /* 1293 */ "i64.atomic.load\t\0"
  /* 1310 */ "f64x2.add\t\0"
  /* 1321 */ "i64x2.add\t\0"
  /* 1332 */ "f32x4.add\t\0"
  /* 1343 */ "i32x4.add\t\0"
  /* 1354 */ "i8x16.add\t\0"
  /* 1365 */ "i16x8.add\t\0"
  /* 1376 */ "i32.atomic.rmw.add\t\0"
  /* 1396 */ "i64.atomic.rmw.add\t\0"
  /* 1416 */ "v128.and\t\0"
  /* 1426 */ "i32.atomic.rmw.and\t\0"
  /* 1446 */ "i64.atomic.rmw.and\t\0"
  /* 1466 */ "local.tee\t\0"
  /* 1477 */ "f64x2.ge\t\0"
  /* 1487 */ "f32x4.ge\t\0"
  /* 1497 */ "f64x2.le\t\0"
  /* 1507 */ "f32x4.le\t\0"
  /* 1517 */ "i8x16.shuffle\t\0"
  /* 1532 */ "i8x16.swizzle\t\0"
  /* 1547 */ "f64x2.ne\t\0"
  /* 1557 */ "f32x4.ne\t\0"
  /* 1567 */ "i32x4.ne\t\0"
  /* 1577 */ "i8x16.ne\t\0"
  /* 1587 */ "i16x8.ne\t\0"
  /* 1597 */ "v128.load32_lane\t\0"
  /* 1615 */ "v128.store32_lane\t\0"
  /* 1634 */ "v128.load64_lane\t\0"
  /* 1652 */ "v128.store64_lane\t\0"
  /* 1671 */ "v128.load16_lane\t\0"
  /* 1689 */ "v128.store16_lane\t\0"
  /* 1708 */ "v128.load8_lane\t\0"
  /* 1725 */ "v128.store8_lane\t\0"
  /* 1743 */ "f64x2.replace_lane\t\0"
  /* 1763 */ "i64x2.replace_lane\t\0"
  /* 1783 */ "f32x4.replace_lane\t\0"
  /* 1803 */ "i32x4.replace_lane\t\0"
  /* 1823 */ "i8x16.replace_lane\t\0"
  /* 1843 */ "i16x8.replace_lane\t\0"
  /* 1863 */ "f64x2.extract_lane\t\0"
  /* 1883 */ "i64x2.extract_lane\t\0"
  /* 1903 */ "f32x4.extract_lane\t\0"
  /* 1923 */ "i32x4.extract_lane\t\0"
  /* 1943 */ "f32.store\t\0"
  /* 1954 */ "i32.store\t\0"
  /* 1965 */ "f64.store\t\0"
  /* 1976 */ "i64.store\t\0"
  /* 1987 */ "v128.store\t\0"
  /* 1999 */ "i32.atomic.store\t\0"
  /* 2017 */ "i64.atomic.store\t\0"
  /* 2035 */ "i64x2.all_true\t\0"
  /* 2051 */ "i32x4.all_true\t\0"
  /* 2067 */ "i8x16.all_true\t\0"
  /* 2083 */ "i16x8.all_true\t\0"
  /* 2099 */ "i64x2.any_true\t\0"
  /* 2115 */ "i32x4.any_true\t\0"
  /* 2131 */ "i8x16.any_true\t\0"
  /* 2147 */ "i16x8.any_true\t\0"
  /* 2163 */ "table.size\t\0"
  /* 2175 */ "memory.size\t\0"
  /* 2188 */ "f64x2.neg\t\0"
  /* 2199 */ "i64x2.neg\t\0"
  /* 2210 */ "f32x4.neg\t\0"
  /* 2221 */ "i32x4.neg\t\0"
  /* 2232 */ "i8x16.neg\t\0"
  /* 2243 */ "i16x8.neg\t\0"
  /* 2254 */ "i32.atomic.rmw.xchg\t\0"
  /* 2275 */ "i64.atomic.rmw.xchg\t\0"
  /* 2296 */ "i32.atomic.rmw.cmpxchg\t\0"
  /* 2320 */ "i64.atomic.rmw.cmpxchg\t\0"
  /* 2344 */ "i64x2.bitmask\t\0"
  /* 2359 */ "i32x4.bitmask\t\0"
  /* 2374 */ "i8x16.bitmask\t\0"
  /* 2389 */ "i16x8.bitmask\t\0"
  /* 2404 */ "i64x2.shl\t\0"
  /* 2415 */ "i32x4.shl\t\0"
  /* 2426 */ "i8x16.shl\t\0"
  /* 2437 */ "i16x8.shl\t\0"
  /* 2448 */ "f32.ceil\t\0"
  /* 2458 */ "f64x2.ceil\t\0"
  /* 2470 */ "f64.ceil\t\0"
  /* 2480 */ "f32x4.ceil\t\0"
  /* 2492 */ "return_call\t\0"
  /* 2505 */ "table.fill\t\0"
  /* 2517 */ "memory.fill\t\0"
  /* 2530 */ "ref.null\t\0"
  /* 2540 */ "i32.rotl\t\0"
  /* 2550 */ "i64.rotl\t\0"
  /* 2560 */ "f64x2.mul\t\0"
  /* 2571 */ "i64x2.mul\t\0"
  /* 2582 */ "f32x4.mul\t\0"
  /* 2593 */ "i32x4.mul\t\0"
  /* 2604 */ "i16x8.mul\t\0"
  /* 2615 */ "f32.copysign\t\0"
  /* 2629 */ "f64.copysign\t\0"
  /* 2643 */ "f64x2.min\t\0"
  /* 2654 */ "f32x4.min\t\0"
  /* 2665 */ "f64x2.pmin\t\0"
  /* 2677 */ "f32x4.pmin\t\0"
  /* 2689 */ "v128.load32_zero\t\0"
  /* 2707 */ "v128.load64_zero\t\0"
  /* 2725 */ "data.drop\t\0"
  /* 2736 */ "f64x2.eq\t\0"
  /* 2746 */ "i64x2.eq\t\0"
  /* 2756 */ "f32x4.eq\t\0"
  /* 2766 */ "i32x4.eq\t\0"
  /* 2776 */ "i8x16.eq\t\0"
  /* 2786 */ "i16x8.eq\t\0"
  /* 2796 */ "v128.or\t\0"
  /* 2805 */ "i32.atomic.rmw.or\t\0"
  /* 2824 */ "i64.atomic.rmw.or\t\0"
  /* 2843 */ "f32.floor\t\0"
  /* 2854 */ "f64x2.floor\t\0"
  /* 2867 */ "f64.floor\t\0"
  /* 2878 */ "f32x4.floor\t\0"
  /* 2891 */ "v128.xor\t\0"
  /* 2901 */ "i32.atomic.rmw.xor\t\0"
  /* 2921 */ "i64.atomic.rmw.xor\t\0"
  /* 2941 */ "i32.rotr\t\0"
  /* 2951 */ "i64.rotr\t\0"
  /* 2961 */ "i64.load32_s\t\0"
  /* 2975 */ "i64.extend32_s\t\0"
  /* 2991 */ "i32.trunc_f32_s\t\0"
  /* 3008 */ "i64.trunc_f32_s\t\0"
  /* 3025 */ "i32.trunc_sat_f32_s\t\0"
  /* 3046 */ "i64.trunc_sat_f32_s\t\0"
  /* 3067 */ "i64.extend_i32_s\t\0"
  /* 3085 */ "f32.convert_i32_s\t\0"
  /* 3104 */ "f64.convert_i32_s\t\0"
  /* 3123 */ "i64x2.load32x2_s\t\0"
  /* 3141 */ "i32x4.trunc_sat_zero_f64x2_s\t\0"
  /* 3171 */ "i32.trunc_f64_s\t\0"
  /* 3188 */ "i64.trunc_f64_s\t\0"
  /* 3205 */ "i32.trunc_sat_f64_s\t\0"
  /* 3226 */ "i64.trunc_sat_f64_s\t\0"
  /* 3247 */ "f32.convert_i64_s\t\0"
  /* 3266 */ "f64.convert_i64_s\t\0"
  /* 3285 */ "i32x4.trunc_sat_f32x4_s\t\0"
  /* 3310 */ "i64x2.extmul_high_i32x4_s\t\0"
  /* 3337 */ "i64x2.widen_high_i32x4_s\t\0"
  /* 3363 */ "f32x4.convert_i32x4_s\t\0"
  /* 3386 */ "i64x2.extmul_low_i32x4_s\t\0"
  /* 3412 */ "i64x2.widen_low_i32x4_s\t\0"
  /* 3437 */ "f64x2.convert_low_i32x4_s\t\0"
  /* 3464 */ "i16x8.narrow_i32x4_s\t\0"
  /* 3486 */ "i32x4.load16x4_s\t\0"
  /* 3504 */ "i32.load16_s\t\0"
  /* 3518 */ "i64.load16_s\t\0"
  /* 3532 */ "i32.extend16_s\t\0"
  /* 3548 */ "i64.extend16_s\t\0"
  /* 3564 */ "i16x8.extadd_pairwise_i8x16_s\t\0"
  /* 3595 */ "i16x8.extmul_high_i8x16_s\t\0"
  /* 3622 */ "i16x8.widen_high_i8x16_s\t\0"
  /* 3648 */ "i16x8.extmul_low_i8x16_s\t\0"
  /* 3674 */ "i16x8.widen_low_i8x16_s\t\0"
  /* 3699 */ "i32.load8_s\t\0"
  /* 3712 */ "i64.load8_s\t\0"
  /* 3725 */ "i32.extend8_s\t\0"
  /* 3740 */ "i64.extend8_s\t\0"
  /* 3755 */ "i32x4.extadd_pairwise_i16x8_s\t\0"
  /* 3786 */ "i32x4.extmul_high_i16x8_s\t\0"
  /* 3813 */ "i32x4.widen_high_i16x8_s\t\0"
  /* 3839 */ "i32x4.dot_i16x8_s\t\0"
  /* 3858 */ "i32x4.extmul_low_i16x8_s\t\0"
  /* 3884 */ "i32x4.widen_low_i16x8_s\t\0"
  /* 3909 */ "i8x16.narrow_i16x8_s\t\0"
  /* 3931 */ "i16x8.load8x8_s\t\0"
  /* 3948 */ "i32.ge_s\t\0"
  /* 3958 */ "i64.ge_s\t\0"
  /* 3968 */ "i32x4.ge_s\t\0"
  /* 3980 */ "i8x16.ge_s\t\0"
  /* 3992 */ "i16x8.ge_s\t\0"
  /* 4004 */ "i32.le_s\t\0"
  /* 4014 */ "i64.le_s\t\0"
  /* 4024 */ "i32x4.le_s\t\0"
  /* 4036 */ "i8x16.le_s\t\0"
  /* 4048 */ "i16x8.le_s\t\0"
  /* 4060 */ "i8x16.extract_lane_s\t\0"
  /* 4082 */ "i16x8.extract_lane_s\t\0"
  /* 4104 */ "i8x16.sub_saturate_s\t\0"
  /* 4126 */ "i16x8.sub_saturate_s\t\0"
  /* 4148 */ "i8x16.add_saturate_s\t\0"
  /* 4170 */ "i16x8.add_saturate_s\t\0"
  /* 4192 */ "i32.rem_s\t\0"
  /* 4203 */ "i64.rem_s\t\0"
  /* 4214 */ "i32x4.min_s\t\0"
  /* 4227 */ "i8x16.min_s\t\0"
  /* 4240 */ "i16x8.min_s\t\0"
  /* 4253 */ "i32.shr_s\t\0"
  /* 4264 */ "i64x2.shr_s\t\0"
  /* 4277 */ "i64.shr_s\t\0"
  /* 4288 */ "i32x4.shr_s\t\0"
  /* 4301 */ "i8x16.shr_s\t\0"
  /* 4314 */ "i16x8.shr_s\t\0"
  /* 4327 */ "i16x8.q15mulr_sat_s\t\0"
  /* 4348 */ "i32.gt_s\t\0"
  /* 4358 */ "i64.gt_s\t\0"
  /* 4368 */ "i32x4.gt_s\t\0"
  /* 4380 */ "i8x16.gt_s\t\0"
  /* 4392 */ "i16x8.gt_s\t\0"
  /* 4404 */ "i32.lt_s\t\0"
  /* 4414 */ "i64.lt_s\t\0"
  /* 4424 */ "i32x4.lt_s\t\0"
  /* 4436 */ "i8x16.lt_s\t\0"
  /* 4448 */ "i16x8.lt_s\t\0"
  /* 4460 */ "i32.div_s\t\0"
  /* 4471 */ "i64.div_s\t\0"
  /* 4482 */ "i32x4.max_s\t\0"
  /* 4495 */ "i8x16.max_s\t\0"
  /* 4508 */ "i16x8.max_s\t\0"
  /* 4521 */ "f64x2.abs\t\0"
  /* 4532 */ "i64x2.abs\t\0"
  /* 4543 */ "f32x4.abs\t\0"
  /* 4554 */ "i32x4.abs\t\0"
  /* 4565 */ "i8x16.abs\t\0"
  /* 4576 */ "i16x8.abs\t\0"
  /* 4587 */ "call_params\t\0"
  /* 4600 */ "f64x2.qfms\t\0"
  /* 4612 */ "f32x4.qfms\t\0"
  /* 4624 */ "prefetch.t\t\0"
  /* 4636 */ "f64x2.splat\t\0"
  /* 4649 */ "i64x2.splat\t\0"
  /* 4662 */ "f32x4.splat\t\0"
  /* 4675 */ "i32x4.splat\t\0"
  /* 4688 */ "i8x16.splat\t\0"
  /* 4701 */ "i16x8.splat\t\0"
  /* 4714 */ "v128.load32_splat\t\0"
  /* 4733 */ "v128.load64_splat\t\0"
  /* 4752 */ "v128.load16_splat\t\0"
  /* 4771 */ "v128.load8_splat\t\0"
  /* 4789 */ "f32.select\t\0"
  /* 4801 */ "i32.select\t\0"
  /* 4813 */ "f64.select\t\0"
  /* 4825 */ "i64.select\t\0"
  /* 4837 */ "v128.select\t\0"
  /* 4850 */ "funcref.select\t\0"
  /* 4866 */ "externref.select\t\0"
  /* 4884 */ "i64x2.signselect\t\0"
  /* 4902 */ "i32x4.signselect\t\0"
  /* 4920 */ "i8x16.signselect\t\0"
  /* 4938 */ "i16x8.signselect\t\0"
  /* 4956 */ "v128.bitselect\t\0"
  /* 4972 */ "return_call_indirect\t\0"
  /* 4994 */ "table.get\t\0"
  /* 5005 */ "global.get\t\0"
  /* 5017 */ "local.get\t\0"
  /* 5028 */ "table.set\t\0"
  /* 5039 */ "global.set\t\0"
  /* 5051 */ "local.set\t\0"
  /* 5062 */ "f64x2.gt\t\0"
  /* 5072 */ "f32x4.gt\t\0"
  /* 5082 */ "memory.init\t\0"
  /* 5095 */ "f64x2.lt\t\0"
  /* 5105 */ "f32x4.lt\t\0"
  /* 5115 */ "prefetch.nt\t\0"
  /* 5128 */ "i32.popcnt\t\0"
  /* 5140 */ "i64.popcnt\t\0"
  /* 5152 */ "i8x16.popcnt\t\0"
  /* 5166 */ "v128.not\t\0"
  /* 5176 */ "v128.andnot\t\0"
  /* 5189 */ "f32.sqrt\t\0"
  /* 5199 */ "f64x2.sqrt\t\0"
  /* 5211 */ "f64.sqrt\t\0"
  /* 5221 */ "f32x4.sqrt\t\0"
  /* 5233 */ "f32.nearest\t\0"
  /* 5246 */ "f64x2.nearest\t\0"
  /* 5261 */ "f64.nearest\t\0"
  /* 5274 */ "f32x4.nearest\t\0"
  /* 5289 */ "f32.const\t\0"
  /* 5300 */ "i32.const\t\0"
  /* 5311 */ "f64.const\t\0"
  /* 5322 */ "i64.const\t\0"
  /* 5333 */ "v128.const\t\0"
  /* 5345 */ "i64.load32_u\t\0"
  /* 5359 */ "i64.atomic.load32_u\t\0"
  /* 5380 */ "i32.trunc_f32_u\t\0"
  /* 5397 */ "i64.trunc_f32_u\t\0"
  /* 5414 */ "i32.trunc_sat_f32_u\t\0"
  /* 5435 */ "i64.trunc_sat_f32_u\t\0"
  /* 5456 */ "i64.extend_i32_u\t\0"
  /* 5474 */ "f32.convert_i32_u\t\0"
  /* 5493 */ "f64.convert_i32_u\t\0"
  /* 5512 */ "i64x2.load32x2_u\t\0"
  /* 5530 */ "i32x4.trunc_sat_zero_f64x2_u\t\0"
  /* 5560 */ "i32.trunc_f64_u\t\0"
  /* 5577 */ "i64.trunc_f64_u\t\0"
  /* 5594 */ "i32.trunc_sat_f64_u\t\0"
  /* 5615 */ "i64.trunc_sat_f64_u\t\0"
  /* 5636 */ "f32.convert_i64_u\t\0"
  /* 5655 */ "f64.convert_i64_u\t\0"
  /* 5674 */ "i32x4.trunc_sat_f32x4_u\t\0"
  /* 5699 */ "i64x2.extmul_high_i32x4_u\t\0"
  /* 5726 */ "i64x2.widen_high_i32x4_u\t\0"
  /* 5752 */ "f32x4.convert_i32x4_u\t\0"
  /* 5775 */ "i64x2.extmul_low_i32x4_u\t\0"
  /* 5801 */ "i64x2.widen_low_i32x4_u\t\0"
  /* 5826 */ "f64x2.convert_low_i32x4_u\t\0"
  /* 5853 */ "i16x8.narrow_i32x4_u\t\0"
  /* 5875 */ "i32x4.load16x4_u\t\0"
  /* 5893 */ "i32.load16_u\t\0"
  /* 5907 */ "i64.load16_u\t\0"
  /* 5921 */ "i32.atomic.load16_u\t\0"
  /* 5942 */ "i64.atomic.load16_u\t\0"
  /* 5963 */ "i16x8.extadd_pairwise_i8x16_u\t\0"
  /* 5994 */ "i16x8.extmul_high_i8x16_u\t\0"
  /* 6021 */ "i16x8.widen_high_i8x16_u\t\0"
  /* 6047 */ "i16x8.extmul_low_i8x16_u\t\0"
  /* 6073 */ "i16x8.widen_low_i8x16_u\t\0"
  /* 6098 */ "i32.load8_u\t\0"
  /* 6111 */ "i64.load8_u\t\0"
  /* 6124 */ "i32.atomic.load8_u\t\0"
  /* 6144 */ "i64.atomic.load8_u\t\0"
  /* 6164 */ "i32x4.extadd_pairwise_i16x8_u\t\0"
  /* 6195 */ "i32x4.extmul_high_i16x8_u\t\0"
  /* 6222 */ "i32x4.widen_high_i16x8_u\t\0"
  /* 6248 */ "i32x4.extmul_low_i16x8_u\t\0"
  /* 6274 */ "i32x4.widen_low_i16x8_u\t\0"
  /* 6299 */ "i8x16.narrow_i16x8_u\t\0"
  /* 6321 */ "i16x8.load8x8_u\t\0"
  /* 6338 */ "i64.atomic.rmw32.sub_u\t\0"
  /* 6362 */ "i32.atomic.rmw16.sub_u\t\0"
  /* 6386 */ "i64.atomic.rmw16.sub_u\t\0"
  /* 6410 */ "i32.atomic.rmw8.sub_u\t\0"
  /* 6433 */ "i64.atomic.rmw8.sub_u\t\0"
  /* 6456 */ "i64.atomic.rmw32.add_u\t\0"
  /* 6480 */ "i32.atomic.rmw16.add_u\t\0"
  /* 6504 */ "i64.atomic.rmw16.add_u\t\0"
  /* 6528 */ "i32.atomic.rmw8.add_u\t\0"
  /* 6551 */ "i64.atomic.rmw8.add_u\t\0"
  /* 6574 */ "i64.atomic.rmw32.and_u\t\0"
  /* 6598 */ "i32.atomic.rmw16.and_u\t\0"
  /* 6622 */ "i64.atomic.rmw16.and_u\t\0"
  /* 6646 */ "i32.atomic.rmw8.and_u\t\0"
  /* 6669 */ "i64.atomic.rmw8.and_u\t\0"
  /* 6692 */ "i32.ge_u\t\0"
  /* 6702 */ "i64.ge_u\t\0"
  /* 6712 */ "i32x4.ge_u\t\0"
  /* 6724 */ "i8x16.ge_u\t\0"
  /* 6736 */ "i16x8.ge_u\t\0"
  /* 6748 */ "i32.le_u\t\0"
  /* 6758 */ "i64.le_u\t\0"
  /* 6768 */ "i32x4.le_u\t\0"
  /* 6780 */ "i8x16.le_u\t\0"
  /* 6792 */ "i16x8.le_u\t\0"
  /* 6804 */ "i8x16.extract_lane_u\t\0"
  /* 6826 */ "i16x8.extract_lane_u\t\0"
  /* 6848 */ "i8x16.sub_saturate_u\t\0"
  /* 6870 */ "i16x8.sub_saturate_u\t\0"
  /* 6892 */ "i8x16.add_saturate_u\t\0"
  /* 6914 */ "i16x8.add_saturate_u\t\0"
  /* 6936 */ "i64.atomic.rmw32.xchg_u\t\0"
  /* 6961 */ "i32.atomic.rmw16.xchg_u\t\0"
  /* 6986 */ "i64.atomic.rmw16.xchg_u\t\0"
  /* 7011 */ "i32.atomic.rmw8.xchg_u\t\0"
  /* 7035 */ "i64.atomic.rmw8.xchg_u\t\0"
  /* 7059 */ "i64.atomic.rmw32.cmpxchg_u\t\0"
  /* 7087 */ "i32.atomic.rmw16.cmpxchg_u\t\0"
  /* 7115 */ "i64.atomic.rmw16.cmpxchg_u\t\0"
  /* 7143 */ "i32.atomic.rmw8.cmpxchg_u\t\0"
  /* 7170 */ "i64.atomic.rmw8.cmpxchg_u\t\0"
  /* 7197 */ "i32.rem_u\t\0"
  /* 7208 */ "i64.rem_u\t\0"
  /* 7219 */ "i32x4.min_u\t\0"
  /* 7232 */ "i8x16.min_u\t\0"
  /* 7245 */ "i16x8.min_u\t\0"
  /* 7258 */ "i8x16.avgr_u\t\0"
  /* 7272 */ "i16x8.avgr_u\t\0"
  /* 7286 */ "i32.shr_u\t\0"
  /* 7297 */ "i64x2.shr_u\t\0"
  /* 7310 */ "i64.shr_u\t\0"
  /* 7321 */ "i32x4.shr_u\t\0"
  /* 7334 */ "i8x16.shr_u\t\0"
  /* 7347 */ "i16x8.shr_u\t\0"
  /* 7360 */ "i64.atomic.rmw32.or_u\t\0"
  /* 7383 */ "i32.atomic.rmw16.or_u\t\0"
  /* 7406 */ "i64.atomic.rmw16.or_u\t\0"
  /* 7429 */ "i32.atomic.rmw8.or_u\t\0"
  /* 7451 */ "i64.atomic.rmw8.or_u\t\0"
  /* 7473 */ "i64.atomic.rmw32.xor_u\t\0"
  /* 7497 */ "i32.atomic.rmw16.xor_u\t\0"
  /* 7521 */ "i64.atomic.rmw16.xor_u\t\0"
  /* 7545 */ "i32.atomic.rmw8.xor_u\t\0"
  /* 7568 */ "i64.atomic.rmw8.xor_u\t\0"
  /* 7591 */ "i32.gt_u\t\0"
  /* 7601 */ "i64.gt_u\t\0"
  /* 7611 */ "i32x4.gt_u\t\0"
  /* 7623 */ "i8x16.gt_u\t\0"
  /* 7635 */ "i16x8.gt_u\t\0"
  /* 7647 */ "i32.lt_u\t\0"
  /* 7657 */ "i64.lt_u\t\0"
  /* 7667 */ "i32x4.lt_u\t\0"
  /* 7679 */ "i8x16.lt_u\t\0"
  /* 7691 */ "i16x8.lt_u\t\0"
  /* 7703 */ "i32.div_u\t\0"
  /* 7714 */ "i64.div_u\t\0"
  /* 7725 */ "i32x4.max_u\t\0"
  /* 7738 */ "i8x16.max_u\t\0"
  /* 7751 */ "i16x8.max_u\t\0"
  /* 7764 */ "f64x2.div\t\0"
  /* 7775 */ "f32x4.div\t\0"
  /* 7786 */ "table.grow\t\0"
  /* 7798 */ "memory.grow\t\0"
  /* 7811 */ "f64x2.max\t\0"
  /* 7822 */ "f32x4.max\t\0"
  /* 7833 */ "f64x2.pmax\t\0"
  /* 7845 */ "f32x4.pmax\t\0"
  /* 7857 */ "table.copy\t\0"
  /* 7869 */ "local.copy\t\0"
  /* 7881 */ "memory.copy\t\0"
  /* 7894 */ "f32.ge  \0"
  /* 7903 */ "f64.ge  \0"
  /* 7912 */ "f32.le  \0"
  /* 7921 */ "f64.le  \0"
  /* 7930 */ "f32.ne  \0"
  /* 7939 */ "i32.ne  \0"
  /* 7948 */ "f64.ne  \0"
  /* 7957 */ "i64.ne  \0"
  /* 7966 */ "f32.eq  \0"
  /* 7975 */ "i32.eq  \0"
  /* 7984 */ "f64.eq  \0"
  /* 7993 */ "i64.eq  \0"
  /* 8002 */ "i32.or  \0"
  /* 8011 */ "i64.or  \0"
  /* 8020 */ "f32.gt  \0"
  /* 8029 */ "f64.gt  \0"
  /* 8038 */ "f32.lt  \0"
  /* 8047 */ "f64.lt  \0"
  /* 8056 */ "f32.sub \0"
  /* 8065 */ "i32.sub \0"
  /* 8074 */ "f64.sub \0"
  /* 8083 */ "i64.sub \0"
  /* 8092 */ "f32.add \0"
  /* 8101 */ "i32.add \0"
  /* 8110 */ "f64.add \0"
  /* 8119 */ "i64.add \0"
  /* 8128 */ "i32.and \0"
  /* 8137 */ "i64.and \0"
  /* 8146 */ "f32.neg \0"
  /* 8155 */ "f64.neg \0"
  /* 8164 */ "i32.shl \0"
  /* 8173 */ "i64.shl \0"
  /* 8182 */ "f32.mul \0"
  /* 8191 */ "i32.mul \0"
  /* 8200 */ "f64.mul \0"
  /* 8209 */ "i64.mul \0"
  /* 8218 */ "f32.min \0"
  /* 8227 */ "f64.min \0"
  /* 8236 */ "i32.xor \0"
  /* 8245 */ "i64.xor \0"
  /* 8254 */ "f32.abs \0"
  /* 8263 */ "f64.abs \0"
  /* 8272 */ "f32.div \0"
  /* 8281 */ "f64.div \0"
  /* 8290 */ "f32.max \0"
  /* 8299 */ "f64.max \0"
  /* 8308 */ "i32.clz \0"
  /* 8317 */ "i64.clz \0"
  /* 8326 */ "i32.ctz \0"
  /* 8335 */ "i64.ctz \0"
  /* 8344 */ "# XRay Function Patchable RET.\0"
  /* 8375 */ "# XRay Typed Event Log.\0"
  /* 8399 */ "# XRay Custom Event Log.\0"
  /* 8424 */ "# XRay Function Enter.\0"
  /* 8447 */ "# XRay Tail Call Exit.\0"
  /* 8470 */ "# XRay Function Exit.\0"
  /* 8492 */ "f64.promote_f32\0"
  /* 8508 */ "i32.reinterpret_f32\0"
  /* 8528 */ "f32.reinterpret_i32\0"
  /* 8548 */ "f32x4.demote_zero_f64x2\0"
  /* 8572 */ "f32.demote_f64\0"
  /* 8587 */ "i64.reinterpret_f64\0"
  /* 8607 */ "i32.wrap_i64\0"
  /* 8620 */ "f64.reinterpret_i64\0"
  /* 8640 */ "f64x2.promote_low_f32x4\0"
  /* 8664 */ "LIFETIME_END\0"
  /* 8677 */ "PSEUDO_PROBE\0"
  /* 8690 */ "BUNDLE\0"
  /* 8697 */ "DBG_VALUE\0"
  /* 8707 */ "DBG_INSTR_REF\0"
  /* 8721 */ "DBG_LABEL\0"
  /* 8731 */ "LIFETIME_START\0"
  /* 8746 */ "f64x2.qfma\0"
  /* 8757 */ "f32x4.qfma\0"
  /* 8768 */ "f64x2.sub\0"
  /* 8778 */ "i64x2.sub\0"
  /* 8788 */ "f32x4.sub\0"
  /* 8798 */ "i32x4.sub\0"
  /* 8808 */ "i8x16.sub\0"
  /* 8818 */ "i16x8.sub\0"
  /* 8828 */ "f32.trunc\0"
  /* 8838 */ "f64x2.trunc\0"
  /* 8850 */ "f64.trunc\0"
  /* 8860 */ "f32x4.trunc\0"
  /* 8872 */ "f64x2.add\0"
  /* 8882 */ "i64x2.add\0"
  /* 8892 */ "f32x4.add\0"
  /* 8902 */ "i32x4.add\0"
  /* 8912 */ "i8x16.add\0"
  /* 8922 */ "i16x8.add\0"
  /* 8932 */ "v128.and\0"
  /* 8941 */ "end\0"
  /* 8945 */ "atomic.fence\0"
  /* 8958 */ "compiler_fence\0"
  /* 8973 */ "local.tee\0"
  /* 8983 */ "f64x2.ge\0"
  /* 8992 */ "f32x4.ge\0"
  /* 9001 */ "f64x2.le\0"
  /* 9010 */ "f32x4.le\0"
  /* 9019 */ "unreachable\0"
  /* 9031 */ "i8x16.swizzle\0"
  /* 9045 */ "f64x2.ne\0"
  /* 9054 */ "f32x4.ne\0"
  /* 9063 */ "i32x4.ne\0"
  /* 9072 */ "i8x16.ne\0"
  /* 9081 */ "i16x8.ne\0"
  /* 9090 */ "else\0"
  /* 9095 */ "i64x2.all_true\0"
  /* 9110 */ "i32x4.all_true\0"
  /* 9125 */ "i8x16.all_true\0"
  /* 9140 */ "i16x8.all_true\0"
  /* 9155 */ "i64x2.any_true\0"
  /* 9170 */ "i32x4.any_true\0"
  /* 9185 */ "i8x16.any_true\0"
  /* 9200 */ "i16x8.any_true\0"
  /* 9215 */ "end_if\0"
  /* 9222 */ "f64x2.neg\0"
  /* 9232 */ "i64x2.neg\0"
  /* 9242 */ "f32x4.neg\0"
  /* 9252 */ "i32x4.neg\0"
  /* 9262 */ "i8x16.neg\0"
  /* 9272 */ "i16x8.neg\0"
  /* 9282 */ "end_block\0"
  /* 9292 */ "i64x2.bitmask\0"
  /* 9306 */ "i32x4.bitmask\0"
  /* 9320 */ "i8x16.bitmask\0"
  /* 9334 */ "i16x8.bitmask\0"
  /* 9348 */ "i64x2.shl\0"
  /* 9358 */ "i32x4.shl\0"
  /* 9368 */ "i8x16.shl\0"
  /* 9378 */ "i16x8.shl\0"
  /* 9388 */ "f32.ceil\0"
  /* 9397 */ "f64x2.ceil\0"
  /* 9408 */ "f64.ceil\0"
  /* 9417 */ "f32x4.ceil\0"
  /* 9428 */ "catch_all\0"
  /* 9438 */ "# FEntry call\0"
  /* 9452 */ "i32.rotl\0"
  /* 9461 */ "i64.rotl\0"
  /* 9470 */ "f64x2.mul\0"
  /* 9480 */ "i64x2.mul\0"
  /* 9490 */ "f32x4.mul\0"
  /* 9500 */ "i32x4.mul\0"
  /* 9510 */ "i16x8.mul\0"
  /* 9520 */ "f32.copysign\0"
  /* 9533 */ "f64.copysign\0"
  /* 9546 */ "f64x2.min\0"
  /* 9556 */ "f32x4.min\0"
  /* 9566 */ "f64x2.pmin\0"
  /* 9577 */ "f32x4.pmin\0"
  /* 9588 */ "end_function\0"
  /* 9601 */ "return\0"
  /* 9608 */ "nop\0"
  /* 9612 */ "end_loop\0"
  /* 9621 */ "drop\0"
  /* 9626 */ "f64x2.eq\0"
  /* 9635 */ "i64x2.eq\0"
  /* 9644 */ "f32x4.eq\0"
  /* 9653 */ "i32x4.eq\0"
  /* 9662 */ "i8x16.eq\0"
  /* 9671 */ "i16x8.eq\0"
  /* 9680 */ "v128.or\0"
  /* 9688 */ "f32.floor\0"
  /* 9698 */ "f64x2.floor\0"
  /* 9710 */ "f64.floor\0"
  /* 9720 */ "f32x4.floor\0"
  /* 9732 */ "v128.xor\0"
  /* 9741 */ "i32.rotr\0"
  /* 9750 */ "i64.rotr\0"
  /* 9759 */ "i64.extend32_s\0"
  /* 9774 */ "i32.trunc_f32_s\0"
  /* 9790 */ "i64.trunc_f32_s\0"
  /* 9806 */ "i32.trunc_sat_f32_s\0"
  /* 9826 */ "i64.trunc_sat_f32_s\0"
  /* 9846 */ "i64.extend_i32_s\0"
  /* 9863 */ "f32.convert_i32_s\0"
  /* 9881 */ "f64.convert_i32_s\0"
  /* 9899 */ "i32x4.trunc_sat_zero_f64x2_s\0"
  /* 9928 */ "i32.trunc_f64_s\0"
  /* 9944 */ "i64.trunc_f64_s\0"
  /* 9960 */ "i32.trunc_sat_f64_s\0"
  /* 9980 */ "i64.trunc_sat_f64_s\0"
  /* 10000 */ "f32.convert_i64_s\0"
  /* 10018 */ "f64.convert_i64_s\0"
  /* 10036 */ "i32x4.trunc_sat_f32x4_s\0"
  /* 10060 */ "i64x2.extmul_high_i32x4_s\0"
  /* 10086 */ "i64x2.widen_high_i32x4_s\0"
  /* 10111 */ "f32x4.convert_i32x4_s\0"
  /* 10133 */ "i64x2.extmul_low_i32x4_s\0"
  /* 10158 */ "i64x2.widen_low_i32x4_s\0"
  /* 10182 */ "f64x2.convert_low_i32x4_s\0"
  /* 10208 */ "i16x8.narrow_i32x4_s\0"
  /* 10229 */ "i32.extend16_s\0"
  /* 10244 */ "i64.extend16_s\0"
  /* 10259 */ "i16x8.extadd_pairwise_i8x16_s\0"
  /* 10289 */ "i16x8.extmul_high_i8x16_s\0"
  /* 10315 */ "i16x8.widen_high_i8x16_s\0"
  /* 10340 */ "i16x8.extmul_low_i8x16_s\0"
  /* 10365 */ "i16x8.widen_low_i8x16_s\0"
  /* 10389 */ "i32.extend8_s\0"
  /* 10403 */ "i64.extend8_s\0"
  /* 10417 */ "i32x4.extadd_pairwise_i16x8_s\0"
  /* 10447 */ "i32x4.extmul_high_i16x8_s\0"
  /* 10473 */ "i32x4.widen_high_i16x8_s\0"
  /* 10498 */ "i32x4.dot_i16x8_s\0"
  /* 10516 */ "i32x4.extmul_low_i16x8_s\0"
  /* 10541 */ "i32x4.widen_low_i16x8_s\0"
  /* 10565 */ "i8x16.narrow_i16x8_s\0"
  /* 10586 */ "i32.ge_s\0"
  /* 10595 */ "i64.ge_s\0"
  /* 10604 */ "i32x4.ge_s\0"
  /* 10615 */ "i8x16.ge_s\0"
  /* 10626 */ "i16x8.ge_s\0"
  /* 10637 */ "i32.le_s\0"
  /* 10646 */ "i64.le_s\0"
  /* 10655 */ "i32x4.le_s\0"
  /* 10666 */ "i8x16.le_s\0"
  /* 10677 */ "i16x8.le_s\0"
  /* 10688 */ "i8x16.sub_saturate_s\0"
  /* 10709 */ "i16x8.sub_saturate_s\0"
  /* 10730 */ "i8x16.add_saturate_s\0"
  /* 10751 */ "i16x8.add_saturate_s\0"
  /* 10772 */ "i32.rem_s\0"
  /* 10782 */ "i64.rem_s\0"
  /* 10792 */ "i32x4.min_s\0"
  /* 10804 */ "i8x16.min_s\0"
  /* 10816 */ "i16x8.min_s\0"
  /* 10828 */ "i32.shr_s\0"
  /* 10838 */ "i64x2.shr_s\0"
  /* 10850 */ "i64.shr_s\0"
  /* 10860 */ "i32x4.shr_s\0"
  /* 10872 */ "i8x16.shr_s\0"
  /* 10884 */ "i16x8.shr_s\0"
  /* 10896 */ "i16x8.q15mulr_sat_s\0"
  /* 10916 */ "i32.gt_s\0"
  /* 10925 */ "i64.gt_s\0"
  /* 10934 */ "i32x4.gt_s\0"
  /* 10945 */ "i8x16.gt_s\0"
  /* 10956 */ "i16x8.gt_s\0"
  /* 10967 */ "i32.lt_s\0"
  /* 10976 */ "i64.lt_s\0"
  /* 10985 */ "i32x4.lt_s\0"
  /* 10996 */ "i8x16.lt_s\0"
  /* 11007 */ "i16x8.lt_s\0"
  /* 11018 */ "i32.div_s\0"
  /* 11028 */ "i64.div_s\0"
  /* 11038 */ "i32x4.max_s\0"
  /* 11050 */ "i8x16.max_s\0"
  /* 11062 */ "i16x8.max_s\0"
  /* 11074 */ "f64x2.abs\0"
  /* 11084 */ "i64x2.abs\0"
  /* 11094 */ "f32x4.abs\0"
  /* 11104 */ "i32x4.abs\0"
  /* 11114 */ "i8x16.abs\0"
  /* 11124 */ "i16x8.abs\0"
  /* 11134 */ "f64x2.qfms\0"
  /* 11145 */ "f32x4.qfms\0"
  /* 11156 */ "return_call_results\0"
  /* 11176 */ "f64x2.splat\0"
  /* 11188 */ "i64x2.splat\0"
  /* 11200 */ "f32x4.splat\0"
  /* 11212 */ "i32x4.splat\0"
  /* 11224 */ "i8x16.splat\0"
  /* 11236 */ "i16x8.splat\0"
  /* 11248 */ "f32.select\0"
  /* 11259 */ "i32.select\0"
  /* 11270 */ "f64.select\0"
  /* 11281 */ "i64.select\0"
  /* 11292 */ "v128.select\0"
  /* 11304 */ "funcref.select\0"
  /* 11319 */ "externref.select\0"
  /* 11336 */ "i64x2.signselect\0"
  /* 11353 */ "i32x4.signselect\0"
  /* 11370 */ "i8x16.signselect\0"
  /* 11387 */ "i16x8.signselect\0"
  /* 11404 */ "v128.bitselect\0"
  /* 11419 */ "call_indirect\0"
  /* 11433 */ "catchret\0"
  /* 11442 */ "cleanupret\0"
  /* 11453 */ "f64x2.gt\0"
  /* 11462 */ "f32x4.gt\0"
  /* 11471 */ "f64x2.lt\0"
  /* 11480 */ "f32x4.lt\0"
  /* 11489 */ "i32.popcnt\0"
  /* 11500 */ "i64.popcnt\0"
  /* 11511 */ "i8x16.popcnt\0"
  /* 11524 */ "v128.not\0"
  /* 11533 */ "v128.andnot\0"
  /* 11545 */ "f32.sqrt\0"
  /* 11554 */ "f64x2.sqrt\0"
  /* 11565 */ "f64.sqrt\0"
  /* 11574 */ "f32x4.sqrt\0"
  /* 11585 */ "f32.nearest\0"
  /* 11597 */ "f64x2.nearest\0"
  /* 11611 */ "f64.nearest\0"
  /* 11623 */ "f32x4.nearest\0"
  /* 11637 */ "i32.trunc_f32_u\0"
  /* 11653 */ "i64.trunc_f32_u\0"
  /* 11669 */ "i32.trunc_sat_f32_u\0"
  /* 11689 */ "i64.trunc_sat_f32_u\0"
  /* 11709 */ "i64.extend_i32_u\0"
  /* 11726 */ "f32.convert_i32_u\0"
  /* 11744 */ "f64.convert_i32_u\0"
  /* 11762 */ "i32x4.trunc_sat_zero_f64x2_u\0"
  /* 11791 */ "i32.trunc_f64_u\0"
  /* 11807 */ "i64.trunc_f64_u\0"
  /* 11823 */ "i32.trunc_sat_f64_u\0"
  /* 11843 */ "i64.trunc_sat_f64_u\0"
  /* 11863 */ "f32.convert_i64_u\0"
  /* 11881 */ "f64.convert_i64_u\0"
  /* 11899 */ "i32x4.trunc_sat_f32x4_u\0"
  /* 11923 */ "i64x2.extmul_high_i32x4_u\0"
  /* 11949 */ "i64x2.widen_high_i32x4_u\0"
  /* 11974 */ "f32x4.convert_i32x4_u\0"
  /* 11996 */ "i64x2.extmul_low_i32x4_u\0"
  /* 12021 */ "i64x2.widen_low_i32x4_u\0"
  /* 12045 */ "f64x2.convert_low_i32x4_u\0"
  /* 12071 */ "i16x8.narrow_i32x4_u\0"
  /* 12092 */ "i16x8.extadd_pairwise_i8x16_u\0"
  /* 12122 */ "i16x8.extmul_high_i8x16_u\0"
  /* 12148 */ "i16x8.widen_high_i8x16_u\0"
  /* 12173 */ "i16x8.extmul_low_i8x16_u\0"
  /* 12198 */ "i16x8.widen_low_i8x16_u\0"
  /* 12222 */ "i32x4.extadd_pairwise_i16x8_u\0"
  /* 12252 */ "i32x4.extmul_high_i16x8_u\0"
  /* 12278 */ "i32x4.widen_high_i16x8_u\0"
  /* 12303 */ "i32x4.extmul_low_i16x8_u\0"
  /* 12328 */ "i32x4.widen_low_i16x8_u\0"
  /* 12352 */ "i8x16.narrow_i16x8_u\0"
  /* 12373 */ "i32.ge_u\0"
  /* 12382 */ "i64.ge_u\0"
  /* 12391 */ "i32x4.ge_u\0"
  /* 12402 */ "i8x16.ge_u\0"
  /* 12413 */ "i16x8.ge_u\0"
  /* 12424 */ "i32.le_u\0"
  /* 12433 */ "i64.le_u\0"
  /* 12442 */ "i32x4.le_u\0"
  /* 12453 */ "i8x16.le_u\0"
  /* 12464 */ "i16x8.le_u\0"
  /* 12475 */ "i8x16.sub_saturate_u\0"
  /* 12496 */ "i16x8.sub_saturate_u\0"
  /* 12517 */ "i8x16.add_saturate_u\0"
  /* 12538 */ "i16x8.add_saturate_u\0"
  /* 12559 */ "i32.rem_u\0"
  /* 12569 */ "i64.rem_u\0"
  /* 12579 */ "i32x4.min_u\0"
  /* 12591 */ "i8x16.min_u\0"
  /* 12603 */ "i16x8.min_u\0"
  /* 12615 */ "i8x16.avgr_u\0"
  /* 12628 */ "i16x8.avgr_u\0"
  /* 12641 */ "i32.shr_u\0"
  /* 12651 */ "i64x2.shr_u\0"
  /* 12663 */ "i64.shr_u\0"
  /* 12673 */ "i32x4.shr_u\0"
  /* 12685 */ "i8x16.shr_u\0"
  /* 12697 */ "i16x8.shr_u\0"
  /* 12709 */ "i32.gt_u\0"
  /* 12718 */ "i64.gt_u\0"
  /* 12727 */ "i32x4.gt_u\0"
  /* 12738 */ "i8x16.gt_u\0"
  /* 12749 */ "i16x8.gt_u\0"
  /* 12760 */ "i32.lt_u\0"
  /* 12769 */ "i64.lt_u\0"
  /* 12778 */ "i32x4.lt_u\0"
  /* 12789 */ "i8x16.lt_u\0"
  /* 12800 */ "i16x8.lt_u\0"
  /* 12811 */ "i32.div_u\0"
  /* 12821 */ "i64.div_u\0"
  /* 12831 */ "i32x4.max_u\0"
  /* 12843 */ "i8x16.max_u\0"
  /* 12855 */ "i16x8.max_u\0"
  /* 12867 */ "f64x2.div\0"
  /* 12877 */ "f32x4.div\0"
  /* 12887 */ "f64x2.max\0"
  /* 12897 */ "f32x4.max\0"
  /* 12907 */ "f64x2.pmax\0"
  /* 12918 */ "f32x4.pmax\0"
  /* 12929 */ "local.copy\0"
  /* 12940 */ "end_try\0"
  /* 12948 */ "i32.eqz\0"
  /* 12956 */ "i64.eqz\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    8698U,	// DBG_VALUE
    8708U,	// DBG_INSTR_REF
    8722U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    8691U,	// BUNDLE
    8732U,	// LIFETIME_START
    8665U,	// LIFETIME_END
    8678U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    9439U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    8425U,	// PATCHABLE_FUNCTION_ENTER
    8345U,	// PATCHABLE_RET
    8471U,	// PATCHABLE_FUNCTION_EXIT
    8448U,	// PATCHABLE_TAIL_CALL
    8400U,	// PATCHABLE_EVENT_CALL
    8376U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    20972U,	// CALL_PARAMS
    20972U,	// CALL_PARAMS_S
    11164U,	// CALL_RESULTS
    11164U,	// CALL_RESULTS_S
    11434U,	// CATCHRET
    11434U,	// CATCHRET_S
    11443U,	// CLEANUPRET
    11443U,	// CLEANUPRET_S
    8959U,	// COMPILER_FENCE
    8959U,	// COMPILER_FENCE_S
    11157U,	// RET_CALL_RESULTS
    11157U,	// RET_CALL_RESULTS_S
    148009U,	// ABS_F32
    8255U,	// ABS_F32_S
    152000U,	// ABS_F32x4
    11095U,	// ABS_F32x4_S
    148019U,	// ABS_F64
    8264U,	// ABS_F64_S
    151978U,	// ABS_F64x2
    11075U,	// ABS_F64x2_S
    152033U,	// ABS_I16x8
    11125U,	// ABS_I16x8_S
    152011U,	// ABS_I32x4
    11105U,	// ABS_I32x4_S
    151989U,	// ABS_I64x2
    11085U,	// ABS_I64x2_S
    152022U,	// ABS_I8x16
    11115U,	// ABS_I8x16_S
    4342122U,	// ADD_F32
    8093U,	// ADD_F32_S
    4343093U,	// ADD_F32x4
    8893U,	// ADD_F32x4_S
    4342142U,	// ADD_F64
    8111U,	// ADD_F64_S
    4343071U,	// ADD_F64x2
    8873U,	// ADD_F64x2_S
    4343126U,	// ADD_I16x8
    8923U,	// ADD_I16x8_S
    4342132U,	// ADD_I32
    8102U,	// ADD_I32_S
    4343104U,	// ADD_I32x4
    8903U,	// ADD_I32x4_S
    4342152U,	// ADD_I64
    8120U,	// ADD_I64_S
    4343082U,	// ADD_I64x2
    8883U,	// ADD_I64x2_S
    4343115U,	// ADD_I8x16
    8913U,	// ADD_I8x16_S
    4345931U,	// ADD_SAT_S_I16x8
    10752U,	// ADD_SAT_S_I16x8_S
    4345909U,	// ADD_SAT_S_I8x16
    10731U,	// ADD_SAT_S_I8x16_S
    4348675U,	// ADD_SAT_U_I16x8
    12539U,	// ADD_SAT_U_I16x8_S
    4348653U,	// ADD_SAT_U_I8x16
    12518U,	// ADD_SAT_U_I8x16_S
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKDOWN_S
    0U,	// ADJCALLSTACKUP
    0U,	// ADJCALLSTACKUP_S
    149540U,	// ALLTRUE_I16x8
    9141U,	// ALLTRUE_I16x8_S
    149508U,	// ALLTRUE_I32x4
    9111U,	// ALLTRUE_I32x4_S
    149492U,	// ALLTRUE_I64x2
    9096U,	// ALLTRUE_I64x2_S
    149524U,	// ALLTRUE_I8x16
    9126U,	// ALLTRUE_I8x16_S
    4343177U,	// AND
    4346937U,	// ANDNOT
    11534U,	// ANDNOT_S
    4342162U,	// AND_I32
    8129U,	// AND_I32_S
    4342172U,	// AND_I64
    8138U,	// AND_I64_S
    8933U,	// AND_S
    149604U,	// ANYTRUE_I16x8
    9201U,	// ANYTRUE_I16x8_S
    149572U,	// ANYTRUE_I32x4
    9171U,	// ANYTRUE_I32x4_S
    149556U,	// ANYTRUE_I64x2
    9156U,	// ANYTRUE_I64x2_S
    149588U,	// ANYTRUE_I8x16
    9186U,	// ANYTRUE_I8x16_S
    0U,	// ARGUMENT_externref
    0U,	// ARGUMENT_externref_S
    0U,	// ARGUMENT_f32
    0U,	// ARGUMENT_f32_S
    0U,	// ARGUMENT_f64
    0U,	// ARGUMENT_f64_S
    0U,	// ARGUMENT_funcref
    0U,	// ARGUMENT_funcref_S
    0U,	// ARGUMENT_i32
    0U,	// ARGUMENT_i32_S
    0U,	// ARGUMENT_i64
    0U,	// ARGUMENT_i64_S
    0U,	// ARGUMENT_v16i8
    0U,	// ARGUMENT_v16i8_S
    0U,	// ARGUMENT_v2f64
    0U,	// ARGUMENT_v2f64_S
    0U,	// ARGUMENT_v2i64
    0U,	// ARGUMENT_v2i64_S
    0U,	// ARGUMENT_v4f32
    0U,	// ARGUMENT_v4f32_S
    0U,	// ARGUMENT_v4i32
    0U,	// ARGUMENT_v4i32_S
    0U,	// ARGUMENT_v8i16
    0U,	// ARGUMENT_v8i16_S
    8946U,	// ATOMIC_FENCE
    8946U,	// ATOMIC_FENCE_S
    25843490U,	// ATOMIC_LOAD16_U_I32_A32
    1349410U,	// ATOMIC_LOAD16_U_I32_A32_S
    25843490U,	// ATOMIC_LOAD16_U_I32_A64
    1349410U,	// ATOMIC_LOAD16_U_I32_A64_S
    25843511U,	// ATOMIC_LOAD16_U_I64_A32
    1349431U,	// ATOMIC_LOAD16_U_I64_A32_S
    25843511U,	// ATOMIC_LOAD16_U_I64_A64
    1349431U,	// ATOMIC_LOAD16_U_I64_A64_S
    25842928U,	// ATOMIC_LOAD32_U_I64_A32
    1348848U,	// ATOMIC_LOAD32_U_I64_A32_S
    25842928U,	// ATOMIC_LOAD32_U_I64_A64
    1348848U,	// ATOMIC_LOAD32_U_I64_A64_S
    25843693U,	// ATOMIC_LOAD8_U_I32_A32
    1349613U,	// ATOMIC_LOAD8_U_I32_A32_S
    25843693U,	// ATOMIC_LOAD8_U_I32_A64
    1349613U,	// ATOMIC_LOAD8_U_I32_A64_S
    25843713U,	// ATOMIC_LOAD8_U_I64_A32
    1349633U,	// ATOMIC_LOAD8_U_I64_A32_S
    25843713U,	// ATOMIC_LOAD8_U_I64_A64
    1349633U,	// ATOMIC_LOAD8_U_I64_A64_S
    25838845U,	// ATOMIC_LOAD_I32_A32
    1344765U,	// ATOMIC_LOAD_I32_A32_S
    25838845U,	// ATOMIC_LOAD_I32_A64
    1344765U,	// ATOMIC_LOAD_I32_A64_S
    25838862U,	// ATOMIC_LOAD_I64_A32
    1344782U,	// ATOMIC_LOAD_I64_A32_S
    25838862U,	// ATOMIC_LOAD_I64_A64
    1344782U,	// ATOMIC_LOAD_I64_A64_S
    92952913U,	// ATOMIC_RMW16_U_ADD_I32_A32
    1349969U,	// ATOMIC_RMW16_U_ADD_I32_A32_S
    92952913U,	// ATOMIC_RMW16_U_ADD_I32_A64
    1349969U,	// ATOMIC_RMW16_U_ADD_I32_A64_S
    92952937U,	// ATOMIC_RMW16_U_ADD_I64_A32
    1349993U,	// ATOMIC_RMW16_U_ADD_I64_A32_S
    92952937U,	// ATOMIC_RMW16_U_ADD_I64_A64
    1349993U,	// ATOMIC_RMW16_U_ADD_I64_A64_S
    92953031U,	// ATOMIC_RMW16_U_AND_I32_A32
    1350087U,	// ATOMIC_RMW16_U_AND_I32_A32_S
    92953031U,	// ATOMIC_RMW16_U_AND_I32_A64
    1350087U,	// ATOMIC_RMW16_U_AND_I32_A64_S
    92953055U,	// ATOMIC_RMW16_U_AND_I64_A32
    1350111U,	// ATOMIC_RMW16_U_AND_I64_A32_S
    92953055U,	// ATOMIC_RMW16_U_AND_I64_A64
    1350111U,	// ATOMIC_RMW16_U_AND_I64_A64_S
    227171248U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32
    1350576U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32_S
    227171248U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64
    1350576U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64_S
    227171276U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32
    1350604U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32_S
    227171276U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64
    1350604U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64_S
    92953816U,	// ATOMIC_RMW16_U_OR_I32_A32
    1350872U,	// ATOMIC_RMW16_U_OR_I32_A32_S
    92953816U,	// ATOMIC_RMW16_U_OR_I32_A64
    1350872U,	// ATOMIC_RMW16_U_OR_I32_A64_S
    92953839U,	// ATOMIC_RMW16_U_OR_I64_A32
    1350895U,	// ATOMIC_RMW16_U_OR_I64_A32_S
    92953839U,	// ATOMIC_RMW16_U_OR_I64_A64
    1350895U,	// ATOMIC_RMW16_U_OR_I64_A64_S
    92952795U,	// ATOMIC_RMW16_U_SUB_I32_A32
    1349851U,	// ATOMIC_RMW16_U_SUB_I32_A32_S
    92952795U,	// ATOMIC_RMW16_U_SUB_I32_A64
    1349851U,	// ATOMIC_RMW16_U_SUB_I32_A64_S
    92952819U,	// ATOMIC_RMW16_U_SUB_I64_A32
    1349875U,	// ATOMIC_RMW16_U_SUB_I64_A32_S
    92952819U,	// ATOMIC_RMW16_U_SUB_I64_A64
    1349875U,	// ATOMIC_RMW16_U_SUB_I64_A64_S
    92953394U,	// ATOMIC_RMW16_U_XCHG_I32_A32
    1350450U,	// ATOMIC_RMW16_U_XCHG_I32_A32_S
    92953394U,	// ATOMIC_RMW16_U_XCHG_I32_A64
    1350450U,	// ATOMIC_RMW16_U_XCHG_I32_A64_S
    92953419U,	// ATOMIC_RMW16_U_XCHG_I64_A32
    1350475U,	// ATOMIC_RMW16_U_XCHG_I64_A32_S
    92953419U,	// ATOMIC_RMW16_U_XCHG_I64_A64
    1350475U,	// ATOMIC_RMW16_U_XCHG_I64_A64_S
    92953930U,	// ATOMIC_RMW16_U_XOR_I32_A32
    1350986U,	// ATOMIC_RMW16_U_XOR_I32_A32_S
    92953930U,	// ATOMIC_RMW16_U_XOR_I32_A64
    1350986U,	// ATOMIC_RMW16_U_XOR_I32_A64_S
    92953954U,	// ATOMIC_RMW16_U_XOR_I64_A32
    1351010U,	// ATOMIC_RMW16_U_XOR_I64_A32_S
    92953954U,	// ATOMIC_RMW16_U_XOR_I64_A64
    1351010U,	// ATOMIC_RMW16_U_XOR_I64_A64_S
    92952889U,	// ATOMIC_RMW32_U_ADD_I64_A32
    1349945U,	// ATOMIC_RMW32_U_ADD_I64_A32_S
    92952889U,	// ATOMIC_RMW32_U_ADD_I64_A64
    1349945U,	// ATOMIC_RMW32_U_ADD_I64_A64_S
    92953007U,	// ATOMIC_RMW32_U_AND_I64_A32
    1350063U,	// ATOMIC_RMW32_U_AND_I64_A32_S
    92953007U,	// ATOMIC_RMW32_U_AND_I64_A64
    1350063U,	// ATOMIC_RMW32_U_AND_I64_A64_S
    227171220U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32
    1350548U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32_S
    227171220U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64
    1350548U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64_S
    92953793U,	// ATOMIC_RMW32_U_OR_I64_A32
    1350849U,	// ATOMIC_RMW32_U_OR_I64_A32_S
    92953793U,	// ATOMIC_RMW32_U_OR_I64_A64
    1350849U,	// ATOMIC_RMW32_U_OR_I64_A64_S
    92952771U,	// ATOMIC_RMW32_U_SUB_I64_A32
    1349827U,	// ATOMIC_RMW32_U_SUB_I64_A32_S
    92952771U,	// ATOMIC_RMW32_U_SUB_I64_A64
    1349827U,	// ATOMIC_RMW32_U_SUB_I64_A64_S
    92953369U,	// ATOMIC_RMW32_U_XCHG_I64_A32
    1350425U,	// ATOMIC_RMW32_U_XCHG_I64_A32_S
    92953369U,	// ATOMIC_RMW32_U_XCHG_I64_A64
    1350425U,	// ATOMIC_RMW32_U_XCHG_I64_A64_S
    92953906U,	// ATOMIC_RMW32_U_XOR_I64_A32
    1350962U,	// ATOMIC_RMW32_U_XOR_I64_A32_S
    92953906U,	// ATOMIC_RMW32_U_XOR_I64_A64
    1350962U,	// ATOMIC_RMW32_U_XOR_I64_A64_S
    92952961U,	// ATOMIC_RMW8_U_ADD_I32_A32
    1350017U,	// ATOMIC_RMW8_U_ADD_I32_A32_S
    92952961U,	// ATOMIC_RMW8_U_ADD_I32_A64
    1350017U,	// ATOMIC_RMW8_U_ADD_I32_A64_S
    92952984U,	// ATOMIC_RMW8_U_ADD_I64_A32
    1350040U,	// ATOMIC_RMW8_U_ADD_I64_A32_S
    92952984U,	// ATOMIC_RMW8_U_ADD_I64_A64
    1350040U,	// ATOMIC_RMW8_U_ADD_I64_A64_S
    92953079U,	// ATOMIC_RMW8_U_AND_I32_A32
    1350135U,	// ATOMIC_RMW8_U_AND_I32_A32_S
    92953079U,	// ATOMIC_RMW8_U_AND_I32_A64
    1350135U,	// ATOMIC_RMW8_U_AND_I32_A64_S
    92953102U,	// ATOMIC_RMW8_U_AND_I64_A32
    1350158U,	// ATOMIC_RMW8_U_AND_I64_A32_S
    92953102U,	// ATOMIC_RMW8_U_AND_I64_A64
    1350158U,	// ATOMIC_RMW8_U_AND_I64_A64_S
    227171304U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32
    1350632U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32_S
    227171304U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64
    1350632U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64_S
    227171331U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32
    1350659U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32_S
    227171331U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64
    1350659U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64_S
    92953862U,	// ATOMIC_RMW8_U_OR_I32_A32
    1350918U,	// ATOMIC_RMW8_U_OR_I32_A32_S
    92953862U,	// ATOMIC_RMW8_U_OR_I32_A64
    1350918U,	// ATOMIC_RMW8_U_OR_I32_A64_S
    92953884U,	// ATOMIC_RMW8_U_OR_I64_A32
    1350940U,	// ATOMIC_RMW8_U_OR_I64_A32_S
    92953884U,	// ATOMIC_RMW8_U_OR_I64_A64
    1350940U,	// ATOMIC_RMW8_U_OR_I64_A64_S
    92952843U,	// ATOMIC_RMW8_U_SUB_I32_A32
    1349899U,	// ATOMIC_RMW8_U_SUB_I32_A32_S
    92952843U,	// ATOMIC_RMW8_U_SUB_I32_A64
    1349899U,	// ATOMIC_RMW8_U_SUB_I32_A64_S
    92952866U,	// ATOMIC_RMW8_U_SUB_I64_A32
    1349922U,	// ATOMIC_RMW8_U_SUB_I64_A32_S
    92952866U,	// ATOMIC_RMW8_U_SUB_I64_A64
    1349922U,	// ATOMIC_RMW8_U_SUB_I64_A64_S
    92953444U,	// ATOMIC_RMW8_U_XCHG_I32_A32
    1350500U,	// ATOMIC_RMW8_U_XCHG_I32_A32_S
    92953444U,	// ATOMIC_RMW8_U_XCHG_I32_A64
    1350500U,	// ATOMIC_RMW8_U_XCHG_I32_A64_S
    92953468U,	// ATOMIC_RMW8_U_XCHG_I64_A32
    1350524U,	// ATOMIC_RMW8_U_XCHG_I64_A32_S
    92953468U,	// ATOMIC_RMW8_U_XCHG_I64_A64
    1350524U,	// ATOMIC_RMW8_U_XCHG_I64_A64_S
    92953978U,	// ATOMIC_RMW8_U_XOR_I32_A32
    1351034U,	// ATOMIC_RMW8_U_XOR_I32_A32_S
    92953978U,	// ATOMIC_RMW8_U_XOR_I32_A64
    1351034U,	// ATOMIC_RMW8_U_XOR_I32_A64_S
    92954001U,	// ATOMIC_RMW8_U_XOR_I64_A32
    1351057U,	// ATOMIC_RMW8_U_XOR_I64_A32_S
    92954001U,	// ATOMIC_RMW8_U_XOR_I64_A64
    1351057U,	// ATOMIC_RMW8_U_XOR_I64_A64_S
    92947809U,	// ATOMIC_RMW_ADD_I32_A32
    1344865U,	// ATOMIC_RMW_ADD_I32_A32_S
    92947809U,	// ATOMIC_RMW_ADD_I32_A64
    1344865U,	// ATOMIC_RMW_ADD_I32_A64_S
    92947829U,	// ATOMIC_RMW_ADD_I64_A32
    1344885U,	// ATOMIC_RMW_ADD_I64_A32_S
    92947829U,	// ATOMIC_RMW_ADD_I64_A64
    1344885U,	// ATOMIC_RMW_ADD_I64_A64_S
    92947859U,	// ATOMIC_RMW_AND_I32_A32
    1344915U,	// ATOMIC_RMW_AND_I32_A32_S
    92947859U,	// ATOMIC_RMW_AND_I32_A64
    1344915U,	// ATOMIC_RMW_AND_I32_A64_S
    92947879U,	// ATOMIC_RMW_AND_I64_A32
    1344935U,	// ATOMIC_RMW_AND_I64_A32_S
    92947879U,	// ATOMIC_RMW_AND_I64_A64
    1344935U,	// ATOMIC_RMW_AND_I64_A64_S
    227166457U,	// ATOMIC_RMW_CMPXCHG_I32_A32
    1345785U,	// ATOMIC_RMW_CMPXCHG_I32_A32_S
    227166457U,	// ATOMIC_RMW_CMPXCHG_I32_A64
    1345785U,	// ATOMIC_RMW_CMPXCHG_I32_A64_S
    227166481U,	// ATOMIC_RMW_CMPXCHG_I64_A32
    1345809U,	// ATOMIC_RMW_CMPXCHG_I64_A32_S
    227166481U,	// ATOMIC_RMW_CMPXCHG_I64_A64
    1345809U,	// ATOMIC_RMW_CMPXCHG_I64_A64_S
    92949238U,	// ATOMIC_RMW_OR_I32_A32
    1346294U,	// ATOMIC_RMW_OR_I32_A32_S
    92949238U,	// ATOMIC_RMW_OR_I32_A64
    1346294U,	// ATOMIC_RMW_OR_I32_A64_S
    92949257U,	// ATOMIC_RMW_OR_I64_A32
    1346313U,	// ATOMIC_RMW_OR_I64_A32_S
    92949257U,	// ATOMIC_RMW_OR_I64_A64
    1346313U,	// ATOMIC_RMW_OR_I64_A64_S
    92947570U,	// ATOMIC_RMW_SUB_I32_A32
    1344626U,	// ATOMIC_RMW_SUB_I32_A32_S
    92947570U,	// ATOMIC_RMW_SUB_I32_A64
    1344626U,	// ATOMIC_RMW_SUB_I32_A64_S
    92947590U,	// ATOMIC_RMW_SUB_I64_A32
    1344646U,	// ATOMIC_RMW_SUB_I64_A32_S
    92947590U,	// ATOMIC_RMW_SUB_I64_A64
    1344646U,	// ATOMIC_RMW_SUB_I64_A64_S
    92948687U,	// ATOMIC_RMW_XCHG_I32_A32
    1345743U,	// ATOMIC_RMW_XCHG_I32_A32_S
    92948687U,	// ATOMIC_RMW_XCHG_I32_A64
    1345743U,	// ATOMIC_RMW_XCHG_I32_A64_S
    92948708U,	// ATOMIC_RMW_XCHG_I64_A32
    1345764U,	// ATOMIC_RMW_XCHG_I64_A32_S
    92948708U,	// ATOMIC_RMW_XCHG_I64_A64
    1345764U,	// ATOMIC_RMW_XCHG_I64_A64_S
    92949334U,	// ATOMIC_RMW_XOR_I32_A32
    1346390U,	// ATOMIC_RMW_XOR_I32_A32_S
    92949334U,	// ATOMIC_RMW_XOR_I32_A64
    1346390U,	// ATOMIC_RMW_XOR_I32_A64_S
    92949354U,	// ATOMIC_RMW_XOR_I64_A32
    1346410U,	// ATOMIC_RMW_XOR_I64_A32_S
    92949354U,	// ATOMIC_RMW_XOR_I64_A64
    1346410U,	// ATOMIC_RMW_XOR_I64_A64_S
    47088562U,	// ATOMIC_STORE16_I32_A32
    1344434U,	// ATOMIC_STORE16_I32_A32_S
    47088562U,	// ATOMIC_STORE16_I32_A64
    1344434U,	// ATOMIC_STORE16_I32_A64_S
    47088582U,	// ATOMIC_STORE16_I64_A32
    1344454U,	// ATOMIC_STORE16_I64_A32_S
    47088582U,	// ATOMIC_STORE16_I64_A64
    1344454U,	// ATOMIC_STORE16_I64_A64_S
    47088335U,	// ATOMIC_STORE32_I64_A32
    1344207U,	// ATOMIC_STORE32_I64_A32_S
    47088335U,	// ATOMIC_STORE32_I64_A64
    1344207U,	// ATOMIC_STORE32_I64_A64_S
    47088626U,	// ATOMIC_STORE8_I32_A32
    1344498U,	// ATOMIC_STORE8_I32_A32_S
    47088626U,	// ATOMIC_STORE8_I32_A64
    1344498U,	// ATOMIC_STORE8_I32_A64_S
    47088645U,	// ATOMIC_STORE8_I64_A32
    1344517U,	// ATOMIC_STORE8_I64_A32_S
    47088645U,	// ATOMIC_STORE8_I64_A64
    1344517U,	// ATOMIC_STORE8_I64_A64_S
    47089616U,	// ATOMIC_STORE_I32_A32
    1345488U,	// ATOMIC_STORE_I32_A32_S
    47089616U,	// ATOMIC_STORE_I32_A64
    1345488U,	// ATOMIC_STORE_I32_A64_S
    47089634U,	// ATOMIC_STORE_I64_A32
    1345506U,	// ATOMIC_STORE_I64_A32_S
    47089634U,	// ATOMIC_STORE_I64_A64
    1345506U,	// ATOMIC_STORE_I64_A64_S
    4349033U,	// AVGR_U_I16x8
    12629U,	// AVGR_U_I16x8_S
    4349019U,	// AVGR_U_I8x16
    12616U,	// AVGR_U_I8x16_S
    149846U,	// BITMASK_I16x8
    9335U,	// BITMASK_I16x8_S
    149816U,	// BITMASK_I32x4
    9307U,	// BITMASK_I32x4_S
    149801U,	// BITMASK_I64x2
    9293U,	// BITMASK_I64x2_S
    149831U,	// BITMASK_I8x16
    9321U,	// BITMASK_I8x16_S
    37901149U,	// BITSELECT
    11405U,	// BITSELECT_S
    49228U,	// BLOCK
    49228U,	// BLOCK_S
    16385U,	// BR
    147512U,	// BR_IF
    16440U,	// BR_IF_S
    16385U,	// BR_S
    16806U,	// BR_TABLE_I32
    65958U,	// BR_TABLE_I32_S
    16806U,	// BR_TABLE_I64
    65958U,	// BR_TABLE_I64_S
    0U,	// BR_UNLESS
    0U,	// BR_UNLESS_S
    9448U,	// CALL
    11420U,	// CALL_INDIRECT
    21364U,	// CALL_INDIRECT_S
    18884U,	// CALL_S
    147522U,	// CATCH
    9429U,	// CATCH_ALL
    9429U,	// CATCH_ALL_S
    16450U,	// CATCH_S
    149905U,	// CEIL_F32
    9389U,	// CEIL_F32_S
    149937U,	// CEIL_F32x4
    9418U,	// CEIL_F32x4_S
    149927U,	// CEIL_F64
    9409U,	// CEIL_F64_S
    149915U,	// CEIL_F64x2
    9398U,	// CEIL_F64x2_S
    148102U,	// CLZ_I32
    8309U,	// CLZ_I32_S
    148112U,	// CLZ_I64
    8318U,	// CLZ_I64_S
    152746U,	// CONST_F32
    21674U,	// CONST_F32_S
    152768U,	// CONST_F64
    21696U,	// CONST_F64_S
    152757U,	// CONST_I32
    21685U,	// CONST_I32_S
    152779U,	// CONST_I64
    21707U,	// CONST_I64_S
    105010390U,	// CONST_V128_F32x4
    37901526U,	// CONST_V128_F32x4_S
    4347094U,	// CONST_V128_F64x2
    152790U,	// CONST_V128_F64x2_S
    507663574U,	// CONST_V128_I16x8
    1044534486U,	// CONST_V128_I16x8_S
    105010390U,	// CONST_V128_I32x4
    37901526U,	// CONST_V128_I32x4_S
    4347094U,	// CONST_V128_I64x2
    152790U,	// CONST_V128_I64x2_S
    1581405398U,	// CONST_V128_I8x16
    3728889046U,	// CONST_V128_I8x16_S
    4344376U,	// COPYSIGN_F32
    9521U,	// COPYSIGN_F32_S
    4344390U,	// COPYSIGN_F64
    9534U,	// COPYSIGN_F64_S
    155326U,	// COPY_EXTERNREF
    12930U,	// COPY_EXTERNREF_S
    155326U,	// COPY_F32
    12930U,	// COPY_F32_S
    155326U,	// COPY_F64
    12930U,	// COPY_F64_S
    155326U,	// COPY_FUNCREF
    12930U,	// COPY_FUNCREF_S
    155326U,	// COPY_I32
    12930U,	// COPY_I32_S
    155326U,	// COPY_I64
    12930U,	// COPY_I64_S
    155326U,	// COPY_V128
    12930U,	// COPY_V128_S
    148142U,	// CTZ_I32
    8327U,	// CTZ_I32_S
    148152U,	// CTZ_I64
    8336U,	// CTZ_I64_S
    9020U,	// DEBUG_UNREACHABLE
    9020U,	// DEBUG_UNREACHABLE_S
    4342333U,	// DIV_F32
    8273U,	// DIV_F32_S
    4349536U,	// DIV_F32x4
    12878U,	// DIV_F32x4_S
    4342343U,	// DIV_F64
    8282U,	// DIV_F64_S
    4349525U,	// DIV_F64x2
    12868U,	// DIV_F64x2_S
    4346221U,	// DIV_S_I32
    11019U,	// DIV_S_I32_S
    4346232U,	// DIV_S_I64
    11029U,	// DIV_S_I64_S
    4349464U,	// DIV_U_I32
    12812U,	// DIV_U_I32_S
    4349475U,	// DIV_U_I64
    12822U,	// DIV_U_I64_S
    4345600U,	// DOT
    10499U,	// DOT_S
    19115U,	// DROP_EXTERNREF
    9622U,	// DROP_EXTERNREF_S
    19115U,	// DROP_F32
    9622U,	// DROP_F32_S
    19115U,	// DROP_F64
    9622U,	// DROP_F64_S
    19115U,	// DROP_FUNCREF
    9622U,	// DROP_FUNCREF_S
    19115U,	// DROP_I32
    9622U,	// DROP_I32_S
    19115U,	// DROP_I64
    9622U,	// DROP_I64_S
    19115U,	// DROP_V128
    9622U,	// DROP_V128_S
    9091U,	// ELSE
    9091U,	// ELSE_S
    8942U,	// END
    9283U,	// END_BLOCK
    9283U,	// END_BLOCK_S
    9589U,	// END_FUNCTION
    9589U,	// END_FUNCTION_S
    9216U,	// END_IF
    9216U,	// END_IF_S
    9613U,	// END_LOOP
    9613U,	// END_LOOP_S
    8942U,	// END_S
    12941U,	// END_TRY
    12941U,	// END_TRY_S
    148122U,	// EQZ_I32
    12949U,	// EQZ_I32_S
    148132U,	// EQZ_I64
    12957U,	// EQZ_I64_S
    4341936U,	// EQ_F32
    7967U,	// EQ_F32_S
    4344517U,	// EQ_F32x4
    9645U,	// EQ_F32x4_S
    4341956U,	// EQ_F64
    7985U,	// EQ_F64_S
    4344497U,	// EQ_F64x2
    9627U,	// EQ_F64x2_S
    4344547U,	// EQ_I16x8
    9672U,	// EQ_I16x8_S
    4341946U,	// EQ_I32
    7976U,	// EQ_I32_S
    4344527U,	// EQ_I32x4
    9654U,	// EQ_I32x4_S
    4341966U,	// EQ_I64
    7994U,	// EQ_I64_S
    4344537U,	// EQ_I8x16
    9663U,	// EQ_I8x16_S
    4344507U,	// EQ_v2i64
    9636U,	// EQ_v2i64_S
    4345356U,	// EXTMUL_HIGH_S_I16x8
    10290U,	// EXTMUL_HIGH_S_I16x8_S
    4345547U,	// EXTMUL_HIGH_S_I32x4
    10448U,	// EXTMUL_HIGH_S_I32x4_S
    4345071U,	// EXTMUL_HIGH_S_I64x2
    10061U,	// EXTMUL_HIGH_S_I64x2_S
    4347755U,	// EXTMUL_HIGH_U_I16x8
    12123U,	// EXTMUL_HIGH_U_I16x8_S
    4347956U,	// EXTMUL_HIGH_U_I32x4
    12253U,	// EXTMUL_HIGH_U_I32x4_S
    4347460U,	// EXTMUL_HIGH_U_I64x2
    11924U,	// EXTMUL_HIGH_U_I64x2_S
    4345409U,	// EXTMUL_LOW_S_I16x8
    10341U,	// EXTMUL_LOW_S_I16x8_S
    4345619U,	// EXTMUL_LOW_S_I32x4
    10517U,	// EXTMUL_LOW_S_I32x4_S
    4345147U,	// EXTMUL_LOW_S_I64x2
    10134U,	// EXTMUL_LOW_S_I64x2_S
    4347808U,	// EXTMUL_LOW_U_I16x8
    12174U,	// EXTMUL_LOW_U_I16x8_S
    4348009U,	// EXTMUL_LOW_U_I32x4
    12304U,	// EXTMUL_LOW_U_I32x4_S
    4347536U,	// EXTMUL_LOW_U_I64x2
    11997U,	// EXTMUL_LOW_U_I64x2_S
    4343664U,	// EXTRACT_LANE_F32x4
    18288U,	// EXTRACT_LANE_F32x4_S
    4343624U,	// EXTRACT_LANE_F64x2
    18248U,	// EXTRACT_LANE_F64x2_S
    4345843U,	// EXTRACT_LANE_I16x8_s
    20467U,	// EXTRACT_LANE_I16x8_s_S
    4348587U,	// EXTRACT_LANE_I16x8_u
    23211U,	// EXTRACT_LANE_I16x8_u_S
    4343684U,	// EXTRACT_LANE_I32x4
    18308U,	// EXTRACT_LANE_I32x4_S
    4343644U,	// EXTRACT_LANE_I64x2
    18268U,	// EXTRACT_LANE_I64x2_S
    4345821U,	// EXTRACT_LANE_I8x16_s
    20445U,	// EXTRACT_LANE_I8x16_s_S
    4348565U,	// EXTRACT_LANE_I8x16_u
    23189U,	// EXTRACT_LANE_I8x16_u_S
    150542U,	// F32_CONVERT_S_I32
    9864U,	// F32_CONVERT_S_I32_S
    150704U,	// F32_CONVERT_S_I64
    10001U,	// F32_CONVERT_S_I64_S
    152931U,	// F32_CONVERT_U_I32
    11727U,	// F32_CONVERT_U_I32_S
    153093U,	// F32_CONVERT_U_I64
    11864U,	// F32_CONVERT_U_I64_S
    148279U,	// F32_DEMOTE_F64
    8573U,	// F32_DEMOTE_F64_S
    148233U,	// F32_REINTERPRET_I32
    8529U,	// F32_REINTERPRET_I32_S
    150561U,	// F64_CONVERT_S_I32
    9882U,	// F64_CONVERT_S_I32_S
    150723U,	// F64_CONVERT_S_I64
    10019U,	// F64_CONVERT_S_I64_S
    152950U,	// F64_CONVERT_U_I32
    11745U,	// F64_CONVERT_U_I32_S
    153112U,	// F64_CONVERT_U_I64
    11882U,	// F64_CONVERT_U_I64_S
    148195U,	// F64_PROMOTE_F32
    8493U,	// F64_PROMOTE_F32_S
    148330U,	// F64_REINTERPRET_I64
    8621U,	// F64_REINTERPRET_I64_S
    0U,	// FALLTHROUGH_RETURN
    0U,	// FALLTHROUGH_RETURN_S
    150300U,	// FLOOR_F32
    9689U,	// FLOOR_F32_S
    150335U,	// FLOOR_F32x4
    9721U,	// FLOOR_F32x4_S
    150324U,	// FLOOR_F64
    9711U,	// FLOOR_F64_S
    150311U,	// FLOOR_F64x2
    9699U,	// FLOOR_F64x2_S
    0U,	// FP_TO_SINT_I32_F32
    0U,	// FP_TO_SINT_I32_F32_S
    0U,	// FP_TO_SINT_I32_F64
    0U,	// FP_TO_SINT_I32_F64_S
    0U,	// FP_TO_SINT_I64_F32
    0U,	// FP_TO_SINT_I64_F32_S
    0U,	// FP_TO_SINT_I64_F64
    0U,	// FP_TO_SINT_I64_F64_S
    0U,	// FP_TO_UINT_I32_F32
    0U,	// FP_TO_UINT_I32_F32_S
    0U,	// FP_TO_UINT_I32_F64
    0U,	// FP_TO_UINT_I32_F64_S
    0U,	// FP_TO_UINT_I64_F32
    0U,	// FP_TO_UINT_I64_F32_S
    0U,	// FP_TO_UINT_I64_F64
    0U,	// FP_TO_UINT_I64_F64_S
    4341856U,	// GE_F32
    7895U,	// GE_F32_S
    4343248U,	// GE_F32x4
    8993U,	// GE_F32x4_S
    4341866U,	// GE_F64
    7904U,	// GE_F64_S
    4343238U,	// GE_F64x2
    8984U,	// GE_F64x2_S
    4345753U,	// GE_S_I16x8
    10627U,	// GE_S_I16x8_S
    4345709U,	// GE_S_I32
    10587U,	// GE_S_I32_S
    4345729U,	// GE_S_I32x4
    10605U,	// GE_S_I32x4_S
    4345719U,	// GE_S_I64
    10596U,	// GE_S_I64_S
    4345741U,	// GE_S_I8x16
    10616U,	// GE_S_I8x16_S
    4348497U,	// GE_U_I16x8
    12414U,	// GE_U_I16x8_S
    4348453U,	// GE_U_I32
    12374U,	// GE_U_I32_S
    4348473U,	// GE_U_I32x4
    12392U,	// GE_U_I32x4_S
    4348463U,	// GE_U_I64
    12383U,	// GE_U_I64_S
    4348485U,	// GE_U_I8x16
    12403U,	// GE_U_I8x16_S
    152462U,	// GLOBAL_GET_EXTERNREF
    21390U,	// GLOBAL_GET_EXTERNREF_S
    152462U,	// GLOBAL_GET_F32
    21390U,	// GLOBAL_GET_F32_S
    152462U,	// GLOBAL_GET_F64
    21390U,	// GLOBAL_GET_F64_S
    152462U,	// GLOBAL_GET_FUNCREF
    21390U,	// GLOBAL_GET_FUNCREF_S
    152462U,	// GLOBAL_GET_I32
    21390U,	// GLOBAL_GET_I32_S
    152462U,	// GLOBAL_GET_I64
    21390U,	// GLOBAL_GET_I64_S
    152462U,	// GLOBAL_GET_V128
    21390U,	// GLOBAL_GET_V128_S
    152496U,	// GLOBAL_SET_EXTERNREF
    21424U,	// GLOBAL_SET_EXTERNREF_S
    152496U,	// GLOBAL_SET_F32
    21424U,	// GLOBAL_SET_F32_S
    152496U,	// GLOBAL_SET_F64
    21424U,	// GLOBAL_SET_F64_S
    152496U,	// GLOBAL_SET_FUNCREF
    21424U,	// GLOBAL_SET_FUNCREF_S
    152496U,	// GLOBAL_SET_I32
    21424U,	// GLOBAL_SET_I32_S
    152496U,	// GLOBAL_SET_I64
    21424U,	// GLOBAL_SET_I64_S
    152496U,	// GLOBAL_SET_V128
    21424U,	// GLOBAL_SET_V128_S
    4341996U,	// GT_F32
    8021U,	// GT_F32_S
    4346833U,	// GT_F32x4
    11463U,	// GT_F32x4_S
    4342006U,	// GT_F64
    8030U,	// GT_F64_S
    4346823U,	// GT_F64x2
    11454U,	// GT_F64x2_S
    4346153U,	// GT_S_I16x8
    10957U,	// GT_S_I16x8_S
    4346109U,	// GT_S_I32
    10917U,	// GT_S_I32_S
    4346129U,	// GT_S_I32x4
    10935U,	// GT_S_I32x4_S
    4346119U,	// GT_S_I64
    10926U,	// GT_S_I64_S
    4346141U,	// GT_S_I8x16
    10946U,	// GT_S_I8x16_S
    4349396U,	// GT_U_I16x8
    12750U,	// GT_U_I16x8_S
    4349352U,	// GT_U_I32
    12710U,	// GT_U_I32_S
    4349372U,	// GT_U_I32x4
    12728U,	// GT_U_I32x4_S
    4349362U,	// GT_U_I64
    12719U,	// GT_U_I64_S
    4349384U,	// GT_U_I8x16
    12739U,	// GT_U_I8x16_S
    150989U,	// I32_EXTEND16_S_I32
    10230U,	// I32_EXTEND16_S_I32_S
    151182U,	// I32_EXTEND8_S_I32
    10390U,	// I32_EXTEND8_S_I32_S
    148212U,	// I32_REINTERPRET_F32
    8509U,	// I32_REINTERPRET_F32_S
    150448U,	// I32_TRUNC_S_F32
    9775U,	// I32_TRUNC_S_F32_S
    150628U,	// I32_TRUNC_S_F64
    9929U,	// I32_TRUNC_S_F64_S
    150482U,	// I32_TRUNC_S_SAT_F32
    9807U,	// I32_TRUNC_S_SAT_F32_S
    150662U,	// I32_TRUNC_S_SAT_F64
    9961U,	// I32_TRUNC_S_SAT_F64_S
    152837U,	// I32_TRUNC_U_F32
    11638U,	// I32_TRUNC_U_F32_S
    153017U,	// I32_TRUNC_U_F64
    11792U,	// I32_TRUNC_U_F64_S
    152871U,	// I32_TRUNC_U_SAT_F32
    11670U,	// I32_TRUNC_U_SAT_F32_S
    153051U,	// I32_TRUNC_U_SAT_F64
    11824U,	// I32_TRUNC_U_SAT_F64_S
    148316U,	// I32_WRAP_I64
    8608U,	// I32_WRAP_I64_S
    151005U,	// I64_EXTEND16_S_I64
    10245U,	// I64_EXTEND16_S_I64_S
    150432U,	// I64_EXTEND32_S_I64
    9760U,	// I64_EXTEND32_S_I64_S
    151197U,	// I64_EXTEND8_S_I64
    10404U,	// I64_EXTEND8_S_I64_S
    150524U,	// I64_EXTEND_S_I32
    9847U,	// I64_EXTEND_S_I32_S
    152913U,	// I64_EXTEND_U_I32
    11710U,	// I64_EXTEND_U_I32_S
    148295U,	// I64_REINTERPRET_F64
    8588U,	// I64_REINTERPRET_F64_S
    150465U,	// I64_TRUNC_S_F32
    9791U,	// I64_TRUNC_S_F32_S
    150645U,	// I64_TRUNC_S_F64
    9945U,	// I64_TRUNC_S_F64_S
    150503U,	// I64_TRUNC_S_SAT_F32
    9827U,	// I64_TRUNC_S_SAT_F32_S
    150683U,	// I64_TRUNC_S_SAT_F64
    9981U,	// I64_TRUNC_S_SAT_F64_S
    152854U,	// I64_TRUNC_U_F32
    11654U,	// I64_TRUNC_U_F32_S
    153034U,	// I64_TRUNC_U_F64
    11808U,	// I64_TRUNC_U_F64_S
    152892U,	// I64_TRUNC_U_SAT_F32
    11690U,	// I64_TRUNC_U_SAT_F32_S
    153072U,	// I64_TRUNC_U_SAT_F64
    11844U,	// I64_TRUNC_U_SAT_F64_S
    180245U,	// IF
    49173U,	// IF_S
    4341876U,	// LE_F32
    7913U,	// LE_F32_S
    4343268U,	// LE_F32x4
    9011U,	// LE_F32x4_S
    4341886U,	// LE_F64
    7922U,	// LE_F64_S
    4343258U,	// LE_F64x2
    9002U,	// LE_F64x2_S
    4345809U,	// LE_S_I16x8
    10678U,	// LE_S_I16x8_S
    4345765U,	// LE_S_I32
    10638U,	// LE_S_I32_S
    4345785U,	// LE_S_I32x4
    10656U,	// LE_S_I32x4_S
    4345775U,	// LE_S_I64
    10647U,	// LE_S_I64_S
    4345797U,	// LE_S_I8x16
    10667U,	// LE_S_I8x16_S
    4348553U,	// LE_U_I16x8
    12465U,	// LE_U_I16x8_S
    4348509U,	// LE_U_I32
    12425U,	// LE_U_I32_S
    4348529U,	// LE_U_I32x4
    12443U,	// LE_U_I32x4_S
    4348519U,	// LE_U_I64
    12434U,	// LE_U_I64_S
    4348541U,	// LE_U_I8x16
    12454U,	// LE_U_I8x16_S
    25842321U,	// LOAD16_SPLAT_A32
    1348241U,	// LOAD16_SPLAT_A32_S
    25842321U,	// LOAD16_SPLAT_A64
    1348241U,	// LOAD16_SPLAT_A64_S
    25841073U,	// LOAD16_S_I32_A32
    1346993U,	// LOAD16_S_I32_A32_S
    25841073U,	// LOAD16_S_I32_A64
    1346993U,	// LOAD16_S_I32_A64_S
    25841087U,	// LOAD16_S_I64_A32
    1347007U,	// LOAD16_S_I64_A32_S
    25841087U,	// LOAD16_S_I64_A64
    1347007U,	// LOAD16_S_I64_A64_S
    25843462U,	// LOAD16_U_I32_A32
    1349382U,	// LOAD16_U_I32_A32_S
    25843462U,	// LOAD16_U_I32_A64
    1349382U,	// LOAD16_U_I32_A64_S
    25843476U,	// LOAD16_U_I64_A32
    1349396U,	// LOAD16_U_I64_A32_S
    25843476U,	// LOAD16_U_I64_A64
    1349396U,	// LOAD16_U_I64_A64_S
    25842283U,	// LOAD32_SPLAT_A32
    1348203U,	// LOAD32_SPLAT_A32_S
    25842283U,	// LOAD32_SPLAT_A64
    1348203U,	// LOAD32_SPLAT_A64_S
    25840530U,	// LOAD32_S_I64_A32
    1346450U,	// LOAD32_S_I64_A32_S
    25840530U,	// LOAD32_S_I64_A64
    1346450U,	// LOAD32_S_I64_A64_S
    25842914U,	// LOAD32_U_I64_A32
    1348834U,	// LOAD32_U_I64_A32_S
    25842914U,	// LOAD32_U_I64_A64
    1348834U,	// LOAD32_U_I64_A64_S
    25842302U,	// LOAD64_SPLAT_A32
    1348222U,	// LOAD64_SPLAT_A32_S
    25842302U,	// LOAD64_SPLAT_A64
    1348222U,	// LOAD64_SPLAT_A64_S
    25842340U,	// LOAD8_SPLAT_A32
    1348260U,	// LOAD8_SPLAT_A32_S
    25842340U,	// LOAD8_SPLAT_A64
    1348260U,	// LOAD8_SPLAT_A64_S
    25841268U,	// LOAD8_S_I32_A32
    1347188U,	// LOAD8_S_I32_A32_S
    25841268U,	// LOAD8_S_I32_A64
    1347188U,	// LOAD8_S_I32_A64_S
    25841281U,	// LOAD8_S_I64_A32
    1347201U,	// LOAD8_S_I64_A32_S
    25841281U,	// LOAD8_S_I64_A64
    1347201U,	// LOAD8_S_I64_A64_S
    25843667U,	// LOAD8_U_I32_A32
    1349587U,	// LOAD8_U_I32_A32_S
    25843667U,	// LOAD8_U_I32_A64
    1349587U,	// LOAD8_U_I32_A64_S
    25843680U,	// LOAD8_U_I64_A32
    1349600U,	// LOAD8_U_I64_A32_S
    25843680U,	// LOAD8_U_I64_A64
    1349600U,	// LOAD8_U_I64_A64_S
    25841500U,	// LOAD_EXTEND_S_I16x8_A32
    1347420U,	// LOAD_EXTEND_S_I16x8_A32_S
    25841500U,	// LOAD_EXTEND_S_I16x8_A64
    1347420U,	// LOAD_EXTEND_S_I16x8_A64_S
    25841055U,	// LOAD_EXTEND_S_I32x4_A32
    1346975U,	// LOAD_EXTEND_S_I32x4_A32_S
    25841055U,	// LOAD_EXTEND_S_I32x4_A64
    1346975U,	// LOAD_EXTEND_S_I32x4_A64_S
    25840692U,	// LOAD_EXTEND_S_I64x2_A32
    1346612U,	// LOAD_EXTEND_S_I64x2_A32_S
    25840692U,	// LOAD_EXTEND_S_I64x2_A64
    1346612U,	// LOAD_EXTEND_S_I64x2_A64_S
    25843890U,	// LOAD_EXTEND_U_I16x8_A32
    1349810U,	// LOAD_EXTEND_U_I16x8_A32_S
    25843890U,	// LOAD_EXTEND_U_I16x8_A64
    1349810U,	// LOAD_EXTEND_U_I16x8_A64_S
    25843444U,	// LOAD_EXTEND_U_I32x4_A32
    1349364U,	// LOAD_EXTEND_U_I32x4_A32_S
    25843444U,	// LOAD_EXTEND_U_I32x4_A64
    1349364U,	// LOAD_EXTEND_U_I32x4_A64_S
    25843081U,	// LOAD_EXTEND_U_I64x2_A32
    1349001U,	// LOAD_EXTEND_U_I64x2_A32_S
    25843081U,	// LOAD_EXTEND_U_I64x2_A64
    1349001U,	// LOAD_EXTEND_U_I64x2_A64_S
    25838794U,	// LOAD_F32_A32
    1344714U,	// LOAD_F32_A32_S
    25838794U,	// LOAD_F32_A64
    1344714U,	// LOAD_F32_A64_S
    25838814U,	// LOAD_F64_A32
    1344734U,	// LOAD_F64_A32_S
    25838814U,	// LOAD_F64_A64
    1344734U,	// LOAD_F64_A64_S
    25838804U,	// LOAD_I32_A32
    1344724U,	// LOAD_I32_A32_S
    25838804U,	// LOAD_I32_A64
    1344724U,	// LOAD_I32_A64_S
    25838824U,	// LOAD_I64_A32
    1344744U,	// LOAD_I64_A32_S
    25838824U,	// LOAD_I64_A64
    1344744U,	// LOAD_I64_A64_S
    59393672U,	// LOAD_LANE_I16x8_A32
    1869448U,	// LOAD_LANE_I16x8_A32_S
    59393672U,	// LOAD_LANE_I16x8_A64
    1869448U,	// LOAD_LANE_I16x8_A64_S
    59393598U,	// LOAD_LANE_I32x4_A32
    1869374U,	// LOAD_LANE_I32x4_A32_S
    59393598U,	// LOAD_LANE_I32x4_A64
    1869374U,	// LOAD_LANE_I32x4_A64_S
    59393635U,	// LOAD_LANE_I64x2_A32
    1869411U,	// LOAD_LANE_I64x2_A32_S
    59393635U,	// LOAD_LANE_I64x2_A64
    1869411U,	// LOAD_LANE_I64x2_A64_S
    59393709U,	// LOAD_LANE_I8x16_A32
    1869485U,	// LOAD_LANE_I8x16_A32_S
    59393709U,	// LOAD_LANE_I8x16_A64
    1869485U,	// LOAD_LANE_I8x16_A64_S
    25838834U,	// LOAD_V128_A32
    1344754U,	// LOAD_V128_A32_S
    25838834U,	// LOAD_V128_A64
    1344754U,	// LOAD_V128_A64_S
    25840258U,	// LOAD_ZERO_I32x4_A32
    1346178U,	// LOAD_ZERO_I32x4_A32_S
    25840258U,	// LOAD_ZERO_I32x4_A64
    1346178U,	// LOAD_ZERO_I32x4_A64_S
    25840276U,	// LOAD_ZERO_I64x2_A32
    1346196U,	// LOAD_ZERO_I64x2_A32_S
    25840276U,	// LOAD_ZERO_I64x2_A64
    1346196U,	// LOAD_ZERO_I64x2_A64_S
    152474U,	// LOCAL_GET_EXTERNREF
    21402U,	// LOCAL_GET_EXTERNREF_S
    152474U,	// LOCAL_GET_F32
    21402U,	// LOCAL_GET_F32_S
    152474U,	// LOCAL_GET_F64
    21402U,	// LOCAL_GET_F64_S
    152474U,	// LOCAL_GET_FUNCREF
    21402U,	// LOCAL_GET_FUNCREF_S
    152474U,	// LOCAL_GET_I32
    21402U,	// LOCAL_GET_I32_S
    152474U,	// LOCAL_GET_I64
    21402U,	// LOCAL_GET_I64_S
    152474U,	// LOCAL_GET_V128
    21402U,	// LOCAL_GET_V128_S
    152508U,	// LOCAL_SET_EXTERNREF
    21436U,	// LOCAL_SET_EXTERNREF_S
    152508U,	// LOCAL_SET_F32
    21436U,	// LOCAL_SET_F32_S
    152508U,	// LOCAL_SET_F64
    21436U,	// LOCAL_SET_F64_S
    152508U,	// LOCAL_SET_FUNCREF
    21436U,	// LOCAL_SET_FUNCREF_S
    152508U,	// LOCAL_SET_I32
    21436U,	// LOCAL_SET_I32_S
    152508U,	// LOCAL_SET_I64
    21436U,	// LOCAL_SET_I64_S
    152508U,	// LOCAL_SET_V128
    21436U,	// LOCAL_SET_V128_S
    4343227U,	// LOCAL_TEE_EXTERNREF
    17851U,	// LOCAL_TEE_EXTERNREF_S
    4343227U,	// LOCAL_TEE_F32
    17851U,	// LOCAL_TEE_F32_S
    4343227U,	// LOCAL_TEE_F64
    17851U,	// LOCAL_TEE_F64_S
    4343227U,	// LOCAL_TEE_FUNCREF
    17851U,	// LOCAL_TEE_FUNCREF_S
    4343227U,	// LOCAL_TEE_I32
    17851U,	// LOCAL_TEE_I32_S
    4343227U,	// LOCAL_TEE_I64
    17851U,	// LOCAL_TEE_I64_S
    4343227U,	// LOCAL_TEE_V128
    17851U,	// LOCAL_TEE_V128_S
    49198U,	// LOOP
    49198U,	// LOOP_S
    4342016U,	// LT_F32
    8039U,	// LT_F32_S
    4346866U,	// LT_F32x4
    11481U,	// LT_F32x4_S
    4342026U,	// LT_F64
    8048U,	// LT_F64_S
    4346856U,	// LT_F64x2
    11472U,	// LT_F64x2_S
    4346209U,	// LT_S_I16x8
    11008U,	// LT_S_I16x8_S
    4346165U,	// LT_S_I32
    10968U,	// LT_S_I32_S
    4346185U,	// LT_S_I32x4
    10986U,	// LT_S_I32x4_S
    4346175U,	// LT_S_I64
    10977U,	// LT_S_I64_S
    4346197U,	// LT_S_I8x16
    10997U,	// LT_S_I8x16_S
    4349452U,	// LT_U_I16x8
    12801U,	// LT_U_I16x8_S
    4349408U,	// LT_U_I32
    12761U,	// LT_U_I32_S
    4349428U,	// LT_U_I32x4
    12779U,	// LT_U_I32x4_S
    4349418U,	// LT_U_I64
    12770U,	// LT_U_I64_S
    4349440U,	// LT_U_I8x16
    12790U,	// LT_U_I8x16_S
    4342363U,	// MAX_F32
    8291U,	// MAX_F32_S
    4349583U,	// MAX_F32x4
    12898U,	// MAX_F32x4_S
    4342373U,	// MAX_F64
    8300U,	// MAX_F64_S
    4349572U,	// MAX_F64x2
    12888U,	// MAX_F64x2_S
    4346269U,	// MAX_S_I16x8
    11063U,	// MAX_S_I16x8_S
    4346243U,	// MAX_S_I32x4
    11039U,	// MAX_S_I32x4_S
    4346256U,	// MAX_S_I8x16
    11051U,	// MAX_S_I8x16_S
    4349512U,	// MAX_U_I16x8
    12856U,	// MAX_U_I16x8_S
    4349486U,	// MAX_U_I32x4
    12832U,	// MAX_U_I32x4_S
    4349499U,	// MAX_U_I8x16
    12844U,	// MAX_U_I8x16_S
    92947055U,	// MEMORY_ATOMIC_NOTIFY_A32
    1344111U,	// MEMORY_ATOMIC_NOTIFY_A32_S
    92947055U,	// MEMORY_ATOMIC_NOTIFY_A64
    1344111U,	// MEMORY_ATOMIC_NOTIFY_A64_S
    227164436U,	// MEMORY_ATOMIC_WAIT32_A32
    1343764U,	// MEMORY_ATOMIC_WAIT32_A32_S
    227164436U,	// MEMORY_ATOMIC_WAIT32_A64
    1343764U,	// MEMORY_ATOMIC_WAIT32_A64_S
    227164459U,	// MEMORY_ATOMIC_WAIT64_A32
    1343787U,	// MEMORY_ATOMIC_WAIT64_A32_S
    227164459U,	// MEMORY_ATOMIC_WAIT64_A64
    1343787U,	// MEMORY_ATOMIC_WAIT64_A64_S
    4342273U,	// MIN_F32
    8219U,	// MIN_F32_S
    4344415U,	// MIN_F32x4
    9557U,	// MIN_F32x4_S
    4342283U,	// MIN_F64
    8228U,	// MIN_F64_S
    4344404U,	// MIN_F64x2
    9547U,	// MIN_F64x2_S
    4346001U,	// MIN_S_I16x8
    10817U,	// MIN_S_I16x8_S
    4345975U,	// MIN_S_I32x4
    10793U,	// MIN_S_I32x4_S
    4345988U,	// MIN_S_I8x16
    10805U,	// MIN_S_I8x16_S
    4349006U,	// MIN_U_I16x8
    12604U,	// MIN_U_I16x8_S
    4348980U,	// MIN_U_I32x4
    12580U,	// MIN_U_I32x4_S
    4348993U,	// MIN_U_I8x16
    12592U,	// MIN_U_I8x16_S
    4342233U,	// MUL_F32
    8183U,	// MUL_F32_S
    4344343U,	// MUL_F32x4
    9491U,	// MUL_F32x4_S
    4342253U,	// MUL_F64
    8201U,	// MUL_F64_S
    4344321U,	// MUL_F64x2
    9471U,	// MUL_F64x2_S
    4344365U,	// MUL_I16x8
    9511U,	// MUL_I16x8_S
    4342243U,	// MUL_I32
    8192U,	// MUL_I32_S
    4344354U,	// MUL_I32x4
    9501U,	// MUL_I32x4_S
    4342263U,	// MUL_I64
    8210U,	// MUL_I64_S
    4344332U,	// MUL_I64x2
    9481U,	// MUL_I64x2_S
    4345225U,	// NARROW_S_I16x8
    10209U,	// NARROW_S_I16x8_S
    4345670U,	// NARROW_S_I8x16
    10566U,	// NARROW_S_I8x16_S
    4347614U,	// NARROW_U_I16x8
    12072U,	// NARROW_U_I16x8_S
    4348060U,	// NARROW_U_I8x16
    12353U,	// NARROW_U_I8x16_S
    152690U,	// NEAREST_F32
    11586U,	// NEAREST_F32_S
    152731U,	// NEAREST_F32x4
    11624U,	// NEAREST_F32x4_S
    152718U,	// NEAREST_F64
    11612U,	// NEAREST_F64_S
    152703U,	// NEAREST_F64x2
    11598U,	// NEAREST_F64x2_S
    147889U,	// NEG_F32
    8147U,	// NEG_F32_S
    149667U,	// NEG_F32x4
    9243U,	// NEG_F32x4_S
    147899U,	// NEG_F64
    8156U,	// NEG_F64_S
    149645U,	// NEG_F64x2
    9223U,	// NEG_F64x2_S
    149700U,	// NEG_I16x8
    9273U,	// NEG_I16x8_S
    149678U,	// NEG_I32x4
    9253U,	// NEG_I32x4_S
    149656U,	// NEG_I64x2
    9233U,	// NEG_I64x2_S
    149689U,	// NEG_I8x16
    9263U,	// NEG_I8x16_S
    4341896U,	// NE_F32
    7931U,	// NE_F32_S
    4343318U,	// NE_F32x4
    9055U,	// NE_F32x4_S
    4341916U,	// NE_F64
    7949U,	// NE_F64_S
    4343308U,	// NE_F64x2
    9046U,	// NE_F64x2_S
    4343348U,	// NE_I16x8
    9082U,	// NE_I16x8_S
    4341906U,	// NE_I32
    7940U,	// NE_I32_S
    4343328U,	// NE_I32x4
    9064U,	// NE_I32x4_S
    4341926U,	// NE_I64
    7958U,	// NE_I64_S
    4343338U,	// NE_I8x16
    9073U,	// NE_I8x16_S
    9609U,	// NOP
    9609U,	// NOP_S
    152623U,	// NOT
    11525U,	// NOT_S
    4344557U,	// OR
    4341976U,	// OR_I32
    8003U,	// OR_I32_S
    4341986U,	// OR_I64
    8012U,	// OR_I64_S
    9681U,	// OR_S
    4349606U,	// PMAX_F32x4
    12919U,	// PMAX_F32x4_S
    4349594U,	// PMAX_F64x2
    12908U,	// PMAX_F64x2_S
    4344438U,	// PMIN_F32x4
    9578U,	// PMIN_F32x4_S
    4344426U,	// PMIN_F64x2
    9567U,	// PMIN_F64x2_S
    152585U,	// POPCNT_I32
    11490U,	// POPCNT_I32_S
    152597U,	// POPCNT_I64
    11501U,	// POPCNT_I64_S
    152609U,	// POPCNT_I8x16
    11512U,	// POPCNT_I8x16_S
    13538300U,	// PREFETCH_NT_A32
    1348604U,	// PREFETCH_NT_A32_S
    13538300U,	// PREFETCH_NT_A64
    1348604U,	// PREFETCH_NT_A64_S
    13537809U,	// PREFETCH_T_A32
    1348113U,	// PREFETCH_T_A32_S
    13537809U,	// PREFETCH_T_A64
    1348113U,	// PREFETCH_T_A64_S
    4346088U,	// Q15MULR_SAT_S_I16x8
    10897U,	// Q15MULR_SAT_S_I16x8_S
    37897252U,	// QFMA_F32x4
    8758U,	// QFMA_F32x4_S
    37897240U,	// QFMA_F64x2
    8747U,	// QFMA_F64x2_S
    37900805U,	// QFMS_F32x4
    11146U,	// QFMS_F32x4_S
    37900793U,	// QFMS_F64x2
    11135U,	// QFMS_F64x2_S
    2247139U,	// REF_NULL_EXTERNREF
    84451U,	// REF_NULL_EXTERNREF_S
    2247139U,	// REF_NULL_FUNCREF
    84451U,	// REF_NULL_FUNCREF_S
    4345953U,	// REM_S_I32
    10773U,	// REM_S_I32_S
    4345964U,	// REM_S_I64
    10783U,	// REM_S_I64_S
    4348958U,	// REM_U_I32
    12560U,	// REM_U_I32_S
    4348969U,	// REM_U_I64
    12570U,	// REM_U_I64_S
    37897976U,	// REPLACE_LANE_F32x4
    18168U,	// REPLACE_LANE_F32x4_S
    37897936U,	// REPLACE_LANE_F64x2
    18128U,	// REPLACE_LANE_F64x2_S
    37898036U,	// REPLACE_LANE_I16x8
    18228U,	// REPLACE_LANE_I16x8_S
    37897996U,	// REPLACE_LANE_I32x4
    18188U,	// REPLACE_LANE_I32x4_S
    37897956U,	// REPLACE_LANE_I64x2
    18148U,	// REPLACE_LANE_I64x2_S
    37898016U,	// REPLACE_LANE_I8x16
    18208U,	// REPLACE_LANE_I8x16_S
    16977U,	// RETHROW
    16977U,	// RETHROW_S
    9602U,	// RETURN
    9602U,	// RETURN_S
    16413U,	// RET_CALL
    4973U,	// RET_CALL_INDIRECT
    21357U,	// RET_CALL_INDIRECT_S
    18877U,	// RET_CALL_S
    4344301U,	// ROTL_I32
    9453U,	// ROTL_I32_S
    4344311U,	// ROTL_I64
    9462U,	// ROTL_I64_S
    4344702U,	// ROTR_I32
    9742U,	// ROTR_I32_S
    4344712U,	// ROTR_I64
    9751U,	// ROTR_I64_S
    37901059U,	// SELECT_EXTERNREF
    11320U,	// SELECT_EXTERNREF_S
    37900982U,	// SELECT_F32
    11249U,	// SELECT_F32_S
    37901006U,	// SELECT_F64
    11271U,	// SELECT_F64_S
    37901043U,	// SELECT_FUNCREF
    11305U,	// SELECT_FUNCREF_S
    37900994U,	// SELECT_I32
    11260U,	// SELECT_I32_S
    37901018U,	// SELECT_I64
    11282U,	// SELECT_I64_S
    37901030U,	// SELECT_V128
    11293U,	// SELECT_V128_S
    4344198U,	// SHL_I16x8
    9379U,	// SHL_I16x8_S
    4342213U,	// SHL_I32
    8165U,	// SHL_I32_S
    4344176U,	// SHL_I32x4
    9359U,	// SHL_I32x4_S
    4342223U,	// SHL_I64
    8174U,	// SHL_I64_S
    4344165U,	// SHL_I64x2
    9349U,	// SHL_I64x2_S
    4344187U,	// SHL_I8x16
    9369U,	// SHL_I8x16_S
    4346075U,	// SHR_S_I16x8
    10885U,	// SHR_S_I16x8_S
    4346014U,	// SHR_S_I32
    10829U,	// SHR_S_I32_S
    4346049U,	// SHR_S_I32x4
    10861U,	// SHR_S_I32x4_S
    4346038U,	// SHR_S_I64
    10851U,	// SHR_S_I64_S
    4346025U,	// SHR_S_I64x2
    10839U,	// SHR_S_I64x2_S
    4346062U,	// SHR_S_I8x16
    10873U,	// SHR_S_I8x16_S
    4349108U,	// SHR_U_I16x8
    12698U,	// SHR_U_I16x8_S
    4349047U,	// SHR_U_I32
    12642U,	// SHR_U_I32_S
    4349082U,	// SHR_U_I32x4
    12674U,	// SHR_U_I32x4_S
    4349071U,	// SHR_U_I64
    12664U,	// SHR_U_I64_S
    4349058U,	// SHR_U_I64x2
    12652U,	// SHR_U_I64x2_S
    4349095U,	// SHR_U_I8x16
    12686U,	// SHR_U_I8x16_S
    1581401582U,	// SHUFFLE
    3728885230U,	// SHUFFLE_S
    152119U,	// SPLAT_F32x4
    11201U,	// SPLAT_F32x4_S
    152093U,	// SPLAT_F64x2
    11177U,	// SPLAT_F64x2_S
    152158U,	// SPLAT_I16x8
    11237U,	// SPLAT_I16x8_S
    152132U,	// SPLAT_I32x4
    11213U,	// SPLAT_I32x4_S
    152106U,	// SPLAT_I64x2
    11189U,	// SPLAT_I64x2_S
    152145U,	// SPLAT_I8x16
    11225U,	// SPLAT_I8x16_S
    152646U,	// SQRT_F32
    11546U,	// SQRT_F32_S
    152678U,	// SQRT_F32x4
    11575U,	// SQRT_F32x4_S
    152668U,	// SQRT_F64
    11566U,	// SQRT_F64_S
    152656U,	// SQRT_F64x2
    11555U,	// SQRT_F64x2_S
    47088536U,	// STORE16_I32_A32
    1344408U,	// STORE16_I32_A32_S
    47088536U,	// STORE16_I32_A64
    1344408U,	// STORE16_I32_A64_S
    47088549U,	// STORE16_I64_A32
    1344421U,	// STORE16_I64_A32_S
    47088549U,	// STORE16_I64_A64
    1344421U,	// STORE16_I64_A64_S
    47088322U,	// STORE32_I64_A32
    1344194U,	// STORE32_I64_A32_S
    47088322U,	// STORE32_I64_A64
    1344194U,	// STORE32_I64_A64_S
    47088602U,	// STORE8_I32_A32
    1344474U,	// STORE8_I32_A32_S
    47088602U,	// STORE8_I32_A64
    1344474U,	// STORE8_I32_A64_S
    47088614U,	// STORE8_I64_A32
    1344486U,	// STORE8_I64_A32_S
    47088614U,	// STORE8_I64_A64
    1344486U,	// STORE8_I64_A64_S
    47089560U,	// STORE_F32_A32
    1345432U,	// STORE_F32_A32_S
    47089560U,	// STORE_F32_A64
    1345432U,	// STORE_F32_A64_S
    47089582U,	// STORE_F64_A32
    1345454U,	// STORE_F64_A32_S
    47089582U,	// STORE_F64_A64
    1345454U,	// STORE_F64_A64_S
    47089571U,	// STORE_I32_A32
    1345443U,	// STORE_I32_A32_S
    47089571U,	// STORE_I32_A64
    1345443U,	// STORE_I32_A64_S
    47089593U,	// STORE_I64_A32
    1345465U,	// STORE_I64_A32_S
    47089593U,	// STORE_I64_A64
    1345465U,	// STORE_I64_A64_S
    3049114U,	// STORE_LANE_I16x8_A32
    1869466U,	// STORE_LANE_I16x8_A32_S
    99994U,	// STORE_LANE_I16x8_A64
    1869466U,	// STORE_LANE_I16x8_A64_S
    3049040U,	// STORE_LANE_I32x4_A32
    1869392U,	// STORE_LANE_I32x4_A32_S
    99920U,	// STORE_LANE_I32x4_A64
    1869392U,	// STORE_LANE_I32x4_A64_S
    3049077U,	// STORE_LANE_I64x2_A32
    1869429U,	// STORE_LANE_I64x2_A32_S
    99957U,	// STORE_LANE_I64x2_A64
    1869429U,	// STORE_LANE_I64x2_A64_S
    3049150U,	// STORE_LANE_I8x16_A32
    1869502U,	// STORE_LANE_I8x16_A32_S
    100030U,	// STORE_LANE_I8x16_A64
    1869502U,	// STORE_LANE_I8x16_A64_S
    47089604U,	// STORE_V128_A32
    1345476U,	// STORE_V128_A32_S
    47089604U,	// STORE_V128_A64
    1345476U,	// STORE_V128_A64_S
    4342082U,	// SUB_F32
    8057U,	// SUB_F32_S
    4342854U,	// SUB_F32x4
    8789U,	// SUB_F32x4_S
    4342102U,	// SUB_F64
    8075U,	// SUB_F64_S
    4342832U,	// SUB_F64x2
    8769U,	// SUB_F64x2_S
    4342887U,	// SUB_I16x8
    8819U,	// SUB_I16x8_S
    4342092U,	// SUB_I32
    8066U,	// SUB_I32_S
    4342865U,	// SUB_I32x4
    8799U,	// SUB_I32x4_S
    4342112U,	// SUB_I64
    8084U,	// SUB_I64_S
    4342843U,	// SUB_I64x2
    8779U,	// SUB_I64x2_S
    4342876U,	// SUB_I8x16
    8809U,	// SUB_I8x16_S
    4345887U,	// SUB_SAT_S_I16x8
    10710U,	// SUB_SAT_S_I16x8_S
    4345865U,	// SUB_SAT_S_I8x16
    10689U,	// SUB_SAT_S_I8x16_S
    4348631U,	// SUB_SAT_U_I16x8
    12497U,	// SUB_SAT_U_I16x8_S
    4348609U,	// SUB_SAT_U_I8x16
    12476U,	// SUB_SAT_U_I8x16_S
    4343293U,	// SWIZZLE
    9032U,	// SWIZZLE_S
    105012914U,	// TABLE_COPY
    155314U,	// TABLE_COPY_S
    37898698U,	// TABLE_FILL_EXTERNREF
    18890U,	// TABLE_FILL_EXTERNREF_S
    37898698U,	// TABLE_FILL_FUNCREF
    18890U,	// TABLE_FILL_FUNCREF_S
    152451U,	// TABLE_GET_EXTERNREF
    21379U,	// TABLE_GET_EXTERNREF_S
    152451U,	// TABLE_GET_FUNCREF
    21379U,	// TABLE_GET_FUNCREF_S
    37903979U,	// TABLE_GROW_EXTERNREF
    24171U,	// TABLE_GROW_EXTERNREF_S
    37903979U,	// TABLE_GROW_FUNCREF
    24171U,	// TABLE_GROW_FUNCREF_S
    4346789U,	// TABLE_SET_EXTERNREF
    21413U,	// TABLE_SET_EXTERNREF_S
    4346789U,	// TABLE_SET_FUNCREF
    21413U,	// TABLE_SET_FUNCREF_S
    149620U,	// TABLE_SIZE
    18548U,	// TABLE_SIZE_S
    4343227U,	// TEE_EXTERNREF
    8974U,	// TEE_EXTERNREF_S
    4343227U,	// TEE_F32
    8974U,	// TEE_F32_S
    4343227U,	// TEE_F64
    8974U,	// TEE_F64_S
    4343227U,	// TEE_FUNCREF
    8974U,	// TEE_FUNCREF_S
    4343227U,	// TEE_I32
    8974U,	// TEE_I32_S
    4343227U,	// TEE_I64
    8974U,	// TEE_I64_S
    4343227U,	// TEE_V128
    8974U,	// TEE_V128_S
    16470U,	// THROW
    16470U,	// THROW_S
    148634U,	// TRUNC_F32
    8829U,	// TRUNC_F32_S
    148669U,	// TRUNC_F32x4
    8861U,	// TRUNC_F32x4_S
    148658U,	// TRUNC_F64
    8851U,	// TRUNC_F64_S
    148645U,	// TRUNC_F64x2
    8839U,	// TRUNC_F64x2_S
    49163U,	// TRY
    49163U,	// TRY_S
    9020U,	// UNREACHABLE
    9020U,	// UNREACHABLE_S
    4344652U,	// XOR
    4342293U,	// XOR_I32
    8237U,	// XOR_I32_S
    4342303U,	// XOR_I64
    8246U,	// XOR_I64_S
    9733U,	// XOR_S
    4349559U,	// anonymous_2715MEMORY_GROW_A32
    24183U,	// anonymous_2715MEMORY_GROW_A32_S
    149632U,	// anonymous_2715MEMORY_SIZE_A32
    18560U,	// anonymous_2715MEMORY_SIZE_A32_S
    4349559U,	// anonymous_2716MEMORY_GROW_A64
    24183U,	// anonymous_2716MEMORY_GROW_A64_S
    149632U,	// anonymous_2716MEMORY_SIZE_A64
    18560U,	// anonymous_2716MEMORY_SIZE_A64_S
    37901113U,	// anonymous_4462SIGNSELECT_I8x16
    11371U,	// anonymous_4462SIGNSELECT_I8x16_S
    37901131U,	// anonymous_4463SIGNSELECT_I16x8
    11388U,	// anonymous_4463SIGNSELECT_I16x8_S
    37901095U,	// anonymous_4464SIGNSELECT_I32x4
    11354U,	// anonymous_4464SIGNSELECT_I32x4_S
    37901077U,	// anonymous_4465SIGNSELECT_I64x2
    11337U,	// anonymous_4465SIGNSELECT_I64x2_S
    19110U,	// anonymous_4565DATA_DROP
    19110U,	// anonymous_4565DATA_DROP_S
    105012938U,	// anonymous_4565MEMORY_COPY_A32
    155338U,	// anonymous_4565MEMORY_COPY_A32_S
    37898710U,	// anonymous_4565MEMORY_FILL_A32
    18902U,	// anonymous_4565MEMORY_FILL_A32_S
    105010139U,	// anonymous_4565MEMORY_INIT_A32
    152539U,	// anonymous_4565MEMORY_INIT_A32_S
    19110U,	// anonymous_4566DATA_DROP
    19110U,	// anonymous_4566DATA_DROP_S
    105012938U,	// anonymous_4566MEMORY_COPY_A64
    155338U,	// anonymous_4566MEMORY_COPY_A64_S
    37898710U,	// anonymous_4566MEMORY_FILL_A64
    18902U,	// anonymous_4566MEMORY_FILL_A64_S
    105010139U,	// anonymous_4566MEMORY_INIT_A64
    152539U,	// anonymous_4566MEMORY_INIT_A64_S
    150742U,	// fp_to_sint_I32x4
    10037U,	// fp_to_sint_I32x4_S
    153131U,	// fp_to_uint_I32x4
    11900U,	// fp_to_uint_I32x4_S
    150894U,	// int_wasm_convert_low_signed_F64x2
    10183U,	// int_wasm_convert_low_signed_F64x2_S
    153283U,	// int_wasm_convert_low_unsigned_F64x2
    12046U,	// int_wasm_convert_low_unsigned_F64x2_S
    148254U,	// int_wasm_demote_zero_F32x4
    8549U,	// int_wasm_demote_zero_F32x4_S
    151021U,	// int_wasm_extadd_pairwise_signed_I16x8
    10260U,	// int_wasm_extadd_pairwise_signed_I16x8_S
    151212U,	// int_wasm_extadd_pairwise_signed_I32x4
    10418U,	// int_wasm_extadd_pairwise_signed_I32x4_S
    153420U,	// int_wasm_extadd_pairwise_unsigned_I16x8
    12093U,	// int_wasm_extadd_pairwise_unsigned_I16x8_S
    153621U,	// int_wasm_extadd_pairwise_unsigned_I32x4
    12223U,	// int_wasm_extadd_pairwise_unsigned_I32x4_S
    148351U,	// int_wasm_promote_low_F64x2
    8641U,	// int_wasm_promote_low_F64x2_S
    150598U,	// int_wasm_trunc_saturate_zero_signed_I32x4
    9900U,	// int_wasm_trunc_saturate_zero_signed_I32x4_S
    152987U,	// int_wasm_trunc_saturate_zero_unsigned_I32x4
    11763U,	// int_wasm_trunc_saturate_zero_unsigned_I32x4_S
    150794U,	// int_wasm_widen_high_signed_I64x2
    10087U,	// int_wasm_widen_high_signed_I64x2_S
    153183U,	// int_wasm_widen_high_unsigned_I64x2
    11950U,	// int_wasm_widen_high_unsigned_I64x2_S
    150869U,	// int_wasm_widen_low_signed_I64x2
    10159U,	// int_wasm_widen_low_signed_I64x2_S
    153258U,	// int_wasm_widen_low_unsigned_I64x2
    12022U,	// int_wasm_widen_low_unsigned_I64x2_S
    150820U,	// sint_to_fp_F32x4
    10112U,	// sint_to_fp_F32x4_S
    153209U,	// uint_to_fp_F32x4
    11975U,	// uint_to_fp_F32x4_S
    151079U,	// widen_high_s_I16x8
    10316U,	// widen_high_s_I16x8_S
    151270U,	// widen_high_s_I32x4
    10474U,	// widen_high_s_I32x4_S
    153478U,	// widen_high_u_I16x8
    12149U,	// widen_high_u_I16x8_S
    153679U,	// widen_high_u_I32x4
    12279U,	// widen_high_u_I32x4_S
    151131U,	// widen_low_s_I16x8
    10366U,	// widen_low_s_I16x8_S
    151341U,	// widen_low_s_I32x4
    10542U,	// widen_low_s_I32x4_S
    153530U,	// widen_low_u_I16x8
    12199U,	// widen_low_u_I16x8_S
    153731U,	// widen_low_u_I32x4
    12329U,	// widen_low_u_I32x4_S
  };

  static const uint8_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_INSTR_REF
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// CALL_PARAMS
    0U,	// CALL_PARAMS_S
    0U,	// CALL_RESULTS
    0U,	// CALL_RESULTS_S
    0U,	// CATCHRET
    0U,	// CATCHRET_S
    0U,	// CLEANUPRET
    0U,	// CLEANUPRET_S
    0U,	// COMPILER_FENCE
    0U,	// COMPILER_FENCE_S
    0U,	// RET_CALL_RESULTS
    0U,	// RET_CALL_RESULTS_S
    0U,	// ABS_F32
    0U,	// ABS_F32_S
    0U,	// ABS_F32x4
    0U,	// ABS_F32x4_S
    0U,	// ABS_F64
    0U,	// ABS_F64_S
    0U,	// ABS_F64x2
    0U,	// ABS_F64x2_S
    0U,	// ABS_I16x8
    0U,	// ABS_I16x8_S
    0U,	// ABS_I32x4
    0U,	// ABS_I32x4_S
    0U,	// ABS_I64x2
    0U,	// ABS_I64x2_S
    0U,	// ABS_I8x16
    0U,	// ABS_I8x16_S
    0U,	// ADD_F32
    0U,	// ADD_F32_S
    0U,	// ADD_F32x4
    0U,	// ADD_F32x4_S
    0U,	// ADD_F64
    0U,	// ADD_F64_S
    0U,	// ADD_F64x2
    0U,	// ADD_F64x2_S
    0U,	// ADD_I16x8
    0U,	// ADD_I16x8_S
    0U,	// ADD_I32
    0U,	// ADD_I32_S
    0U,	// ADD_I32x4
    0U,	// ADD_I32x4_S
    0U,	// ADD_I64
    0U,	// ADD_I64_S
    0U,	// ADD_I64x2
    0U,	// ADD_I64x2_S
    0U,	// ADD_I8x16
    0U,	// ADD_I8x16_S
    0U,	// ADD_SAT_S_I16x8
    0U,	// ADD_SAT_S_I16x8_S
    0U,	// ADD_SAT_S_I8x16
    0U,	// ADD_SAT_S_I8x16_S
    0U,	// ADD_SAT_U_I16x8
    0U,	// ADD_SAT_U_I16x8_S
    0U,	// ADD_SAT_U_I8x16
    0U,	// ADD_SAT_U_I8x16_S
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKDOWN_S
    0U,	// ADJCALLSTACKUP
    0U,	// ADJCALLSTACKUP_S
    0U,	// ALLTRUE_I16x8
    0U,	// ALLTRUE_I16x8_S
    0U,	// ALLTRUE_I32x4
    0U,	// ALLTRUE_I32x4_S
    0U,	// ALLTRUE_I64x2
    0U,	// ALLTRUE_I64x2_S
    0U,	// ALLTRUE_I8x16
    0U,	// ALLTRUE_I8x16_S
    0U,	// AND
    0U,	// ANDNOT
    0U,	// ANDNOT_S
    0U,	// AND_I32
    0U,	// AND_I32_S
    0U,	// AND_I64
    0U,	// AND_I64_S
    0U,	// AND_S
    0U,	// ANYTRUE_I16x8
    0U,	// ANYTRUE_I16x8_S
    0U,	// ANYTRUE_I32x4
    0U,	// ANYTRUE_I32x4_S
    0U,	// ANYTRUE_I64x2
    0U,	// ANYTRUE_I64x2_S
    0U,	// ANYTRUE_I8x16
    0U,	// ANYTRUE_I8x16_S
    0U,	// ARGUMENT_externref
    0U,	// ARGUMENT_externref_S
    0U,	// ARGUMENT_f32
    0U,	// ARGUMENT_f32_S
    0U,	// ARGUMENT_f64
    0U,	// ARGUMENT_f64_S
    0U,	// ARGUMENT_funcref
    0U,	// ARGUMENT_funcref_S
    0U,	// ARGUMENT_i32
    0U,	// ARGUMENT_i32_S
    0U,	// ARGUMENT_i64
    0U,	// ARGUMENT_i64_S
    0U,	// ARGUMENT_v16i8
    0U,	// ARGUMENT_v16i8_S
    0U,	// ARGUMENT_v2f64
    0U,	// ARGUMENT_v2f64_S
    0U,	// ARGUMENT_v2i64
    0U,	// ARGUMENT_v2i64_S
    0U,	// ARGUMENT_v4f32
    0U,	// ARGUMENT_v4f32_S
    0U,	// ARGUMENT_v4i32
    0U,	// ARGUMENT_v4i32_S
    0U,	// ARGUMENT_v8i16
    0U,	// ARGUMENT_v8i16_S
    0U,	// ATOMIC_FENCE
    0U,	// ATOMIC_FENCE_S
    0U,	// ATOMIC_LOAD16_U_I32_A32
    0U,	// ATOMIC_LOAD16_U_I32_A32_S
    0U,	// ATOMIC_LOAD16_U_I32_A64
    0U,	// ATOMIC_LOAD16_U_I32_A64_S
    0U,	// ATOMIC_LOAD16_U_I64_A32
    0U,	// ATOMIC_LOAD16_U_I64_A32_S
    0U,	// ATOMIC_LOAD16_U_I64_A64
    0U,	// ATOMIC_LOAD16_U_I64_A64_S
    0U,	// ATOMIC_LOAD32_U_I64_A32
    0U,	// ATOMIC_LOAD32_U_I64_A32_S
    0U,	// ATOMIC_LOAD32_U_I64_A64
    0U,	// ATOMIC_LOAD32_U_I64_A64_S
    0U,	// ATOMIC_LOAD8_U_I32_A32
    0U,	// ATOMIC_LOAD8_U_I32_A32_S
    0U,	// ATOMIC_LOAD8_U_I32_A64
    0U,	// ATOMIC_LOAD8_U_I32_A64_S
    0U,	// ATOMIC_LOAD8_U_I64_A32
    0U,	// ATOMIC_LOAD8_U_I64_A32_S
    0U,	// ATOMIC_LOAD8_U_I64_A64
    0U,	// ATOMIC_LOAD8_U_I64_A64_S
    0U,	// ATOMIC_LOAD_I32_A32
    0U,	// ATOMIC_LOAD_I32_A32_S
    0U,	// ATOMIC_LOAD_I32_A64
    0U,	// ATOMIC_LOAD_I32_A64_S
    0U,	// ATOMIC_LOAD_I64_A32
    0U,	// ATOMIC_LOAD_I64_A32_S
    0U,	// ATOMIC_LOAD_I64_A64
    0U,	// ATOMIC_LOAD_I64_A64_S
    0U,	// ATOMIC_RMW16_U_ADD_I32_A32
    0U,	// ATOMIC_RMW16_U_ADD_I32_A32_S
    0U,	// ATOMIC_RMW16_U_ADD_I32_A64
    0U,	// ATOMIC_RMW16_U_ADD_I32_A64_S
    0U,	// ATOMIC_RMW16_U_ADD_I64_A32
    0U,	// ATOMIC_RMW16_U_ADD_I64_A32_S
    0U,	// ATOMIC_RMW16_U_ADD_I64_A64
    0U,	// ATOMIC_RMW16_U_ADD_I64_A64_S
    0U,	// ATOMIC_RMW16_U_AND_I32_A32
    0U,	// ATOMIC_RMW16_U_AND_I32_A32_S
    0U,	// ATOMIC_RMW16_U_AND_I32_A64
    0U,	// ATOMIC_RMW16_U_AND_I32_A64_S
    0U,	// ATOMIC_RMW16_U_AND_I64_A32
    0U,	// ATOMIC_RMW16_U_AND_I64_A32_S
    0U,	// ATOMIC_RMW16_U_AND_I64_A64
    0U,	// ATOMIC_RMW16_U_AND_I64_A64_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW16_U_OR_I32_A32
    0U,	// ATOMIC_RMW16_U_OR_I32_A32_S
    0U,	// ATOMIC_RMW16_U_OR_I32_A64
    0U,	// ATOMIC_RMW16_U_OR_I32_A64_S
    0U,	// ATOMIC_RMW16_U_OR_I64_A32
    0U,	// ATOMIC_RMW16_U_OR_I64_A32_S
    0U,	// ATOMIC_RMW16_U_OR_I64_A64
    0U,	// ATOMIC_RMW16_U_OR_I64_A64_S
    0U,	// ATOMIC_RMW16_U_SUB_I32_A32
    0U,	// ATOMIC_RMW16_U_SUB_I32_A32_S
    0U,	// ATOMIC_RMW16_U_SUB_I32_A64
    0U,	// ATOMIC_RMW16_U_SUB_I32_A64_S
    0U,	// ATOMIC_RMW16_U_SUB_I64_A32
    0U,	// ATOMIC_RMW16_U_SUB_I64_A32_S
    0U,	// ATOMIC_RMW16_U_SUB_I64_A64
    0U,	// ATOMIC_RMW16_U_SUB_I64_A64_S
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A32
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A32_S
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A64
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A64_S
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A32
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A64
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW16_U_XOR_I32_A32
    0U,	// ATOMIC_RMW16_U_XOR_I32_A32_S
    0U,	// ATOMIC_RMW16_U_XOR_I32_A64
    0U,	// ATOMIC_RMW16_U_XOR_I32_A64_S
    0U,	// ATOMIC_RMW16_U_XOR_I64_A32
    0U,	// ATOMIC_RMW16_U_XOR_I64_A32_S
    0U,	// ATOMIC_RMW16_U_XOR_I64_A64
    0U,	// ATOMIC_RMW16_U_XOR_I64_A64_S
    0U,	// ATOMIC_RMW32_U_ADD_I64_A32
    0U,	// ATOMIC_RMW32_U_ADD_I64_A32_S
    0U,	// ATOMIC_RMW32_U_ADD_I64_A64
    0U,	// ATOMIC_RMW32_U_ADD_I64_A64_S
    0U,	// ATOMIC_RMW32_U_AND_I64_A32
    0U,	// ATOMIC_RMW32_U_AND_I64_A32_S
    0U,	// ATOMIC_RMW32_U_AND_I64_A64
    0U,	// ATOMIC_RMW32_U_AND_I64_A64_S
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW32_U_OR_I64_A32
    0U,	// ATOMIC_RMW32_U_OR_I64_A32_S
    0U,	// ATOMIC_RMW32_U_OR_I64_A64
    0U,	// ATOMIC_RMW32_U_OR_I64_A64_S
    0U,	// ATOMIC_RMW32_U_SUB_I64_A32
    0U,	// ATOMIC_RMW32_U_SUB_I64_A32_S
    0U,	// ATOMIC_RMW32_U_SUB_I64_A64
    0U,	// ATOMIC_RMW32_U_SUB_I64_A64_S
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A32
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A64
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW32_U_XOR_I64_A32
    0U,	// ATOMIC_RMW32_U_XOR_I64_A32_S
    0U,	// ATOMIC_RMW32_U_XOR_I64_A64
    0U,	// ATOMIC_RMW32_U_XOR_I64_A64_S
    0U,	// ATOMIC_RMW8_U_ADD_I32_A32
    0U,	// ATOMIC_RMW8_U_ADD_I32_A32_S
    0U,	// ATOMIC_RMW8_U_ADD_I32_A64
    0U,	// ATOMIC_RMW8_U_ADD_I32_A64_S
    0U,	// ATOMIC_RMW8_U_ADD_I64_A32
    0U,	// ATOMIC_RMW8_U_ADD_I64_A32_S
    0U,	// ATOMIC_RMW8_U_ADD_I64_A64
    0U,	// ATOMIC_RMW8_U_ADD_I64_A64_S
    0U,	// ATOMIC_RMW8_U_AND_I32_A32
    0U,	// ATOMIC_RMW8_U_AND_I32_A32_S
    0U,	// ATOMIC_RMW8_U_AND_I32_A64
    0U,	// ATOMIC_RMW8_U_AND_I32_A64_S
    0U,	// ATOMIC_RMW8_U_AND_I64_A32
    0U,	// ATOMIC_RMW8_U_AND_I64_A32_S
    0U,	// ATOMIC_RMW8_U_AND_I64_A64
    0U,	// ATOMIC_RMW8_U_AND_I64_A64_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW8_U_OR_I32_A32
    0U,	// ATOMIC_RMW8_U_OR_I32_A32_S
    0U,	// ATOMIC_RMW8_U_OR_I32_A64
    0U,	// ATOMIC_RMW8_U_OR_I32_A64_S
    0U,	// ATOMIC_RMW8_U_OR_I64_A32
    0U,	// ATOMIC_RMW8_U_OR_I64_A32_S
    0U,	// ATOMIC_RMW8_U_OR_I64_A64
    0U,	// ATOMIC_RMW8_U_OR_I64_A64_S
    0U,	// ATOMIC_RMW8_U_SUB_I32_A32
    0U,	// ATOMIC_RMW8_U_SUB_I32_A32_S
    0U,	// ATOMIC_RMW8_U_SUB_I32_A64
    0U,	// ATOMIC_RMW8_U_SUB_I32_A64_S
    0U,	// ATOMIC_RMW8_U_SUB_I64_A32
    0U,	// ATOMIC_RMW8_U_SUB_I64_A32_S
    0U,	// ATOMIC_RMW8_U_SUB_I64_A64
    0U,	// ATOMIC_RMW8_U_SUB_I64_A64_S
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A32
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A32_S
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A64
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A64_S
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A32
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A64
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW8_U_XOR_I32_A32
    0U,	// ATOMIC_RMW8_U_XOR_I32_A32_S
    0U,	// ATOMIC_RMW8_U_XOR_I32_A64
    0U,	// ATOMIC_RMW8_U_XOR_I32_A64_S
    0U,	// ATOMIC_RMW8_U_XOR_I64_A32
    0U,	// ATOMIC_RMW8_U_XOR_I64_A32_S
    0U,	// ATOMIC_RMW8_U_XOR_I64_A64
    0U,	// ATOMIC_RMW8_U_XOR_I64_A64_S
    0U,	// ATOMIC_RMW_ADD_I32_A32
    0U,	// ATOMIC_RMW_ADD_I32_A32_S
    0U,	// ATOMIC_RMW_ADD_I32_A64
    0U,	// ATOMIC_RMW_ADD_I32_A64_S
    0U,	// ATOMIC_RMW_ADD_I64_A32
    0U,	// ATOMIC_RMW_ADD_I64_A32_S
    0U,	// ATOMIC_RMW_ADD_I64_A64
    0U,	// ATOMIC_RMW_ADD_I64_A64_S
    0U,	// ATOMIC_RMW_AND_I32_A32
    0U,	// ATOMIC_RMW_AND_I32_A32_S
    0U,	// ATOMIC_RMW_AND_I32_A64
    0U,	// ATOMIC_RMW_AND_I32_A64_S
    0U,	// ATOMIC_RMW_AND_I64_A32
    0U,	// ATOMIC_RMW_AND_I64_A32_S
    0U,	// ATOMIC_RMW_AND_I64_A64
    0U,	// ATOMIC_RMW_AND_I64_A64_S
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A32
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A32_S
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A64
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A64_S
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW_OR_I32_A32
    0U,	// ATOMIC_RMW_OR_I32_A32_S
    0U,	// ATOMIC_RMW_OR_I32_A64
    0U,	// ATOMIC_RMW_OR_I32_A64_S
    0U,	// ATOMIC_RMW_OR_I64_A32
    0U,	// ATOMIC_RMW_OR_I64_A32_S
    0U,	// ATOMIC_RMW_OR_I64_A64
    0U,	// ATOMIC_RMW_OR_I64_A64_S
    0U,	// ATOMIC_RMW_SUB_I32_A32
    0U,	// ATOMIC_RMW_SUB_I32_A32_S
    0U,	// ATOMIC_RMW_SUB_I32_A64
    0U,	// ATOMIC_RMW_SUB_I32_A64_S
    0U,	// ATOMIC_RMW_SUB_I64_A32
    0U,	// ATOMIC_RMW_SUB_I64_A32_S
    0U,	// ATOMIC_RMW_SUB_I64_A64
    0U,	// ATOMIC_RMW_SUB_I64_A64_S
    0U,	// ATOMIC_RMW_XCHG_I32_A32
    0U,	// ATOMIC_RMW_XCHG_I32_A32_S
    0U,	// ATOMIC_RMW_XCHG_I32_A64
    0U,	// ATOMIC_RMW_XCHG_I32_A64_S
    0U,	// ATOMIC_RMW_XCHG_I64_A32
    0U,	// ATOMIC_RMW_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW_XCHG_I64_A64
    0U,	// ATOMIC_RMW_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW_XOR_I32_A32
    0U,	// ATOMIC_RMW_XOR_I32_A32_S
    0U,	// ATOMIC_RMW_XOR_I32_A64
    0U,	// ATOMIC_RMW_XOR_I32_A64_S
    0U,	// ATOMIC_RMW_XOR_I64_A32
    0U,	// ATOMIC_RMW_XOR_I64_A32_S
    0U,	// ATOMIC_RMW_XOR_I64_A64
    0U,	// ATOMIC_RMW_XOR_I64_A64_S
    0U,	// ATOMIC_STORE16_I32_A32
    0U,	// ATOMIC_STORE16_I32_A32_S
    0U,	// ATOMIC_STORE16_I32_A64
    0U,	// ATOMIC_STORE16_I32_A64_S
    0U,	// ATOMIC_STORE16_I64_A32
    0U,	// ATOMIC_STORE16_I64_A32_S
    0U,	// ATOMIC_STORE16_I64_A64
    0U,	// ATOMIC_STORE16_I64_A64_S
    0U,	// ATOMIC_STORE32_I64_A32
    0U,	// ATOMIC_STORE32_I64_A32_S
    0U,	// ATOMIC_STORE32_I64_A64
    0U,	// ATOMIC_STORE32_I64_A64_S
    0U,	// ATOMIC_STORE8_I32_A32
    0U,	// ATOMIC_STORE8_I32_A32_S
    0U,	// ATOMIC_STORE8_I32_A64
    0U,	// ATOMIC_STORE8_I32_A64_S
    0U,	// ATOMIC_STORE8_I64_A32
    0U,	// ATOMIC_STORE8_I64_A32_S
    0U,	// ATOMIC_STORE8_I64_A64
    0U,	// ATOMIC_STORE8_I64_A64_S
    0U,	// ATOMIC_STORE_I32_A32
    0U,	// ATOMIC_STORE_I32_A32_S
    0U,	// ATOMIC_STORE_I32_A64
    0U,	// ATOMIC_STORE_I32_A64_S
    0U,	// ATOMIC_STORE_I64_A32
    0U,	// ATOMIC_STORE_I64_A32_S
    0U,	// ATOMIC_STORE_I64_A64
    0U,	// ATOMIC_STORE_I64_A64_S
    0U,	// AVGR_U_I16x8
    0U,	// AVGR_U_I16x8_S
    0U,	// AVGR_U_I8x16
    0U,	// AVGR_U_I8x16_S
    0U,	// BITMASK_I16x8
    0U,	// BITMASK_I16x8_S
    0U,	// BITMASK_I32x4
    0U,	// BITMASK_I32x4_S
    0U,	// BITMASK_I64x2
    0U,	// BITMASK_I64x2_S
    0U,	// BITMASK_I8x16
    0U,	// BITMASK_I8x16_S
    0U,	// BITSELECT
    0U,	// BITSELECT_S
    0U,	// BLOCK
    0U,	// BLOCK_S
    0U,	// BR
    0U,	// BR_IF
    0U,	// BR_IF_S
    0U,	// BR_S
    0U,	// BR_TABLE_I32
    0U,	// BR_TABLE_I32_S
    0U,	// BR_TABLE_I64
    0U,	// BR_TABLE_I64_S
    0U,	// BR_UNLESS
    0U,	// BR_UNLESS_S
    0U,	// CALL
    0U,	// CALL_INDIRECT
    0U,	// CALL_INDIRECT_S
    0U,	// CALL_S
    0U,	// CATCH
    0U,	// CATCH_ALL
    0U,	// CATCH_ALL_S
    0U,	// CATCH_S
    0U,	// CEIL_F32
    0U,	// CEIL_F32_S
    0U,	// CEIL_F32x4
    0U,	// CEIL_F32x4_S
    0U,	// CEIL_F64
    0U,	// CEIL_F64_S
    0U,	// CEIL_F64x2
    0U,	// CEIL_F64x2_S
    0U,	// CLZ_I32
    0U,	// CLZ_I32_S
    0U,	// CLZ_I64
    0U,	// CLZ_I64_S
    0U,	// CONST_F32
    0U,	// CONST_F32_S
    0U,	// CONST_F64
    0U,	// CONST_F64_S
    0U,	// CONST_I32
    0U,	// CONST_I32_S
    0U,	// CONST_I64
    0U,	// CONST_I64_S
    0U,	// CONST_V128_F32x4
    0U,	// CONST_V128_F32x4_S
    0U,	// CONST_V128_F64x2
    0U,	// CONST_V128_F64x2_S
    0U,	// CONST_V128_I16x8
    0U,	// CONST_V128_I16x8_S
    0U,	// CONST_V128_I32x4
    0U,	// CONST_V128_I32x4_S
    0U,	// CONST_V128_I64x2
    0U,	// CONST_V128_I64x2_S
    0U,	// CONST_V128_I8x16
    0U,	// CONST_V128_I8x16_S
    0U,	// COPYSIGN_F32
    0U,	// COPYSIGN_F32_S
    0U,	// COPYSIGN_F64
    0U,	// COPYSIGN_F64_S
    0U,	// COPY_EXTERNREF
    0U,	// COPY_EXTERNREF_S
    0U,	// COPY_F32
    0U,	// COPY_F32_S
    0U,	// COPY_F64
    0U,	// COPY_F64_S
    0U,	// COPY_FUNCREF
    0U,	// COPY_FUNCREF_S
    0U,	// COPY_I32
    0U,	// COPY_I32_S
    0U,	// COPY_I64
    0U,	// COPY_I64_S
    0U,	// COPY_V128
    0U,	// COPY_V128_S
    0U,	// CTZ_I32
    0U,	// CTZ_I32_S
    0U,	// CTZ_I64
    0U,	// CTZ_I64_S
    0U,	// DEBUG_UNREACHABLE
    0U,	// DEBUG_UNREACHABLE_S
    0U,	// DIV_F32
    0U,	// DIV_F32_S
    0U,	// DIV_F32x4
    0U,	// DIV_F32x4_S
    0U,	// DIV_F64
    0U,	// DIV_F64_S
    0U,	// DIV_F64x2
    0U,	// DIV_F64x2_S
    0U,	// DIV_S_I32
    0U,	// DIV_S_I32_S
    0U,	// DIV_S_I64
    0U,	// DIV_S_I64_S
    0U,	// DIV_U_I32
    0U,	// DIV_U_I32_S
    0U,	// DIV_U_I64
    0U,	// DIV_U_I64_S
    0U,	// DOT
    0U,	// DOT_S
    0U,	// DROP_EXTERNREF
    0U,	// DROP_EXTERNREF_S
    0U,	// DROP_F32
    0U,	// DROP_F32_S
    0U,	// DROP_F64
    0U,	// DROP_F64_S
    0U,	// DROP_FUNCREF
    0U,	// DROP_FUNCREF_S
    0U,	// DROP_I32
    0U,	// DROP_I32_S
    0U,	// DROP_I64
    0U,	// DROP_I64_S
    0U,	// DROP_V128
    0U,	// DROP_V128_S
    0U,	// ELSE
    0U,	// ELSE_S
    0U,	// END
    0U,	// END_BLOCK
    0U,	// END_BLOCK_S
    0U,	// END_FUNCTION
    0U,	// END_FUNCTION_S
    0U,	// END_IF
    0U,	// END_IF_S
    0U,	// END_LOOP
    0U,	// END_LOOP_S
    0U,	// END_S
    0U,	// END_TRY
    0U,	// END_TRY_S
    0U,	// EQZ_I32
    0U,	// EQZ_I32_S
    0U,	// EQZ_I64
    0U,	// EQZ_I64_S
    0U,	// EQ_F32
    0U,	// EQ_F32_S
    0U,	// EQ_F32x4
    0U,	// EQ_F32x4_S
    0U,	// EQ_F64
    0U,	// EQ_F64_S
    0U,	// EQ_F64x2
    0U,	// EQ_F64x2_S
    0U,	// EQ_I16x8
    0U,	// EQ_I16x8_S
    0U,	// EQ_I32
    0U,	// EQ_I32_S
    0U,	// EQ_I32x4
    0U,	// EQ_I32x4_S
    0U,	// EQ_I64
    0U,	// EQ_I64_S
    0U,	// EQ_I8x16
    0U,	// EQ_I8x16_S
    0U,	// EQ_v2i64
    0U,	// EQ_v2i64_S
    0U,	// EXTMUL_HIGH_S_I16x8
    0U,	// EXTMUL_HIGH_S_I16x8_S
    0U,	// EXTMUL_HIGH_S_I32x4
    0U,	// EXTMUL_HIGH_S_I32x4_S
    0U,	// EXTMUL_HIGH_S_I64x2
    0U,	// EXTMUL_HIGH_S_I64x2_S
    0U,	// EXTMUL_HIGH_U_I16x8
    0U,	// EXTMUL_HIGH_U_I16x8_S
    0U,	// EXTMUL_HIGH_U_I32x4
    0U,	// EXTMUL_HIGH_U_I32x4_S
    0U,	// EXTMUL_HIGH_U_I64x2
    0U,	// EXTMUL_HIGH_U_I64x2_S
    0U,	// EXTMUL_LOW_S_I16x8
    0U,	// EXTMUL_LOW_S_I16x8_S
    0U,	// EXTMUL_LOW_S_I32x4
    0U,	// EXTMUL_LOW_S_I32x4_S
    0U,	// EXTMUL_LOW_S_I64x2
    0U,	// EXTMUL_LOW_S_I64x2_S
    0U,	// EXTMUL_LOW_U_I16x8
    0U,	// EXTMUL_LOW_U_I16x8_S
    0U,	// EXTMUL_LOW_U_I32x4
    0U,	// EXTMUL_LOW_U_I32x4_S
    0U,	// EXTMUL_LOW_U_I64x2
    0U,	// EXTMUL_LOW_U_I64x2_S
    0U,	// EXTRACT_LANE_F32x4
    0U,	// EXTRACT_LANE_F32x4_S
    0U,	// EXTRACT_LANE_F64x2
    0U,	// EXTRACT_LANE_F64x2_S
    0U,	// EXTRACT_LANE_I16x8_s
    0U,	// EXTRACT_LANE_I16x8_s_S
    0U,	// EXTRACT_LANE_I16x8_u
    0U,	// EXTRACT_LANE_I16x8_u_S
    0U,	// EXTRACT_LANE_I32x4
    0U,	// EXTRACT_LANE_I32x4_S
    0U,	// EXTRACT_LANE_I64x2
    0U,	// EXTRACT_LANE_I64x2_S
    0U,	// EXTRACT_LANE_I8x16_s
    0U,	// EXTRACT_LANE_I8x16_s_S
    0U,	// EXTRACT_LANE_I8x16_u
    0U,	// EXTRACT_LANE_I8x16_u_S
    0U,	// F32_CONVERT_S_I32
    0U,	// F32_CONVERT_S_I32_S
    0U,	// F32_CONVERT_S_I64
    0U,	// F32_CONVERT_S_I64_S
    0U,	// F32_CONVERT_U_I32
    0U,	// F32_CONVERT_U_I32_S
    0U,	// F32_CONVERT_U_I64
    0U,	// F32_CONVERT_U_I64_S
    0U,	// F32_DEMOTE_F64
    0U,	// F32_DEMOTE_F64_S
    0U,	// F32_REINTERPRET_I32
    0U,	// F32_REINTERPRET_I32_S
    0U,	// F64_CONVERT_S_I32
    0U,	// F64_CONVERT_S_I32_S
    0U,	// F64_CONVERT_S_I64
    0U,	// F64_CONVERT_S_I64_S
    0U,	// F64_CONVERT_U_I32
    0U,	// F64_CONVERT_U_I32_S
    0U,	// F64_CONVERT_U_I64
    0U,	// F64_CONVERT_U_I64_S
    0U,	// F64_PROMOTE_F32
    0U,	// F64_PROMOTE_F32_S
    0U,	// F64_REINTERPRET_I64
    0U,	// F64_REINTERPRET_I64_S
    0U,	// FALLTHROUGH_RETURN
    0U,	// FALLTHROUGH_RETURN_S
    0U,	// FLOOR_F32
    0U,	// FLOOR_F32_S
    0U,	// FLOOR_F32x4
    0U,	// FLOOR_F32x4_S
    0U,	// FLOOR_F64
    0U,	// FLOOR_F64_S
    0U,	// FLOOR_F64x2
    0U,	// FLOOR_F64x2_S
    0U,	// FP_TO_SINT_I32_F32
    0U,	// FP_TO_SINT_I32_F32_S
    0U,	// FP_TO_SINT_I32_F64
    0U,	// FP_TO_SINT_I32_F64_S
    0U,	// FP_TO_SINT_I64_F32
    0U,	// FP_TO_SINT_I64_F32_S
    0U,	// FP_TO_SINT_I64_F64
    0U,	// FP_TO_SINT_I64_F64_S
    0U,	// FP_TO_UINT_I32_F32
    0U,	// FP_TO_UINT_I32_F32_S
    0U,	// FP_TO_UINT_I32_F64
    0U,	// FP_TO_UINT_I32_F64_S
    0U,	// FP_TO_UINT_I64_F32
    0U,	// FP_TO_UINT_I64_F32_S
    0U,	// FP_TO_UINT_I64_F64
    0U,	// FP_TO_UINT_I64_F64_S
    0U,	// GE_F32
    0U,	// GE_F32_S
    0U,	// GE_F32x4
    0U,	// GE_F32x4_S
    0U,	// GE_F64
    0U,	// GE_F64_S
    0U,	// GE_F64x2
    0U,	// GE_F64x2_S
    0U,	// GE_S_I16x8
    0U,	// GE_S_I16x8_S
    0U,	// GE_S_I32
    0U,	// GE_S_I32_S
    0U,	// GE_S_I32x4
    0U,	// GE_S_I32x4_S
    0U,	// GE_S_I64
    0U,	// GE_S_I64_S
    0U,	// GE_S_I8x16
    0U,	// GE_S_I8x16_S
    0U,	// GE_U_I16x8
    0U,	// GE_U_I16x8_S
    0U,	// GE_U_I32
    0U,	// GE_U_I32_S
    0U,	// GE_U_I32x4
    0U,	// GE_U_I32x4_S
    0U,	// GE_U_I64
    0U,	// GE_U_I64_S
    0U,	// GE_U_I8x16
    0U,	// GE_U_I8x16_S
    0U,	// GLOBAL_GET_EXTERNREF
    0U,	// GLOBAL_GET_EXTERNREF_S
    0U,	// GLOBAL_GET_F32
    0U,	// GLOBAL_GET_F32_S
    0U,	// GLOBAL_GET_F64
    0U,	// GLOBAL_GET_F64_S
    0U,	// GLOBAL_GET_FUNCREF
    0U,	// GLOBAL_GET_FUNCREF_S
    0U,	// GLOBAL_GET_I32
    0U,	// GLOBAL_GET_I32_S
    0U,	// GLOBAL_GET_I64
    0U,	// GLOBAL_GET_I64_S
    0U,	// GLOBAL_GET_V128
    0U,	// GLOBAL_GET_V128_S
    0U,	// GLOBAL_SET_EXTERNREF
    0U,	// GLOBAL_SET_EXTERNREF_S
    0U,	// GLOBAL_SET_F32
    0U,	// GLOBAL_SET_F32_S
    0U,	// GLOBAL_SET_F64
    0U,	// GLOBAL_SET_F64_S
    0U,	// GLOBAL_SET_FUNCREF
    0U,	// GLOBAL_SET_FUNCREF_S
    0U,	// GLOBAL_SET_I32
    0U,	// GLOBAL_SET_I32_S
    0U,	// GLOBAL_SET_I64
    0U,	// GLOBAL_SET_I64_S
    0U,	// GLOBAL_SET_V128
    0U,	// GLOBAL_SET_V128_S
    0U,	// GT_F32
    0U,	// GT_F32_S
    0U,	// GT_F32x4
    0U,	// GT_F32x4_S
    0U,	// GT_F64
    0U,	// GT_F64_S
    0U,	// GT_F64x2
    0U,	// GT_F64x2_S
    0U,	// GT_S_I16x8
    0U,	// GT_S_I16x8_S
    0U,	// GT_S_I32
    0U,	// GT_S_I32_S
    0U,	// GT_S_I32x4
    0U,	// GT_S_I32x4_S
    0U,	// GT_S_I64
    0U,	// GT_S_I64_S
    0U,	// GT_S_I8x16
    0U,	// GT_S_I8x16_S
    0U,	// GT_U_I16x8
    0U,	// GT_U_I16x8_S
    0U,	// GT_U_I32
    0U,	// GT_U_I32_S
    0U,	// GT_U_I32x4
    0U,	// GT_U_I32x4_S
    0U,	// GT_U_I64
    0U,	// GT_U_I64_S
    0U,	// GT_U_I8x16
    0U,	// GT_U_I8x16_S
    0U,	// I32_EXTEND16_S_I32
    0U,	// I32_EXTEND16_S_I32_S
    0U,	// I32_EXTEND8_S_I32
    0U,	// I32_EXTEND8_S_I32_S
    0U,	// I32_REINTERPRET_F32
    0U,	// I32_REINTERPRET_F32_S
    0U,	// I32_TRUNC_S_F32
    0U,	// I32_TRUNC_S_F32_S
    0U,	// I32_TRUNC_S_F64
    0U,	// I32_TRUNC_S_F64_S
    0U,	// I32_TRUNC_S_SAT_F32
    0U,	// I32_TRUNC_S_SAT_F32_S
    0U,	// I32_TRUNC_S_SAT_F64
    0U,	// I32_TRUNC_S_SAT_F64_S
    0U,	// I32_TRUNC_U_F32
    0U,	// I32_TRUNC_U_F32_S
    0U,	// I32_TRUNC_U_F64
    0U,	// I32_TRUNC_U_F64_S
    0U,	// I32_TRUNC_U_SAT_F32
    0U,	// I32_TRUNC_U_SAT_F32_S
    0U,	// I32_TRUNC_U_SAT_F64
    0U,	// I32_TRUNC_U_SAT_F64_S
    0U,	// I32_WRAP_I64
    0U,	// I32_WRAP_I64_S
    0U,	// I64_EXTEND16_S_I64
    0U,	// I64_EXTEND16_S_I64_S
    0U,	// I64_EXTEND32_S_I64
    0U,	// I64_EXTEND32_S_I64_S
    0U,	// I64_EXTEND8_S_I64
    0U,	// I64_EXTEND8_S_I64_S
    0U,	// I64_EXTEND_S_I32
    0U,	// I64_EXTEND_S_I32_S
    0U,	// I64_EXTEND_U_I32
    0U,	// I64_EXTEND_U_I32_S
    0U,	// I64_REINTERPRET_F64
    0U,	// I64_REINTERPRET_F64_S
    0U,	// I64_TRUNC_S_F32
    0U,	// I64_TRUNC_S_F32_S
    0U,	// I64_TRUNC_S_F64
    0U,	// I64_TRUNC_S_F64_S
    0U,	// I64_TRUNC_S_SAT_F32
    0U,	// I64_TRUNC_S_SAT_F32_S
    0U,	// I64_TRUNC_S_SAT_F64
    0U,	// I64_TRUNC_S_SAT_F64_S
    0U,	// I64_TRUNC_U_F32
    0U,	// I64_TRUNC_U_F32_S
    0U,	// I64_TRUNC_U_F64
    0U,	// I64_TRUNC_U_F64_S
    0U,	// I64_TRUNC_U_SAT_F32
    0U,	// I64_TRUNC_U_SAT_F32_S
    0U,	// I64_TRUNC_U_SAT_F64
    0U,	// I64_TRUNC_U_SAT_F64_S
    0U,	// IF
    0U,	// IF_S
    0U,	// LE_F32
    0U,	// LE_F32_S
    0U,	// LE_F32x4
    0U,	// LE_F32x4_S
    0U,	// LE_F64
    0U,	// LE_F64_S
    0U,	// LE_F64x2
    0U,	// LE_F64x2_S
    0U,	// LE_S_I16x8
    0U,	// LE_S_I16x8_S
    0U,	// LE_S_I32
    0U,	// LE_S_I32_S
    0U,	// LE_S_I32x4
    0U,	// LE_S_I32x4_S
    0U,	// LE_S_I64
    0U,	// LE_S_I64_S
    0U,	// LE_S_I8x16
    0U,	// LE_S_I8x16_S
    0U,	// LE_U_I16x8
    0U,	// LE_U_I16x8_S
    0U,	// LE_U_I32
    0U,	// LE_U_I32_S
    0U,	// LE_U_I32x4
    0U,	// LE_U_I32x4_S
    0U,	// LE_U_I64
    0U,	// LE_U_I64_S
    0U,	// LE_U_I8x16
    0U,	// LE_U_I8x16_S
    0U,	// LOAD16_SPLAT_A32
    0U,	// LOAD16_SPLAT_A32_S
    0U,	// LOAD16_SPLAT_A64
    0U,	// LOAD16_SPLAT_A64_S
    0U,	// LOAD16_S_I32_A32
    0U,	// LOAD16_S_I32_A32_S
    0U,	// LOAD16_S_I32_A64
    0U,	// LOAD16_S_I32_A64_S
    0U,	// LOAD16_S_I64_A32
    0U,	// LOAD16_S_I64_A32_S
    0U,	// LOAD16_S_I64_A64
    0U,	// LOAD16_S_I64_A64_S
    0U,	// LOAD16_U_I32_A32
    0U,	// LOAD16_U_I32_A32_S
    0U,	// LOAD16_U_I32_A64
    0U,	// LOAD16_U_I32_A64_S
    0U,	// LOAD16_U_I64_A32
    0U,	// LOAD16_U_I64_A32_S
    0U,	// LOAD16_U_I64_A64
    0U,	// LOAD16_U_I64_A64_S
    0U,	// LOAD32_SPLAT_A32
    0U,	// LOAD32_SPLAT_A32_S
    0U,	// LOAD32_SPLAT_A64
    0U,	// LOAD32_SPLAT_A64_S
    0U,	// LOAD32_S_I64_A32
    0U,	// LOAD32_S_I64_A32_S
    0U,	// LOAD32_S_I64_A64
    0U,	// LOAD32_S_I64_A64_S
    0U,	// LOAD32_U_I64_A32
    0U,	// LOAD32_U_I64_A32_S
    0U,	// LOAD32_U_I64_A64
    0U,	// LOAD32_U_I64_A64_S
    0U,	// LOAD64_SPLAT_A32
    0U,	// LOAD64_SPLAT_A32_S
    0U,	// LOAD64_SPLAT_A64
    0U,	// LOAD64_SPLAT_A64_S
    0U,	// LOAD8_SPLAT_A32
    0U,	// LOAD8_SPLAT_A32_S
    0U,	// LOAD8_SPLAT_A64
    0U,	// LOAD8_SPLAT_A64_S
    0U,	// LOAD8_S_I32_A32
    0U,	// LOAD8_S_I32_A32_S
    0U,	// LOAD8_S_I32_A64
    0U,	// LOAD8_S_I32_A64_S
    0U,	// LOAD8_S_I64_A32
    0U,	// LOAD8_S_I64_A32_S
    0U,	// LOAD8_S_I64_A64
    0U,	// LOAD8_S_I64_A64_S
    0U,	// LOAD8_U_I32_A32
    0U,	// LOAD8_U_I32_A32_S
    0U,	// LOAD8_U_I32_A64
    0U,	// LOAD8_U_I32_A64_S
    0U,	// LOAD8_U_I64_A32
    0U,	// LOAD8_U_I64_A32_S
    0U,	// LOAD8_U_I64_A64
    0U,	// LOAD8_U_I64_A64_S
    0U,	// LOAD_EXTEND_S_I16x8_A32
    0U,	// LOAD_EXTEND_S_I16x8_A32_S
    0U,	// LOAD_EXTEND_S_I16x8_A64
    0U,	// LOAD_EXTEND_S_I16x8_A64_S
    0U,	// LOAD_EXTEND_S_I32x4_A32
    0U,	// LOAD_EXTEND_S_I32x4_A32_S
    0U,	// LOAD_EXTEND_S_I32x4_A64
    0U,	// LOAD_EXTEND_S_I32x4_A64_S
    0U,	// LOAD_EXTEND_S_I64x2_A32
    0U,	// LOAD_EXTEND_S_I64x2_A32_S
    0U,	// LOAD_EXTEND_S_I64x2_A64
    0U,	// LOAD_EXTEND_S_I64x2_A64_S
    0U,	// LOAD_EXTEND_U_I16x8_A32
    0U,	// LOAD_EXTEND_U_I16x8_A32_S
    0U,	// LOAD_EXTEND_U_I16x8_A64
    0U,	// LOAD_EXTEND_U_I16x8_A64_S
    0U,	// LOAD_EXTEND_U_I32x4_A32
    0U,	// LOAD_EXTEND_U_I32x4_A32_S
    0U,	// LOAD_EXTEND_U_I32x4_A64
    0U,	// LOAD_EXTEND_U_I32x4_A64_S
    0U,	// LOAD_EXTEND_U_I64x2_A32
    0U,	// LOAD_EXTEND_U_I64x2_A32_S
    0U,	// LOAD_EXTEND_U_I64x2_A64
    0U,	// LOAD_EXTEND_U_I64x2_A64_S
    0U,	// LOAD_F32_A32
    0U,	// LOAD_F32_A32_S
    0U,	// LOAD_F32_A64
    0U,	// LOAD_F32_A64_S
    0U,	// LOAD_F64_A32
    0U,	// LOAD_F64_A32_S
    0U,	// LOAD_F64_A64
    0U,	// LOAD_F64_A64_S
    0U,	// LOAD_I32_A32
    0U,	// LOAD_I32_A32_S
    0U,	// LOAD_I32_A64
    0U,	// LOAD_I32_A64_S
    0U,	// LOAD_I64_A32
    0U,	// LOAD_I64_A32_S
    0U,	// LOAD_I64_A64
    0U,	// LOAD_I64_A64_S
    0U,	// LOAD_LANE_I16x8_A32
    0U,	// LOAD_LANE_I16x8_A32_S
    0U,	// LOAD_LANE_I16x8_A64
    0U,	// LOAD_LANE_I16x8_A64_S
    0U,	// LOAD_LANE_I32x4_A32
    0U,	// LOAD_LANE_I32x4_A32_S
    0U,	// LOAD_LANE_I32x4_A64
    0U,	// LOAD_LANE_I32x4_A64_S
    0U,	// LOAD_LANE_I64x2_A32
    0U,	// LOAD_LANE_I64x2_A32_S
    0U,	// LOAD_LANE_I64x2_A64
    0U,	// LOAD_LANE_I64x2_A64_S
    0U,	// LOAD_LANE_I8x16_A32
    0U,	// LOAD_LANE_I8x16_A32_S
    0U,	// LOAD_LANE_I8x16_A64
    0U,	// LOAD_LANE_I8x16_A64_S
    0U,	// LOAD_V128_A32
    0U,	// LOAD_V128_A32_S
    0U,	// LOAD_V128_A64
    0U,	// LOAD_V128_A64_S
    0U,	// LOAD_ZERO_I32x4_A32
    0U,	// LOAD_ZERO_I32x4_A32_S
    0U,	// LOAD_ZERO_I32x4_A64
    0U,	// LOAD_ZERO_I32x4_A64_S
    0U,	// LOAD_ZERO_I64x2_A32
    0U,	// LOAD_ZERO_I64x2_A32_S
    0U,	// LOAD_ZERO_I64x2_A64
    0U,	// LOAD_ZERO_I64x2_A64_S
    0U,	// LOCAL_GET_EXTERNREF
    0U,	// LOCAL_GET_EXTERNREF_S
    0U,	// LOCAL_GET_F32
    0U,	// LOCAL_GET_F32_S
    0U,	// LOCAL_GET_F64
    0U,	// LOCAL_GET_F64_S
    0U,	// LOCAL_GET_FUNCREF
    0U,	// LOCAL_GET_FUNCREF_S
    0U,	// LOCAL_GET_I32
    0U,	// LOCAL_GET_I32_S
    0U,	// LOCAL_GET_I64
    0U,	// LOCAL_GET_I64_S
    0U,	// LOCAL_GET_V128
    0U,	// LOCAL_GET_V128_S
    0U,	// LOCAL_SET_EXTERNREF
    0U,	// LOCAL_SET_EXTERNREF_S
    0U,	// LOCAL_SET_F32
    0U,	// LOCAL_SET_F32_S
    0U,	// LOCAL_SET_F64
    0U,	// LOCAL_SET_F64_S
    0U,	// LOCAL_SET_FUNCREF
    0U,	// LOCAL_SET_FUNCREF_S
    0U,	// LOCAL_SET_I32
    0U,	// LOCAL_SET_I32_S
    0U,	// LOCAL_SET_I64
    0U,	// LOCAL_SET_I64_S
    0U,	// LOCAL_SET_V128
    0U,	// LOCAL_SET_V128_S
    0U,	// LOCAL_TEE_EXTERNREF
    0U,	// LOCAL_TEE_EXTERNREF_S
    0U,	// LOCAL_TEE_F32
    0U,	// LOCAL_TEE_F32_S
    0U,	// LOCAL_TEE_F64
    0U,	// LOCAL_TEE_F64_S
    0U,	// LOCAL_TEE_FUNCREF
    0U,	// LOCAL_TEE_FUNCREF_S
    0U,	// LOCAL_TEE_I32
    0U,	// LOCAL_TEE_I32_S
    0U,	// LOCAL_TEE_I64
    0U,	// LOCAL_TEE_I64_S
    0U,	// LOCAL_TEE_V128
    0U,	// LOCAL_TEE_V128_S
    0U,	// LOOP
    0U,	// LOOP_S
    0U,	// LT_F32
    0U,	// LT_F32_S
    0U,	// LT_F32x4
    0U,	// LT_F32x4_S
    0U,	// LT_F64
    0U,	// LT_F64_S
    0U,	// LT_F64x2
    0U,	// LT_F64x2_S
    0U,	// LT_S_I16x8
    0U,	// LT_S_I16x8_S
    0U,	// LT_S_I32
    0U,	// LT_S_I32_S
    0U,	// LT_S_I32x4
    0U,	// LT_S_I32x4_S
    0U,	// LT_S_I64
    0U,	// LT_S_I64_S
    0U,	// LT_S_I8x16
    0U,	// LT_S_I8x16_S
    0U,	// LT_U_I16x8
    0U,	// LT_U_I16x8_S
    0U,	// LT_U_I32
    0U,	// LT_U_I32_S
    0U,	// LT_U_I32x4
    0U,	// LT_U_I32x4_S
    0U,	// LT_U_I64
    0U,	// LT_U_I64_S
    0U,	// LT_U_I8x16
    0U,	// LT_U_I8x16_S
    0U,	// MAX_F32
    0U,	// MAX_F32_S
    0U,	// MAX_F32x4
    0U,	// MAX_F32x4_S
    0U,	// MAX_F64
    0U,	// MAX_F64_S
    0U,	// MAX_F64x2
    0U,	// MAX_F64x2_S
    0U,	// MAX_S_I16x8
    0U,	// MAX_S_I16x8_S
    0U,	// MAX_S_I32x4
    0U,	// MAX_S_I32x4_S
    0U,	// MAX_S_I8x16
    0U,	// MAX_S_I8x16_S
    0U,	// MAX_U_I16x8
    0U,	// MAX_U_I16x8_S
    0U,	// MAX_U_I32x4
    0U,	// MAX_U_I32x4_S
    0U,	// MAX_U_I8x16
    0U,	// MAX_U_I8x16_S
    0U,	// MEMORY_ATOMIC_NOTIFY_A32
    0U,	// MEMORY_ATOMIC_NOTIFY_A32_S
    0U,	// MEMORY_ATOMIC_NOTIFY_A64
    0U,	// MEMORY_ATOMIC_NOTIFY_A64_S
    0U,	// MEMORY_ATOMIC_WAIT32_A32
    0U,	// MEMORY_ATOMIC_WAIT32_A32_S
    0U,	// MEMORY_ATOMIC_WAIT32_A64
    0U,	// MEMORY_ATOMIC_WAIT32_A64_S
    0U,	// MEMORY_ATOMIC_WAIT64_A32
    0U,	// MEMORY_ATOMIC_WAIT64_A32_S
    0U,	// MEMORY_ATOMIC_WAIT64_A64
    0U,	// MEMORY_ATOMIC_WAIT64_A64_S
    0U,	// MIN_F32
    0U,	// MIN_F32_S
    0U,	// MIN_F32x4
    0U,	// MIN_F32x4_S
    0U,	// MIN_F64
    0U,	// MIN_F64_S
    0U,	// MIN_F64x2
    0U,	// MIN_F64x2_S
    0U,	// MIN_S_I16x8
    0U,	// MIN_S_I16x8_S
    0U,	// MIN_S_I32x4
    0U,	// MIN_S_I32x4_S
    0U,	// MIN_S_I8x16
    0U,	// MIN_S_I8x16_S
    0U,	// MIN_U_I16x8
    0U,	// MIN_U_I16x8_S
    0U,	// MIN_U_I32x4
    0U,	// MIN_U_I32x4_S
    0U,	// MIN_U_I8x16
    0U,	// MIN_U_I8x16_S
    0U,	// MUL_F32
    0U,	// MUL_F32_S
    0U,	// MUL_F32x4
    0U,	// MUL_F32x4_S
    0U,	// MUL_F64
    0U,	// MUL_F64_S
    0U,	// MUL_F64x2
    0U,	// MUL_F64x2_S
    0U,	// MUL_I16x8
    0U,	// MUL_I16x8_S
    0U,	// MUL_I32
    0U,	// MUL_I32_S
    0U,	// MUL_I32x4
    0U,	// MUL_I32x4_S
    0U,	// MUL_I64
    0U,	// MUL_I64_S
    0U,	// MUL_I64x2
    0U,	// MUL_I64x2_S
    0U,	// NARROW_S_I16x8
    0U,	// NARROW_S_I16x8_S
    0U,	// NARROW_S_I8x16
    0U,	// NARROW_S_I8x16_S
    0U,	// NARROW_U_I16x8
    0U,	// NARROW_U_I16x8_S
    0U,	// NARROW_U_I8x16
    0U,	// NARROW_U_I8x16_S
    0U,	// NEAREST_F32
    0U,	// NEAREST_F32_S
    0U,	// NEAREST_F32x4
    0U,	// NEAREST_F32x4_S
    0U,	// NEAREST_F64
    0U,	// NEAREST_F64_S
    0U,	// NEAREST_F64x2
    0U,	// NEAREST_F64x2_S
    0U,	// NEG_F32
    0U,	// NEG_F32_S
    0U,	// NEG_F32x4
    0U,	// NEG_F32x4_S
    0U,	// NEG_F64
    0U,	// NEG_F64_S
    0U,	// NEG_F64x2
    0U,	// NEG_F64x2_S
    0U,	// NEG_I16x8
    0U,	// NEG_I16x8_S
    0U,	// NEG_I32x4
    0U,	// NEG_I32x4_S
    0U,	// NEG_I64x2
    0U,	// NEG_I64x2_S
    0U,	// NEG_I8x16
    0U,	// NEG_I8x16_S
    0U,	// NE_F32
    0U,	// NE_F32_S
    0U,	// NE_F32x4
    0U,	// NE_F32x4_S
    0U,	// NE_F64
    0U,	// NE_F64_S
    0U,	// NE_F64x2
    0U,	// NE_F64x2_S
    0U,	// NE_I16x8
    0U,	// NE_I16x8_S
    0U,	// NE_I32
    0U,	// NE_I32_S
    0U,	// NE_I32x4
    0U,	// NE_I32x4_S
    0U,	// NE_I64
    0U,	// NE_I64_S
    0U,	// NE_I8x16
    0U,	// NE_I8x16_S
    0U,	// NOP
    0U,	// NOP_S
    0U,	// NOT
    0U,	// NOT_S
    0U,	// OR
    0U,	// OR_I32
    0U,	// OR_I32_S
    0U,	// OR_I64
    0U,	// OR_I64_S
    0U,	// OR_S
    0U,	// PMAX_F32x4
    0U,	// PMAX_F32x4_S
    0U,	// PMAX_F64x2
    0U,	// PMAX_F64x2_S
    0U,	// PMIN_F32x4
    0U,	// PMIN_F32x4_S
    0U,	// PMIN_F64x2
    0U,	// PMIN_F64x2_S
    0U,	// POPCNT_I32
    0U,	// POPCNT_I32_S
    0U,	// POPCNT_I64
    0U,	// POPCNT_I64_S
    0U,	// POPCNT_I8x16
    0U,	// POPCNT_I8x16_S
    0U,	// PREFETCH_NT_A32
    0U,	// PREFETCH_NT_A32_S
    0U,	// PREFETCH_NT_A64
    0U,	// PREFETCH_NT_A64_S
    0U,	// PREFETCH_T_A32
    0U,	// PREFETCH_T_A32_S
    0U,	// PREFETCH_T_A64
    0U,	// PREFETCH_T_A64_S
    0U,	// Q15MULR_SAT_S_I16x8
    0U,	// Q15MULR_SAT_S_I16x8_S
    0U,	// QFMA_F32x4
    0U,	// QFMA_F32x4_S
    0U,	// QFMA_F64x2
    0U,	// QFMA_F64x2_S
    0U,	// QFMS_F32x4
    0U,	// QFMS_F32x4_S
    0U,	// QFMS_F64x2
    0U,	// QFMS_F64x2_S
    0U,	// REF_NULL_EXTERNREF
    0U,	// REF_NULL_EXTERNREF_S
    0U,	// REF_NULL_FUNCREF
    0U,	// REF_NULL_FUNCREF_S
    0U,	// REM_S_I32
    0U,	// REM_S_I32_S
    0U,	// REM_S_I64
    0U,	// REM_S_I64_S
    0U,	// REM_U_I32
    0U,	// REM_U_I32_S
    0U,	// REM_U_I64
    0U,	// REM_U_I64_S
    0U,	// REPLACE_LANE_F32x4
    0U,	// REPLACE_LANE_F32x4_S
    0U,	// REPLACE_LANE_F64x2
    0U,	// REPLACE_LANE_F64x2_S
    0U,	// REPLACE_LANE_I16x8
    0U,	// REPLACE_LANE_I16x8_S
    0U,	// REPLACE_LANE_I32x4
    0U,	// REPLACE_LANE_I32x4_S
    0U,	// REPLACE_LANE_I64x2
    0U,	// REPLACE_LANE_I64x2_S
    0U,	// REPLACE_LANE_I8x16
    0U,	// REPLACE_LANE_I8x16_S
    0U,	// RETHROW
    0U,	// RETHROW_S
    0U,	// RETURN
    0U,	// RETURN_S
    0U,	// RET_CALL
    0U,	// RET_CALL_INDIRECT
    0U,	// RET_CALL_INDIRECT_S
    0U,	// RET_CALL_S
    0U,	// ROTL_I32
    0U,	// ROTL_I32_S
    0U,	// ROTL_I64
    0U,	// ROTL_I64_S
    0U,	// ROTR_I32
    0U,	// ROTR_I32_S
    0U,	// ROTR_I64
    0U,	// ROTR_I64_S
    0U,	// SELECT_EXTERNREF
    0U,	// SELECT_EXTERNREF_S
    0U,	// SELECT_F32
    0U,	// SELECT_F32_S
    0U,	// SELECT_F64
    0U,	// SELECT_F64_S
    0U,	// SELECT_FUNCREF
    0U,	// SELECT_FUNCREF_S
    0U,	// SELECT_I32
    0U,	// SELECT_I32_S
    0U,	// SELECT_I64
    0U,	// SELECT_I64_S
    0U,	// SELECT_V128
    0U,	// SELECT_V128_S
    0U,	// SHL_I16x8
    0U,	// SHL_I16x8_S
    0U,	// SHL_I32
    0U,	// SHL_I32_S
    0U,	// SHL_I32x4
    0U,	// SHL_I32x4_S
    0U,	// SHL_I64
    0U,	// SHL_I64_S
    0U,	// SHL_I64x2
    0U,	// SHL_I64x2_S
    0U,	// SHL_I8x16
    0U,	// SHL_I8x16_S
    0U,	// SHR_S_I16x8
    0U,	// SHR_S_I16x8_S
    0U,	// SHR_S_I32
    0U,	// SHR_S_I32_S
    0U,	// SHR_S_I32x4
    0U,	// SHR_S_I32x4_S
    0U,	// SHR_S_I64
    0U,	// SHR_S_I64_S
    0U,	// SHR_S_I64x2
    0U,	// SHR_S_I64x2_S
    0U,	// SHR_S_I8x16
    0U,	// SHR_S_I8x16_S
    0U,	// SHR_U_I16x8
    0U,	// SHR_U_I16x8_S
    0U,	// SHR_U_I32
    0U,	// SHR_U_I32_S
    0U,	// SHR_U_I32x4
    0U,	// SHR_U_I32x4_S
    0U,	// SHR_U_I64
    0U,	// SHR_U_I64_S
    0U,	// SHR_U_I64x2
    0U,	// SHR_U_I64x2_S
    0U,	// SHR_U_I8x16
    0U,	// SHR_U_I8x16_S
    1U,	// SHUFFLE
    0U,	// SHUFFLE_S
    0U,	// SPLAT_F32x4
    0U,	// SPLAT_F32x4_S
    0U,	// SPLAT_F64x2
    0U,	// SPLAT_F64x2_S
    0U,	// SPLAT_I16x8
    0U,	// SPLAT_I16x8_S
    0U,	// SPLAT_I32x4
    0U,	// SPLAT_I32x4_S
    0U,	// SPLAT_I64x2
    0U,	// SPLAT_I64x2_S
    0U,	// SPLAT_I8x16
    0U,	// SPLAT_I8x16_S
    0U,	// SQRT_F32
    0U,	// SQRT_F32_S
    0U,	// SQRT_F32x4
    0U,	// SQRT_F32x4_S
    0U,	// SQRT_F64
    0U,	// SQRT_F64_S
    0U,	// SQRT_F64x2
    0U,	// SQRT_F64x2_S
    0U,	// STORE16_I32_A32
    0U,	// STORE16_I32_A32_S
    0U,	// STORE16_I32_A64
    0U,	// STORE16_I32_A64_S
    0U,	// STORE16_I64_A32
    0U,	// STORE16_I64_A32_S
    0U,	// STORE16_I64_A64
    0U,	// STORE16_I64_A64_S
    0U,	// STORE32_I64_A32
    0U,	// STORE32_I64_A32_S
    0U,	// STORE32_I64_A64
    0U,	// STORE32_I64_A64_S
    0U,	// STORE8_I32_A32
    0U,	// STORE8_I32_A32_S
    0U,	// STORE8_I32_A64
    0U,	// STORE8_I32_A64_S
    0U,	// STORE8_I64_A32
    0U,	// STORE8_I64_A32_S
    0U,	// STORE8_I64_A64
    0U,	// STORE8_I64_A64_S
    0U,	// STORE_F32_A32
    0U,	// STORE_F32_A32_S
    0U,	// STORE_F32_A64
    0U,	// STORE_F32_A64_S
    0U,	// STORE_F64_A32
    0U,	// STORE_F64_A32_S
    0U,	// STORE_F64_A64
    0U,	// STORE_F64_A64_S
    0U,	// STORE_I32_A32
    0U,	// STORE_I32_A32_S
    0U,	// STORE_I32_A64
    0U,	// STORE_I32_A64_S
    0U,	// STORE_I64_A32
    0U,	// STORE_I64_A32_S
    0U,	// STORE_I64_A64
    0U,	// STORE_I64_A64_S
    0U,	// STORE_LANE_I16x8_A32
    0U,	// STORE_LANE_I16x8_A32_S
    0U,	// STORE_LANE_I16x8_A64
    0U,	// STORE_LANE_I16x8_A64_S
    0U,	// STORE_LANE_I32x4_A32
    0U,	// STORE_LANE_I32x4_A32_S
    0U,	// STORE_LANE_I32x4_A64
    0U,	// STORE_LANE_I32x4_A64_S
    0U,	// STORE_LANE_I64x2_A32
    0U,	// STORE_LANE_I64x2_A32_S
    0U,	// STORE_LANE_I64x2_A64
    0U,	// STORE_LANE_I64x2_A64_S
    0U,	// STORE_LANE_I8x16_A32
    0U,	// STORE_LANE_I8x16_A32_S
    0U,	// STORE_LANE_I8x16_A64
    0U,	// STORE_LANE_I8x16_A64_S
    0U,	// STORE_V128_A32
    0U,	// STORE_V128_A32_S
    0U,	// STORE_V128_A64
    0U,	// STORE_V128_A64_S
    0U,	// SUB_F32
    0U,	// SUB_F32_S
    0U,	// SUB_F32x4
    0U,	// SUB_F32x4_S
    0U,	// SUB_F64
    0U,	// SUB_F64_S
    0U,	// SUB_F64x2
    0U,	// SUB_F64x2_S
    0U,	// SUB_I16x8
    0U,	// SUB_I16x8_S
    0U,	// SUB_I32
    0U,	// SUB_I32_S
    0U,	// SUB_I32x4
    0U,	// SUB_I32x4_S
    0U,	// SUB_I64
    0U,	// SUB_I64_S
    0U,	// SUB_I64x2
    0U,	// SUB_I64x2_S
    0U,	// SUB_I8x16
    0U,	// SUB_I8x16_S
    0U,	// SUB_SAT_S_I16x8
    0U,	// SUB_SAT_S_I16x8_S
    0U,	// SUB_SAT_S_I8x16
    0U,	// SUB_SAT_S_I8x16_S
    0U,	// SUB_SAT_U_I16x8
    0U,	// SUB_SAT_U_I16x8_S
    0U,	// SUB_SAT_U_I8x16
    0U,	// SUB_SAT_U_I8x16_S
    0U,	// SWIZZLE
    0U,	// SWIZZLE_S
    0U,	// TABLE_COPY
    0U,	// TABLE_COPY_S
    0U,	// TABLE_FILL_EXTERNREF
    0U,	// TABLE_FILL_EXTERNREF_S
    0U,	// TABLE_FILL_FUNCREF
    0U,	// TABLE_FILL_FUNCREF_S
    0U,	// TABLE_GET_EXTERNREF
    0U,	// TABLE_GET_EXTERNREF_S
    0U,	// TABLE_GET_FUNCREF
    0U,	// TABLE_GET_FUNCREF_S
    0U,	// TABLE_GROW_EXTERNREF
    0U,	// TABLE_GROW_EXTERNREF_S
    0U,	// TABLE_GROW_FUNCREF
    0U,	// TABLE_GROW_FUNCREF_S
    0U,	// TABLE_SET_EXTERNREF
    0U,	// TABLE_SET_EXTERNREF_S
    0U,	// TABLE_SET_FUNCREF
    0U,	// TABLE_SET_FUNCREF_S
    0U,	// TABLE_SIZE
    0U,	// TABLE_SIZE_S
    0U,	// TEE_EXTERNREF
    0U,	// TEE_EXTERNREF_S
    0U,	// TEE_F32
    0U,	// TEE_F32_S
    0U,	// TEE_F64
    0U,	// TEE_F64_S
    0U,	// TEE_FUNCREF
    0U,	// TEE_FUNCREF_S
    0U,	// TEE_I32
    0U,	// TEE_I32_S
    0U,	// TEE_I64
    0U,	// TEE_I64_S
    0U,	// TEE_V128
    0U,	// TEE_V128_S
    0U,	// THROW
    0U,	// THROW_S
    0U,	// TRUNC_F32
    0U,	// TRUNC_F32_S
    0U,	// TRUNC_F32x4
    0U,	// TRUNC_F32x4_S
    0U,	// TRUNC_F64
    0U,	// TRUNC_F64_S
    0U,	// TRUNC_F64x2
    0U,	// TRUNC_F64x2_S
    0U,	// TRY
    0U,	// TRY_S
    0U,	// UNREACHABLE
    0U,	// UNREACHABLE_S
    0U,	// XOR
    0U,	// XOR_I32
    0U,	// XOR_I32_S
    0U,	// XOR_I64
    0U,	// XOR_I64_S
    0U,	// XOR_S
    0U,	// anonymous_2715MEMORY_GROW_A32
    0U,	// anonymous_2715MEMORY_GROW_A32_S
    0U,	// anonymous_2715MEMORY_SIZE_A32
    0U,	// anonymous_2715MEMORY_SIZE_A32_S
    0U,	// anonymous_2716MEMORY_GROW_A64
    0U,	// anonymous_2716MEMORY_GROW_A64_S
    0U,	// anonymous_2716MEMORY_SIZE_A64
    0U,	// anonymous_2716MEMORY_SIZE_A64_S
    0U,	// anonymous_4462SIGNSELECT_I8x16
    0U,	// anonymous_4462SIGNSELECT_I8x16_S
    0U,	// anonymous_4463SIGNSELECT_I16x8
    0U,	// anonymous_4463SIGNSELECT_I16x8_S
    0U,	// anonymous_4464SIGNSELECT_I32x4
    0U,	// anonymous_4464SIGNSELECT_I32x4_S
    0U,	// anonymous_4465SIGNSELECT_I64x2
    0U,	// anonymous_4465SIGNSELECT_I64x2_S
    0U,	// anonymous_4565DATA_DROP
    0U,	// anonymous_4565DATA_DROP_S
    0U,	// anonymous_4565MEMORY_COPY_A32
    0U,	// anonymous_4565MEMORY_COPY_A32_S
    0U,	// anonymous_4565MEMORY_FILL_A32
    0U,	// anonymous_4565MEMORY_FILL_A32_S
    0U,	// anonymous_4565MEMORY_INIT_A32
    0U,	// anonymous_4565MEMORY_INIT_A32_S
    0U,	// anonymous_4566DATA_DROP
    0U,	// anonymous_4566DATA_DROP_S
    0U,	// anonymous_4566MEMORY_COPY_A64
    0U,	// anonymous_4566MEMORY_COPY_A64_S
    0U,	// anonymous_4566MEMORY_FILL_A64
    0U,	// anonymous_4566MEMORY_FILL_A64_S
    0U,	// anonymous_4566MEMORY_INIT_A64
    0U,	// anonymous_4566MEMORY_INIT_A64_S
    0U,	// fp_to_sint_I32x4
    0U,	// fp_to_sint_I32x4_S
    0U,	// fp_to_uint_I32x4
    0U,	// fp_to_uint_I32x4_S
    0U,	// int_wasm_convert_low_signed_F64x2
    0U,	// int_wasm_convert_low_signed_F64x2_S
    0U,	// int_wasm_convert_low_unsigned_F64x2
    0U,	// int_wasm_convert_low_unsigned_F64x2_S
    0U,	// int_wasm_demote_zero_F32x4
    0U,	// int_wasm_demote_zero_F32x4_S
    0U,	// int_wasm_extadd_pairwise_signed_I16x8
    0U,	// int_wasm_extadd_pairwise_signed_I16x8_S
    0U,	// int_wasm_extadd_pairwise_signed_I32x4
    0U,	// int_wasm_extadd_pairwise_signed_I32x4_S
    0U,	// int_wasm_extadd_pairwise_unsigned_I16x8
    0U,	// int_wasm_extadd_pairwise_unsigned_I16x8_S
    0U,	// int_wasm_extadd_pairwise_unsigned_I32x4
    0U,	// int_wasm_extadd_pairwise_unsigned_I32x4_S
    0U,	// int_wasm_promote_low_F64x2
    0U,	// int_wasm_promote_low_F64x2_S
    0U,	// int_wasm_trunc_saturate_zero_signed_I32x4
    0U,	// int_wasm_trunc_saturate_zero_signed_I32x4_S
    0U,	// int_wasm_trunc_saturate_zero_unsigned_I32x4
    0U,	// int_wasm_trunc_saturate_zero_unsigned_I32x4_S
    0U,	// int_wasm_widen_high_signed_I64x2
    0U,	// int_wasm_widen_high_signed_I64x2_S
    0U,	// int_wasm_widen_high_unsigned_I64x2
    0U,	// int_wasm_widen_high_unsigned_I64x2_S
    0U,	// int_wasm_widen_low_signed_I64x2
    0U,	// int_wasm_widen_low_signed_I64x2_S
    0U,	// int_wasm_widen_low_unsigned_I64x2
    0U,	// int_wasm_widen_low_unsigned_I64x2_S
    0U,	// sint_to_fp_F32x4
    0U,	// sint_to_fp_F32x4_S
    0U,	// uint_to_fp_F32x4
    0U,	// uint_to_fp_F32x4_S
    0U,	// widen_high_s_I16x8
    0U,	// widen_high_s_I16x8_S
    0U,	// widen_high_s_I32x4
    0U,	// widen_high_s_I32x4_S
    0U,	// widen_high_u_I16x8
    0U,	// widen_high_u_I16x8_S
    0U,	// widen_high_u_I32x4
    0U,	// widen_high_u_I32x4_S
    0U,	// widen_low_s_I16x8
    0U,	// widen_low_s_I16x8_S
    0U,	// widen_low_s_I32x4
    0U,	// widen_low_s_I32x4_S
    0U,	// widen_low_u_I16x8
    0U,	// widen_low_u_I16x8_S
    0U,	// widen_low_u_I32x4
    0U,	// widen_low_u_I32x4_S
  };

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  return {AsmStrs+(Bits & 16383)-1, Bits};

}
/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void WebAssemblyInstPrinter::printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O) {
  O << "\t";

  auto MnemonicInfo = getMnemonic(MI);

  O << MnemonicInfo.first;

  uint64_t Bits = MnemonicInfo.second;
  assert(Bits != 0 && "Cannot print this instruction.");

  // Fragment 0 encoded into 3 bits for 7 unique commands.
  switch ((Bits >> 14) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_INSTR_REF, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_...
    return;
    break;
  case 1:
    // CALL_PARAMS, CALL_PARAMS_S, ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, AB...
    printOperand(MI, 0, O);
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32_S, ATOMIC_LOAD16_U_I32_A64_S, ATOMIC_LOAD16_U_...
    printOperand(MI, 1, O);
    break;
  case 3:
    // BLOCK, BLOCK_S, IF, IF_S, LOOP, LOOP_S, TRY, TRY_S
    printWebAssemblySignatureOperand(MI, 0, O);
    break;
  case 4:
    // BR_TABLE_I32_S, BR_TABLE_I64_S
    printBrList(MI, 0, O);
    return;
    break;
  case 5:
    // REF_NULL_EXTERNREF_S, REF_NULL_FUNCREF_S
    printWebAssemblyHeapTypeOperand(MI, 0, O);
    return;
    break;
  case 6:
    // STORE_LANE_I16x8_A64, STORE_LANE_I32x4_A64, STORE_LANE_I64x2_A64, STOR...
    printOperand(MI, 2, O);
    O << '(';
    printOperand(MI, 4, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 5, O);
    O << ", ";
    printOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 1 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 17) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // CALL_PARAMS, CALL_PARAMS_S, BLOCK, BLOCK_S, BR, BR_IF_S, BR_S, BR_TABL...
    return;
    break;
  case 1:
    // ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, ABS_I16x8, ABS_I32x4, ABS_I64x...
    O << ", ";
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32_S, ATOMIC_LOAD16_U_I32_A64_S, ATOMIC_LOAD16_U_...
    printWebAssemblyP2AlignOperand(MI, 0, O);
    break;
  case 3:
    // ATOMIC_STORE16_I32_A32, ATOMIC_STORE16_I32_A64, ATOMIC_STORE16_I64_A32...
    O << '(';
    break;
  }


  // Fragment 2 encoded into 3 bits for 6 unique commands.
  switch ((Bits >> 19) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, ABS_I16x8, ABS_I32x4, ABS_I64x...
    printOperand(MI, 1, O);
    break;
  case 1:
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    printOperand(MI, 2, O);
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32_S, ATOMIC_LOAD16_U_I32_A64_S, ATOMIC_LOAD16_U_...
    return;
    break;
  case 3:
    // LOAD_LANE_I16x8_A32_S, LOAD_LANE_I16x8_A64_S, LOAD_LANE_I32x4_A32_S, L...
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 4:
    // REF_NULL_EXTERNREF, REF_NULL_FUNCREF
    printWebAssemblyHeapTypeOperand(MI, 1, O);
    return;
    break;
  case 5:
    // STORE_LANE_I16x8_A32, STORE_LANE_I32x4_A32, STORE_LANE_I64x2_A32, STOR...
    printOperand(MI, 3, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 0, O);
    O << ", ";
    printOperand(MI, 4, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 3 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 22) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, ABS_I16x8, ABS_I32x4, ABS_I64x...
    return;
    break;
  case 1:
    // ADD_F32, ADD_F32x4, ADD_F64, ADD_F64x2, ADD_I16x8, ADD_I32, ADD_I32x4,...
    O << ", ";
    printOperand(MI, 2, O);
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    O << '(';
    break;
  case 3:
    // ATOMIC_STORE16_I32_A32, ATOMIC_STORE16_I32_A64, ATOMIC_STORE16_I64_A32...
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 0, O);
    break;
  }


  // Fragment 4 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 24) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADD_F32, ADD_F32x4, ADD_F64, ADD_F64x2, ADD_I16x8, ADD_I32, ADD_I32x4,...
    return;
    break;
  case 1:
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    printOperand(MI, 3, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 1, O);
    break;
  case 2:
    // ATOMIC_STORE16_I32_A32, ATOMIC_STORE16_I32_A64, ATOMIC_STORE16_I64_A32...
    O << ", ";
    printOperand(MI, 3, O);
    break;
  case 3:
    // LOAD_LANE_I16x8_A32, LOAD_LANE_I16x8_A64, LOAD_LANE_I32x4_A32, LOAD_LA...
    printOperand(MI, 4, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 5, O);
    O << ", ";
    printOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 5 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 26) & 1) {
    // ATOMIC_RMW16_U_ADD_I32_A32, ATOMIC_RMW16_U_ADD_I32_A64, ATOMIC_RMW16_U...
    O << ", ";
    printOperand(MI, 4, O);
  } else {
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    return;
  }


  // Fragment 6 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 27) & 1) {
    // ATOMIC_RMW16_U_CMPXCHG_I32_A32, ATOMIC_RMW16_U_CMPXCHG_I32_A64, ATOMIC...
    O << ", ";
    printOperand(MI, 5, O);
  } else {
    // ATOMIC_RMW16_U_ADD_I32_A32, ATOMIC_RMW16_U_ADD_I32_A64, ATOMIC_RMW16_U...
    return;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 28) & 1) {
    // CONST_V128_I16x8, CONST_V128_I16x8_S, CONST_V128_I8x16, CONST_V128_I8x...
    O << ", ";
    printOperand(MI, 6, O);
    O << ", ";
    printOperand(MI, 7, O);
  } else {
    // ATOMIC_RMW16_U_CMPXCHG_I32_A32, ATOMIC_RMW16_U_CMPXCHG_I32_A64, ATOMIC...
    return;
  }


  // Fragment 8 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 29) & 1) {
    // CONST_V128_I16x8_S
    return;
  } else {
    // CONST_V128_I16x8, CONST_V128_I8x16, CONST_V128_I8x16_S, SHUFFLE, SHUFF...
    O << ", ";
    printOperand(MI, 8, O);
  }


  // Fragment 9 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 30) & 1) {
    // CONST_V128_I8x16, CONST_V128_I8x16_S, SHUFFLE, SHUFFLE_S
    O << ", ";
    printOperand(MI, 9, O);
    O << ", ";
    printOperand(MI, 10, O);
    O << ", ";
    printOperand(MI, 11, O);
    O << ", ";
    printOperand(MI, 12, O);
    O << ", ";
    printOperand(MI, 13, O);
    O << ", ";
    printOperand(MI, 14, O);
    O << ", ";
    printOperand(MI, 15, O);
  } else {
    // CONST_V128_I16x8
    return;
  }


  // Fragment 10 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 31) & 1) {
    // CONST_V128_I8x16_S, SHUFFLE_S
    return;
  } else {
    // CONST_V128_I8x16, SHUFFLE
    O << ", ";
    printOperand(MI, 16, O);
  }


  // Fragment 11 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 32) & 1) {
    // SHUFFLE
    O << ", ";
    printOperand(MI, 17, O);
    O << ", ";
    printOperand(MI, 18, O);
    return;
  } else {
    // CONST_V128_I8x16
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *WebAssemblyInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 14 && "Invalid register number!");


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ "%f32.0\0"
  /* 7 */ "%i32.0\0"
  /* 14 */ "%f64.0\0"
  /* 21 */ "%i64.0\0"
  /* 28 */ "%funcref.0\0"
  /* 39 */ "%externref.0\0"
  /* 52 */ "%FP32\0"
  /* 58 */ "%SP32\0"
  /* 64 */ "%FP64\0"
  /* 70 */ "%SP64\0"
  /* 76 */ "%v128\0"
  /* 82 */ "STACK\0"
  /* 88 */ "ARGUMENTS\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint8_t RegAsmOffset[] = {
    88, 82, 39, 52, 64, 28, 58, 70, 0, 14, 7, 21, 76, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool WebAssemblyInstPrinter::printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &OS) {
  return false;
}

#endif // PRINT_ALIAS_INSTR
