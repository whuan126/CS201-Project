/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// getMnemonic - This method is automatically generated by tablegen
/// from the instruction set description.
std::pair<const char *, uint64_t> MipsInstPrinter::getMnemonic(const MCInst *MI) {

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ "dmfc0\t\0"
  /* 7 */ "dmfgc0\t\0"
  /* 15 */ "mfhgc0\t\0"
  /* 23 */ "mthgc0\t\0"
  /* 31 */ "dmtgc0\t\0"
  /* 39 */ "mfhc0\t\0"
  /* 46 */ "mthc0\t\0"
  /* 53 */ "dmtc0\t\0"
  /* 60 */ "vmm0\t\0"
  /* 66 */ "mtm0\t\0"
  /* 72 */ "mtp0\t\0"
  /* 78 */ "bbit0\t\0"
  /* 85 */ "ldc1\t\0"
  /* 91 */ "sdc1\t\0"
  /* 97 */ "cfc1\t\0"
  /* 103 */ "dmfc1\t\0"
  /* 110 */ "mfhc1\t\0"
  /* 117 */ "mthc1\t\0"
  /* 124 */ "ctc1\t\0"
  /* 130 */ "dmtc1\t\0"
  /* 137 */ "lwc1\t\0"
  /* 143 */ "swc1\t\0"
  /* 149 */ "ldxc1\t\0"
  /* 156 */ "sdxc1\t\0"
  /* 163 */ "luxc1\t\0"
  /* 170 */ "suxc1\t\0"
  /* 177 */ "lwxc1\t\0"
  /* 184 */ "swxc1\t\0"
  /* 191 */ "mtm1\t\0"
  /* 197 */ "mtp1\t\0"
  /* 203 */ "bbit1\t\0"
  /* 210 */ "bbit032\t\0"
  /* 219 */ "bbit132\t\0"
  /* 228 */ "dsra32\t\0"
  /* 236 */ "bposge32\t\0"
  /* 246 */ "dsll32\t\0"
  /* 254 */ "dsrl32\t\0"
  /* 262 */ "lwm32\t\0"
  /* 269 */ "swm32\t\0"
  /* 276 */ "drotr32\t\0"
  /* 285 */ "cins32\t\0"
  /* 293 */ "exts32\t\0"
  /* 301 */ "ldc2\t\0"
  /* 307 */ "sdc2\t\0"
  /* 313 */ "cfc2\t\0"
  /* 319 */ "dmfc2\t\0"
  /* 326 */ "mfhc2\t\0"
  /* 333 */ "mthc2\t\0"
  /* 340 */ "ctc2\t\0"
  /* 346 */ "dmtc2\t\0"
  /* 353 */ "lwc2\t\0"
  /* 359 */ "swc2\t\0"
  /* 365 */ "mtm2\t\0"
  /* 371 */ "mtp2\t\0"
  /* 377 */ "addiur2\t\0"
  /* 386 */ "ldc3\t\0"
  /* 392 */ "sdc3\t\0"
  /* 398 */ "lwc3\t\0"
  /* 404 */ "swc3\t\0"
  /* 410 */ "addius5\t\0"
  /* 419 */ "sb16\t\0"
  /* 425 */ "bc16\t\0"
  /* 431 */ "jrc16\t\0"
  /* 438 */ "bnezc16\t\0"
  /* 447 */ "beqzc16\t\0"
  /* 456 */ "and16\t\0"
  /* 463 */ "move16\t\0"
  /* 471 */ "sh16\t\0"
  /* 477 */ "andi16\t\0"
  /* 485 */ "mfhi16\t\0"
  /* 493 */ "li16\t\0"
  /* 499 */ "break16\t\0"
  /* 508 */ "sll16\t\0"
  /* 515 */ "srl16\t\0"
  /* 522 */ "lwm16\t\0"
  /* 529 */ "swm16\t\0"
  /* 536 */ "mflo16\t\0"
  /* 544 */ "sdbbp16\t\0"
  /* 553 */ "jr16\t\0"
  /* 559 */ "xor16\t\0"
  /* 566 */ "jalrs16\t\0"
  /* 575 */ "not16\t\0"
  /* 582 */ "lbu16\t\0"
  /* 589 */ "subu16\t\0"
  /* 597 */ "addu16\t\0"
  /* 605 */ "lhu16\t\0"
  /* 612 */ "lw16\t\0"
  /* 618 */ "sw16\t\0"
  /* 624 */ "bnez16\t\0"
  /* 632 */ "beqz16\t\0"
  /* 640 */ "saa\t\0"
  /* 645 */ "preceu.ph.qbla\t\0"
  /* 661 */ "precequ.ph.qbla\t\0"
  /* 678 */ "dla\t\0"
  /* 683 */ "preceu.ph.qbra\t\0"
  /* 699 */ "precequ.ph.qbra\t\0"
  /* 716 */ "dsra\t\0"
  /* 722 */ "dlsa\t\0"
  /* 728 */ "cfcmsa\t\0"
  /* 736 */ "ctcmsa\t\0"
  /* 744 */ "add_a.b\t\0"
  /* 753 */ "min_a.b\t\0"
  /* 762 */ "adds_a.b\t\0"
  /* 772 */ "max_a.b\t\0"
  /* 781 */ "sra.b\t\0"
  /* 788 */ "nloc.b\t\0"
  /* 796 */ "nlzc.b\t\0"
  /* 804 */ "sld.b\t\0"
  /* 811 */ "pckod.b\t\0"
  /* 820 */ "ilvod.b\t\0"
  /* 829 */ "insve.b\t\0"
  /* 838 */ "vshf.b\t\0"
  /* 846 */ "bneg.b\t\0"
  /* 854 */ "srai.b\t\0"
  /* 862 */ "sldi.b\t\0"
  /* 870 */ "andi.b\t\0"
  /* 878 */ "bnegi.b\t\0"
  /* 887 */ "bseli.b\t\0"
  /* 896 */ "slli.b\t\0"
  /* 904 */ "srli.b\t\0"
  /* 912 */ "binsli.b\t\0"
  /* 922 */ "ceqi.b\t\0"
  /* 930 */ "srari.b\t\0"
  /* 939 */ "bclri.b\t\0"
  /* 948 */ "srlri.b\t\0"
  /* 957 */ "nori.b\t\0"
  /* 965 */ "xori.b\t\0"
  /* 973 */ "binsri.b\t\0"
  /* 983 */ "splati.b\t\0"
  /* 993 */ "bseti.b\t\0"
  /* 1002 */ "subvi.b\t\0"
  /* 1011 */ "addvi.b\t\0"
  /* 1020 */ "bmzi.b\t\0"
  /* 1028 */ "bmnzi.b\t\0"
  /* 1037 */ "fill.b\t\0"
  /* 1045 */ "sll.b\t\0"
  /* 1052 */ "srl.b\t\0"
  /* 1059 */ "binsl.b\t\0"
  /* 1068 */ "ilvl.b\t\0"
  /* 1076 */ "ceq.b\t\0"
  /* 1083 */ "srar.b\t\0"
  /* 1091 */ "bclr.b\t\0"
  /* 1099 */ "srlr.b\t\0"
  /* 1107 */ "binsr.b\t\0"
  /* 1116 */ "ilvr.b\t\0"
  /* 1124 */ "asub_s.b\t\0"
  /* 1134 */ "mod_s.b\t\0"
  /* 1143 */ "cle_s.b\t\0"
  /* 1152 */ "ave_s.b\t\0"
  /* 1161 */ "clei_s.b\t\0"
  /* 1171 */ "mini_s.b\t\0"
  /* 1181 */ "clti_s.b\t\0"
  /* 1191 */ "maxi_s.b\t\0"
  /* 1201 */ "min_s.b\t\0"
  /* 1210 */ "aver_s.b\t\0"
  /* 1220 */ "subs_s.b\t\0"
  /* 1230 */ "adds_s.b\t\0"
  /* 1240 */ "sat_s.b\t\0"
  /* 1249 */ "clt_s.b\t\0"
  /* 1258 */ "subsuu_s.b\t\0"
  /* 1270 */ "div_s.b\t\0"
  /* 1279 */ "max_s.b\t\0"
  /* 1288 */ "copy_s.b\t\0"
  /* 1298 */ "splat.b\t\0"
  /* 1307 */ "bset.b\t\0"
  /* 1315 */ "pcnt.b\t\0"
  /* 1323 */ "insert.b\t\0"
  /* 1333 */ "st.b\t\0"
  /* 1339 */ "asub_u.b\t\0"
  /* 1349 */ "mod_u.b\t\0"
  /* 1358 */ "cle_u.b\t\0"
  /* 1367 */ "ave_u.b\t\0"
  /* 1376 */ "clei_u.b\t\0"
  /* 1386 */ "mini_u.b\t\0"
  /* 1396 */ "clti_u.b\t\0"
  /* 1406 */ "maxi_u.b\t\0"
  /* 1416 */ "min_u.b\t\0"
  /* 1425 */ "aver_u.b\t\0"
  /* 1435 */ "subs_u.b\t\0"
  /* 1445 */ "adds_u.b\t\0"
  /* 1455 */ "subsus_u.b\t\0"
  /* 1467 */ "sat_u.b\t\0"
  /* 1476 */ "clt_u.b\t\0"
  /* 1485 */ "div_u.b\t\0"
  /* 1494 */ "max_u.b\t\0"
  /* 1503 */ "copy_u.b\t\0"
  /* 1513 */ "msubv.b\t\0"
  /* 1522 */ "maddv.b\t\0"
  /* 1531 */ "pckev.b\t\0"
  /* 1540 */ "ilvev.b\t\0"
  /* 1549 */ "mulv.b\t\0"
  /* 1557 */ "bz.b\t\0"
  /* 1563 */ "bnz.b\t\0"
  /* 1570 */ "crc32b\t\0"
  /* 1578 */ "crc32cb\t\0"
  /* 1587 */ "seb\t\0"
  /* 1592 */ "jalrc.hb\t\0"
  /* 1602 */ "jr.hb\t\0"
  /* 1609 */ "jalr.hb\t\0"
  /* 1618 */ "lb\t\0"
  /* 1622 */ "shra.qb\t\0"
  /* 1631 */ "cmpgdu.le.qb\t\0"
  /* 1645 */ "cmpgu.le.qb\t\0"
  /* 1658 */ "cmpu.le.qb\t\0"
  /* 1670 */ "subuh.qb\t\0"
  /* 1680 */ "adduh.qb\t\0"
  /* 1690 */ "pick.qb\t\0"
  /* 1699 */ "shll.qb\t\0"
  /* 1708 */ "repl.qb\t\0"
  /* 1717 */ "shrl.qb\t\0"
  /* 1726 */ "cmpgdu.eq.qb\t\0"
  /* 1740 */ "cmpgu.eq.qb\t\0"
  /* 1753 */ "cmpu.eq.qb\t\0"
  /* 1765 */ "shra_r.qb\t\0"
  /* 1776 */ "subuh_r.qb\t\0"
  /* 1788 */ "adduh_r.qb\t\0"
  /* 1800 */ "shrav_r.qb\t\0"
  /* 1812 */ "absq_s.qb\t\0"
  /* 1823 */ "subu_s.qb\t\0"
  /* 1834 */ "addu_s.qb\t\0"
  /* 1845 */ "cmpgdu.lt.qb\t\0"
  /* 1859 */ "cmpgu.lt.qb\t\0"
  /* 1872 */ "cmpu.lt.qb\t\0"
  /* 1884 */ "subu.qb\t\0"
  /* 1893 */ "addu.qb\t\0"
  /* 1902 */ "shrav.qb\t\0"
  /* 1912 */ "shllv.qb\t\0"
  /* 1922 */ "replv.qb\t\0"
  /* 1932 */ "shrlv.qb\t\0"
  /* 1942 */ "raddu.w.qb\t\0"
  /* 1954 */ "sb\t\0"
  /* 1958 */ "modsub\t\0"
  /* 1966 */ "msub\t\0"
  /* 1972 */ "bposge32c\t\0"
  /* 1983 */ "bc\t\0"
  /* 1987 */ "bgec\t\0"
  /* 1993 */ "bnec\t\0"
  /* 1999 */ "jic\t\0"
  /* 2004 */ "balc\t\0"
  /* 2010 */ "jialc\t\0"
  /* 2017 */ "bgezalc\t\0"
  /* 2026 */ "blezalc\t\0"
  /* 2035 */ "bnezalc\t\0"
  /* 2044 */ "beqzalc\t\0"
  /* 2053 */ "bgtzalc\t\0"
  /* 2062 */ "bltzalc\t\0"
  /* 2071 */ "sync\t\0"
  /* 2077 */ "ldpc\t\0"
  /* 2083 */ "auipc\t\0"
  /* 2090 */ "aluipc\t\0"
  /* 2098 */ "addiupc\t\0"
  /* 2107 */ "lwupc\t\0"
  /* 2114 */ "lwpc\t\0"
  /* 2120 */ "beqc\t\0"
  /* 2126 */ "jrc\t\0"
  /* 2131 */ "jalrc\t\0"
  /* 2138 */ "addsc\t\0"
  /* 2145 */ "bltc\t\0"
  /* 2151 */ "bgeuc\t\0"
  /* 2158 */ "bltuc\t\0"
  /* 2165 */ "bnvc\t\0"
  /* 2171 */ "bovc\t\0"
  /* 2177 */ "addwc\t\0"
  /* 2184 */ "bgezc\t\0"
  /* 2191 */ "blezc\t\0"
  /* 2198 */ "bc1nezc\t\0"
  /* 2207 */ "bc2nezc\t\0"
  /* 2216 */ "bnezc\t\0"
  /* 2223 */ "bc1eqzc\t\0"
  /* 2232 */ "bc2eqzc\t\0"
  /* 2241 */ "beqzc\t\0"
  /* 2248 */ "bgtzc\t\0"
  /* 2255 */ "bltzc\t\0"
  /* 2262 */ "flog2.d\t\0"
  /* 2271 */ "fexp2.d\t\0"
  /* 2280 */ "add_a.d\t\0"
  /* 2289 */ "fmin_a.d\t\0"
  /* 2299 */ "adds_a.d\t\0"
  /* 2309 */ "fmax_a.d\t\0"
  /* 2319 */ "mina.d\t\0"
  /* 2327 */ "sra.d\t\0"
  /* 2334 */ "maxa.d\t\0"
  /* 2342 */ "fsub.d\t\0"
  /* 2350 */ "fmsub.d\t\0"
  /* 2359 */ "nmsub.d\t\0"
  /* 2368 */ "nloc.d\t\0"
  /* 2376 */ "nlzc.d\t\0"
  /* 2384 */ "fadd.d\t\0"
  /* 2392 */ "fmadd.d\t\0"
  /* 2401 */ "nmadd.d\t\0"
  /* 2410 */ "sld.d\t\0"
  /* 2417 */ "pckod.d\t\0"
  /* 2426 */ "ilvod.d\t\0"
  /* 2435 */ "c.nge.d\t\0"
  /* 2444 */ "c.le.d\t\0"
  /* 2452 */ "cmp.le.d\t\0"
  /* 2462 */ "fcle.d\t\0"
  /* 2470 */ "c.ngle.d\t\0"
  /* 2480 */ "c.ole.d\t\0"
  /* 2489 */ "cmp.sle.d\t\0"
  /* 2500 */ "fsle.d\t\0"
  /* 2508 */ "c.ule.d\t\0"
  /* 2517 */ "cmp.ule.d\t\0"
  /* 2528 */ "fcule.d\t\0"
  /* 2537 */ "cmp.sule.d\t\0"
  /* 2549 */ "fsule.d\t\0"
  /* 2558 */ "fcne.d\t\0"
  /* 2566 */ "fsne.d\t\0"
  /* 2574 */ "fcune.d\t\0"
  /* 2583 */ "fsune.d\t\0"
  /* 2592 */ "insve.d\t\0"
  /* 2601 */ "c.f.d\t\0"
  /* 2608 */ "cmp.af.d\t\0"
  /* 2618 */ "fcaf.d\t\0"
  /* 2626 */ "cmp.saf.d\t\0"
  /* 2637 */ "fsaf.d\t\0"
  /* 2645 */ "msubf.d\t\0"
  /* 2654 */ "maddf.d\t\0"
  /* 2663 */ "vshf.d\t\0"
  /* 2671 */ "c.sf.d\t\0"
  /* 2679 */ "movf.d\t\0"
  /* 2687 */ "bneg.d\t\0"
  /* 2695 */ "srai.d\t\0"
  /* 2703 */ "sldi.d\t\0"
  /* 2711 */ "bnegi.d\t\0"
  /* 2720 */ "slli.d\t\0"
  /* 2728 */ "srli.d\t\0"
  /* 2736 */ "binsli.d\t\0"
  /* 2746 */ "ceqi.d\t\0"
  /* 2754 */ "srari.d\t\0"
  /* 2763 */ "bclri.d\t\0"
  /* 2772 */ "srlri.d\t\0"
  /* 2781 */ "binsri.d\t\0"
  /* 2791 */ "splati.d\t\0"
  /* 2801 */ "bseti.d\t\0"
  /* 2810 */ "subvi.d\t\0"
  /* 2819 */ "addvi.d\t\0"
  /* 2828 */ "trunc.l.d\t\0"
  /* 2839 */ "round.l.d\t\0"
  /* 2850 */ "ceil.l.d\t\0"
  /* 2860 */ "floor.l.d\t\0"
  /* 2871 */ "cvt.l.d\t\0"
  /* 2880 */ "sel.d\t\0"
  /* 2887 */ "c.ngl.d\t\0"
  /* 2896 */ "fill.d\t\0"
  /* 2904 */ "sll.d\t\0"
  /* 2911 */ "fexupl.d\t\0"
  /* 2921 */ "ffql.d\t\0"
  /* 2929 */ "srl.d\t\0"
  /* 2936 */ "binsl.d\t\0"
  /* 2945 */ "fmul.d\t\0"
  /* 2953 */ "ilvl.d\t\0"
  /* 2961 */ "fmin.d\t\0"
  /* 2969 */ "c.un.d\t\0"
  /* 2977 */ "cmp.un.d\t\0"
  /* 2987 */ "fcun.d\t\0"
  /* 2995 */ "cmp.sun.d\t\0"
  /* 3006 */ "fsun.d\t\0"
  /* 3014 */ "movn.d\t\0"
  /* 3022 */ "frcp.d\t\0"
  /* 3030 */ "recip.d\t\0"
  /* 3039 */ "c.eq.d\t\0"
  /* 3047 */ "cmp.eq.d\t\0"
  /* 3057 */ "fceq.d\t\0"
  /* 3065 */ "c.seq.d\t\0"
  /* 3074 */ "cmp.seq.d\t\0"
  /* 3085 */ "fseq.d\t\0"
  /* 3093 */ "c.ueq.d\t\0"
  /* 3102 */ "cmp.ueq.d\t\0"
  /* 3113 */ "fcueq.d\t\0"
  /* 3122 */ "cmp.sueq.d\t\0"
  /* 3134 */ "fsueq.d\t\0"
  /* 3143 */ "srar.d\t\0"
  /* 3151 */ "bclr.d\t\0"
  /* 3159 */ "srlr.d\t\0"
  /* 3167 */ "fcor.d\t\0"
  /* 3175 */ "fsor.d\t\0"
  /* 3183 */ "fexupr.d\t\0"
  /* 3193 */ "ffqr.d\t\0"
  /* 3201 */ "binsr.d\t\0"
  /* 3210 */ "ilvr.d\t\0"
  /* 3218 */ "cvt.s.d\t\0"
  /* 3227 */ "asub_s.d\t\0"
  /* 3237 */ "hsub_s.d\t\0"
  /* 3247 */ "dpsub_s.d\t\0"
  /* 3258 */ "ftrunc_s.d\t\0"
  /* 3270 */ "hadd_s.d\t\0"
  /* 3280 */ "dpadd_s.d\t\0"
  /* 3291 */ "mod_s.d\t\0"
  /* 3300 */ "cle_s.d\t\0"
  /* 3309 */ "ave_s.d\t\0"
  /* 3318 */ "clei_s.d\t\0"
  /* 3328 */ "mini_s.d\t\0"
  /* 3338 */ "clti_s.d\t\0"
  /* 3348 */ "maxi_s.d\t\0"
  /* 3358 */ "min_s.d\t\0"
  /* 3367 */ "dotp_s.d\t\0"
  /* 3377 */ "aver_s.d\t\0"
  /* 3387 */ "subs_s.d\t\0"
  /* 3397 */ "adds_s.d\t\0"
  /* 3407 */ "sat_s.d\t\0"
  /* 3416 */ "clt_s.d\t\0"
  /* 3425 */ "ffint_s.d\t\0"
  /* 3436 */ "ftint_s.d\t\0"
  /* 3447 */ "subsuu_s.d\t\0"
  /* 3459 */ "div_s.d\t\0"
  /* 3468 */ "max_s.d\t\0"
  /* 3477 */ "copy_s.d\t\0"
  /* 3487 */ "abs.d\t\0"
  /* 3494 */ "fclass.d\t\0"
  /* 3504 */ "splat.d\t\0"
  /* 3513 */ "bset.d\t\0"
  /* 3521 */ "c.ngt.d\t\0"
  /* 3530 */ "c.lt.d\t\0"
  /* 3538 */ "cmp.lt.d\t\0"
  /* 3548 */ "fclt.d\t\0"
  /* 3556 */ "c.olt.d\t\0"
  /* 3565 */ "cmp.slt.d\t\0"
  /* 3576 */ "fslt.d\t\0"
  /* 3584 */ "c.ult.d\t\0"
  /* 3593 */ "cmp.ult.d\t\0"
  /* 3604 */ "fcult.d\t\0"
  /* 3613 */ "cmp.sult.d\t\0"
  /* 3625 */ "fsult.d\t\0"
  /* 3634 */ "pcnt.d\t\0"
  /* 3642 */ "frint.d\t\0"
  /* 3651 */ "insert.d\t\0"
  /* 3661 */ "fsqrt.d\t\0"
  /* 3670 */ "frsqrt.d\t\0"
  /* 3680 */ "st.d\t\0"
  /* 3686 */ "movt.d\t\0"
  /* 3694 */ "asub_u.d\t\0"
  /* 3704 */ "hsub_u.d\t\0"
  /* 3714 */ "dpsub_u.d\t\0"
  /* 3725 */ "ftrunc_u.d\t\0"
  /* 3737 */ "hadd_u.d\t\0"
  /* 3747 */ "dpadd_u.d\t\0"
  /* 3758 */ "mod_u.d\t\0"
  /* 3767 */ "cle_u.d\t\0"
  /* 3776 */ "ave_u.d\t\0"
  /* 3785 */ "clei_u.d\t\0"
  /* 3795 */ "mini_u.d\t\0"
  /* 3805 */ "clti_u.d\t\0"
  /* 3815 */ "maxi_u.d\t\0"
  /* 3825 */ "min_u.d\t\0"
  /* 3834 */ "dotp_u.d\t\0"
  /* 3844 */ "aver_u.d\t\0"
  /* 3854 */ "subs_u.d\t\0"
  /* 3864 */ "adds_u.d\t\0"
  /* 3874 */ "subsus_u.d\t\0"
  /* 3886 */ "sat_u.d\t\0"
  /* 3895 */ "clt_u.d\t\0"
  /* 3904 */ "ffint_u.d\t\0"
  /* 3915 */ "ftint_u.d\t\0"
  /* 3926 */ "div_u.d\t\0"
  /* 3935 */ "max_u.d\t\0"
  /* 3944 */ "msubv.d\t\0"
  /* 3953 */ "maddv.d\t\0"
  /* 3962 */ "pckev.d\t\0"
  /* 3971 */ "ilvev.d\t\0"
  /* 3980 */ "fdiv.d\t\0"
  /* 3988 */ "mulv.d\t\0"
  /* 3996 */ "mov.d\t\0"
  /* 4003 */ "trunc.w.d\t\0"
  /* 4014 */ "round.w.d\t\0"
  /* 4025 */ "ceil.w.d\t\0"
  /* 4035 */ "floor.w.d\t\0"
  /* 4046 */ "cvt.w.d\t\0"
  /* 4055 */ "fmax.d\t\0"
  /* 4063 */ "bz.d\t\0"
  /* 4069 */ "selnez.d\t\0"
  /* 4079 */ "bnz.d\t\0"
  /* 4086 */ "seleqz.d\t\0"
  /* 4096 */ "movz.d\t\0"
  /* 4104 */ "crc32d\t\0"
  /* 4112 */ "saad\t\0"
  /* 4118 */ "crc32cd\t\0"
  /* 4127 */ "scd\t\0"
  /* 4132 */ "dadd\t\0"
  /* 4138 */ "madd\t\0"
  /* 4144 */ "dshd\t\0"
  /* 4150 */ "yield\t\0"
  /* 4157 */ "lld\t\0"
  /* 4162 */ "and\t\0"
  /* 4167 */ "prepend\t\0"
  /* 4176 */ "append\t\0"
  /* 4184 */ "dmod\t\0"
  /* 4190 */ "sd\t\0"
  /* 4194 */ "lbe\t\0"
  /* 4199 */ "sbe\t\0"
  /* 4204 */ "sce\t\0"
  /* 4209 */ "cachee\t\0"
  /* 4217 */ "prefe\t\0"
  /* 4224 */ "bge\t\0"
  /* 4229 */ "sge\t\0"
  /* 4234 */ "tge\t\0"
  /* 4239 */ "cache\t\0"
  /* 4246 */ "lhe\t\0"
  /* 4251 */ "she\t\0"
  /* 4256 */ "sigrie\t\0"
  /* 4264 */ "ble\t\0"
  /* 4269 */ "lle\t\0"
  /* 4274 */ "sle\t\0"
  /* 4279 */ "lwle\t\0"
  /* 4285 */ "swle\t\0"
  /* 4291 */ "bne\t\0"
  /* 4296 */ "sne\t\0"
  /* 4301 */ "tne\t\0"
  /* 4306 */ "dvpe\t\0"
  /* 4312 */ "evpe\t\0"
  /* 4318 */ "lwre\t\0"
  /* 4324 */ "swre\t\0"
  /* 4330 */ "lbue\t\0"
  /* 4336 */ "lhue\t\0"
  /* 4342 */ "move\t\0"
  /* 4348 */ "lwe\t\0"
  /* 4353 */ "swe\t\0"
  /* 4358 */ "bc1f\t\0"
  /* 4364 */ "pref\t\0"
  /* 4370 */ "movf\t\0"
  /* 4376 */ "neg\t\0"
  /* 4381 */ "add_a.h\t\0"
  /* 4390 */ "min_a.h\t\0"
  /* 4399 */ "adds_a.h\t\0"
  /* 4409 */ "max_a.h\t\0"
  /* 4418 */ "sra.h\t\0"
  /* 4425 */ "nloc.h\t\0"
  /* 4433 */ "nlzc.h\t\0"
  /* 4441 */ "sld.h\t\0"
  /* 4448 */ "pckod.h\t\0"
  /* 4457 */ "ilvod.h\t\0"
  /* 4466 */ "insve.h\t\0"
  /* 4475 */ "vshf.h\t\0"
  /* 4483 */ "bneg.h\t\0"
  /* 4491 */ "srai.h\t\0"
  /* 4499 */ "sldi.h\t\0"
  /* 4507 */ "bnegi.h\t\0"
  /* 4516 */ "slli.h\t\0"
  /* 4524 */ "srli.h\t\0"
  /* 4532 */ "binsli.h\t\0"
  /* 4542 */ "ceqi.h\t\0"
  /* 4550 */ "srari.h\t\0"
  /* 4559 */ "bclri.h\t\0"
  /* 4568 */ "srlri.h\t\0"
  /* 4577 */ "binsri.h\t\0"
  /* 4587 */ "splati.h\t\0"
  /* 4597 */ "bseti.h\t\0"
  /* 4606 */ "subvi.h\t\0"
  /* 4615 */ "addvi.h\t\0"
  /* 4624 */ "fill.h\t\0"
  /* 4632 */ "sll.h\t\0"
  /* 4639 */ "srl.h\t\0"
  /* 4646 */ "binsl.h\t\0"
  /* 4655 */ "ilvl.h\t\0"
  /* 4663 */ "fexdo.h\t\0"
  /* 4672 */ "msub_q.h\t\0"
  /* 4682 */ "madd_q.h\t\0"
  /* 4692 */ "mul_q.h\t\0"
  /* 4701 */ "msubr_q.h\t\0"
  /* 4712 */ "maddr_q.h\t\0"
  /* 4723 */ "mulr_q.h\t\0"
  /* 4733 */ "ceq.h\t\0"
  /* 4740 */ "ftq.h\t\0"
  /* 4747 */ "srar.h\t\0"
  /* 4755 */ "bclr.h\t\0"
  /* 4763 */ "srlr.h\t\0"
  /* 4771 */ "binsr.h\t\0"
  /* 4780 */ "ilvr.h\t\0"
  /* 4788 */ "asub_s.h\t\0"
  /* 4798 */ "hsub_s.h\t\0"
  /* 4808 */ "dpsub_s.h\t\0"
  /* 4819 */ "hadd_s.h\t\0"
  /* 4829 */ "dpadd_s.h\t\0"
  /* 4840 */ "mod_s.h\t\0"
  /* 4849 */ "cle_s.h\t\0"
  /* 4858 */ "ave_s.h\t\0"
  /* 4867 */ "clei_s.h\t\0"
  /* 4877 */ "mini_s.h\t\0"
  /* 4887 */ "clti_s.h\t\0"
  /* 4897 */ "maxi_s.h\t\0"
  /* 4907 */ "min_s.h\t\0"
  /* 4916 */ "dotp_s.h\t\0"
  /* 4926 */ "aver_s.h\t\0"
  /* 4936 */ "extr_s.h\t\0"
  /* 4946 */ "subs_s.h\t\0"
  /* 4956 */ "adds_s.h\t\0"
  /* 4966 */ "sat_s.h\t\0"
  /* 4975 */ "clt_s.h\t\0"
  /* 4984 */ "subsuu_s.h\t\0"
  /* 4996 */ "div_s.h\t\0"
  /* 5005 */ "extrv_s.h\t\0"
  /* 5016 */ "max_s.h\t\0"
  /* 5025 */ "copy_s.h\t\0"
  /* 5035 */ "splat.h\t\0"
  /* 5044 */ "bset.h\t\0"
  /* 5052 */ "pcnt.h\t\0"
  /* 5060 */ "insert.h\t\0"
  /* 5070 */ "st.h\t\0"
  /* 5076 */ "asub_u.h\t\0"
  /* 5086 */ "hsub_u.h\t\0"
  /* 5096 */ "dpsub_u.h\t\0"
  /* 5107 */ "hadd_u.h\t\0"
  /* 5117 */ "dpadd_u.h\t\0"
  /* 5128 */ "mod_u.h\t\0"
  /* 5137 */ "cle_u.h\t\0"
  /* 5146 */ "ave_u.h\t\0"
  /* 5155 */ "clei_u.h\t\0"
  /* 5165 */ "mini_u.h\t\0"
  /* 5175 */ "clti_u.h\t\0"
  /* 5185 */ "maxi_u.h\t\0"
  /* 5195 */ "min_u.h\t\0"
  /* 5204 */ "dotp_u.h\t\0"
  /* 5214 */ "aver_u.h\t\0"
  /* 5224 */ "subs_u.h\t\0"
  /* 5234 */ "adds_u.h\t\0"
  /* 5244 */ "subsus_u.h\t\0"
  /* 5256 */ "sat_u.h\t\0"
  /* 5265 */ "clt_u.h\t\0"
  /* 5274 */ "div_u.h\t\0"
  /* 5283 */ "max_u.h\t\0"
  /* 5292 */ "copy_u.h\t\0"
  /* 5302 */ "msubv.h\t\0"
  /* 5311 */ "maddv.h\t\0"
  /* 5320 */ "pckev.h\t\0"
  /* 5329 */ "ilvev.h\t\0"
  /* 5338 */ "mulv.h\t\0"
  /* 5346 */ "bz.h\t\0"
  /* 5352 */ "bnz.h\t\0"
  /* 5359 */ "crc32h\t\0"
  /* 5367 */ "dsbh\t\0"
  /* 5373 */ "wsbh\t\0"
  /* 5379 */ "crc32ch\t\0"
  /* 5388 */ "seh\t\0"
  /* 5393 */ "ulh\t\0"
  /* 5398 */ "shra.ph\t\0"
  /* 5407 */ "precrq.qb.ph\t\0"
  /* 5421 */ "precr.qb.ph\t\0"
  /* 5434 */ "precrqu_s.qb.ph\t\0"
  /* 5451 */ "cmp.le.ph\t\0"
  /* 5462 */ "subqh.ph\t\0"
  /* 5472 */ "addqh.ph\t\0"
  /* 5482 */ "pick.ph\t\0"
  /* 5491 */ "shll.ph\t\0"
  /* 5500 */ "repl.ph\t\0"
  /* 5509 */ "shrl.ph\t\0"
  /* 5518 */ "packrl.ph\t\0"
  /* 5529 */ "mul.ph\t\0"
  /* 5537 */ "subq.ph\t\0"
  /* 5546 */ "addq.ph\t\0"
  /* 5555 */ "cmp.eq.ph\t\0"
  /* 5566 */ "shra_r.ph\t\0"
  /* 5577 */ "subqh_r.ph\t\0"
  /* 5589 */ "addqh_r.ph\t\0"
  /* 5601 */ "shrav_r.ph\t\0"
  /* 5613 */ "shll_s.ph\t\0"
  /* 5624 */ "mul_s.ph\t\0"
  /* 5634 */ "subq_s.ph\t\0"
  /* 5645 */ "addq_s.ph\t\0"
  /* 5656 */ "mulq_s.ph\t\0"
  /* 5667 */ "absq_s.ph\t\0"
  /* 5678 */ "subu_s.ph\t\0"
  /* 5689 */ "addu_s.ph\t\0"
  /* 5700 */ "shllv_s.ph\t\0"
  /* 5712 */ "mulq_rs.ph\t\0"
  /* 5724 */ "cmp.lt.ph\t\0"
  /* 5735 */ "subu.ph\t\0"
  /* 5744 */ "addu.ph\t\0"
  /* 5753 */ "shrav.ph\t\0"
  /* 5763 */ "shllv.ph\t\0"
  /* 5773 */ "replv.ph\t\0"
  /* 5783 */ "shrlv.ph\t\0"
  /* 5793 */ "dpa.w.ph\t\0"
  /* 5803 */ "dpaqx_sa.w.ph\t\0"
  /* 5818 */ "dpsqx_sa.w.ph\t\0"
  /* 5833 */ "mulsa.w.ph\t\0"
  /* 5845 */ "dpaq_s.w.ph\t\0"
  /* 5858 */ "mulsaq_s.w.ph\t\0"
  /* 5873 */ "dpsq_s.w.ph\t\0"
  /* 5886 */ "dpaqx_s.w.ph\t\0"
  /* 5900 */ "dpsqx_s.w.ph\t\0"
  /* 5914 */ "dps.w.ph\t\0"
  /* 5924 */ "dpax.w.ph\t\0"
  /* 5935 */ "dpsx.w.ph\t\0"
  /* 5946 */ "ush\t\0"
  /* 5951 */ "dmuh\t\0"
  /* 5957 */ "synci\t\0"
  /* 5964 */ "daddi\t\0"
  /* 5971 */ "andi\t\0"
  /* 5977 */ "tgei\t\0"
  /* 5983 */ "snei\t\0"
  /* 5989 */ "tnei\t\0"
  /* 5995 */ "dahi\t\0"
  /* 6001 */ "mfhi\t\0"
  /* 6007 */ "mthi\t\0"
  /* 6013 */ ".align 2\n\tli\t\0"
  /* 6027 */ "dli\t\0"
  /* 6032 */ "cmpi\t\0"
  /* 6038 */ "seqi\t\0"
  /* 6044 */ "teqi\t\0"
  /* 6050 */ "xori\t\0"
  /* 6056 */ "dati\t\0"
  /* 6062 */ "slti\t\0"
  /* 6068 */ "tlti\t\0"
  /* 6074 */ "daui\t\0"
  /* 6080 */ "lui\t\0"
  /* 6085 */ "ginvi\t\0"
  /* 6092 */ "j\t\0"
  /* 6095 */ "break\t\0"
  /* 6102 */ "fork\t\0"
  /* 6108 */ "cvt.d.l\t\0"
  /* 6117 */ "cvt.s.l\t\0"
  /* 6126 */ "bal\t\0"
  /* 6131 */ "jal\t\0"
  /* 6136 */ "bgezal\t\0"
  /* 6144 */ "bltzal\t\0"
  /* 6152 */ "dpau.h.qbl\t\0"
  /* 6164 */ "dpsu.h.qbl\t\0"
  /* 6176 */ "muleu_s.ph.qbl\t\0"
  /* 6192 */ "preceu.ph.qbl\t\0"
  /* 6207 */ "precequ.ph.qbl\t\0"
  /* 6223 */ "ldl\t\0"
  /* 6228 */ "sdl\t\0"
  /* 6233 */ "bgel\t\0"
  /* 6239 */ "blel\t\0"
  /* 6245 */ "bnel\t\0"
  /* 6251 */ "bc1fl\t\0"
  /* 6258 */ "maq_sa.w.phl\t\0"
  /* 6272 */ "preceq.w.phl\t\0"
  /* 6286 */ "maq_s.w.phl\t\0"
  /* 6299 */ "muleq_s.w.phl\t\0"
  /* 6314 */ "hypcall\t\0"
  /* 6323 */ "syscall\t\0"
  /* 6332 */ "bgezall\t\0"
  /* 6341 */ "bltzall\t\0"
  /* 6350 */ "dsll\t\0"
  /* 6356 */ "drol\t\0"
  /* 6362 */ "cvt.s.pl\t\0"
  /* 6372 */ "beql\t\0"
  /* 6378 */ "dsrl\t\0"
  /* 6384 */ "bc1tl\t\0"
  /* 6391 */ "bgtl\t\0"
  /* 6397 */ "bltl\t\0"
  /* 6403 */ "bgeul\t\0"
  /* 6410 */ "bleul\t\0"
  /* 6417 */ "dmul\t\0"
  /* 6423 */ "bgtul\t\0"
  /* 6430 */ "bltul\t\0"
  /* 6437 */ "lwl\t\0"
  /* 6442 */ "swl\t\0"
  /* 6447 */ "bgezl\t\0"
  /* 6454 */ "blezl\t\0"
  /* 6461 */ "bgtzl\t\0"
  /* 6468 */ "bltzl\t\0"
  /* 6475 */ "drem\t\0"
  /* 6481 */ "dinsm\t\0"
  /* 6488 */ "dextm\t\0"
  /* 6495 */ "lwm\t\0"
  /* 6500 */ "swm\t\0"
  /* 6505 */ "balign\t\0"
  /* 6513 */ "dalign\t\0"
  /* 6521 */ "movn\t\0"
  /* 6527 */ "dclo\t\0"
  /* 6533 */ "mflo\t\0"
  /* 6539 */ "shilo\t\0"
  /* 6546 */ "mtlo\t\0"
  /* 6552 */ "dmulo\t\0"
  /* 6559 */ "dbitswap\t\0"
  /* 6569 */ "sdbbp\t\0"
  /* 6576 */ "extpdp\t\0"
  /* 6584 */ "movep\t\0"
  /* 6591 */ "mthlip\t\0"
  /* 6599 */ "cmp\t\0"
  /* 6604 */ "dpop\t\0"
  /* 6610 */ "addiur1sp\t\0"
  /* 6621 */ "load_ccond_dsp\t\0"
  /* 6637 */ "store_ccond_dsp\t\0"
  /* 6654 */ "rddsp\t\0"
  /* 6661 */ "wrdsp\t\0"
  /* 6668 */ "jrcaddiusp\t\0"
  /* 6680 */ "jraddiusp\t\0"
  /* 6691 */ "swsp\t\0"
  /* 6697 */ "extp\t\0"
  /* 6703 */ "dvp\t\0"
  /* 6708 */ "evp\t\0"
  /* 6713 */ "lwp\t\0"
  /* 6718 */ "swp\t\0"
  /* 6723 */ "beq\t\0"
  /* 6728 */ "seq\t\0"
  /* 6733 */ "teq\t\0"
  /* 6738 */ "dpau.h.qbr\t\0"
  /* 6750 */ "dpsu.h.qbr\t\0"
  /* 6762 */ "muleu_s.ph.qbr\t\0"
  /* 6778 */ "preceu.ph.qbr\t\0"
  /* 6793 */ "precequ.ph.qbr\t\0"
  /* 6809 */ "ldr\t\0"
  /* 6814 */ "sdr\t\0"
  /* 6819 */ "maq_sa.w.phr\t\0"
  /* 6833 */ "preceq.w.phr\t\0"
  /* 6847 */ "maq_s.w.phr\t\0"
  /* 6860 */ "muleq_s.w.phr\t\0"
  /* 6875 */ "jr\t\0"
  /* 6879 */ "jalr\t\0"
  /* 6885 */ "nor\t\0"
  /* 6890 */ "dror\t\0"
  /* 6896 */ "xor\t\0"
  /* 6901 */ "rdpgpr\t\0"
  /* 6909 */ "wrpgpr\t\0"
  /* 6917 */ "mftr\t\0"
  /* 6923 */ "drotr\t\0"
  /* 6930 */ "mttr\t\0"
  /* 6936 */ "rdhwr\t\0"
  /* 6943 */ "lwr\t\0"
  /* 6948 */ "swr\t\0"
  /* 6953 */ "mina.s\t\0"
  /* 6961 */ "maxa.s\t\0"
  /* 6969 */ "nmsub.s\t\0"
  /* 6978 */ "cvt.d.s\t\0"
  /* 6987 */ "nmadd.s\t\0"
  /* 6996 */ "c.nge.s\t\0"
  /* 7005 */ "c.le.s\t\0"
  /* 7013 */ "cmp.le.s\t\0"
  /* 7023 */ "c.ngle.s\t\0"
  /* 7033 */ "c.ole.s\t\0"
  /* 7042 */ "cmp.sle.s\t\0"
  /* 7053 */ "c.ule.s\t\0"
  /* 7062 */ "cmp.ule.s\t\0"
  /* 7073 */ "cmp.sule.s\t\0"
  /* 7085 */ "c.f.s\t\0"
  /* 7092 */ "cmp.af.s\t\0"
  /* 7102 */ "cmp.saf.s\t\0"
  /* 7113 */ "msubf.s\t\0"
  /* 7122 */ "maddf.s\t\0"
  /* 7131 */ "c.sf.s\t\0"
  /* 7139 */ "movf.s\t\0"
  /* 7147 */ "neg.s\t\0"
  /* 7154 */ "li.s\t\0"
  /* 7160 */ "trunc.l.s\t\0"
  /* 7171 */ "round.l.s\t\0"
  /* 7182 */ "ceil.l.s\t\0"
  /* 7192 */ "floor.l.s\t\0"
  /* 7203 */ "cvt.l.s\t\0"
  /* 7212 */ "sel.s\t\0"
  /* 7219 */ "c.ngl.s\t\0"
  /* 7228 */ "mul.s\t\0"
  /* 7235 */ "min.s\t\0"
  /* 7242 */ "c.un.s\t\0"
  /* 7250 */ "cmp.un.s\t\0"
  /* 7260 */ "cmp.sun.s\t\0"
  /* 7271 */ "movn.s\t\0"
  /* 7279 */ "recip.s\t\0"
  /* 7288 */ "c.eq.s\t\0"
  /* 7296 */ "cmp.eq.s\t\0"
  /* 7306 */ "c.seq.s\t\0"
  /* 7315 */ "cmp.seq.s\t\0"
  /* 7326 */ "c.ueq.s\t\0"
  /* 7335 */ "cmp.ueq.s\t\0"
  /* 7346 */ "cmp.sueq.s\t\0"
  /* 7358 */ "abs.s\t\0"
  /* 7365 */ "cvt.ps.s\t\0"
  /* 7375 */ "class.s\t\0"
  /* 7384 */ "c.ngt.s\t\0"
  /* 7393 */ "c.lt.s\t\0"
  /* 7401 */ "cmp.lt.s\t\0"
  /* 7411 */ "c.olt.s\t\0"
  /* 7420 */ "cmp.slt.s\t\0"
  /* 7431 */ "c.ult.s\t\0"
  /* 7440 */ "cmp.ult.s\t\0"
  /* 7451 */ "cmp.sult.s\t\0"
  /* 7463 */ "rint.s\t\0"
  /* 7471 */ "rsqrt.s\t\0"
  /* 7480 */ "movt.s\t\0"
  /* 7488 */ "div.s\t\0"
  /* 7495 */ "mov.s\t\0"
  /* 7502 */ "trunc.w.s\t\0"
  /* 7513 */ "round.w.s\t\0"
  /* 7524 */ "ceil.w.s\t\0"
  /* 7534 */ "floor.w.s\t\0"
  /* 7545 */ "cvt.w.s\t\0"
  /* 7554 */ "max.s\t\0"
  /* 7561 */ "selnez.s\t\0"
  /* 7571 */ "seleqz.s\t\0"
  /* 7581 */ "movz.s\t\0"
  /* 7589 */ "abs\t\0"
  /* 7594 */ "jals\t\0"
  /* 7600 */ "bgezals\t\0"
  /* 7609 */ "bltzals\t\0"
  /* 7618 */ "cins\t\0"
  /* 7624 */ "dins\t\0"
  /* 7630 */ "sub.ps\t\0"
  /* 7638 */ "add.ps\t\0"
  /* 7646 */ "pll.ps\t\0"
  /* 7654 */ "mul.ps\t\0"
  /* 7662 */ "pul.ps\t\0"
  /* 7670 */ "addr.ps\t\0"
  /* 7679 */ "mulr.ps\t\0"
  /* 7688 */ "plu.ps\t\0"
  /* 7696 */ "puu.ps\t\0"
  /* 7704 */ "cvt.pw.ps\t\0"
  /* 7715 */ "jalrs\t\0"
  /* 7722 */ "exts\t\0"
  /* 7728 */ "lwxs\t\0"
  /* 7734 */ "bc1t\t\0"
  /* 7740 */ "bgt\t\0"
  /* 7745 */ "sgt\t\0"
  /* 7750 */ "wait\t\0"
  /* 7756 */ "blt\t\0"
  /* 7761 */ "slt\t\0"
  /* 7766 */ "tlt\t\0"
  /* 7771 */ "dmult\t\0"
  /* 7778 */ "dmt\t\0"
  /* 7783 */ "emt\t\0"
  /* 7788 */ "not\t\0"
  /* 7793 */ "ginvt\t\0"
  /* 7800 */ "movt\t\0"
  /* 7806 */ "dext\t\0"
  /* 7812 */ "lbu\t\0"
  /* 7817 */ "dsubu\t\0"
  /* 7824 */ "msubu\t\0"
  /* 7831 */ "baddu\t\0"
  /* 7838 */ "daddu\t\0"
  /* 7845 */ "maddu\t\0"
  /* 7852 */ "dmodu\t\0"
  /* 7859 */ "bgeu\t\0"
  /* 7865 */ "sgeu\t\0"
  /* 7871 */ "tgeu\t\0"
  /* 7877 */ "bleu\t\0"
  /* 7883 */ "sleu\t\0"
  /* 7889 */ "ulhu\t\0"
  /* 7895 */ "dmuhu\t\0"
  /* 7902 */ "daddiu\t\0"
  /* 7910 */ "tgeiu\t\0"
  /* 7917 */ "sltiu\t\0"
  /* 7924 */ "tltiu\t\0"
  /* 7931 */ "v3mulu\t\0"
  /* 7939 */ "dmulu\t\0"
  /* 7946 */ "vmulu\t\0"
  /* 7953 */ "dremu\t\0"
  /* 7960 */ "dmulou\t\0"
  /* 7968 */ "cvt.s.pu\t\0"
  /* 7978 */ "dinsu\t\0"
  /* 7985 */ "bgtu\t\0"
  /* 7991 */ "sgtu\t\0"
  /* 7997 */ "bltu\t\0"
  /* 8003 */ "sltu\t\0"
  /* 8009 */ "tltu\t\0"
  /* 8015 */ "dmultu\t\0"
  /* 8023 */ "dextu\t\0"
  /* 8030 */ "ddivu\t\0"
  /* 8037 */ "lwu\t\0"
  /* 8042 */ "and.v\t\0"
  /* 8049 */ "move.v\t\0"
  /* 8057 */ "bsel.v\t\0"
  /* 8065 */ "nor.v\t\0"
  /* 8072 */ "xor.v\t\0"
  /* 8079 */ "bz.v\t\0"
  /* 8085 */ "bmz.v\t\0"
  /* 8092 */ "bnz.v\t\0"
  /* 8099 */ "bmnz.v\t\0"
  /* 8107 */ "dsrav\t\0"
  /* 8114 */ "bitrev\t\0"
  /* 8122 */ "ddiv\t\0"
  /* 8128 */ "dsllv\t\0"
  /* 8135 */ "dsrlv\t\0"
  /* 8142 */ "shilov\t\0"
  /* 8150 */ "extpdpv\t\0"
  /* 8159 */ "extpv\t\0"
  /* 8166 */ "drotrv\t\0"
  /* 8174 */ "insv\t\0"
  /* 8180 */ "flog2.w\t\0"
  /* 8189 */ "fexp2.w\t\0"
  /* 8198 */ "add_a.w\t\0"
  /* 8207 */ "fmin_a.w\t\0"
  /* 8217 */ "adds_a.w\t\0"
  /* 8227 */ "fmax_a.w\t\0"
  /* 8237 */ "sra.w\t\0"
  /* 8244 */ "fsub.w\t\0"
  /* 8252 */ "fmsub.w\t\0"
  /* 8261 */ "nloc.w\t\0"
  /* 8269 */ "nlzc.w\t\0"
  /* 8277 */ "cvt.d.w\t\0"
  /* 8286 */ "fadd.w\t\0"
  /* 8294 */ "fmadd.w\t\0"
  /* 8303 */ "sld.w\t\0"
  /* 8310 */ "pckod.w\t\0"
  /* 8319 */ "ilvod.w\t\0"
  /* 8328 */ "fcle.w\t\0"
  /* 8336 */ "fsle.w\t\0"
  /* 8344 */ "fcule.w\t\0"
  /* 8353 */ "fsule.w\t\0"
  /* 8362 */ "fcne.w\t\0"
  /* 8370 */ "fsne.w\t\0"
  /* 8378 */ "fcune.w\t\0"
  /* 8387 */ "fsune.w\t\0"
  /* 8396 */ "insve.w\t\0"
  /* 8405 */ "fcaf.w\t\0"
  /* 8413 */ "fsaf.w\t\0"
  /* 8421 */ "vshf.w\t\0"
  /* 8429 */ "bneg.w\t\0"
  /* 8437 */ "precr_sra.ph.w\t\0"
  /* 8453 */ "precrq.ph.w\t\0"
  /* 8466 */ "precr_sra_r.ph.w\t\0"
  /* 8484 */ "precrq_rs.ph.w\t\0"
  /* 8500 */ "subqh.w\t\0"
  /* 8509 */ "addqh.w\t\0"
  /* 8518 */ "srai.w\t\0"
  /* 8526 */ "sldi.w\t\0"
  /* 8534 */ "bnegi.w\t\0"
  /* 8543 */ "slli.w\t\0"
  /* 8551 */ "srli.w\t\0"
  /* 8559 */ "binsli.w\t\0"
  /* 8569 */ "ceqi.w\t\0"
  /* 8577 */ "srari.w\t\0"
  /* 8586 */ "bclri.w\t\0"
  /* 8595 */ "srlri.w\t\0"
  /* 8604 */ "binsri.w\t\0"
  /* 8614 */ "splati.w\t\0"
  /* 8624 */ "bseti.w\t\0"
  /* 8633 */ "subvi.w\t\0"
  /* 8642 */ "addvi.w\t\0"
  /* 8651 */ "dpaq_sa.l.w\t\0"
  /* 8664 */ "dpsq_sa.l.w\t\0"
  /* 8677 */ "fill.w\t\0"
  /* 8685 */ "sll.w\t\0"
  /* 8692 */ "fexupl.w\t\0"
  /* 8702 */ "ffql.w\t\0"
  /* 8710 */ "srl.w\t\0"
  /* 8717 */ "binsl.w\t\0"
  /* 8726 */ "fmul.w\t\0"
  /* 8734 */ "ilvl.w\t\0"
  /* 8742 */ "fmin.w\t\0"
  /* 8750 */ "fcun.w\t\0"
  /* 8758 */ "fsun.w\t\0"
  /* 8766 */ "fexdo.w\t\0"
  /* 8775 */ "frcp.w\t\0"
  /* 8783 */ "msub_q.w\t\0"
  /* 8793 */ "madd_q.w\t\0"
  /* 8803 */ "mul_q.w\t\0"
  /* 8812 */ "msubr_q.w\t\0"
  /* 8823 */ "maddr_q.w\t\0"
  /* 8834 */ "mulr_q.w\t\0"
  /* 8844 */ "fceq.w\t\0"
  /* 8852 */ "fseq.w\t\0"
  /* 8860 */ "fcueq.w\t\0"
  /* 8869 */ "fsueq.w\t\0"
  /* 8878 */ "ftq.w\t\0"
  /* 8885 */ "shra_r.w\t\0"
  /* 8895 */ "subqh_r.w\t\0"
  /* 8906 */ "addqh_r.w\t\0"
  /* 8917 */ "extr_r.w\t\0"
  /* 8927 */ "shrav_r.w\t\0"
  /* 8938 */ "extrv_r.w\t\0"
  /* 8949 */ "srar.w\t\0"
  /* 8957 */ "bclr.w\t\0"
  /* 8965 */ "srlr.w\t\0"
  /* 8973 */ "fcor.w\t\0"
  /* 8981 */ "fsor.w\t\0"
  /* 8989 */ "fexupr.w\t\0"
  /* 8999 */ "ffqr.w\t\0"
  /* 9007 */ "binsr.w\t\0"
  /* 9016 */ "extr.w\t\0"
  /* 9024 */ "ilvr.w\t\0"
  /* 9032 */ "cvt.s.w\t\0"
  /* 9041 */ "asub_s.w\t\0"
  /* 9051 */ "hsub_s.w\t\0"
  /* 9061 */ "dpsub_s.w\t\0"
  /* 9072 */ "ftrunc_s.w\t\0"
  /* 9084 */ "hadd_s.w\t\0"
  /* 9094 */ "dpadd_s.w\t\0"
  /* 9105 */ "mod_s.w\t\0"
  /* 9114 */ "cle_s.w\t\0"
  /* 9123 */ "ave_s.w\t\0"
  /* 9132 */ "clei_s.w\t\0"
  /* 9142 */ "mini_s.w\t\0"
  /* 9152 */ "clti_s.w\t\0"
  /* 9162 */ "maxi_s.w\t\0"
  /* 9172 */ "shll_s.w\t\0"
  /* 9182 */ "min_s.w\t\0"
  /* 9191 */ "dotp_s.w\t\0"
  /* 9201 */ "subq_s.w\t\0"
  /* 9211 */ "addq_s.w\t\0"
  /* 9221 */ "mulq_s.w\t\0"
  /* 9231 */ "absq_s.w\t\0"
  /* 9241 */ "aver_s.w\t\0"
  /* 9251 */ "subs_s.w\t\0"
  /* 9261 */ "adds_s.w\t\0"
  /* 9271 */ "sat_s.w\t\0"
  /* 9280 */ "clt_s.w\t\0"
  /* 9289 */ "ffint_s.w\t\0"
  /* 9300 */ "ftint_s.w\t\0"
  /* 9311 */ "subsuu_s.w\t\0"
  /* 9323 */ "div_s.w\t\0"
  /* 9332 */ "shllv_s.w\t\0"
  /* 9343 */ "max_s.w\t\0"
  /* 9352 */ "copy_s.w\t\0"
  /* 9362 */ "mulq_rs.w\t\0"
  /* 9373 */ "extr_rs.w\t\0"
  /* 9384 */ "extrv_rs.w\t\0"
  /* 9396 */ "fclass.w\t\0"
  /* 9406 */ "splat.w\t\0"
  /* 9415 */ "bset.w\t\0"
  /* 9423 */ "fclt.w\t\0"
  /* 9431 */ "fslt.w\t\0"
  /* 9439 */ "fcult.w\t\0"
  /* 9448 */ "fsult.w\t\0"
  /* 9457 */ "pcnt.w\t\0"
  /* 9465 */ "frint.w\t\0"
  /* 9474 */ "insert.w\t\0"
  /* 9484 */ "fsqrt.w\t\0"
  /* 9493 */ "frsqrt.w\t\0"
  /* 9503 */ "st.w\t\0"
  /* 9509 */ "asub_u.w\t\0"
  /* 9519 */ "hsub_u.w\t\0"
  /* 9529 */ "dpsub_u.w\t\0"
  /* 9540 */ "ftrunc_u.w\t\0"
  /* 9552 */ "hadd_u.w\t\0"
  /* 9562 */ "dpadd_u.w\t\0"
  /* 9573 */ "mod_u.w\t\0"
  /* 9582 */ "cle_u.w\t\0"
  /* 9591 */ "ave_u.w\t\0"
  /* 9600 */ "clei_u.w\t\0"
  /* 9610 */ "mini_u.w\t\0"
  /* 9620 */ "clti_u.w\t\0"
  /* 9630 */ "maxi_u.w\t\0"
  /* 9640 */ "min_u.w\t\0"
  /* 9649 */ "dotp_u.w\t\0"
  /* 9659 */ "aver_u.w\t\0"
  /* 9669 */ "subs_u.w\t\0"
  /* 9679 */ "adds_u.w\t\0"
  /* 9689 */ "subsus_u.w\t\0"
  /* 9701 */ "sat_u.w\t\0"
  /* 9710 */ "clt_u.w\t\0"
  /* 9719 */ "ffint_u.w\t\0"
  /* 9730 */ "ftint_u.w\t\0"
  /* 9741 */ "div_u.w\t\0"
  /* 9750 */ "max_u.w\t\0"
  /* 9759 */ "copy_u.w\t\0"
  /* 9769 */ "msubv.w\t\0"
  /* 9778 */ "maddv.w\t\0"
  /* 9787 */ "pckev.w\t\0"
  /* 9796 */ "ilvev.w\t\0"
  /* 9805 */ "fdiv.w\t\0"
  /* 9813 */ "mulv.w\t\0"
  /* 9821 */ "extrv.w\t\0"
  /* 9830 */ "fmax.w\t\0"
  /* 9838 */ "bz.w\t\0"
  /* 9844 */ "bnz.w\t\0"
  /* 9851 */ "crc32w\t\0"
  /* 9859 */ "crc32cw\t\0"
  /* 9868 */ "ulw\t\0"
  /* 9873 */ "cvt.ps.pw\t\0"
  /* 9884 */ "usw\t\0"
  /* 9889 */ "prefx\t\0"
  /* 9896 */ "lhx\t\0"
  /* 9901 */ "jalx\t\0"
  /* 9907 */ "lbux\t\0"
  /* 9913 */ "lwx\t\0"
  /* 9918 */ "bgez\t\0"
  /* 9924 */ "blez\t\0"
  /* 9930 */ "bnez\t\0"
  /* 9936 */ "selnez\t\0"
  /* 9944 */ "btnez\t\0"
  /* 9951 */ "dclz\t\0"
  /* 9957 */ "beqz\t\0"
  /* 9963 */ "seleqz\t\0"
  /* 9971 */ "bteqz\t\0"
  /* 9978 */ "bgtz\t\0"
  /* 9984 */ "bltz\t\0"
  /* 9990 */ "movz\t\0"
  /* 9996 */ "seb\t \0"
  /* 10002 */ "seh\t \0"
  /* 10008 */ "ddivu\t$zero, \0"
  /* 10022 */ "ddiv\t$zero, \0"
  /* 10035 */ "addiu\t$sp, \0"
  /* 10047 */ "mftc0 \0"
  /* 10054 */ "mttc0 \0"
  /* 10061 */ "mfthc1 \0"
  /* 10069 */ "mtthc1 \0"
  /* 10077 */ "cftc1 \0"
  /* 10084 */ "mftc1 \0"
  /* 10091 */ "cttc1 \0"
  /* 10098 */ "mttc1 \0"
  /* 10105 */ "sync \0"
  /* 10111 */ "ld \0"
  /* 10115 */ "\t.word \0"
  /* 10123 */ "sd \0"
  /* 10127 */ "sne \0"
  /* 10132 */ "mfthi \0"
  /* 10139 */ "mtthi \0"
  /* 10146 */ "mftlo \0"
  /* 10153 */ "mttlo \0"
  /* 10160 */ "mftdsp \0"
  /* 10168 */ "mttdsp \0"
  /* 10176 */ "seq \0"
  /* 10181 */ "mftgpr \0"
  /* 10189 */ "mttgpr \0"
  /* 10197 */ "dext \0"
  /* 10203 */ "mftacx \0"
  /* 10211 */ "mttacx \0"
  /* 10219 */ "bc1nez \0"
  /* 10227 */ "bc2nez \0"
  /* 10235 */ "bc1eqz \0"
  /* 10243 */ "bc2eqz \0"
  /* 10251 */ "# XRay Function Patchable RET.\0"
  /* 10282 */ "c.\0"
  /* 10285 */ "# XRay Typed Event Log.\0"
  /* 10309 */ "# XRay Custom Event Log.\0"
  /* 10334 */ "# XRay Function Enter.\0"
  /* 10357 */ "# XRay Tail Call Exit.\0"
  /* 10380 */ "# XRay Function Exit.\0"
  /* 10402 */ "break 0\0"
  /* 10410 */ "LIFETIME_END\0"
  /* 10423 */ "PSEUDO_PROBE\0"
  /* 10436 */ "BUNDLE\0"
  /* 10443 */ "DBG_VALUE\0"
  /* 10453 */ "DBG_INSTR_REF\0"
  /* 10467 */ "DBG_LABEL\0"
  /* 10477 */ "LIFETIME_START\0"
  /* 10492 */ "jrc\t$ra\0"
  /* 10500 */ "jr\t$ra\0"
  /* 10507 */ "ehb\0"
  /* 10511 */ "eretnc\0"
  /* 10518 */ "pause\0"
  /* 10524 */ "tlbinvf\0"
  /* 10532 */ "tlbginvf\0"
  /* 10541 */ "tlbwi\0"
  /* 10547 */ "tlbgwi\0"
  /* 10554 */ "# FEntry call\0"
  /* 10568 */ "foo\0"
  /* 10572 */ "tlbp\0"
  /* 10577 */ "tlbgp\0"
  /* 10583 */ "ssnop\0"
  /* 10589 */ "tlbr\0"
  /* 10594 */ "tlbgr\0"
  /* 10600 */ "tlbwr\0"
  /* 10606 */ "tlbgwr\0"
  /* 10613 */ "deret\0"
  /* 10619 */ "wait\0"
  /* 10624 */ "tlbinv\0"
  /* 10631 */ "tlbginv\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    10444U,	// DBG_VALUE
    10454U,	// DBG_INSTR_REF
    10468U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    10437U,	// BUNDLE
    10478U,	// LIFETIME_START
    10411U,	// LIFETIME_END
    10424U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    10555U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    10335U,	// PATCHABLE_FUNCTION_ENTER
    10252U,	// PATCHABLE_RET
    10381U,	// PATCHABLE_FUNCTION_EXIT
    10358U,	// PATCHABLE_TAIL_CALL
    10310U,	// PATCHABLE_EVENT_CALL
    10286U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    23974U,	// ABSMacro
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND_V_D_PSEUDO
    0U,	// AND_V_H_PSEUDO
    0U,	// AND_V_W_PSEUDO
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I16_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I32_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I64_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_CMP_SWAP_I8_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I16_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I32_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I64_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_ADD_I8_POSTRA
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I16_POSTRA
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I32_POSTRA
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I64_POSTRA
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_AND_I8_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I16_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I32_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I64
    0U,	// ATOMIC_LOAD_MAX_I64_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MAX_I8_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I16_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I32_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I64
    0U,	// ATOMIC_LOAD_MIN_I64_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_MIN_I8_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I16_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I32_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I64_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_NAND_I8_POSTRA
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I16_POSTRA
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I32_POSTRA
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I64_POSTRA
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_OR_I8_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I16_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I32_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I64_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_SUB_I8_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I16_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I32_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I64
    0U,	// ATOMIC_LOAD_UMAX_I64_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMAX_I8_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I16_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I32_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I64
    0U,	// ATOMIC_LOAD_UMIN_I64_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_UMIN_I8_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I16_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I32_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I64_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_LOAD_XOR_I8_POSTRA
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I16_POSTRA
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I32_POSTRA
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I64_POSTRA
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATOMIC_SWAP_I8_POSTRA
    0U,	// B
    0U,	// BAL_BR
    0U,	// BAL_BR_MM
    268458213U,	// BEQLImmMacro
    268456065U,	// BGE
    268456065U,	// BGEImmMacro
    268458074U,	// BGEL
    268458074U,	// BGELImmMacro
    268459700U,	// BGEU
    268459700U,	// BGEUImmMacro
    268458244U,	// BGEUL
    268458244U,	// BGEULImmMacro
    268459581U,	// BGT
    268459581U,	// BGTImmMacro
    268458232U,	// BGTL
    268458232U,	// BGTLImmMacro
    268459826U,	// BGTU
    268459826U,	// BGTUImmMacro
    268458264U,	// BGTUL
    268458264U,	// BGTULImmMacro
    268456105U,	// BLE
    268456105U,	// BLEImmMacro
    268458080U,	// BLEL
    268458080U,	// BLELImmMacro
    268459718U,	// BLEU
    268459718U,	// BLEUImmMacro
    268458251U,	// BLEUL
    268458251U,	// BLEULImmMacro
    268459597U,	// BLT
    268459597U,	// BLTImmMacro
    268458238U,	// BLTL
    268458238U,	// BLTLImmMacro
    268459838U,	// BLTU
    268459838U,	// BLTUImmMacro
    268458271U,	// BLTUL
    268458271U,	// BLTULImmMacro
    268458086U,	// BNELImmMacro
    0U,	// BPOSGE32_PSEUDO
    0U,	// BSEL_D_PSEUDO
    0U,	// BSEL_FD_PSEUDO
    0U,	// BSEL_FW_PSEUDO
    0U,	// BSEL_H_PSEUDO
    0U,	// BSEL_W_PSEUDO
    0U,	// B_MM
    295663U,	// B_MMR6_Pseudo
    295663U,	// B_MM_Pseudo
    268458564U,	// BeqImm
    268456132U,	// BneImm
    536893896U,	// BteqzT8CmpX16
    536893329U,	// BteqzT8CmpiX16
    536895058U,	// BteqzT8SltX16
    536893359U,	// BteqzT8SltiX16
    536895214U,	// BteqzT8SltiuX16
    536895300U,	// BteqzT8SltuX16
    805329352U,	// BtnezT8CmpX16
    805328785U,	// BtnezT8CmpiX16
    805330514U,	// BtnezT8SltX16
    805328815U,	// BtnezT8SltiX16
    805330670U,	// BtnezT8SltiuX16
    805330756U,	// BtnezT8SltuX16
    0U,	// BuildPairF64
    0U,	// BuildPairF64_64
    26462U,	// CFTC1
    10569U,	// CONSTPOOL_ENTRY
    0U,	// COPY_FD_PSEUDO
    0U,	// COPY_FW_PSEUDO
    8972140U,	// CTTC1
    288644U,	// Constant32
    268458258U,	// DMULImmMacro
    268458258U,	// DMULMacro
    268458393U,	// DMULOMacro
    268459801U,	// DMULOUMacro
    268458197U,	// DROL
    268458197U,	// DROLImm
    268458731U,	// DROR
    268458731U,	// DRORImm
    268459963U,	// DSDivIMacro
    268459963U,	// DSDivMacro
    268458316U,	// DSRemIMacro
    268458316U,	// DSRemMacro
    268459871U,	// DUDivIMacro
    268459871U,	// DUDivMacro
    268459794U,	// DURemIMacro
    268459794U,	// DURemMacro
    0U,	// ERet
    0U,	// ExtractElementF64
    0U,	// ExtractElementF64_64
    0U,	// FABS_D
    0U,	// FABS_W
    0U,	// FEXP2_D_1_PSEUDO
    0U,	// FEXP2_W_1_PSEUDO
    0U,	// FILL_FD_PSEUDO
    0U,	// FILL_FW_PSEUDO
    1090541448U,	// GotPrologue16
    0U,	// INSERT_B_VIDX64_PSEUDO
    0U,	// INSERT_B_VIDX_PSEUDO
    0U,	// INSERT_D_VIDX64_PSEUDO
    0U,	// INSERT_D_VIDX_PSEUDO
    0U,	// INSERT_FD_PSEUDO
    0U,	// INSERT_FD_VIDX64_PSEUDO
    0U,	// INSERT_FD_VIDX_PSEUDO
    0U,	// INSERT_FW_PSEUDO
    0U,	// INSERT_FW_VIDX64_PSEUDO
    0U,	// INSERT_FW_VIDX_PSEUDO
    0U,	// INSERT_H_VIDX64_PSEUDO
    0U,	// INSERT_H_VIDX_PSEUDO
    0U,	// INSERT_W_VIDX64_PSEUDO
    0U,	// INSERT_W_VIDX_PSEUDO
    0U,	// JALR64Pseudo
    0U,	// JALRHB64Pseudo
    0U,	// JALRHBPseudo
    0U,	// JALRPseudo
    0U,	// JAL_MMR6
    284660U,	// JalOneReg
    22516U,	// JalTwoReg
    25192320U,	// LDMacro
    0U,	// LDR_D
    0U,	// LDR_W
    0U,	// LD_F16
    25182214U,	// LOAD_ACC128
    25182214U,	// LOAD_ACC64
    25182214U,	// LOAD_ACC64DSP
    25188830U,	// LOAD_CCOND_DSP
    0U,	// LONG_BRANCH_ADDiu
    0U,	// LONG_BRANCH_ADDiu2Op
    0U,	// LONG_BRANCH_DADDiu
    0U,	// LONG_BRANCH_DADDiu2Op
    0U,	// LONG_BRANCH_LUi
    0U,	// LONG_BRANCH_LUi2Op
    0U,	// LONG_BRANCH_LUi2Op_64
    72032U,	// LWM_MM
    17042U,	// LoadAddrImm32
    17063U,	// LoadAddrImm64
    25182866U,	// LoadAddrReg32
    25182887U,	// LoadAddrReg64
    22408U,	// LoadImm32
    22412U,	// LoadImm64
    19107U,	// LoadImmDoubleFGR
    19107U,	// LoadImmDoubleFGR_32
    19107U,	// LoadImmDoubleGPR
    23539U,	// LoadImmSingleFGR
    23539U,	// LoadImmSingleGPR
    812686U,	// LwConstant32
    26588U,	// MFTACX
    268461888U,	// MFTC0
    26469U,	// MFTC1
    288689U,	// MFTDSP
    26566U,	// MFTGPR
    26446U,	// MFTHC1
    26517U,	// MFTHI
    26531U,	// MFTLO
    0U,	// MIPSeh_return32
    0U,	// MIPSeh_return64
    0U,	// MSA_FP_EXTEND_D_PSEUDO
    0U,	// MSA_FP_EXTEND_W_PSEUDO
    0U,	// MSA_FP_ROUND_D_PSEUDO
    0U,	// MSA_FP_ROUND_W_PSEUDO
    8972260U,	// MTTACX
    1376315207U,	// MTTC0
    8972147U,	// MTTC1
    288697U,	// MTTDSP
    8972238U,	// MTTGPR
    8972118U,	// MTTHC1
    8972188U,	// MTTHI
    8972202U,	// MTTLO
    268458259U,	// MULImmMacro
    268458394U,	// MULOMacro
    268459802U,	// MULOUMacro
    24157U,	// MultRxRy16
    43048541U,	// MultRxRyRz16
    24401U,	// MultuRxRy16
    43048785U,	// MultuRxRyRz16
    0U,	// NOP
    268458726U,	// NORImm
    268458726U,	// NORImm64
    0U,	// NOR_V_D_PSEUDO
    0U,	// NOR_V_H_PSEUDO
    0U,	// NOR_V_W_PSEUDO
    0U,	// OR_V_D_PSEUDO
    0U,	// OR_V_H_PSEUDO
    0U,	// OR_V_W_PSEUDO
    0U,	// PseudoCMPU_EQ_QB
    0U,	// PseudoCMPU_LE_QB
    0U,	// PseudoCMPU_LT_QB
    0U,	// PseudoCMP_EQ_PH
    0U,	// PseudoCMP_LE_PH
    0U,	// PseudoCMP_LT_PH
    16390U,	// PseudoCVT_D32_W
    16390U,	// PseudoCVT_D64_L
    16390U,	// PseudoCVT_D64_W
    16390U,	// PseudoCVT_S_L
    16390U,	// PseudoCVT_S_W
    0U,	// PseudoDMULT
    0U,	// PseudoDMULTu
    0U,	// PseudoDSDIV
    0U,	// PseudoDUDIV
    0U,	// PseudoD_SELECT_I
    0U,	// PseudoD_SELECT_I64
    0U,	// PseudoIndirectBranch
    0U,	// PseudoIndirectBranch64
    0U,	// PseudoIndirectBranch64R6
    0U,	// PseudoIndirectBranchR6
    0U,	// PseudoIndirectBranch_MM
    0U,	// PseudoIndirectBranch_MMR6
    0U,	// PseudoIndirectHazardBranch
    0U,	// PseudoIndirectHazardBranch64
    0U,	// PseudoIndrectHazardBranch64R6
    0U,	// PseudoIndrectHazardBranchR6
    0U,	// PseudoMADD
    0U,	// PseudoMADDU
    0U,	// PseudoMADDU_MM
    0U,	// PseudoMADD_MM
    0U,	// PseudoMFHI
    0U,	// PseudoMFHI64
    0U,	// PseudoMFHI_MM
    0U,	// PseudoMFLO
    0U,	// PseudoMFLO64
    0U,	// PseudoMFLO_MM
    0U,	// PseudoMSUB
    0U,	// PseudoMSUBU
    0U,	// PseudoMSUBU_MM
    0U,	// PseudoMSUB_MM
    0U,	// PseudoMTLOHI
    0U,	// PseudoMTLOHI64
    0U,	// PseudoMTLOHI_DSP
    0U,	// PseudoMTLOHI_MM
    0U,	// PseudoMULT
    0U,	// PseudoMULT_MM
    0U,	// PseudoMULTu
    0U,	// PseudoMULTu_MM
    0U,	// PseudoPICK_PH
    0U,	// PseudoPICK_QB
    0U,	// PseudoReturn
    0U,	// PseudoReturn64
    0U,	// PseudoSDIV
    0U,	// PseudoSELECTFP_F_D32
    0U,	// PseudoSELECTFP_F_D64
    0U,	// PseudoSELECTFP_F_I
    0U,	// PseudoSELECTFP_F_I64
    0U,	// PseudoSELECTFP_F_S
    0U,	// PseudoSELECTFP_T_D32
    0U,	// PseudoSELECTFP_T_D64
    0U,	// PseudoSELECTFP_T_I
    0U,	// PseudoSELECTFP_T_I64
    0U,	// PseudoSELECTFP_T_S
    0U,	// PseudoSELECT_D32
    0U,	// PseudoSELECT_D64
    0U,	// PseudoSELECT_I
    0U,	// PseudoSELECT_I64
    0U,	// PseudoSELECT_S
    268455844U,	// PseudoTRUNC_W_D
    268455844U,	// PseudoTRUNC_W_D32
    268459343U,	// PseudoTRUNC_W_S
    0U,	// PseudoUDIV
    268458198U,	// ROL
    268458198U,	// ROLImm
    268458732U,	// ROR
    268458732U,	// RORImm
    0U,	// RetRA
    0U,	// RetRA16
    25185431U,	// SDC1_M1
    0U,	// SDIV_MM_Pseudo
    25192332U,	// SDMacro
    268459964U,	// SDivIMacro
    268459964U,	// SDivMacro
    268462017U,	// SEQIMacro
    268462017U,	// SEQMacro
    268456070U,	// SGE
    268456070U,	// SGEImm
    268456070U,	// SGEImm64
    268459706U,	// SGEU
    268459706U,	// SGEUImm
    268459706U,	// SGEUImm64
    268459586U,	// SGTImm
    268459586U,	// SGTImm64
    268459832U,	// SGTUImm
    268459832U,	// SGTUImm64
    268456115U,	// SLE
    268456115U,	// SLEImm
    268456115U,	// SLEImm64
    268459724U,	// SLEU
    268459724U,	// SLEUImm
    268459724U,	// SLEUImm64
    268459602U,	// SLTImm64
    268459844U,	// SLTUImm64
    268461968U,	// SNEIMacro
    268461968U,	// SNEMacro
    0U,	// SNZ_B_PSEUDO
    0U,	// SNZ_D_PSEUDO
    0U,	// SNZ_H_PSEUDO
    0U,	// SNZ_V_PSEUDO
    0U,	// SNZ_W_PSEUDO
    268458317U,	// SRemIMacro
    268458317U,	// SRemMacro
    25182214U,	// STORE_ACC128
    25182214U,	// STORE_ACC64
    25182214U,	// STORE_ACC64DSP
    25188846U,	// STORE_CCOND_DSP
    0U,	// STR_D
    0U,	// STR_W
    0U,	// ST_F16
    72037U,	// SWM_MM
    0U,	// SZ_B_PSEUDO
    0U,	// SZ_D_PSEUDO
    0U,	// SZ_H_PSEUDO
    0U,	// SZ_V_PSEUDO
    0U,	// SZ_W_PSEUDO
    25182849U,	// SaaAddr
    25186321U,	// SaadAddr
    1402598U,	// SelBeqZ
    1402571U,	// SelBneZ
    1661032904U,	// SelTBteqZCmp
    1661032337U,	// SelTBteqZCmpi
    1661034066U,	// SelTBteqZSlt
    1661032367U,	// SelTBteqZSlti
    1661034222U,	// SelTBteqZSltiu
    1661034308U,	// SelTBteqZSltu
    1929468360U,	// SelTBtneZCmp
    1929467793U,	// SelTBtneZCmpi
    1929469522U,	// SelTBtneZSlt
    1929467823U,	// SelTBtneZSlti
    1929469678U,	// SelTBtneZSltiu
    1929469764U,	// SelTBtneZSltu
    59825746U,	// SltCCRxRy16
    59824047U,	// SltiCCRxImmX16
    59825902U,	// SltiuCCRxImmX16
    59825988U,	// SltuCCRxRy16
    59825988U,	// SltuRxRyRz16
    0U,	// TAILCALL
    0U,	// TAILCALL64R6REG
    0U,	// TAILCALLHB64R6REG
    0U,	// TAILCALLHBR6REG
    0U,	// TAILCALLR6REG
    0U,	// TAILCALLREG
    0U,	// TAILCALLREG64
    0U,	// TAILCALLREGHB
    0U,	// TAILCALLREGHB64
    0U,	// TAILCALLREG_MM
    0U,	// TAILCALLREG_MMR6
    0U,	// TAILCALL_MM
    0U,	// TAILCALL_MMR6
    0U,	// TRAP
    0U,	// TRAP_MM
    0U,	// UDIV_MM_Pseudo
    268459872U,	// UDivIMacro
    268459872U,	// UDivMacro
    268459795U,	// URemIMacro
    268459795U,	// URemMacro
    25187602U,	// Ulh
    25190098U,	// Ulhu
    25192077U,	// Ulw
    25188155U,	// Ush
    25192093U,	// Usw
    0U,	// XOR_V_D_PSEUDO
    0U,	// XOR_V_H_PSEUDO
    0U,	// XOR_V_W_PSEUDO
    22052U,	// ABSQ_S_PH
    22052U,	// ABSQ_S_PH_MM
    18197U,	// ABSQ_S_QB
    18197U,	// ABSQ_S_QB_MMR2
    25616U,	// ABSQ_S_W
    25616U,	// ABSQ_S_W_MM
    268455974U,	// ADD
    18483U,	// ADDIUPC
    18483U,	// ADDIUPC_MM
    18483U,	// ADDIUPC_MMR6
    22995U,	// ADDIUR1SP_MM
    268452218U,	// ADDIUR2_MM
    9486747U,	// ADDIUS5_MM
    285200U,	// ADDIUSP_MM
    268459744U,	// ADDIU_MMR6
    268457313U,	// ADDQH_PH
    268457313U,	// ADDQH_PH_MMR2
    268457430U,	// ADDQH_R_PH
    268457430U,	// ADDQH_R_PH_MMR2
    268460747U,	// ADDQH_R_W
    268460747U,	// ADDQH_R_W_MMR2
    268460350U,	// ADDQH_W
    268460350U,	// ADDQH_W_MMR2
    268457387U,	// ADDQ_PH
    268457387U,	// ADDQ_PH_MM
    268457486U,	// ADDQ_S_PH
    268457486U,	// ADDQ_S_PH_MM
    268461052U,	// ADDQ_S_W
    268461052U,	// ADDQ_S_W_MM
    268459511U,	// ADDR_PS64
    268453979U,	// ADDSC
    268453979U,	// ADDSC_MM
    268452603U,	// ADDS_A_B
    268454140U,	// ADDS_A_D
    268456240U,	// ADDS_A_H
    268460058U,	// ADDS_A_W
    268453071U,	// ADDS_S_B
    268455238U,	// ADDS_S_D
    268456797U,	// ADDS_S_H
    268461102U,	// ADDS_S_W
    268453286U,	// ADDS_U_B
    268455705U,	// ADDS_U_D
    268457075U,	// ADDS_U_H
    268461520U,	// ADDS_U_W
    268452438U,	// ADDU16_MM
    268452438U,	// ADDU16_MMR6
    268453521U,	// ADDUH_QB
    268453521U,	// ADDUH_QB_MMR2
    268453629U,	// ADDUH_R_QB
    268453629U,	// ADDUH_R_QB_MMR2
    268459673U,	// ADDU_MMR6
    268457585U,	// ADDU_PH
    268457585U,	// ADDU_PH_MMR2
    268453734U,	// ADDU_QB
    268453734U,	// ADDU_QB_MM
    268457530U,	// ADDU_S_PH
    268457530U,	// ADDU_S_PH_MMR2
    268453675U,	// ADDU_S_QB
    268453675U,	// ADDU_S_QB_MM
    268452852U,	// ADDVI_B
    268454660U,	// ADDVI_D
    268456456U,	// ADDVI_H
    268460483U,	// ADDVI_W
    268453364U,	// ADDV_B
    268455795U,	// ADDV_D
    268457153U,	// ADDV_H
    268461620U,	// ADDV_W
    268454018U,	// ADDWC
    268454018U,	// ADDWC_MM
    268452585U,	// ADD_A_B
    268454121U,	// ADD_A_D
    268456222U,	// ADD_A_H
    268460039U,	// ADD_A_W
    268455974U,	// ADD_MM
    268455974U,	// ADD_MMR6
    268457806U,	// ADDi
    268457806U,	// ADDi_MM
    268459744U,	// ADDiu
    268459744U,	// ADDiu_MM
    268459673U,	// ADDu
    268459673U,	// ADDu_MM
    268458347U,	// ALIGN
    268458347U,	// ALIGN_MMR6
    18475U,	// ALUIPC
    18475U,	// ALUIPC_MMR6
    268456003U,	// AND
    10060233U,	// AND16_MM
    10060233U,	// AND16_MMR6
    268456003U,	// AND64
    268452318U,	// ANDI16_MM
    268452318U,	// ANDI16_MMR6
    268452711U,	// ANDI_B
    268457812U,	// ANDI_MMR6
    268456003U,	// AND_MM
    268456003U,	// AND_MMR6
    268459883U,	// AND_V
    268457812U,	// ANDi
    268457812U,	// ANDi64
    268457812U,	// ANDi_MM
    268456017U,	// APPEND
    268456017U,	// APPEND_MMR2
    268452965U,	// ASUB_S_B
    268455068U,	// ASUB_S_D
    268456629U,	// ASUB_S_H
    268460882U,	// ASUB_S_W
    268453180U,	// ASUB_U_B
    268455535U,	// ASUB_U_D
    268456917U,	// ASUB_U_H
    268461350U,	// ASUB_U_W
    268457916U,	// AUI
    18468U,	// AUIPC
    18468U,	// AUIPC_MMR6
    268457916U,	// AUI_MMR6
    268453051U,	// AVER_S_B
    268455218U,	// AVER_S_D
    268456767U,	// AVER_S_H
    268461082U,	// AVER_S_W
    268453266U,	// AVER_U_B
    268455685U,	// AVER_U_D
    268457055U,	// AVER_U_H
    268461500U,	// AVER_U_W
    268452993U,	// AVE_S_B
    268455150U,	// AVE_S_D
    268456699U,	// AVE_S_H
    268460964U,	// AVE_S_W
    268453208U,	// AVE_U_B
    268455617U,	// AVE_U_D
    268456987U,	// AVE_U_H
    268461432U,	// AVE_U_W
    24288U,	// AddiuRxImmX16
    1859296U,	// AddiuRxPcImmX16
    2164285152U,	// AddiuRxRxImm16
    16801504U,	// AddiuRxRxImmX16
    67133152U,	// AddiuRxRyOffMemX16
    2123572U,	// AddiuSpImm16
    288564U,	// AddiuSpImmX16
    268459673U,	// AdduRxRyRz16
    16797763U,	// AndRxRxRy16
    295333U,	// B16_MM
    268459672U,	// BADDu
    301039U,	// BAL
    296917U,	// BALC
    296917U,	// BALC_MMR6
    268458346U,	// BALIGN
    268458346U,	// BALIGN_MMR2
    75513935U,	// BBIT0
    75514067U,	// BBIT032
    75514060U,	// BBIT1
    75514076U,	// BBIT132
    296896U,	// BC
    295338U,	// BC16_MMR6
    83912700U,	// BC1EQZ
    83904688U,	// BC1EQZC_MMR6
    83906823U,	// BC1F
    83908716U,	// BC1FL
    83906823U,	// BC1F_MM
    83912684U,	// BC1NEZ
    83904663U,	// BC1NEZC_MMR6
    83910199U,	// BC1T
    83908849U,	// BC1TL
    83910199U,	// BC1T_MM
    83912708U,	// BC2EQZ
    83904697U,	// BC2EQZC_MMR6
    83912692U,	// BC2NEZ
    83904672U,	// BC2NEZC_MMR6
    268452780U,	// BCLRI_B
    268454604U,	// BCLRI_D
    268456400U,	// BCLRI_H
    268460427U,	// BCLRI_W
    268452932U,	// BCLR_B
    268454992U,	// BCLR_D
    268456596U,	// BCLR_H
    268460798U,	// BCLR_W
    296896U,	// BC_MMR6
    268458564U,	// BEQ
    268458564U,	// BEQ64
    268453961U,	// BEQC
    268453961U,	// BEQC64
    268453961U,	// BEQC_MMR6
    268458213U,	// BEQL
    83903097U,	// BEQZ16_MM
    83904509U,	// BEQZALC
    83904509U,	// BEQZALC_MMR6
    83904706U,	// BEQZC
    83902912U,	// BEQZC16_MMR6
    83904706U,	// BEQZC64
    83904706U,	// BEQZC_MM
    83904706U,	// BEQZC_MMR6
    268458564U,	// BEQ_MM
    268453828U,	// BGEC
    268453828U,	// BGEC64
    268453828U,	// BGEC_MMR6
    268453992U,	// BGEUC
    268453992U,	// BGEUC64
    268453992U,	// BGEUC_MMR6
    83912383U,	// BGEZ
    83912383U,	// BGEZ64
    83908601U,	// BGEZAL
    83904482U,	// BGEZALC
    83904482U,	// BGEZALC_MMR6
    83908797U,	// BGEZALL
    83910065U,	// BGEZALS_MM
    83908601U,	// BGEZAL_MM
    83904649U,	// BGEZC
    83904649U,	// BGEZC64
    83904649U,	// BGEZC_MMR6
    83908912U,	// BGEZL
    83912383U,	// BGEZ_MM
    83912443U,	// BGTZ
    83912443U,	// BGTZ64
    83904518U,	// BGTZALC
    83904518U,	// BGTZALC_MMR6
    83904713U,	// BGTZC
    83904713U,	// BGTZC64
    83904713U,	// BGTZC_MMR6
    83908926U,	// BGTZL
    83912443U,	// BGTZ_MM
    285229969U,	// BINSLI_B
    285231793U,	// BINSLI_D
    285233589U,	// BINSLI_H
    285237616U,	// BINSLI_W
    285230116U,	// BINSL_B
    285231993U,	// BINSL_D
    285233703U,	// BINSL_H
    285237774U,	// BINSL_W
    285230030U,	// BINSRI_B
    285231838U,	// BINSRI_D
    285233634U,	// BINSRI_H
    285237661U,	// BINSRI_W
    285230164U,	// BINSR_B
    285232258U,	// BINSR_D
    285233828U,	// BINSR_H
    285238064U,	// BINSR_W
    24499U,	// BITREV
    24499U,	// BITREV_MM
    22945U,	// BITSWAP
    22945U,	// BITSWAP_MMR6
    83912389U,	// BLEZ
    83912389U,	// BLEZ64
    83904491U,	// BLEZALC
    83904491U,	// BLEZALC_MMR6
    83904656U,	// BLEZC
    83904656U,	// BLEZC64
    83904656U,	// BLEZC_MMR6
    83908919U,	// BLEZL
    83912389U,	// BLEZ_MM
    268453986U,	// BLTC
    268453986U,	// BLTC64
    268453986U,	// BLTC_MMR6
    268453999U,	// BLTUC
    268453999U,	// BLTUC64
    268453999U,	// BLTUC_MMR6
    83912449U,	// BLTZ
    83912449U,	// BLTZ64
    83908609U,	// BLTZAL
    83904527U,	// BLTZALC
    83904527U,	// BLTZALC_MMR6
    83908806U,	// BLTZALL
    83910074U,	// BLTZALS_MM
    83908609U,	// BLTZAL_MM
    83904720U,	// BLTZC
    83904720U,	// BLTZC64
    83904720U,	// BLTZC_MMR6
    83908933U,	// BLTZL
    83912449U,	// BLTZ_MM
    285230085U,	// BMNZI_B
    285237156U,	// BMNZ_V
    285230077U,	// BMZI_B
    285237142U,	// BMZ_V
    268456132U,	// BNE
    268456132U,	// BNE64
    268453834U,	// BNEC
    268453834U,	// BNEC64
    268453834U,	// BNEC_MMR6
    268452719U,	// BNEGI_B
    268454552U,	// BNEGI_D
    268456348U,	// BNEGI_H
    268460375U,	// BNEGI_W
    268452687U,	// BNEG_B
    268454528U,	// BNEG_D
    268456324U,	// BNEG_H
    268460270U,	// BNEG_W
    268458086U,	// BNEL
    83903089U,	// BNEZ16_MM
    83904500U,	// BNEZALC
    83904500U,	// BNEZALC_MMR6
    83904681U,	// BNEZC
    83902903U,	// BNEZC16_MMR6
    83904681U,	// BNEZC64
    83904681U,	// BNEZC_MM
    83904681U,	// BNEZC_MMR6
    268456132U,	// BNE_MM
    268454006U,	// BNVC
    268454006U,	// BNVC_MMR6
    83904028U,	// BNZ_B
    83906544U,	// BNZ_D
    83907817U,	// BNZ_H
    83910557U,	// BNZ_V
    83912309U,	// BNZ_W
    268454012U,	// BOVC
    268454012U,	// BOVC_MMR6
    295149U,	// BPOSGE32
    296885U,	// BPOSGE32C_MMR3
    295149U,	// BPOSGE32_MM
    92395472U,	// BREAK
    131572U,	// BREAK16_MM
    131572U,	// BREAK16_MMR6
    92395472U,	// BREAK_MM
    92395472U,	// BREAK_MMR6
    285229944U,	// BSELI_B
    285237114U,	// BSEL_V
    268452834U,	// BSETI_B
    268454642U,	// BSETI_D
    268456438U,	// BSETI_H
    268460465U,	// BSETI_W
    268453148U,	// BSET_B
    268455354U,	// BSET_D
    268456885U,	// BSET_H
    268461256U,	// BSET_W
    83904022U,	// BZ_B
    83906528U,	// BZ_D
    83907811U,	// BZ_H
    83910544U,	// BZ_V
    83912303U,	// BZ_W
    2499831526U,	// BeqzRxImm16
    83912422U,	// BeqzRxImmX16
    2130671U,	// Bimm16
    295663U,	// BimmX16
    2499831499U,	// BnezRxImm16
    83912395U,	// BnezRxImmX16
    10403U,	// Break16
    2385652U,	// Bteqz16
    288500U,	// BteqzX16
    2385625U,	// Btnez16
    288473U,	// BtnezX16
    2773136U,	// CACHE
    2773106U,	// CACHEE
    2773106U,	// CACHEE_MM
    2773136U,	// CACHE_MM
    2773136U,	// CACHE_MMR6
    2773136U,	// CACHE_R6
    19235U,	// CEIL_L_D64
    19235U,	// CEIL_L_D_MMR6
    23567U,	// CEIL_L_S
    23567U,	// CEIL_L_S_MMR6
    20410U,	// CEIL_W_D32
    20410U,	// CEIL_W_D64
    20410U,	// CEIL_W_D_MMR6
    20410U,	// CEIL_W_MM
    23909U,	// CEIL_W_S
    23909U,	// CEIL_W_S_MM
    23909U,	// CEIL_W_S_MMR6
    268452763U,	// CEQI_B
    268454587U,	// CEQI_D
    268456383U,	// CEQI_H
    268460410U,	// CEQI_W
    268452917U,	// CEQ_B
    268454899U,	// CEQ_D
    268456574U,	// CEQ_H
    268460686U,	// CEQ_W
    16482U,	// CFC1
    16482U,	// CFC1_MM
    16698U,	// CFC2_MM
    17113U,	// CFCMSA
    268459459U,	// CINS
    268452126U,	// CINS32
    268459459U,	// CINS64_32
    268459459U,	// CINS_i32
    19880U,	// CLASS_D
    19880U,	// CLASS_D_MMR6
    23760U,	// CLASS_S
    23760U,	// CLASS_S_MMR6
    268453002U,	// CLEI_S_B
    268455159U,	// CLEI_S_D
    268456708U,	// CLEI_S_H
    268460973U,	// CLEI_S_W
    268453217U,	// CLEI_U_B
    268455626U,	// CLEI_U_D
    268456996U,	// CLEI_U_H
    268461441U,	// CLEI_U_W
    268452984U,	// CLE_S_B
    268455141U,	// CLE_S_D
    268456690U,	// CLE_S_H
    268460955U,	// CLE_S_W
    268453199U,	// CLE_U_B
    268455608U,	// CLE_U_D
    268456978U,	// CLE_U_H
    268461423U,	// CLE_U_W
    22913U,	// CLO
    22913U,	// CLO_MM
    22913U,	// CLO_MMR6
    22913U,	// CLO_R6
    268453022U,	// CLTI_S_B
    268455179U,	// CLTI_S_D
    268456728U,	// CLTI_S_H
    268460993U,	// CLTI_S_W
    268453237U,	// CLTI_U_B
    268455646U,	// CLTI_U_D
    268457016U,	// CLTI_U_H
    268461461U,	// CLTI_U_W
    268453090U,	// CLT_S_B
    268455257U,	// CLT_S_D
    268456816U,	// CLT_S_H
    268461121U,	// CLT_S_W
    268453317U,	// CLT_U_B
    268455736U,	// CLT_U_D
    268457106U,	// CLT_U_H
    268461551U,	// CLT_U_W
    26337U,	// CLZ
    26337U,	// CLZ_MM
    26337U,	// CLZ_MMR6
    26337U,	// CLZ_R6
    268453567U,	// CMPGDU_EQ_QB
    268453567U,	// CMPGDU_EQ_QB_MMR2
    268453472U,	// CMPGDU_LE_QB
    268453472U,	// CMPGDU_LE_QB_MMR2
    268453686U,	// CMPGDU_LT_QB
    268453686U,	// CMPGDU_LT_QB_MMR2
    268453581U,	// CMPGU_EQ_QB
    268453581U,	// CMPGU_EQ_QB_MM
    268453486U,	// CMPGU_LE_QB
    268453486U,	// CMPGU_LE_QB_MM
    268453700U,	// CMPGU_LT_QB
    268453700U,	// CMPGU_LT_QB_MM
    18138U,	// CMPU_EQ_QB
    18138U,	// CMPU_EQ_QB_MM
    18043U,	// CMPU_LE_QB
    18043U,	// CMPU_LE_QB_MM
    18257U,	// CMPU_LT_QB
    18257U,	// CMPU_LT_QB_MM
    268454449U,	// CMP_AF_D_MMR6
    268458933U,	// CMP_AF_S_MMR6
    268454888U,	// CMP_EQ_D
    268454888U,	// CMP_EQ_D_MMR6
    21940U,	// CMP_EQ_PH
    21940U,	// CMP_EQ_PH_MM
    268459137U,	// CMP_EQ_S
    268459137U,	// CMP_EQ_S_MMR6
    268454449U,	// CMP_F_D
    268458933U,	// CMP_F_S
    268454293U,	// CMP_LE_D
    268454293U,	// CMP_LE_D_MMR6
    21836U,	// CMP_LE_PH
    21836U,	// CMP_LE_PH_MM
    268458854U,	// CMP_LE_S
    268458854U,	// CMP_LE_S_MMR6
    268455379U,	// CMP_LT_D
    268455379U,	// CMP_LT_D_MMR6
    22109U,	// CMP_LT_PH
    22109U,	// CMP_LT_PH_MM
    268459242U,	// CMP_LT_S
    268459242U,	// CMP_LT_S_MMR6
    268454467U,	// CMP_SAF_D
    268454467U,	// CMP_SAF_D_MMR6
    268458943U,	// CMP_SAF_S
    268458943U,	// CMP_SAF_S_MMR6
    268454915U,	// CMP_SEQ_D
    268454915U,	// CMP_SEQ_D_MMR6
    268459156U,	// CMP_SEQ_S
    268459156U,	// CMP_SEQ_S_MMR6
    268454330U,	// CMP_SLE_D
    268454330U,	// CMP_SLE_D_MMR6
    268458883U,	// CMP_SLE_S
    268458883U,	// CMP_SLE_S_MMR6
    268455406U,	// CMP_SLT_D
    268455406U,	// CMP_SLT_D_MMR6
    268459261U,	// CMP_SLT_S
    268459261U,	// CMP_SLT_S_MMR6
    268454963U,	// CMP_SUEQ_D
    268454963U,	// CMP_SUEQ_D_MMR6
    268459187U,	// CMP_SUEQ_S
    268459187U,	// CMP_SUEQ_S_MMR6
    268454378U,	// CMP_SULE_D
    268454378U,	// CMP_SULE_D_MMR6
    268458914U,	// CMP_SULE_S
    268458914U,	// CMP_SULE_S_MMR6
    268455454U,	// CMP_SULT_D
    268455454U,	// CMP_SULT_D_MMR6
    268459292U,	// CMP_SULT_S
    268459292U,	// CMP_SULT_S_MMR6
    268454836U,	// CMP_SUN_D
    268454836U,	// CMP_SUN_D_MMR6
    268459101U,	// CMP_SUN_S
    268459101U,	// CMP_SUN_S_MMR6
    268454943U,	// CMP_UEQ_D
    268454943U,	// CMP_UEQ_D_MMR6
    268459176U,	// CMP_UEQ_S
    268459176U,	// CMP_UEQ_S_MMR6
    268454358U,	// CMP_ULE_D
    268454358U,	// CMP_ULE_D_MMR6
    268458903U,	// CMP_ULE_S
    268458903U,	// CMP_ULE_S_MMR6
    268455434U,	// CMP_ULT_D
    268455434U,	// CMP_ULT_D_MMR6
    268459281U,	// CMP_ULT_S
    268459281U,	// CMP_ULT_S_MMR6
    268454818U,	// CMP_UN_D
    268454818U,	// CMP_UN_D_MMR6
    268459091U,	// CMP_UN_S
    268459091U,	// CMP_UN_S_MMR6
    2684372233U,	// COPY_S_B
    2684374422U,	// COPY_S_D
    2684375970U,	// COPY_S_H
    2684380297U,	// COPY_S_W
    2684372448U,	// COPY_U_B
    2684376237U,	// COPY_U_H
    2684380704U,	// COPY_U_W
    268453411U,	// CRC32B
    268453419U,	// CRC32CB
    268455959U,	// CRC32CD
    268457220U,	// CRC32CH
    268461700U,	// CRC32CW
    268455945U,	// CRC32D
    268457200U,	// CRC32H
    268461692U,	// CRC32W
    8962173U,	// CTC1
    8962173U,	// CTC1_MM
    8962389U,	// CTC2_MM
    17121U,	// CTCMSA
    23363U,	// CVT_D32_S
    23363U,	// CVT_D32_S_MM
    24662U,	// CVT_D32_W
    24662U,	// CVT_D32_W_MM
    22493U,	// CVT_D64_L
    23363U,	// CVT_D64_S
    23363U,	// CVT_D64_S_MM
    24662U,	// CVT_D64_W
    24662U,	// CVT_D64_W_MM
    22493U,	// CVT_D_L_MMR6
    19256U,	// CVT_L_D64
    19256U,	// CVT_L_D64_MM
    19256U,	// CVT_L_D_MMR6
    23588U,	// CVT_L_S
    23588U,	// CVT_L_S_MM
    23588U,	// CVT_L_S_MMR6
    26258U,	// CVT_PS_PW64
    268459206U,	// CVT_PS_S64
    24089U,	// CVT_PW_PS64
    19603U,	// CVT_S_D32
    19603U,	// CVT_S_D32_MM
    19603U,	// CVT_S_D64
    19603U,	// CVT_S_D64_MM
    22502U,	// CVT_S_L
    22502U,	// CVT_S_L_MMR6
    22747U,	// CVT_S_PL64
    24353U,	// CVT_S_PU64
    25417U,	// CVT_S_W
    25417U,	// CVT_S_W_MM
    25417U,	// CVT_S_W_MMR6
    20431U,	// CVT_W_D32
    20431U,	// CVT_W_D32_MM
    20431U,	// CVT_W_D64
    20431U,	// CVT_W_D64_MM
    23930U,	// CVT_W_S
    23930U,	// CVT_W_S_MM
    23930U,	// CVT_W_S_MMR6
    268454880U,	// C_EQ_D32
    268454880U,	// C_EQ_D32_MM
    268454880U,	// C_EQ_D64
    268454880U,	// C_EQ_D64_MM
    268459129U,	// C_EQ_S
    268459129U,	// C_EQ_S_MM
    268454442U,	// C_F_D32
    268454442U,	// C_F_D32_MM
    268454442U,	// C_F_D64
    268454442U,	// C_F_D64_MM
    268458926U,	// C_F_S
    268458926U,	// C_F_S_MM
    268454285U,	// C_LE_D32
    268454285U,	// C_LE_D32_MM
    268454285U,	// C_LE_D64
    268454285U,	// C_LE_D64_MM
    268458846U,	// C_LE_S
    268458846U,	// C_LE_S_MM
    268455371U,	// C_LT_D32
    268455371U,	// C_LT_D32_MM
    268455371U,	// C_LT_D64
    268455371U,	// C_LT_D64_MM
    268459234U,	// C_LT_S
    268459234U,	// C_LT_S_MM
    268454276U,	// C_NGE_D32
    268454276U,	// C_NGE_D32_MM
    268454276U,	// C_NGE_D64
    268454276U,	// C_NGE_D64_MM
    268458837U,	// C_NGE_S
    268458837U,	// C_NGE_S_MM
    268454311U,	// C_NGLE_D32
    268454311U,	// C_NGLE_D32_MM
    268454311U,	// C_NGLE_D64
    268454311U,	// C_NGLE_D64_MM
    268458864U,	// C_NGLE_S
    268458864U,	// C_NGLE_S_MM
    268454728U,	// C_NGL_D32
    268454728U,	// C_NGL_D32_MM
    268454728U,	// C_NGL_D64
    268454728U,	// C_NGL_D64_MM
    268459060U,	// C_NGL_S
    268459060U,	// C_NGL_S_MM
    268455362U,	// C_NGT_D32
    268455362U,	// C_NGT_D32_MM
    268455362U,	// C_NGT_D64
    268455362U,	// C_NGT_D64_MM
    268459225U,	// C_NGT_S
    268459225U,	// C_NGT_S_MM
    268454321U,	// C_OLE_D32
    268454321U,	// C_OLE_D32_MM
    268454321U,	// C_OLE_D64
    268454321U,	// C_OLE_D64_MM
    268458874U,	// C_OLE_S
    268458874U,	// C_OLE_S_MM
    268455397U,	// C_OLT_D32
    268455397U,	// C_OLT_D32_MM
    268455397U,	// C_OLT_D64
    268455397U,	// C_OLT_D64_MM
    268459252U,	// C_OLT_S
    268459252U,	// C_OLT_S_MM
    268454906U,	// C_SEQ_D32
    268454906U,	// C_SEQ_D32_MM
    268454906U,	// C_SEQ_D64
    268454906U,	// C_SEQ_D64_MM
    268459147U,	// C_SEQ_S
    268459147U,	// C_SEQ_S_MM
    268454512U,	// C_SF_D32
    268454512U,	// C_SF_D32_MM
    268454512U,	// C_SF_D64
    268454512U,	// C_SF_D64_MM
    268458972U,	// C_SF_S
    268458972U,	// C_SF_S_MM
    268454934U,	// C_UEQ_D32
    268454934U,	// C_UEQ_D32_MM
    268454934U,	// C_UEQ_D64
    268454934U,	// C_UEQ_D64_MM
    268459167U,	// C_UEQ_S
    268459167U,	// C_UEQ_S_MM
    268454349U,	// C_ULE_D32
    268454349U,	// C_ULE_D32_MM
    268454349U,	// C_ULE_D64
    268454349U,	// C_ULE_D64_MM
    268458894U,	// C_ULE_S
    268458894U,	// C_ULE_S_MM
    268455425U,	// C_ULT_D32
    268455425U,	// C_ULT_D32_MM
    268455425U,	// C_ULT_D64
    268455425U,	// C_ULT_D64_MM
    268459272U,	// C_ULT_S
    268459272U,	// C_ULT_S_MM
    268454810U,	// C_UN_D32
    268454810U,	// C_UN_D32_MM
    268454810U,	// C_UN_D64
    268454810U,	// C_UN_D64_MM
    268459083U,	// C_UN_S
    268459083U,	// C_UN_S_MM
    22984U,	// CmpRxRy16
    2952812433U,	// CmpiRxImm16
    22417U,	// CmpiRxImmX16
    268455973U,	// DADD
    268457805U,	// DADDi
    268459743U,	// DADDiu
    268459679U,	// DADDu
    268457836U,	// DAHI
    268458354U,	// DALIGN
    268457897U,	// DATI
    268457915U,	// DAUI
    22944U,	// DBITSWAP
    22912U,	// DCLO
    22912U,	// DCLO_R6
    26336U,	// DCLZ
    26336U,	// DCLZ_R6
    268459963U,	// DDIV
    268459871U,	// DDIVU
    10614U,	// DERET
    10614U,	// DERET_MM
    10614U,	// DERET_MMR6
    268459647U,	// DEXT
    268462038U,	// DEXT64_32
    268458329U,	// DEXTM
    268459864U,	// DEXTU
    284496U,	// DI
    268459465U,	// DINS
    268458322U,	// DINSM
    268459819U,	// DINSU
    268459964U,	// DIV
    268459872U,	// DIVU
    268459872U,	// DIVU_MMR6
    268459964U,	// DIV_MMR6
    268453111U,	// DIV_S_B
    268455300U,	// DIV_S_D
    268456837U,	// DIV_S_H
    268461164U,	// DIV_S_W
    268453326U,	// DIV_U_B
    268455767U,	// DIV_U_D
    268457115U,	// DIV_U_H
    268461582U,	// DIV_U_W
    284496U,	// DI_MM
    284496U,	// DI_MMR6
    268452563U,	// DLSA
    268452563U,	// DLSA_R6
    268451841U,	// DMFC0
    16488U,	// DMFC1
    268452160U,	// DMFC2
    100680000U,	// DMFC2_OCTEON
    268451848U,	// DMFGC0
    268456025U,	// DMOD
    268459693U,	// DMODU
    286307U,	// DMT
    1376305206U,	// DMTC0
    8962179U,	// DMTC1
    1376305499U,	// DMTC2
    100680027U,	// DMTC2_OCTEON
    1376305184U,	// DMTGC0
    268457792U,	// DMUH
    268459736U,	// DMUHU
    268458258U,	// DMUL
    24156U,	// DMULT
    24400U,	// DMULTu
    268459780U,	// DMULU
    268458258U,	// DMUL_R6
    268455208U,	// DOTP_S_D
    268456757U,	// DOTP_S_H
    268461032U,	// DOTP_S_W
    268455675U,	// DOTP_U_D
    268457045U,	// DOTP_U_H
    268461490U,	// DOTP_U_W
    285232337U,	// DPADD_S_D
    285233886U,	// DPADD_S_H
    285238151U,	// DPADD_S_W
    285232804U,	// DPADD_U_D
    285234174U,	// DPADD_U_H
    285238619U,	// DPADD_U_W
    268457644U,	// DPAQX_SA_W_PH
    268457644U,	// DPAQX_SA_W_PH_MMR2
    268457727U,	// DPAQX_S_W_PH
    268457727U,	// DPAQX_S_W_PH_MMR2
    268460492U,	// DPAQ_SA_L_W
    268460492U,	// DPAQ_SA_L_W_MM
    268457686U,	// DPAQ_S_W_PH
    268457686U,	// DPAQ_S_W_PH_MM
    268457993U,	// DPAU_H_QBL
    268457993U,	// DPAU_H_QBL_MM
    268458579U,	// DPAU_H_QBR
    268458579U,	// DPAU_H_QBR_MM
    268457765U,	// DPAX_W_PH
    268457765U,	// DPAX_W_PH_MMR2
    268457634U,	// DPA_W_PH
    268457634U,	// DPA_W_PH_MMR2
    22989U,	// DPOP
    268457659U,	// DPSQX_SA_W_PH
    268457659U,	// DPSQX_SA_W_PH_MMR2
    268457741U,	// DPSQX_S_W_PH
    268457741U,	// DPSQX_S_W_PH_MMR2
    268460505U,	// DPSQ_SA_L_W
    268460505U,	// DPSQ_SA_L_W_MM
    268457714U,	// DPSQ_S_W_PH
    268457714U,	// DPSQ_S_W_PH_MM
    285232304U,	// DPSUB_S_D
    285233865U,	// DPSUB_S_H
    285238118U,	// DPSUB_S_W
    285232771U,	// DPSUB_U_D
    285234153U,	// DPSUB_U_H
    285238586U,	// DPSUB_U_W
    268458005U,	// DPSU_H_QBL
    268458005U,	// DPSU_H_QBL_MM
    268458591U,	// DPSU_H_QBR
    268458591U,	// DPSU_H_QBR_MM
    268457776U,	// DPSX_W_PH
    268457776U,	// DPSX_W_PH_MMR2
    268457755U,	// DPS_W_PH
    268457755U,	// DPS_W_PH_MMR2
    268458764U,	// DROTR
    268452117U,	// DROTR32
    268460007U,	// DROTRV
    21752U,	// DSBH
    26407U,	// DSDIV
    20529U,	// DSHD
    268458191U,	// DSLL
    268452087U,	// DSLL32
    3221248207U,	// DSLL64_32
    268459969U,	// DSLLV
    268452557U,	// DSRA
    268452069U,	// DSRA32
    268459948U,	// DSRAV
    268458219U,	// DSRL
    268452095U,	// DSRL32
    268459976U,	// DSRLV
    268453801U,	// DSUB
    268459658U,	// DSUBu
    26393U,	// DUDIV
    285232U,	// DVP
    282835U,	// DVPE
    285232U,	// DVP_MMR6
    26408U,	// DivRxRy16
    26394U,	// DivuRxRy16
    10508U,	// EHB
    10508U,	// EHB_MM
    10508U,	// EHB_MMR6
    284508U,	// EI
    284508U,	// EI_MM
    284508U,	// EI_MMR6
    286312U,	// EMT
    10615U,	// ERET
    10512U,	// ERETNC
    10512U,	// ERETNC_MMR6
    10615U,	// ERET_MM
    10615U,	// ERET_MMR6
    285237U,	// EVP
    282841U,	// EVPE
    285237U,	// EVP_MMR6
    268459648U,	// EXT
    268458538U,	// EXTP
    268458417U,	// EXTPDP
    268459991U,	// EXTPDPV
    268459991U,	// EXTPDPV_MM
    268458417U,	// EXTPDP_MM
    268460000U,	// EXTPV
    268460000U,	// EXTPV_MM
    268458538U,	// EXTP_MM
    268461225U,	// EXTRV_RS_W
    268461225U,	// EXTRV_RS_W_MM
    268460779U,	// EXTRV_R_W
    268460779U,	// EXTRV_R_W_MM
    268456846U,	// EXTRV_S_H
    268456846U,	// EXTRV_S_H_MM
    268461662U,	// EXTRV_W
    268461662U,	// EXTRV_W_MM
    268461214U,	// EXTR_RS_W
    268461214U,	// EXTR_RS_W_MM
    268460758U,	// EXTR_R_W
    268460758U,	// EXTR_R_W_MM
    268456777U,	// EXTR_S_H
    268456777U,	// EXTR_S_H_MM
    268460857U,	// EXTR_W
    268460857U,	// EXTR_W_MM
    268459563U,	// EXTS
    268452134U,	// EXTS32
    268459648U,	// EXT_MM
    268459648U,	// EXT_MMR6
    19872U,	// FABS_D32
    19872U,	// FABS_D32_MM
    19872U,	// FABS_D64
    19872U,	// FABS_D64_MM
    23743U,	// FABS_S
    23743U,	// FABS_S_MM
    268454225U,	// FADD_D
    268454226U,	// FADD_D32
    268454226U,	// FADD_D32_MM
    268454226U,	// FADD_D64
    268454226U,	// FADD_D64_MM
    268459479U,	// FADD_PS64
    268458830U,	// FADD_S
    268458830U,	// FADD_S_MM
    285236046U,	// FADD_S_MMR6
    268460127U,	// FADD_W
    268454459U,	// FCAF_D
    268460246U,	// FCAF_W
    268454898U,	// FCEQ_D
    268460685U,	// FCEQ_W
    19879U,	// FCLASS_D
    25781U,	// FCLASS_W
    268454303U,	// FCLE_D
    268460169U,	// FCLE_W
    268455389U,	// FCLT_D
    268461264U,	// FCLT_W
    3057707U,	// FCMP_D32
    3057707U,	// FCMP_D32_MM
    3057707U,	// FCMP_D64
    3319851U,	// FCMP_S32
    3319851U,	// FCMP_S32_MM
    268454399U,	// FCNE_D
    268460203U,	// FCNE_W
    268455008U,	// FCOR_D
    268460814U,	// FCOR_W
    268454954U,	// FCUEQ_D
    268460701U,	// FCUEQ_W
    268454369U,	// FCULE_D
    268460185U,	// FCULE_W
    268455445U,	// FCULT_D
    268461280U,	// FCULT_W
    268454415U,	// FCUNE_D
    268460219U,	// FCUNE_W
    268454828U,	// FCUN_D
    268460591U,	// FCUN_W
    268455821U,	// FDIV_D
    268455822U,	// FDIV_D32
    268455822U,	// FDIV_D32_MM
    268455822U,	// FDIV_D64
    268455822U,	// FDIV_D64_MM
    268459329U,	// FDIV_S
    268459329U,	// FDIV_S_MM
    285236545U,	// FDIV_S_MMR6
    268461646U,	// FDIV_W
    268456504U,	// FEXDO_H
    268460607U,	// FEXDO_W
    268454112U,	// FEXP2_D
    268460030U,	// FEXP2_W
    19296U,	// FEXUPL_D
    25077U,	// FEXUPL_W
    19568U,	// FEXUPR_D
    25374U,	// FEXUPR_W
    19810U,	// FFINT_S_D
    25674U,	// FFINT_S_W
    20289U,	// FFINT_U_D
    26104U,	// FFINT_U_W
    19306U,	// FFQL_D
    25087U,	// FFQL_W
    19578U,	// FFQR_D
    25384U,	// FFQR_W
    17422U,	// FILL_B
    19281U,	// FILL_D
    21009U,	// FILL_H
    25062U,	// FILL_W
    18647U,	// FLOG2_D
    24565U,	// FLOG2_W
    19245U,	// FLOOR_L_D64
    19245U,	// FLOOR_L_D_MMR6
    23577U,	// FLOOR_L_S
    23577U,	// FLOOR_L_S_MMR6
    20420U,	// FLOOR_W_D32
    20420U,	// FLOOR_W_D64
    20420U,	// FLOOR_W_D_MMR6
    20420U,	// FLOOR_W_MM
    23919U,	// FLOOR_W_S
    23919U,	// FLOOR_W_S_MM
    23919U,	// FLOOR_W_S_MMR6
    285231449U,	// FMADD_D
    285237351U,	// FMADD_W
    268454150U,	// FMAX_A_D
    268460068U,	// FMAX_A_W
    268455896U,	// FMAX_D
    268461671U,	// FMAX_W
    268454130U,	// FMIN_A_D
    268460048U,	// FMIN_A_W
    268454802U,	// FMIN_D
    268460583U,	// FMIN_W
    20381U,	// FMOV_D32
    20381U,	// FMOV_D32_MM
    20381U,	// FMOV_D64
    20381U,	// FMOV_D64_MM
    20381U,	// FMOV_D_MMR6
    23880U,	// FMOV_S
    23880U,	// FMOV_S_MM
    23880U,	// FMOV_S_MMR6
    285231407U,	// FMSUB_D
    285237309U,	// FMSUB_W
    268454786U,	// FMUL_D
    268454787U,	// FMUL_D32
    268454787U,	// FMUL_D32_MM
    268454787U,	// FMUL_D64
    268454787U,	// FMUL_D64_MM
    268459495U,	// FMUL_PS64
    268459069U,	// FMUL_S
    268459069U,	// FMUL_S_MM
    285236285U,	// FMUL_S_MMR6
    268460567U,	// FMUL_W
    19073U,	// FNEG_D32
    19073U,	// FNEG_D32_MM
    19073U,	// FNEG_D64
    19073U,	// FNEG_D64_MM
    23532U,	// FNEG_S
    23532U,	// FNEG_S_MM
    23532U,	// FNEG_S_MMR6
    3523794903U,	// FORK
    19407U,	// FRCP_D
    25160U,	// FRCP_W
    20027U,	// FRINT_D
    25850U,	// FRINT_W
    20055U,	// FRSQRT_D
    25878U,	// FRSQRT_W
    268454478U,	// FSAF_D
    268460254U,	// FSAF_W
    268454926U,	// FSEQ_D
    268460693U,	// FSEQ_W
    268454341U,	// FSLE_D
    268460177U,	// FSLE_W
    268455417U,	// FSLT_D
    268461272U,	// FSLT_W
    268454407U,	// FSNE_D
    268460211U,	// FSNE_W
    268455016U,	// FSOR_D
    268460822U,	// FSOR_W
    20046U,	// FSQRT_D
    20047U,	// FSQRT_D32
    20047U,	// FSQRT_D32_MM
    20047U,	// FSQRT_D64
    20047U,	// FSQRT_D64_MM
    23857U,	// FSQRT_S
    23857U,	// FSQRT_S_MM
    25869U,	// FSQRT_W
    268454183U,	// FSUB_D
    268454184U,	// FSUB_D32
    268454184U,	// FSUB_D32_MM
    268454184U,	// FSUB_D64
    268454184U,	// FSUB_D64_MM
    268459471U,	// FSUB_PS64
    268458812U,	// FSUB_S
    268458812U,	// FSUB_S_MM
    285236028U,	// FSUB_S_MMR6
    268460085U,	// FSUB_W
    268454975U,	// FSUEQ_D
    268460710U,	// FSUEQ_W
    268454390U,	// FSULE_D
    268460194U,	// FSULE_W
    268455466U,	// FSULT_D
    268461289U,	// FSULT_W
    268454424U,	// FSUNE_D
    268460228U,	// FSUNE_W
    268454847U,	// FSUN_D
    268460599U,	// FSUN_W
    19821U,	// FTINT_S_D
    25685U,	// FTINT_S_W
    20300U,	// FTINT_U_D
    26115U,	// FTINT_U_W
    268456581U,	// FTQ_H
    268460719U,	// FTQ_W
    19643U,	// FTRUNC_S_D
    25457U,	// FTRUNC_S_W
    20110U,	// FTRUNC_U_D
    25925U,	// FTRUNC_U_W
    284614U,	// GINVI
    284614U,	// GINVI_MMR6
    109076082U,	// GINVT
    109076082U,	// GINVT_MMR6
    268455111U,	// HADD_S_D
    268456660U,	// HADD_S_H
    268460925U,	// HADD_S_W
    268455578U,	// HADD_U_D
    268456948U,	// HADD_U_H
    268461393U,	// HADD_U_W
    268455078U,	// HSUB_S_D
    268456639U,	// HSUB_S_H
    268460892U,	// HSUB_S_W
    268455545U,	// HSUB_U_D
    268456927U,	// HSUB_U_H
    268461360U,	// HSUB_U_W
    383147U,	// HYPCALL
    383147U,	// HYPCALL_MM
    268453381U,	// ILVEV_B
    268455812U,	// ILVEV_D
    268457170U,	// ILVEV_H
    268461637U,	// ILVEV_W
    268452909U,	// ILVL_B
    268454794U,	// ILVL_D
    268456496U,	// ILVL_H
    268460575U,	// ILVL_W
    268452661U,	// ILVOD_B
    268454267U,	// ILVOD_D
    268456298U,	// ILVOD_H
    268460160U,	// ILVOD_W
    268452957U,	// ILVR_B
    268455051U,	// ILVR_D
    268456621U,	// ILVR_H
    268460865U,	// ILVR_W
    268459460U,	// INS
    120866092U,	// INSERT_B
    129257028U,	// INSERT_D
    137647045U,	// INSERT_H
    146040067U,	// INSERT_W
    16801775U,	// INSV
    154420030U,	// INSVE_B
    162810401U,	// INSVE_D
    171200883U,	// INSVE_H
    179593421U,	// INSVE_W
    16801775U,	// INSV_MM
    268459460U,	// INS_MM
    268459460U,	// INS_MMR6
    284621U,	// J
    284660U,	// JAL
    23264U,	// JALR
    285408U,	// JALR16_MM
    23264U,	// JALR64
    285408U,	// JALRC16_MMR6
    17977U,	// JALRC_HB_MMR6
    18516U,	// JALRC_MMR6
    279095U,	// JALRS16_MM
    24100U,	// JALRS_MM
    17994U,	// JALR_HB
    17994U,	// JALR_HB64
    23264U,	// JALR_MM
    286123U,	// JALS_MM
    288430U,	// JALX
    288430U,	// JALX_MM
    284660U,	// JAL_MM
    18395U,	// JIALC
    18395U,	// JIALC64
    18395U,	// JIALC_MMR6
    18384U,	// JIC
    18384U,	// JIC64
    18384U,	// JIC_MMR6
    285404U,	// JR
    279082U,	// JR16_MM
    285404U,	// JR64
    285209U,	// JRADDIUSP
    280655U,	// JRC16_MM
    278960U,	// JRC16_MMR6
    285197U,	// JRCADDIUSP_MMR6
    280131U,	// JR_HB
    280131U,	// JR_HB64
    280131U,	// JR_HB64_R6
    280131U,	// JR_HB_R6
    285404U,	// JR_MM
    284621U,	// J_MM
    3856372U,	// Jal16
    4118516U,	// JalB16
    10501U,	// JrRa16
    10493U,	// JrcRa16
    280655U,	// JrcRx16
    280660U,	// JumpLinkReg16
    25183827U,	// LB
    25183827U,	// LB64
    25186403U,	// LBE
    25186403U,	// LBE_MM
    25182791U,	// LBU16_MM
    3774899892U,	// LBUX
    3774899892U,	// LBUX_MM
    25190021U,	// LBU_MMR6
    25183827U,	// LB_MM
    25183827U,	// LB_MMR6
    25190021U,	// LBu
    25190021U,	// LBu64
    25186539U,	// LBuE
    25186539U,	// LBuE_MM
    25190021U,	// LBu_MM
    25186362U,	// LD
    25182294U,	// LDC1
    25182294U,	// LDC164
    25182294U,	// LDC1_D64_MMR6
    25182294U,	// LDC1_MM
    25182510U,	// LDC2
    25182510U,	// LDC2_MMR6
    25182510U,	// LDC2_R6
    25182595U,	// LDC3
    17248U,	// LDI_B
    19089U,	// LDI_D
    20885U,	// LDI_H
    24912U,	// LDI_W
    25188432U,	// LDL
    18462U,	// LDPC
    25189018U,	// LDR
    3774890134U,	// LDXC1
    3774890134U,	// LDXC164
    25183014U,	// LD_B
    25184620U,	// LD_D
    25186651U,	// LD_H
    25190513U,	// LD_W
    67133152U,	// LEA_ADDiu
    67133151U,	// LEA_ADDiu64
    67133152U,	// LEA_ADDiu_MM
    25187603U,	// LH
    25187603U,	// LH64
    25186455U,	// LHE
    25186455U,	// LHE_MM
    25182814U,	// LHU16_MM
    3774899881U,	// LHX
    3774899881U,	// LHX_MM
    25187603U,	// LH_MM
    25190099U,	// LHu
    25190099U,	// LHu64
    25186545U,	// LHuE
    25186545U,	// LHuE_MM
    25190099U,	// LHu_MM
    16878U,	// LI16_MM
    16878U,	// LI16_MMR6
    25188528U,	// LL
    25188528U,	// LL64
    25188528U,	// LL64_R6
    25186366U,	// LLD
    25186366U,	// LLD_R6
    25186478U,	// LLE
    25186478U,	// LLE_MM
    25188528U,	// LL_MM
    25188528U,	// LL_MMR6
    25188528U,	// LL_R6
    268452564U,	// LSA
    4061758164U,	// LSA_MMR6
    268452564U,	// LSA_R6
    100685761U,	// LUI_MMR6
    3774890148U,	// LUXC1
    3774890148U,	// LUXC164
    3774890148U,	// LUXC1_MM
    100685761U,	// LUi
    100685761U,	// LUi64
    100685761U,	// LUi_MM
    25192078U,	// LW
    25182821U,	// LW16_MM
    25192078U,	// LW64
    25182346U,	// LWC1
    25182346U,	// LWC1_MM
    25182562U,	// LWC2
    25182562U,	// LWC2_MMR6
    25182562U,	// LWC2_R6
    25182607U,	// LWC3
    25192078U,	// LWDSP
    25192078U,	// LWDSP_MM
    25186557U,	// LWE
    25186557U,	// LWE_MM
    25192078U,	// LWGP_MM
    25188646U,	// LWL
    25188646U,	// LWL64
    25186488U,	// LWLE
    25186488U,	// LWLE_MM
    25188646U,	// LWL_MM
    66059U,	// LWM16_MM
    66059U,	// LWM16_MMR6
    65799U,	// LWM32_MM
    18499U,	// LWPC
    18499U,	// LWPC_MMR6
    184572474U,	// LWP_MM
    25189152U,	// LWR
    25189152U,	// LWR64
    25186527U,	// LWRE
    25186527U,	// LWRE_MM
    25189152U,	// LWR_MM
    25192078U,	// LWSP_MM
    18492U,	// LWUPC
    25190246U,	// LWU_MM
    3774899898U,	// LWX
    3774890162U,	// LWXC1
    3774890162U,	// LWXC1_MM
    3774897713U,	// LWXS_MM
    3774899898U,	// LWX_MM
    25192078U,	// LW_MM
    25192078U,	// LW_MMR6
    25190246U,	// LWu
    25183827U,	// LbRxRyOffMemX16
    25190021U,	// LbuRxRyOffMemX16
    25187603U,	// LhRxRyOffMemX16
    25190099U,	// LhuRxRyOffMemX16
    2952812424U,	// LiRxImm16
    22398U,	// LiRxImmAlignX16
    22408U,	// LiRxImmX16
    2147509902U,	// LwRxPcTcp16
    26254U,	// LwRxPcTcpX16
    25192078U,	// LwRxRyOffMemX16
    25192078U,	// LwRxSpImmX16
    20523U,	// MADD
    285231711U,	// MADDF_D
    285231711U,	// MADDF_D_MMR6
    285236179U,	// MADDF_S
    285236179U,	// MADDF_S_MMR6
    285233769U,	// MADDR_Q_H
    285237880U,	// MADDR_Q_W
    24230U,	// MADDU
    268459686U,	// MADDU_DSP
    268459686U,	// MADDU_DSP_MM
    24230U,	// MADDU_MM
    285230579U,	// MADDV_B
    285233010U,	// MADDV_D
    285234368U,	// MADDV_H
    285238835U,	// MADDV_W
    268454234U,	// MADD_D32
    268454234U,	// MADD_D32_MM
    268454234U,	// MADD_D64
    268455979U,	// MADD_DSP
    268455979U,	// MADD_DSP_MM
    20523U,	// MADD_MM
    285233739U,	// MADD_Q_H
    285237850U,	// MADD_Q_W
    268458829U,	// MADD_S
    268458829U,	// MADD_S_MM
    268458099U,	// MAQ_SA_W_PHL
    268458099U,	// MAQ_SA_W_PHL_MM
    268458660U,	// MAQ_SA_W_PHR
    268458660U,	// MAQ_SA_W_PHR_MM
    268458127U,	// MAQ_S_W_PHL
    268458127U,	// MAQ_S_W_PHL_MM
    268458688U,	// MAQ_S_W_PHR
    268458688U,	// MAQ_S_W_PHR_MM
    268454175U,	// MAXA_D
    268454175U,	// MAXA_D_MMR6
    268458802U,	// MAXA_S
    268458802U,	// MAXA_S_MMR6
    268453032U,	// MAXI_S_B
    268455189U,	// MAXI_S_D
    268456738U,	// MAXI_S_H
    268461003U,	// MAXI_S_W
    268453247U,	// MAXI_U_B
    268455656U,	// MAXI_U_D
    268457026U,	// MAXI_U_H
    268461471U,	// MAXI_U_W
    268452613U,	// MAX_A_B
    268454151U,	// MAX_A_D
    268456250U,	// MAX_A_H
    268460069U,	// MAX_A_W
    268455897U,	// MAX_D
    268455897U,	// MAX_D_MMR6
    268459395U,	// MAX_S
    268453120U,	// MAX_S_B
    268455309U,	// MAX_S_D
    268456857U,	// MAX_S_H
    268459395U,	// MAX_S_MMR6
    268461184U,	// MAX_S_W
    268453335U,	// MAX_U_B
    268455776U,	// MAX_U_D
    268457124U,	// MAX_U_H
    268461591U,	// MAX_U_W
    268451842U,	// MFC0
    268451842U,	// MFC0_MMR6
    16489U,	// MFC1
    16489U,	// MFC1_D64
    16489U,	// MFC1_MM
    16489U,	// MFC1_MMR6
    268452161U,	// MFC2
    16705U,	// MFC2_MMR6
    268451849U,	// MFGC0
    268451849U,	// MFGC0_MM
    268451880U,	// MFHC0_MMR6
    16495U,	// MFHC1_D32
    16495U,	// MFHC1_D32_MM
    16495U,	// MFHC1_D64
    16495U,	// MFHC1_D64_MM
    16711U,	// MFHC2_MMR6
    268451856U,	// MFHGC0
    268451856U,	// MFHGC0_MM
    284530U,	// MFHI
    279014U,	// MFHI16_MM
    284530U,	// MFHI64
    22386U,	// MFHI_DSP
    22386U,	// MFHI_DSP_MM
    284530U,	// MFHI_MM
    285062U,	// MFLO
    279065U,	// MFLO16_MM
    285062U,	// MFLO64
    22918U,	// MFLO_DSP
    22918U,	// MFLO_DSP_MM
    285062U,	// MFLO_MM
    268458758U,	// MFTR
    268454160U,	// MINA_D
    268454160U,	// MINA_D_MMR6
    268458794U,	// MINA_S
    268458794U,	// MINA_S_MMR6
    268453012U,	// MINI_S_B
    268455169U,	// MINI_S_D
    268456718U,	// MINI_S_H
    268460983U,	// MINI_S_W
    268453227U,	// MINI_U_B
    268455636U,	// MINI_U_D
    268457006U,	// MINI_U_H
    268461451U,	// MINI_U_W
    268452594U,	// MIN_A_B
    268454131U,	// MIN_A_D
    268456231U,	// MIN_A_H
    268460049U,	// MIN_A_W
    268454803U,	// MIN_D
    268454803U,	// MIN_D_MMR6
    268459076U,	// MIN_S
    268453042U,	// MIN_S_B
    268455199U,	// MIN_S_D
    268456748U,	// MIN_S_H
    268459076U,	// MIN_S_MMR6
    268461023U,	// MIN_S_W
    268453257U,	// MIN_U_B
    268455666U,	// MIN_U_D
    268457036U,	// MIN_U_H
    268461481U,	// MIN_U_W
    268456026U,	// MOD
    268453799U,	// MODSUB
    268453799U,	// MODSUB_MM
    268459694U,	// MODU
    268459694U,	// MODU_MMR6
    268456026U,	// MOD_MMR6
    268452975U,	// MOD_S_B
    268455132U,	// MOD_S_D
    268456681U,	// MOD_S_H
    268460946U,	// MOD_S_W
    268453190U,	// MOD_U_B
    268455599U,	// MOD_U_D
    268456969U,	// MOD_U_H
    268461414U,	// MOD_U_W
    20727U,	// MOVE16_MM
    16848U,	// MOVE16_MMR6
    268458425U,	// MOVEP_MM
    268458425U,	// MOVEP_MMR6
    24434U,	// MOVE_V
    268454520U,	// MOVF_D32
    268454520U,	// MOVF_D32_MM
    268454520U,	// MOVF_D64
    268456211U,	// MOVF_I
    268456211U,	// MOVF_I64
    268456211U,	// MOVF_I_MM
    268458980U,	// MOVF_S
    268458980U,	// MOVF_S_MM
    268454855U,	// MOVN_I64_D64
    268458362U,	// MOVN_I64_I
    268458362U,	// MOVN_I64_I64
    268459112U,	// MOVN_I64_S
    268454855U,	// MOVN_I_D32
    268454855U,	// MOVN_I_D32_MM
    268454855U,	// MOVN_I_D64
    268458362U,	// MOVN_I_I
    268458362U,	// MOVN_I_I64
    268458362U,	// MOVN_I_MM
    268459112U,	// MOVN_I_S
    268459112U,	// MOVN_I_S_MM
    268455527U,	// MOVT_D32
    268455527U,	// MOVT_D32_MM
    268455527U,	// MOVT_D64
    268459641U,	// MOVT_I
    268459641U,	// MOVT_I64
    268459641U,	// MOVT_I_MM
    268459321U,	// MOVT_S
    268459321U,	// MOVT_S_MM
    268455937U,	// MOVZ_I64_D64
    268461831U,	// MOVZ_I64_I
    268461831U,	// MOVZ_I64_I64
    268459422U,	// MOVZ_I64_S
    268455937U,	// MOVZ_I_D32
    268455937U,	// MOVZ_I_D32_MM
    268455937U,	// MOVZ_I_D64
    268461831U,	// MOVZ_I_I
    268461831U,	// MOVZ_I_I64
    268461831U,	// MOVZ_I_MM
    268459422U,	// MOVZ_I_S
    268459422U,	// MOVZ_I_S_MM
    18351U,	// MSUB
    285231702U,	// MSUBF_D
    285231702U,	// MSUBF_D_MMR6
    285236170U,	// MSUBF_S
    285236170U,	// MSUBF_S_MMR6
    285233758U,	// MSUBR_Q_H
    285237869U,	// MSUBR_Q_W
    24209U,	// MSUBU
    268459665U,	// MSUBU_DSP
    268459665U,	// MSUBU_DSP_MM
    24209U,	// MSUBU_MM
    285230570U,	// MSUBV_B
    285233001U,	// MSUBV_D
    285234359U,	// MSUBV_H
    285238826U,	// MSUBV_W
    268454192U,	// MSUB_D32
    268454192U,	// MSUB_D32_MM
    268454192U,	// MSUB_D64
    268453807U,	// MSUB_DSP
    268453807U,	// MSUB_DSP_MM
    18351U,	// MSUB_MM
    285233729U,	// MSUB_Q_H
    285237840U,	// MSUB_Q_W
    268458811U,	// MSUB_S
    268458811U,	// MSUB_S_MM
    1376305207U,	// MTC0
    1376305207U,	// MTC0_MMR6
    8962180U,	// MTC1
    8962180U,	// MTC1_D64
    8962180U,	// MTC1_D64_MM
    8962180U,	// MTC1_MM
    8962180U,	// MTC1_MMR6
    1376305500U,	// MTC2
    8962396U,	// MTC2_MMR6
    1376305185U,	// MTGC0
    1376305185U,	// MTGC0_MM
    1376305199U,	// MTHC0_MMR6
    9011318U,	// MTHC1_D32
    9011318U,	// MTHC1_D32_MM
    9011318U,	// MTHC1_D64
    9011318U,	// MTHC1_D64_MM
    8962382U,	// MTHC2_MMR6
    1376305176U,	// MTHGC0
    1376305176U,	// MTHGC0_MM
    284536U,	// MTHI
    284536U,	// MTHI64
    8968056U,	// MTHI_DSP
    8968056U,	// MTHI_DSP_MM
    284536U,	// MTHI_MM
    8968640U,	// MTHLIP
    8968640U,	// MTHLIP_MM
    285075U,	// MTLO
    285075U,	// MTLO64
    8968595U,	// MTLO_DSP
    8968595U,	// MTLO_DSP_MM
    285075U,	// MTLO_MM
    278595U,	// MTM0
    278720U,	// MTM1
    278894U,	// MTM2
    278601U,	// MTP0
    278726U,	// MTP1
    278900U,	// MTP2
    34134803U,	// MTTR
    268457793U,	// MUH
    268459737U,	// MUHU
    268459737U,	// MUHU_MMR6
    268457793U,	// MUH_MMR6
    268458259U,	// MUL
    268458140U,	// MULEQ_S_W_PHL
    268458140U,	// MULEQ_S_W_PHL_MM
    268458701U,	// MULEQ_S_W_PHR
    268458701U,	// MULEQ_S_W_PHR_MM
    268458017U,	// MULEU_S_PH_QBL
    268458017U,	// MULEU_S_PH_QBL_MM
    268458603U,	// MULEU_S_PH_QBR
    268458603U,	// MULEU_S_PH_QBR_MM
    268457553U,	// MULQ_RS_PH
    268457553U,	// MULQ_RS_PH_MM
    268461203U,	// MULQ_RS_W
    268461203U,	// MULQ_RS_W_MMR2
    268457497U,	// MULQ_S_PH
    268457497U,	// MULQ_S_PH_MMR2
    268461062U,	// MULQ_S_W
    268461062U,	// MULQ_S_W_MMR2
    268459520U,	// MULR_PS64
    268456564U,	// MULR_Q_H
    268460675U,	// MULR_Q_W
    268457699U,	// MULSAQ_S_W_PH
    268457699U,	// MULSAQ_S_W_PH_MM
    268457674U,	// MULSA_W_PH
    268457674U,	// MULSA_W_PH_MMR2
    24157U,	// MULT
    268459857U,	// MULTU_DSP
    268459857U,	// MULTU_DSP_MM
    268459613U,	// MULT_DSP
    268459613U,	// MULT_DSP_MM
    24157U,	// MULT_MM
    24401U,	// MULTu
    24401U,	// MULTu_MM
    268459774U,	// MULU
    268459774U,	// MULU_MMR6
    268453390U,	// MULV_B
    268455829U,	// MULV_D
    268457179U,	// MULV_H
    268461654U,	// MULV_W
    268458259U,	// MUL_MM
    268458259U,	// MUL_MMR6
    268457370U,	// MUL_PH
    268457370U,	// MUL_PH_MMR2
    268456533U,	// MUL_Q_H
    268460644U,	// MUL_Q_W
    268458259U,	// MUL_R6
    268457465U,	// MUL_S_PH
    268457465U,	// MUL_S_PH_MMR2
    284530U,	// Mfhi16
    285062U,	// Mflo16
    20727U,	// Move32R16
    20727U,	// MoveR3216
    17173U,	// NLOC_B
    18753U,	// NLOC_D
    20810U,	// NLOC_H
    24646U,	// NLOC_W
    17181U,	// NLZC_B
    18761U,	// NLZC_D
    20818U,	// NLZC_H
    24654U,	// NLZC_W
    268454242U,	// NMADD_D32
    268454242U,	// NMADD_D32_MM
    268454242U,	// NMADD_D64
    268458828U,	// NMADD_S
    268458828U,	// NMADD_S_MM
    268454200U,	// NMSUB_D32
    268454200U,	// NMSUB_D32_MM
    268454200U,	// NMSUB_D64
    268458810U,	// NMSUB_S
    268458810U,	// NMSUB_S_MM
    268458726U,	// NOR
    268458726U,	// NOR64
    268452798U,	// NORI_B
    268458726U,	// NOR_MM
    268458726U,	// NOR_MMR6
    268459906U,	// NOR_V
    16960U,	// NOT16_MM
    16960U,	// NOT16_MMR6
    20761U,	// NegRxRy16
    24173U,	// NotRxRy16
    268458727U,	// OR
    10060337U,	// OR16_MM
    10060337U,	// OR16_MMR6
    268458727U,	// OR64
    268452799U,	// ORI_B
    268457892U,	// ORI_MMR6
    268458727U,	// OR_MM
    268458727U,	// OR_MMR6
    268459907U,	// OR_V
    268457892U,	// ORi
    268457892U,	// ORi64
    268457892U,	// ORi_MM
    16800487U,	// OrRxRxRy16
    268457359U,	// PACKRL_PH
    268457359U,	// PACKRL_PH_MM
    10519U,	// PAUSE
    10519U,	// PAUSE_MM
    10519U,	// PAUSE_MMR6
    268453372U,	// PCKEV_B
    268455803U,	// PCKEV_D
    268457161U,	// PCKEV_H
    268461628U,	// PCKEV_W
    268452652U,	// PCKOD_B
    268454258U,	// PCKOD_D
    268456289U,	// PCKOD_H
    268460151U,	// PCKOD_W
    17700U,	// PCNT_B
    20019U,	// PCNT_D
    21437U,	// PCNT_H
    25842U,	// PCNT_W
    268457323U,	// PICK_PH
    268457323U,	// PICK_PH_MM
    268453531U,	// PICK_QB
    268453531U,	// PICK_QB_MM
    268459487U,	// PLL_PS64
    268459529U,	// PLU_PS64
    22990U,	// POP
    22592U,	// PRECEQU_PH_QBL
    17046U,	// PRECEQU_PH_QBLA
    17046U,	// PRECEQU_PH_QBLA_MM
    22592U,	// PRECEQU_PH_QBL_MM
    23178U,	// PRECEQU_PH_QBR
    17084U,	// PRECEQU_PH_QBRA
    17084U,	// PRECEQU_PH_QBRA_MM
    23178U,	// PRECEQU_PH_QBR_MM
    22657U,	// PRECEQ_W_PHL
    22657U,	// PRECEQ_W_PHL_MM
    23218U,	// PRECEQ_W_PHR
    23218U,	// PRECEQ_W_PHR_MM
    22577U,	// PRECEU_PH_QBL
    17030U,	// PRECEU_PH_QBLA
    17030U,	// PRECEU_PH_QBLA_MM
    22577U,	// PRECEU_PH_QBL_MM
    23163U,	// PRECEU_PH_QBR
    17068U,	// PRECEU_PH_QBRA
    17068U,	// PRECEU_PH_QBRA_MM
    23163U,	// PRECEU_PH_QBR_MM
    268457275U,	// PRECRQU_S_QB_PH
    268457275U,	// PRECRQU_S_QB_PH_MM
    268460294U,	// PRECRQ_PH_W
    268460294U,	// PRECRQ_PH_W_MM
    268457248U,	// PRECRQ_QB_PH
    268457248U,	// PRECRQ_QB_PH_MM
    268460325U,	// PRECRQ_RS_PH_W
    268460325U,	// PRECRQ_RS_PH_W_MM
    268457262U,	// PRECR_QB_PH
    268457262U,	// PRECR_QB_PH_MMR2
    268460278U,	// PRECR_SRA_PH_W
    268460278U,	// PRECR_SRA_PH_W_MMR2
    268460307U,	// PRECR_SRA_R_PH_W
    268460307U,	// PRECR_SRA_R_PH_W_MMR2
    2773261U,	// PREF
    2773114U,	// PREFE
    2773114U,	// PREFE_MM
    194668194U,	// PREFX_MM
    2773261U,	// PREF_MM
    2773261U,	// PREF_MMR6
    2773261U,	// PREF_R6
    268456008U,	// PREPEND
    268456008U,	// PREPEND_MMR2
    268459503U,	// PUL_PS64
    268459537U,	// PUU_PS64
    18327U,	// RADDU_W_QB
    18327U,	// RADDU_W_QB_MM
    92297727U,	// RDDSP
    201349631U,	// RDDSP_MM
    268458777U,	// RDHWR
    268458777U,	// RDHWR64
    268458777U,	// RDHWR_MM
    268458777U,	// RDHWR_MMR6
    23286U,	// RDPGPR_MMR6
    19415U,	// RECIP_D32
    19415U,	// RECIP_D32_MM
    19415U,	// RECIP_D64
    19415U,	// RECIP_D64_MM
    23664U,	// RECIP_S
    23664U,	// RECIP_S_MM
    22158U,	// REPLV_PH
    22158U,	// REPLV_PH_MM
    18307U,	// REPLV_QB
    18307U,	// REPLV_QB_MM
    21885U,	// REPL_PH
    21885U,	// REPL_PH_MM
    209733293U,	// REPL_QB
    209733293U,	// REPL_QB_MM
    20028U,	// RINT_D
    20028U,	// RINT_D_MMR6
    23848U,	// RINT_S
    23848U,	// RINT_S_MMR6
    268458765U,	// ROTR
    268460008U,	// ROTRV
    268460008U,	// ROTRV_MM
    268458765U,	// ROTR_MM
    19224U,	// ROUND_L_D64
    19224U,	// ROUND_L_D_MMR6
    23556U,	// ROUND_L_S
    23556U,	// ROUND_L_S_MMR6
    20399U,	// ROUND_W_D32
    20399U,	// ROUND_W_D64
    20399U,	// ROUND_W_D_MMR6
    20399U,	// ROUND_W_MM
    23898U,	// ROUND_W_S
    23898U,	// ROUND_W_S_MM
    23898U,	// ROUND_W_S_MMR6
    20056U,	// RSQRT_D32
    20056U,	// RSQRT_D32_MM
    20056U,	// RSQRT_D64
    20056U,	// RSQRT_D64_MM
    23856U,	// RSQRT_S
    23856U,	// RSQRT_S_MM
    0U,	// Restore16
    0U,	// RestoreX16
    4211329U,	// SAA
    4214801U,	// SAAD
    268453081U,	// SAT_S_B
    268455248U,	// SAT_S_D
    268456807U,	// SAT_S_H
    268461112U,	// SAT_S_W
    268453308U,	// SAT_U_B
    268455727U,	// SAT_U_D
    268457097U,	// SAT_U_H
    268461542U,	// SAT_U_W
    25184163U,	// SB
    25182628U,	// SB16_MM
    25182628U,	// SB16_MMR6
    25184163U,	// SB64
    25186408U,	// SBE
    25186408U,	// SBE_MM
    25184163U,	// SB_MM
    25184163U,	// SB_MMR6
    4507742U,	// SC
    4507742U,	// SC64
    4507742U,	// SC64_R6
    4509728U,	// SCD
    4509728U,	// SCD_R6
    4509805U,	// SCE
    4509805U,	// SCE_MM
    4507742U,	// SC_MM
    4507742U,	// SC_MMR6
    4507742U,	// SC_R6
    25186399U,	// SD
    203178U,	// SDBBP
    131617U,	// SDBBP16_MM
    131617U,	// SDBBP16_MMR6
    383402U,	// SDBBP_MM
    203178U,	// SDBBP_MMR6
    203178U,	// SDBBP_R6
    25182300U,	// SDC1
    25182300U,	// SDC164
    25182300U,	// SDC1_D64_MMR6
    25182300U,	// SDC1_MM
    25182516U,	// SDC2
    25182516U,	// SDC2_MMR6
    25182516U,	// SDC2_R6
    25182601U,	// SDC3
    26408U,	// SDIV
    26408U,	// SDIV_MM
    25188437U,	// SDL
    25189023U,	// SDR
    3774890141U,	// SDXC1
    3774890141U,	// SDXC164
    17972U,	// SEB
    17972U,	// SEB64
    17972U,	// SEB_MM
    21773U,	// SEH
    21773U,	// SEH64
    21773U,	// SEH_MM
    268461804U,	// SELEQZ
    268461804U,	// SELEQZ64
    268455927U,	// SELEQZ_D
    268455927U,	// SELEQZ_D_MMR6
    268461804U,	// SELEQZ_MMR6
    268459412U,	// SELEQZ_S
    268459412U,	// SELEQZ_S_MMR6
    268461777U,	// SELNEZ
    268461777U,	// SELNEZ64
    268455910U,	// SELNEZ_D
    268455910U,	// SELNEZ_D_MMR6
    268461777U,	// SELNEZ_MMR6
    268459402U,	// SELNEZ_S
    268459402U,	// SELNEZ_S_MMR6
    285231937U,	// SEL_D
    285231937U,	// SEL_D_MMR6
    285236269U,	// SEL_S
    285236269U,	// SEL_S_MMR6
    268458569U,	// SEQ
    268457879U,	// SEQi
    25188156U,	// SH
    25182680U,	// SH16_MM
    25182680U,	// SH16_MMR6
    25188156U,	// SH64
    25186460U,	// SHE
    25186460U,	// SHE_MM
    268452680U,	// SHF_B
    268456317U,	// SHF_H
    268460263U,	// SHF_W
    22924U,	// SHILO
    24527U,	// SHILOV
    24527U,	// SHILOV_MM
    22924U,	// SHILO_MM
    268457604U,	// SHLLV_PH
    268457604U,	// SHLLV_PH_MM
    268453753U,	// SHLLV_QB
    268453753U,	// SHLLV_QB_MM
    268457541U,	// SHLLV_S_PH
    268457541U,	// SHLLV_S_PH_MM
    268461173U,	// SHLLV_S_W
    268461173U,	// SHLLV_S_W_MM
    268457332U,	// SHLL_PH
    268457332U,	// SHLL_PH_MM
    268453540U,	// SHLL_QB
    268453540U,	// SHLL_QB_MM
    268457454U,	// SHLL_S_PH
    268457454U,	// SHLL_S_PH_MM
    268461013U,	// SHLL_S_W
    268461013U,	// SHLL_S_W_MM
    268457594U,	// SHRAV_PH
    268457594U,	// SHRAV_PH_MM
    268453743U,	// SHRAV_QB
    268453743U,	// SHRAV_QB_MMR2
    268457442U,	// SHRAV_R_PH
    268457442U,	// SHRAV_R_PH_MM
    268453641U,	// SHRAV_R_QB
    268453641U,	// SHRAV_R_QB_MMR2
    268460768U,	// SHRAV_R_W
    268460768U,	// SHRAV_R_W_MM
    268457239U,	// SHRA_PH
    268457239U,	// SHRA_PH_MM
    268453463U,	// SHRA_QB
    268453463U,	// SHRA_QB_MMR2
    268457407U,	// SHRA_R_PH
    268457407U,	// SHRA_R_PH_MM
    268453606U,	// SHRA_R_QB
    268453606U,	// SHRA_R_QB_MMR2
    268460726U,	// SHRA_R_W
    268460726U,	// SHRA_R_W_MM
    268457624U,	// SHRLV_PH
    268457624U,	// SHRLV_PH_MMR2
    268453773U,	// SHRLV_QB
    268453773U,	// SHRLV_QB_MM
    268457350U,	// SHRL_PH
    268457350U,	// SHRL_PH_MMR2
    268453558U,	// SHRL_QB
    268453558U,	// SHRL_QB_MM
    25188156U,	// SH_MM
    25188156U,	// SH_MMR6
    217249U,	// SIGRIE
    217249U,	// SIGRIE_MMR6
    2701149023U,	// SLDI_B
    2701150864U,	// SLDI_D
    2701152660U,	// SLDI_H
    2701156687U,	// SLDI_W
    2701148965U,	// SLD_B
    2701150571U,	// SLD_D
    2701152602U,	// SLD_H
    2701156464U,	// SLD_W
    268458192U,	// SLL
    268452349U,	// SLL16_MM
    268452349U,	// SLL16_MMR6
    268458192U,	// SLL64_32
    268458192U,	// SLL64_64
    268452737U,	// SLLI_B
    268454561U,	// SLLI_D
    268456357U,	// SLLI_H
    268460384U,	// SLLI_W
    268459970U,	// SLLV
    268459970U,	// SLLV_MM
    268452886U,	// SLL_B
    268454745U,	// SLL_D
    268456473U,	// SLL_H
    268458192U,	// SLL_MM
    268458192U,	// SLL_MMR6
    268460526U,	// SLL_W
    268459602U,	// SLT
    268459602U,	// SLT64
    268459602U,	// SLT_MM
    268457903U,	// SLTi
    268457903U,	// SLTi64
    268457903U,	// SLTi_MM
    268459758U,	// SLTiu
    268459758U,	// SLTiu64
    268459758U,	// SLTiu_MM
    268459844U,	// SLTu
    268459844U,	// SLTu64
    268459844U,	// SLTu_MM
    268456137U,	// SNE
    268457824U,	// SNEi
    2684371928U,	// SPLATI_B
    2684373736U,	// SPLATI_D
    2684375532U,	// SPLATI_H
    2684379559U,	// SPLATI_W
    2684372243U,	// SPLAT_B
    2684374449U,	// SPLAT_D
    2684375980U,	// SPLAT_H
    2684380351U,	// SPLAT_W
    268452558U,	// SRA
    268452695U,	// SRAI_B
    268454536U,	// SRAI_D
    268456332U,	// SRAI_H
    268460359U,	// SRAI_W
    268452771U,	// SRARI_B
    268454595U,	// SRARI_D
    268456391U,	// SRARI_H
    268460418U,	// SRARI_W
    268452924U,	// SRAR_B
    268454984U,	// SRAR_D
    268456588U,	// SRAR_H
    268460790U,	// SRAR_W
    268459949U,	// SRAV
    268459949U,	// SRAV_MM
    268452622U,	// SRA_B
    268454168U,	// SRA_D
    268456259U,	// SRA_H
    268452558U,	// SRA_MM
    268460078U,	// SRA_W
    268458220U,	// SRL
    268452356U,	// SRL16_MM
    268452356U,	// SRL16_MMR6
    268452745U,	// SRLI_B
    268454569U,	// SRLI_D
    268456365U,	// SRLI_H
    268460392U,	// SRLI_W
    268452789U,	// SRLRI_B
    268454613U,	// SRLRI_D
    268456409U,	// SRLRI_H
    268460436U,	// SRLRI_W
    268452940U,	// SRLR_B
    268455000U,	// SRLR_D
    268456604U,	// SRLR_H
    268460806U,	// SRLR_W
    268459977U,	// SRLV
    268459977U,	// SRLV_MM
    268452893U,	// SRL_B
    268454770U,	// SRL_D
    268456480U,	// SRL_H
    268458220U,	// SRL_MM
    268460551U,	// SRL_W
    10584U,	// SSNOP
    10584U,	// SSNOP_MM
    10584U,	// SSNOP_MMR6
    25183542U,	// ST_B
    25185889U,	// ST_D
    25187279U,	// ST_H
    25191712U,	// ST_W
    268453802U,	// SUB
    268457303U,	// SUBQH_PH
    268457303U,	// SUBQH_PH_MMR2
    268457418U,	// SUBQH_R_PH
    268457418U,	// SUBQH_R_PH_MMR2
    268460736U,	// SUBQH_R_W
    268460736U,	// SUBQH_R_W_MMR2
    268460341U,	// SUBQH_W
    268460341U,	// SUBQH_W_MMR2
    268457378U,	// SUBQ_PH
    268457378U,	// SUBQ_PH_MM
    268457475U,	// SUBQ_S_PH
    268457475U,	// SUBQ_S_PH_MM
    268461042U,	// SUBQ_S_W
    268461042U,	// SUBQ_S_W_MM
    268453296U,	// SUBSUS_U_B
    268455715U,	// SUBSUS_U_D
    268457085U,	// SUBSUS_U_H
    268461530U,	// SUBSUS_U_W
    268453099U,	// SUBSUU_S_B
    268455288U,	// SUBSUU_S_D
    268456825U,	// SUBSUU_S_H
    268461152U,	// SUBSUU_S_W
    268453061U,	// SUBS_S_B
    268455228U,	// SUBS_S_D
    268456787U,	// SUBS_S_H
    268461092U,	// SUBS_S_W
    268453276U,	// SUBS_U_B
    268455695U,	// SUBS_U_D
    268457065U,	// SUBS_U_H
    268461510U,	// SUBS_U_W
    268452430U,	// SUBU16_MM
    268452430U,	// SUBU16_MMR6
    268453511U,	// SUBUH_QB
    268453511U,	// SUBUH_QB_MMR2
    268453617U,	// SUBUH_R_QB
    268453617U,	// SUBUH_R_QB_MMR2
    268459659U,	// SUBU_MMR6
    268457576U,	// SUBU_PH
    268457576U,	// SUBU_PH_MMR2
    268453725U,	// SUBU_QB
    268453725U,	// SUBU_QB_MM
    268457519U,	// SUBU_S_PH
    268457519U,	// SUBU_S_PH_MMR2
    268453664U,	// SUBU_S_QB
    268453664U,	// SUBU_S_QB_MM
    268452843U,	// SUBVI_B
    268454651U,	// SUBVI_D
    268456447U,	// SUBVI_H
    268460474U,	// SUBVI_W
    268453355U,	// SUBV_B
    268455786U,	// SUBV_D
    268457144U,	// SUBV_H
    268461611U,	// SUBV_W
    268453802U,	// SUB_MM
    268453802U,	// SUB_MMR6
    268459659U,	// SUBu
    268459659U,	// SUBu_MM
    3774890155U,	// SUXC1
    3774890155U,	// SUXC164
    3774890155U,	// SUXC1_MM
    25192094U,	// SW
    25182827U,	// SW16_MM
    25182827U,	// SW16_MMR6
    25192094U,	// SW64
    25182352U,	// SWC1
    25182352U,	// SWC1_MM
    25182568U,	// SWC2
    25182568U,	// SWC2_MMR6
    25182568U,	// SWC2_R6
    25182613U,	// SWC3
    25192094U,	// SWDSP
    25192094U,	// SWDSP_MM
    25186562U,	// SWE
    25186562U,	// SWE_MM
    25188651U,	// SWL
    25188651U,	// SWL64
    25186494U,	// SWLE
    25186494U,	// SWLE_MM
    25188651U,	// SWL_MM
    66066U,	// SWM16_MM
    66066U,	// SWM16_MMR6
    65806U,	// SWM32_MM
    184572479U,	// SWP_MM
    25189157U,	// SWR
    25189157U,	// SWR64
    25186533U,	// SWRE
    25186533U,	// SWRE_MM
    25189157U,	// SWR_MM
    25188900U,	// SWSP_MM
    25192094U,	// SWSP_MMR6
    3774890169U,	// SWXC1
    3774890169U,	// SWXC1_MM
    25192094U,	// SW_MM
    25192094U,	// SW_MMR6
    239482U,	// SYNC
    251718U,	// SYNCI
    251718U,	// SYNCI_MM
    251718U,	// SYNCI_MMR6
    239482U,	// SYNC_MM
    231448U,	// SYNC_MMR6
    202932U,	// SYSCALL
    383156U,	// SYSCALL_MM
    0U,	// Save16
    0U,	// SaveX16
    25184163U,	// SbRxRyOffMemX16
    288525U,	// SebRx16
    288531U,	// SehRx16
    25188156U,	// ShRxRyOffMemX16
    268458192U,	// SllX16
    16801730U,	// SllvRxRy16
    24146U,	// SltRxRy16
    2952812463U,	// SltiRxImm16
    22447U,	// SltiRxImmX16
    2952814318U,	// SltiuRxImm16
    24302U,	// SltiuRxImmX16
    24388U,	// SltuRxRy16
    268452558U,	// SraX16
    16801709U,	// SravRxRy16
    268458220U,	// SrlX16
    16801737U,	// SrlvRxRy16
    268459659U,	// SubuRxRyRz16
    25192094U,	// SwRxRyOffMemX16
    25192094U,	// SwRxSpImmX16
    268458574U,	// TEQ
    22429U,	// TEQI
    22429U,	// TEQI_MM
    268458574U,	// TEQ_MM
    268456075U,	// TGE
    22362U,	// TGEI
    24295U,	// TGEIU
    24295U,	// TGEIU_MM
    22362U,	// TGEI_MM
    268459712U,	// TGEU
    268459712U,	// TGEU_MM
    268456075U,	// TGE_MM
    10632U,	// TLBGINV
    10533U,	// TLBGINVF
    10533U,	// TLBGINVF_MM
    10632U,	// TLBGINV_MM
    10578U,	// TLBGP
    10578U,	// TLBGP_MM
    10595U,	// TLBGR
    10595U,	// TLBGR_MM
    10548U,	// TLBGWI
    10548U,	// TLBGWI_MM
    10607U,	// TLBGWR
    10607U,	// TLBGWR_MM
    10625U,	// TLBINV
    10525U,	// TLBINVF
    10525U,	// TLBINVF_MMR6
    10625U,	// TLBINV_MMR6
    10573U,	// TLBP
    10573U,	// TLBP_MM
    10590U,	// TLBR
    10590U,	// TLBR_MM
    10542U,	// TLBWI
    10542U,	// TLBWI_MM
    10601U,	// TLBWR
    10601U,	// TLBWR_MM
    268459607U,	// TLT
    22453U,	// TLTI
    24309U,	// TLTIU_MM
    22453U,	// TLTI_MM
    268459850U,	// TLTU
    268459850U,	// TLTU_MM
    268459607U,	// TLT_MM
    268456142U,	// TNE
    22374U,	// TNEI
    22374U,	// TNEI_MM
    268456142U,	// TNE_MM
    19213U,	// TRUNC_L_D64
    19213U,	// TRUNC_L_D_MMR6
    23545U,	// TRUNC_L_S
    23545U,	// TRUNC_L_S_MMR6
    20388U,	// TRUNC_W_D32
    20388U,	// TRUNC_W_D64
    20388U,	// TRUNC_W_D_MMR6
    20388U,	// TRUNC_W_MM
    23887U,	// TRUNC_W_S
    23887U,	// TRUNC_W_S_MM
    23887U,	// TRUNC_W_S_MMR6
    24309U,	// TTLTIU
    26394U,	// UDIV
    26394U,	// UDIV_MM
    268459772U,	// V3MULU
    268451901U,	// VMM0
    268459787U,	// VMULU
    285229895U,	// VSHF_B
    285231720U,	// VSHF_D
    285233532U,	// VSHF_H
    285237478U,	// VSHF_W
    10620U,	// WAIT
    384583U,	// WAIT_MM
    384583U,	// WAIT_MMR6
    92297734U,	// WRDSP
    201349638U,	// WRDSP_MM
    23294U,	// WRPGPR_MMR6
    21758U,	// WSBH
    21758U,	// WSBH_MM
    21758U,	// WSBH_MMR6
    268458737U,	// XOR
    10060336U,	// XOR16_MM
    10060336U,	// XOR16_MMR6
    268458737U,	// XOR64
    268452806U,	// XORI_B
    268457891U,	// XORI_MMR6
    268458737U,	// XOR_MM
    268458737U,	// XOR_MMR6
    268459913U,	// XOR_V
    268457891U,	// XORi
    268457891U,	// XORi64
    268457891U,	// XORi_MM
    16800497U,	// XorRxRxRy16
    20535U,	// YIELD
  };

  static const uint16_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_INSTR_REF
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// ABSMacro
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND_V_D_PSEUDO
    0U,	// AND_V_H_PSEUDO
    0U,	// AND_V_W_PSEUDO
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I16_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I32_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I64_POSTRA
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_CMP_SWAP_I8_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I16_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I32_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I64_POSTRA
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_ADD_I8_POSTRA
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I16_POSTRA
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I32_POSTRA
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I64_POSTRA
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_AND_I8_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I16_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I32_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I64
    0U,	// ATOMIC_LOAD_MAX_I64_POSTRA
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MAX_I8_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I16_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I32_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I64
    0U,	// ATOMIC_LOAD_MIN_I64_POSTRA
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_MIN_I8_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I16_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I32_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I64_POSTRA
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_NAND_I8_POSTRA
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I16_POSTRA
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I32_POSTRA
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I64_POSTRA
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_OR_I8_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I16_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I32_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I64_POSTRA
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_SUB_I8_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I16_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I32_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I64
    0U,	// ATOMIC_LOAD_UMAX_I64_POSTRA
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMAX_I8_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I16_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I32_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I64
    0U,	// ATOMIC_LOAD_UMIN_I64_POSTRA
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_UMIN_I8_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I16_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I32_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I64_POSTRA
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_LOAD_XOR_I8_POSTRA
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I16_POSTRA
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I32_POSTRA
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I64_POSTRA
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATOMIC_SWAP_I8_POSTRA
    0U,	// B
    0U,	// BAL_BR
    0U,	// BAL_BR_MM
    0U,	// BEQLImmMacro
    0U,	// BGE
    0U,	// BGEImmMacro
    0U,	// BGEL
    0U,	// BGELImmMacro
    0U,	// BGEU
    0U,	// BGEUImmMacro
    0U,	// BGEUL
    0U,	// BGEULImmMacro
    0U,	// BGT
    0U,	// BGTImmMacro
    0U,	// BGTL
    0U,	// BGTLImmMacro
    0U,	// BGTU
    0U,	// BGTUImmMacro
    0U,	// BGTUL
    0U,	// BGTULImmMacro
    0U,	// BLE
    0U,	// BLEImmMacro
    0U,	// BLEL
    0U,	// BLELImmMacro
    0U,	// BLEU
    0U,	// BLEUImmMacro
    0U,	// BLEUL
    0U,	// BLEULImmMacro
    0U,	// BLT
    0U,	// BLTImmMacro
    0U,	// BLTL
    0U,	// BLTLImmMacro
    0U,	// BLTU
    0U,	// BLTUImmMacro
    0U,	// BLTUL
    0U,	// BLTULImmMacro
    0U,	// BNELImmMacro
    0U,	// BPOSGE32_PSEUDO
    0U,	// BSEL_D_PSEUDO
    0U,	// BSEL_FD_PSEUDO
    0U,	// BSEL_FW_PSEUDO
    0U,	// BSEL_H_PSEUDO
    0U,	// BSEL_W_PSEUDO
    0U,	// B_MM
    0U,	// B_MMR6_Pseudo
    0U,	// B_MM_Pseudo
    0U,	// BeqImm
    0U,	// BneImm
    0U,	// BteqzT8CmpX16
    0U,	// BteqzT8CmpiX16
    0U,	// BteqzT8SltX16
    0U,	// BteqzT8SltiX16
    0U,	// BteqzT8SltiuX16
    0U,	// BteqzT8SltuX16
    0U,	// BtnezT8CmpX16
    0U,	// BtnezT8CmpiX16
    0U,	// BtnezT8SltX16
    0U,	// BtnezT8SltiX16
    0U,	// BtnezT8SltiuX16
    0U,	// BtnezT8SltuX16
    0U,	// BuildPairF64
    0U,	// BuildPairF64_64
    0U,	// CFTC1
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_FD_PSEUDO
    0U,	// COPY_FW_PSEUDO
    0U,	// CTTC1
    0U,	// Constant32
    2U,	// DMULImmMacro
    2U,	// DMULMacro
    2U,	// DMULOMacro
    2U,	// DMULOUMacro
    2U,	// DROL
    2U,	// DROLImm
    2U,	// DROR
    2U,	// DRORImm
    2U,	// DSDivIMacro
    2U,	// DSDivMacro
    2U,	// DSRemIMacro
    2U,	// DSRemMacro
    2U,	// DUDivIMacro
    2U,	// DUDivMacro
    2U,	// DURemIMacro
    2U,	// DURemMacro
    0U,	// ERet
    0U,	// ExtractElementF64
    0U,	// ExtractElementF64_64
    0U,	// FABS_D
    0U,	// FABS_W
    0U,	// FEXP2_D_1_PSEUDO
    0U,	// FEXP2_W_1_PSEUDO
    0U,	// FILL_FD_PSEUDO
    0U,	// FILL_FW_PSEUDO
    0U,	// GotPrologue16
    0U,	// INSERT_B_VIDX64_PSEUDO
    0U,	// INSERT_B_VIDX_PSEUDO
    0U,	// INSERT_D_VIDX64_PSEUDO
    0U,	// INSERT_D_VIDX_PSEUDO
    0U,	// INSERT_FD_PSEUDO
    0U,	// INSERT_FD_VIDX64_PSEUDO
    0U,	// INSERT_FD_VIDX_PSEUDO
    0U,	// INSERT_FW_PSEUDO
    0U,	// INSERT_FW_VIDX64_PSEUDO
    0U,	// INSERT_FW_VIDX_PSEUDO
    0U,	// INSERT_H_VIDX64_PSEUDO
    0U,	// INSERT_H_VIDX_PSEUDO
    0U,	// INSERT_W_VIDX64_PSEUDO
    0U,	// INSERT_W_VIDX_PSEUDO
    0U,	// JALR64Pseudo
    0U,	// JALRHB64Pseudo
    0U,	// JALRHBPseudo
    0U,	// JALRPseudo
    0U,	// JAL_MMR6
    0U,	// JalOneReg
    0U,	// JalTwoReg
    0U,	// LDMacro
    0U,	// LDR_D
    0U,	// LDR_W
    0U,	// LD_F16
    0U,	// LOAD_ACC128
    0U,	// LOAD_ACC64
    0U,	// LOAD_ACC64DSP
    0U,	// LOAD_CCOND_DSP
    0U,	// LONG_BRANCH_ADDiu
    0U,	// LONG_BRANCH_ADDiu2Op
    0U,	// LONG_BRANCH_DADDiu
    0U,	// LONG_BRANCH_DADDiu2Op
    0U,	// LONG_BRANCH_LUi
    0U,	// LONG_BRANCH_LUi2Op
    0U,	// LONG_BRANCH_LUi2Op_64
    0U,	// LWM_MM
    0U,	// LoadAddrImm32
    0U,	// LoadAddrImm64
    0U,	// LoadAddrReg32
    0U,	// LoadAddrReg64
    0U,	// LoadImm32
    0U,	// LoadImm64
    0U,	// LoadImmDoubleFGR
    0U,	// LoadImmDoubleFGR_32
    0U,	// LoadImmDoubleGPR
    0U,	// LoadImmSingleFGR
    0U,	// LoadImmSingleGPR
    0U,	// LwConstant32
    0U,	// MFTACX
    4U,	// MFTC0
    0U,	// MFTC1
    0U,	// MFTDSP
    0U,	// MFTGPR
    0U,	// MFTHC1
    0U,	// MFTHI
    0U,	// MFTLO
    0U,	// MIPSeh_return32
    0U,	// MIPSeh_return64
    0U,	// MSA_FP_EXTEND_D_PSEUDO
    0U,	// MSA_FP_EXTEND_W_PSEUDO
    0U,	// MSA_FP_ROUND_D_PSEUDO
    0U,	// MSA_FP_ROUND_W_PSEUDO
    0U,	// MTTACX
    0U,	// MTTC0
    0U,	// MTTC1
    0U,	// MTTDSP
    0U,	// MTTGPR
    0U,	// MTTHC1
    0U,	// MTTHI
    0U,	// MTTLO
    2U,	// MULImmMacro
    2U,	// MULOMacro
    2U,	// MULOUMacro
    0U,	// MultRxRy16
    0U,	// MultRxRyRz16
    0U,	// MultuRxRy16
    0U,	// MultuRxRyRz16
    0U,	// NOP
    2U,	// NORImm
    2U,	// NORImm64
    0U,	// NOR_V_D_PSEUDO
    0U,	// NOR_V_H_PSEUDO
    0U,	// NOR_V_W_PSEUDO
    0U,	// OR_V_D_PSEUDO
    0U,	// OR_V_H_PSEUDO
    0U,	// OR_V_W_PSEUDO
    0U,	// PseudoCMPU_EQ_QB
    0U,	// PseudoCMPU_LE_QB
    0U,	// PseudoCMPU_LT_QB
    0U,	// PseudoCMP_EQ_PH
    0U,	// PseudoCMP_LE_PH
    0U,	// PseudoCMP_LT_PH
    0U,	// PseudoCVT_D32_W
    0U,	// PseudoCVT_D64_L
    0U,	// PseudoCVT_D64_W
    0U,	// PseudoCVT_S_L
    0U,	// PseudoCVT_S_W
    0U,	// PseudoDMULT
    0U,	// PseudoDMULTu
    0U,	// PseudoDSDIV
    0U,	// PseudoDUDIV
    0U,	// PseudoD_SELECT_I
    0U,	// PseudoD_SELECT_I64
    0U,	// PseudoIndirectBranch
    0U,	// PseudoIndirectBranch64
    0U,	// PseudoIndirectBranch64R6
    0U,	// PseudoIndirectBranchR6
    0U,	// PseudoIndirectBranch_MM
    0U,	// PseudoIndirectBranch_MMR6
    0U,	// PseudoIndirectHazardBranch
    0U,	// PseudoIndirectHazardBranch64
    0U,	// PseudoIndrectHazardBranch64R6
    0U,	// PseudoIndrectHazardBranchR6
    0U,	// PseudoMADD
    0U,	// PseudoMADDU
    0U,	// PseudoMADDU_MM
    0U,	// PseudoMADD_MM
    0U,	// PseudoMFHI
    0U,	// PseudoMFHI64
    0U,	// PseudoMFHI_MM
    0U,	// PseudoMFLO
    0U,	// PseudoMFLO64
    0U,	// PseudoMFLO_MM
    0U,	// PseudoMSUB
    0U,	// PseudoMSUBU
    0U,	// PseudoMSUBU_MM
    0U,	// PseudoMSUB_MM
    0U,	// PseudoMTLOHI
    0U,	// PseudoMTLOHI64
    0U,	// PseudoMTLOHI_DSP
    0U,	// PseudoMTLOHI_MM
    0U,	// PseudoMULT
    0U,	// PseudoMULT_MM
    0U,	// PseudoMULTu
    0U,	// PseudoMULTu_MM
    0U,	// PseudoPICK_PH
    0U,	// PseudoPICK_QB
    0U,	// PseudoReturn
    0U,	// PseudoReturn64
    0U,	// PseudoSDIV
    0U,	// PseudoSELECTFP_F_D32
    0U,	// PseudoSELECTFP_F_D64
    0U,	// PseudoSELECTFP_F_I
    0U,	// PseudoSELECTFP_F_I64
    0U,	// PseudoSELECTFP_F_S
    0U,	// PseudoSELECTFP_T_D32
    0U,	// PseudoSELECTFP_T_D64
    0U,	// PseudoSELECTFP_T_I
    0U,	// PseudoSELECTFP_T_I64
    0U,	// PseudoSELECTFP_T_S
    0U,	// PseudoSELECT_D32
    0U,	// PseudoSELECT_D64
    0U,	// PseudoSELECT_I
    0U,	// PseudoSELECT_I64
    0U,	// PseudoSELECT_S
    2U,	// PseudoTRUNC_W_D
    2U,	// PseudoTRUNC_W_D32
    2U,	// PseudoTRUNC_W_S
    0U,	// PseudoUDIV
    2U,	// ROL
    2U,	// ROLImm
    2U,	// ROR
    2U,	// RORImm
    0U,	// RetRA
    0U,	// RetRA16
    0U,	// SDC1_M1
    0U,	// SDIV_MM_Pseudo
    0U,	// SDMacro
    2U,	// SDivIMacro
    2U,	// SDivMacro
    2U,	// SEQIMacro
    2U,	// SEQMacro
    2U,	// SGE
    2U,	// SGEImm
    2U,	// SGEImm64
    2U,	// SGEU
    2U,	// SGEUImm
    2U,	// SGEUImm64
    2U,	// SGTImm
    2U,	// SGTImm64
    2U,	// SGTUImm
    2U,	// SGTUImm64
    2U,	// SLE
    2U,	// SLEImm
    2U,	// SLEImm64
    2U,	// SLEU
    2U,	// SLEUImm
    2U,	// SLEUImm64
    2U,	// SLTImm64
    2U,	// SLTUImm64
    2U,	// SNEIMacro
    2U,	// SNEMacro
    0U,	// SNZ_B_PSEUDO
    0U,	// SNZ_D_PSEUDO
    0U,	// SNZ_H_PSEUDO
    0U,	// SNZ_V_PSEUDO
    0U,	// SNZ_W_PSEUDO
    2U,	// SRemIMacro
    2U,	// SRemMacro
    0U,	// STORE_ACC128
    0U,	// STORE_ACC64
    0U,	// STORE_ACC64DSP
    0U,	// STORE_CCOND_DSP
    0U,	// STR_D
    0U,	// STR_W
    0U,	// ST_F16
    0U,	// SWM_MM
    0U,	// SZ_B_PSEUDO
    0U,	// SZ_D_PSEUDO
    0U,	// SZ_H_PSEUDO
    0U,	// SZ_V_PSEUDO
    0U,	// SZ_W_PSEUDO
    0U,	// SaaAddr
    0U,	// SaadAddr
    0U,	// SelBeqZ
    0U,	// SelBneZ
    0U,	// SelTBteqZCmp
    0U,	// SelTBteqZCmpi
    0U,	// SelTBteqZSlt
    0U,	// SelTBteqZSlti
    0U,	// SelTBteqZSltiu
    0U,	// SelTBteqZSltu
    0U,	// SelTBtneZCmp
    0U,	// SelTBtneZCmpi
    0U,	// SelTBtneZSlt
    0U,	// SelTBtneZSlti
    0U,	// SelTBtneZSltiu
    0U,	// SelTBtneZSltu
    0U,	// SltCCRxRy16
    0U,	// SltiCCRxImmX16
    0U,	// SltiuCCRxImmX16
    0U,	// SltuCCRxRy16
    0U,	// SltuRxRyRz16
    0U,	// TAILCALL
    0U,	// TAILCALL64R6REG
    0U,	// TAILCALLHB64R6REG
    0U,	// TAILCALLHBR6REG
    0U,	// TAILCALLR6REG
    0U,	// TAILCALLREG
    0U,	// TAILCALLREG64
    0U,	// TAILCALLREGHB
    0U,	// TAILCALLREGHB64
    0U,	// TAILCALLREG_MM
    0U,	// TAILCALLREG_MMR6
    0U,	// TAILCALL_MM
    0U,	// TAILCALL_MMR6
    0U,	// TRAP
    0U,	// TRAP_MM
    0U,	// UDIV_MM_Pseudo
    2U,	// UDivIMacro
    2U,	// UDivMacro
    2U,	// URemIMacro
    2U,	// URemMacro
    0U,	// Ulh
    0U,	// Ulhu
    0U,	// Ulw
    0U,	// Ush
    0U,	// Usw
    0U,	// XOR_V_D_PSEUDO
    0U,	// XOR_V_H_PSEUDO
    0U,	// XOR_V_W_PSEUDO
    0U,	// ABSQ_S_PH
    0U,	// ABSQ_S_PH_MM
    0U,	// ABSQ_S_QB
    0U,	// ABSQ_S_QB_MMR2
    0U,	// ABSQ_S_W
    0U,	// ABSQ_S_W_MM
    2U,	// ADD
    0U,	// ADDIUPC
    0U,	// ADDIUPC_MM
    0U,	// ADDIUPC_MMR6
    0U,	// ADDIUR1SP_MM
    2U,	// ADDIUR2_MM
    0U,	// ADDIUS5_MM
    0U,	// ADDIUSP_MM
    2U,	// ADDIU_MMR6
    2U,	// ADDQH_PH
    2U,	// ADDQH_PH_MMR2
    2U,	// ADDQH_R_PH
    2U,	// ADDQH_R_PH_MMR2
    2U,	// ADDQH_R_W
    2U,	// ADDQH_R_W_MMR2
    2U,	// ADDQH_W
    2U,	// ADDQH_W_MMR2
    2U,	// ADDQ_PH
    2U,	// ADDQ_PH_MM
    2U,	// ADDQ_S_PH
    2U,	// ADDQ_S_PH_MM
    2U,	// ADDQ_S_W
    2U,	// ADDQ_S_W_MM
    2U,	// ADDR_PS64
    2U,	// ADDSC
    2U,	// ADDSC_MM
    2U,	// ADDS_A_B
    2U,	// ADDS_A_D
    2U,	// ADDS_A_H
    2U,	// ADDS_A_W
    2U,	// ADDS_S_B
    2U,	// ADDS_S_D
    2U,	// ADDS_S_H
    2U,	// ADDS_S_W
    2U,	// ADDS_U_B
    2U,	// ADDS_U_D
    2U,	// ADDS_U_H
    2U,	// ADDS_U_W
    2U,	// ADDU16_MM
    2U,	// ADDU16_MMR6
    2U,	// ADDUH_QB
    2U,	// ADDUH_QB_MMR2
    2U,	// ADDUH_R_QB
    2U,	// ADDUH_R_QB_MMR2
    2U,	// ADDU_MMR6
    2U,	// ADDU_PH
    2U,	// ADDU_PH_MMR2
    2U,	// ADDU_QB
    2U,	// ADDU_QB_MM
    2U,	// ADDU_S_PH
    2U,	// ADDU_S_PH_MMR2
    2U,	// ADDU_S_QB
    2U,	// ADDU_S_QB_MM
    6U,	// ADDVI_B
    6U,	// ADDVI_D
    6U,	// ADDVI_H
    6U,	// ADDVI_W
    2U,	// ADDV_B
    2U,	// ADDV_D
    2U,	// ADDV_H
    2U,	// ADDV_W
    2U,	// ADDWC
    2U,	// ADDWC_MM
    2U,	// ADD_A_B
    2U,	// ADD_A_D
    2U,	// ADD_A_H
    2U,	// ADD_A_W
    2U,	// ADD_MM
    2U,	// ADD_MMR6
    2U,	// ADDi
    2U,	// ADDi_MM
    2U,	// ADDiu
    2U,	// ADDiu_MM
    2U,	// ADDu
    2U,	// ADDu_MM
    66U,	// ALIGN
    66U,	// ALIGN_MMR6
    0U,	// ALUIPC
    0U,	// ALUIPC_MMR6
    2U,	// AND
    0U,	// AND16_MM
    0U,	// AND16_MMR6
    2U,	// AND64
    2U,	// ANDI16_MM
    2U,	// ANDI16_MMR6
    8U,	// ANDI_B
    10U,	// ANDI_MMR6
    2U,	// AND_MM
    2U,	// AND_MMR6
    2U,	// AND_V
    10U,	// ANDi
    10U,	// ANDi64
    10U,	// ANDi_MM
    6U,	// APPEND
    6U,	// APPEND_MMR2
    2U,	// ASUB_S_B
    2U,	// ASUB_S_D
    2U,	// ASUB_S_H
    2U,	// ASUB_S_W
    2U,	// ASUB_U_B
    2U,	// ASUB_U_D
    2U,	// ASUB_U_H
    2U,	// ASUB_U_W
    10U,	// AUI
    0U,	// AUIPC
    0U,	// AUIPC_MMR6
    10U,	// AUI_MMR6
    2U,	// AVER_S_B
    2U,	// AVER_S_D
    2U,	// AVER_S_H
    2U,	// AVER_S_W
    2U,	// AVER_U_B
    2U,	// AVER_U_D
    2U,	// AVER_U_H
    2U,	// AVER_U_W
    2U,	// AVE_S_B
    2U,	// AVE_S_D
    2U,	// AVE_S_H
    2U,	// AVE_S_W
    2U,	// AVE_U_B
    2U,	// AVE_U_D
    2U,	// AVE_U_H
    2U,	// AVE_U_W
    0U,	// AddiuRxImmX16
    0U,	// AddiuRxPcImmX16
    0U,	// AddiuRxRxImm16
    0U,	// AddiuRxRxImmX16
    0U,	// AddiuRxRyOffMemX16
    0U,	// AddiuSpImm16
    0U,	// AddiuSpImmX16
    2U,	// AdduRxRyRz16
    0U,	// AndRxRxRy16
    0U,	// B16_MM
    2U,	// BADDu
    0U,	// BAL
    0U,	// BALC
    0U,	// BALC_MMR6
    12U,	// BALIGN
    12U,	// BALIGN_MMR2
    0U,	// BBIT0
    0U,	// BBIT032
    0U,	// BBIT1
    0U,	// BBIT132
    0U,	// BC
    0U,	// BC16_MMR6
    0U,	// BC1EQZ
    0U,	// BC1EQZC_MMR6
    0U,	// BC1F
    0U,	// BC1FL
    0U,	// BC1F_MM
    0U,	// BC1NEZ
    0U,	// BC1NEZC_MMR6
    0U,	// BC1T
    0U,	// BC1TL
    0U,	// BC1T_MM
    0U,	// BC2EQZ
    0U,	// BC2EQZC_MMR6
    0U,	// BC2NEZ
    0U,	// BC2NEZC_MMR6
    4U,	// BCLRI_B
    14U,	// BCLRI_D
    16U,	// BCLRI_H
    6U,	// BCLRI_W
    2U,	// BCLR_B
    2U,	// BCLR_D
    2U,	// BCLR_H
    2U,	// BCLR_W
    0U,	// BC_MMR6
    0U,	// BEQ
    0U,	// BEQ64
    0U,	// BEQC
    0U,	// BEQC64
    0U,	// BEQC_MMR6
    0U,	// BEQL
    0U,	// BEQZ16_MM
    0U,	// BEQZALC
    0U,	// BEQZALC_MMR6
    0U,	// BEQZC
    0U,	// BEQZC16_MMR6
    0U,	// BEQZC64
    0U,	// BEQZC_MM
    0U,	// BEQZC_MMR6
    0U,	// BEQ_MM
    0U,	// BGEC
    0U,	// BGEC64
    0U,	// BGEC_MMR6
    0U,	// BGEUC
    0U,	// BGEUC64
    0U,	// BGEUC_MMR6
    0U,	// BGEZ
    0U,	// BGEZ64
    0U,	// BGEZAL
    0U,	// BGEZALC
    0U,	// BGEZALC_MMR6
    0U,	// BGEZALL
    0U,	// BGEZALS_MM
    0U,	// BGEZAL_MM
    0U,	// BGEZC
    0U,	// BGEZC64
    0U,	// BGEZC_MMR6
    0U,	// BGEZL
    0U,	// BGEZ_MM
    0U,	// BGTZ
    0U,	// BGTZ64
    0U,	// BGTZALC
    0U,	// BGTZALC_MMR6
    0U,	// BGTZC
    0U,	// BGTZC64
    0U,	// BGTZC_MMR6
    0U,	// BGTZL
    0U,	// BGTZ_MM
    18U,	// BINSLI_B
    20U,	// BINSLI_D
    22U,	// BINSLI_H
    24U,	// BINSLI_W
    26U,	// BINSL_B
    26U,	// BINSL_D
    26U,	// BINSL_H
    26U,	// BINSL_W
    18U,	// BINSRI_B
    20U,	// BINSRI_D
    22U,	// BINSRI_H
    24U,	// BINSRI_W
    26U,	// BINSR_B
    26U,	// BINSR_D
    26U,	// BINSR_H
    26U,	// BINSR_W
    0U,	// BITREV
    0U,	// BITREV_MM
    0U,	// BITSWAP
    0U,	// BITSWAP_MMR6
    0U,	// BLEZ
    0U,	// BLEZ64
    0U,	// BLEZALC
    0U,	// BLEZALC_MMR6
    0U,	// BLEZC
    0U,	// BLEZC64
    0U,	// BLEZC_MMR6
    0U,	// BLEZL
    0U,	// BLEZ_MM
    0U,	// BLTC
    0U,	// BLTC64
    0U,	// BLTC_MMR6
    0U,	// BLTUC
    0U,	// BLTUC64
    0U,	// BLTUC_MMR6
    0U,	// BLTZ
    0U,	// BLTZ64
    0U,	// BLTZAL
    0U,	// BLTZALC
    0U,	// BLTZALC_MMR6
    0U,	// BLTZALL
    0U,	// BLTZALS_MM
    0U,	// BLTZAL_MM
    0U,	// BLTZC
    0U,	// BLTZC64
    0U,	// BLTZC_MMR6
    0U,	// BLTZL
    0U,	// BLTZ_MM
    28U,	// BMNZI_B
    26U,	// BMNZ_V
    28U,	// BMZI_B
    26U,	// BMZ_V
    0U,	// BNE
    0U,	// BNE64
    0U,	// BNEC
    0U,	// BNEC64
    0U,	// BNEC_MMR6
    4U,	// BNEGI_B
    14U,	// BNEGI_D
    16U,	// BNEGI_H
    6U,	// BNEGI_W
    2U,	// BNEG_B
    2U,	// BNEG_D
    2U,	// BNEG_H
    2U,	// BNEG_W
    0U,	// BNEL
    0U,	// BNEZ16_MM
    0U,	// BNEZALC
    0U,	// BNEZALC_MMR6
    0U,	// BNEZC
    0U,	// BNEZC16_MMR6
    0U,	// BNEZC64
    0U,	// BNEZC_MM
    0U,	// BNEZC_MMR6
    0U,	// BNE_MM
    0U,	// BNVC
    0U,	// BNVC_MMR6
    0U,	// BNZ_B
    0U,	// BNZ_D
    0U,	// BNZ_H
    0U,	// BNZ_V
    0U,	// BNZ_W
    0U,	// BOVC
    0U,	// BOVC_MMR6
    0U,	// BPOSGE32
    0U,	// BPOSGE32C_MMR3
    0U,	// BPOSGE32_MM
    0U,	// BREAK
    0U,	// BREAK16_MM
    0U,	// BREAK16_MMR6
    0U,	// BREAK_MM
    0U,	// BREAK_MMR6
    28U,	// BSELI_B
    26U,	// BSEL_V
    4U,	// BSETI_B
    14U,	// BSETI_D
    16U,	// BSETI_H
    6U,	// BSETI_W
    2U,	// BSET_B
    2U,	// BSET_D
    2U,	// BSET_H
    2U,	// BSET_W
    0U,	// BZ_B
    0U,	// BZ_D
    0U,	// BZ_H
    0U,	// BZ_V
    0U,	// BZ_W
    0U,	// BeqzRxImm16
    0U,	// BeqzRxImmX16
    0U,	// Bimm16
    0U,	// BimmX16
    0U,	// BnezRxImm16
    0U,	// BnezRxImmX16
    0U,	// Break16
    0U,	// Bteqz16
    0U,	// BteqzX16
    0U,	// Btnez16
    0U,	// BtnezX16
    0U,	// CACHE
    0U,	// CACHEE
    0U,	// CACHEE_MM
    0U,	// CACHE_MM
    0U,	// CACHE_MMR6
    0U,	// CACHE_R6
    0U,	// CEIL_L_D64
    0U,	// CEIL_L_D_MMR6
    0U,	// CEIL_L_S
    0U,	// CEIL_L_S_MMR6
    0U,	// CEIL_W_D32
    0U,	// CEIL_W_D64
    0U,	// CEIL_W_D_MMR6
    0U,	// CEIL_W_MM
    0U,	// CEIL_W_S
    0U,	// CEIL_W_S_MM
    0U,	// CEIL_W_S_MMR6
    2U,	// CEQI_B
    2U,	// CEQI_D
    2U,	// CEQI_H
    2U,	// CEQI_W
    2U,	// CEQ_B
    2U,	// CEQ_D
    2U,	// CEQ_H
    2U,	// CEQ_W
    0U,	// CFC1
    0U,	// CFC1_MM
    0U,	// CFC2_MM
    0U,	// CFCMSA
    582U,	// CINS
    582U,	// CINS32
    582U,	// CINS64_32
    582U,	// CINS_i32
    0U,	// CLASS_D
    0U,	// CLASS_D_MMR6
    0U,	// CLASS_S
    0U,	// CLASS_S_MMR6
    2U,	// CLEI_S_B
    2U,	// CLEI_S_D
    2U,	// CLEI_S_H
    2U,	// CLEI_S_W
    6U,	// CLEI_U_B
    6U,	// CLEI_U_D
    6U,	// CLEI_U_H
    6U,	// CLEI_U_W
    2U,	// CLE_S_B
    2U,	// CLE_S_D
    2U,	// CLE_S_H
    2U,	// CLE_S_W
    2U,	// CLE_U_B
    2U,	// CLE_U_D
    2U,	// CLE_U_H
    2U,	// CLE_U_W
    0U,	// CLO
    0U,	// CLO_MM
    0U,	// CLO_MMR6
    0U,	// CLO_R6
    2U,	// CLTI_S_B
    2U,	// CLTI_S_D
    2U,	// CLTI_S_H
    2U,	// CLTI_S_W
    6U,	// CLTI_U_B
    6U,	// CLTI_U_D
    6U,	// CLTI_U_H
    6U,	// CLTI_U_W
    2U,	// CLT_S_B
    2U,	// CLT_S_D
    2U,	// CLT_S_H
    2U,	// CLT_S_W
    2U,	// CLT_U_B
    2U,	// CLT_U_D
    2U,	// CLT_U_H
    2U,	// CLT_U_W
    0U,	// CLZ
    0U,	// CLZ_MM
    0U,	// CLZ_MMR6
    0U,	// CLZ_R6
    2U,	// CMPGDU_EQ_QB
    2U,	// CMPGDU_EQ_QB_MMR2
    2U,	// CMPGDU_LE_QB
    2U,	// CMPGDU_LE_QB_MMR2
    2U,	// CMPGDU_LT_QB
    2U,	// CMPGDU_LT_QB_MMR2
    2U,	// CMPGU_EQ_QB
    2U,	// CMPGU_EQ_QB_MM
    2U,	// CMPGU_LE_QB
    2U,	// CMPGU_LE_QB_MM
    2U,	// CMPGU_LT_QB
    2U,	// CMPGU_LT_QB_MM
    0U,	// CMPU_EQ_QB
    0U,	// CMPU_EQ_QB_MM
    0U,	// CMPU_LE_QB
    0U,	// CMPU_LE_QB_MM
    0U,	// CMPU_LT_QB
    0U,	// CMPU_LT_QB_MM
    2U,	// CMP_AF_D_MMR6
    2U,	// CMP_AF_S_MMR6
    2U,	// CMP_EQ_D
    2U,	// CMP_EQ_D_MMR6
    0U,	// CMP_EQ_PH
    0U,	// CMP_EQ_PH_MM
    2U,	// CMP_EQ_S
    2U,	// CMP_EQ_S_MMR6
    2U,	// CMP_F_D
    2U,	// CMP_F_S
    2U,	// CMP_LE_D
    2U,	// CMP_LE_D_MMR6
    0U,	// CMP_LE_PH
    0U,	// CMP_LE_PH_MM
    2U,	// CMP_LE_S
    2U,	// CMP_LE_S_MMR6
    2U,	// CMP_LT_D
    2U,	// CMP_LT_D_MMR6
    0U,	// CMP_LT_PH
    0U,	// CMP_LT_PH_MM
    2U,	// CMP_LT_S
    2U,	// CMP_LT_S_MMR6
    2U,	// CMP_SAF_D
    2U,	// CMP_SAF_D_MMR6
    2U,	// CMP_SAF_S
    2U,	// CMP_SAF_S_MMR6
    2U,	// CMP_SEQ_D
    2U,	// CMP_SEQ_D_MMR6
    2U,	// CMP_SEQ_S
    2U,	// CMP_SEQ_S_MMR6
    2U,	// CMP_SLE_D
    2U,	// CMP_SLE_D_MMR6
    2U,	// CMP_SLE_S
    2U,	// CMP_SLE_S_MMR6
    2U,	// CMP_SLT_D
    2U,	// CMP_SLT_D_MMR6
    2U,	// CMP_SLT_S
    2U,	// CMP_SLT_S_MMR6
    2U,	// CMP_SUEQ_D
    2U,	// CMP_SUEQ_D_MMR6
    2U,	// CMP_SUEQ_S
    2U,	// CMP_SUEQ_S_MMR6
    2U,	// CMP_SULE_D
    2U,	// CMP_SULE_D_MMR6
    2U,	// CMP_SULE_S
    2U,	// CMP_SULE_S_MMR6
    2U,	// CMP_SULT_D
    2U,	// CMP_SULT_D_MMR6
    2U,	// CMP_SULT_S
    2U,	// CMP_SULT_S_MMR6
    2U,	// CMP_SUN_D
    2U,	// CMP_SUN_D_MMR6
    2U,	// CMP_SUN_S
    2U,	// CMP_SUN_S_MMR6
    2U,	// CMP_UEQ_D
    2U,	// CMP_UEQ_D_MMR6
    2U,	// CMP_UEQ_S
    2U,	// CMP_UEQ_S_MMR6
    2U,	// CMP_ULE_D
    2U,	// CMP_ULE_D_MMR6
    2U,	// CMP_ULE_S
    2U,	// CMP_ULE_S_MMR6
    2U,	// CMP_ULT_D
    2U,	// CMP_ULT_D_MMR6
    2U,	// CMP_ULT_S
    2U,	// CMP_ULT_S_MMR6
    2U,	// CMP_UN_D
    2U,	// CMP_UN_D_MMR6
    2U,	// CMP_UN_S
    2U,	// CMP_UN_S_MMR6
    144U,	// COPY_S_B
    158U,	// COPY_S_D
    132U,	// COPY_S_H
    140U,	// COPY_S_W
    144U,	// COPY_U_B
    132U,	// COPY_U_H
    140U,	// COPY_U_W
    2U,	// CRC32B
    2U,	// CRC32CB
    2U,	// CRC32CD
    2U,	// CRC32CH
    2U,	// CRC32CW
    2U,	// CRC32D
    2U,	// CRC32H
    2U,	// CRC32W
    0U,	// CTC1
    0U,	// CTC1_MM
    0U,	// CTC2_MM
    0U,	// CTCMSA
    0U,	// CVT_D32_S
    0U,	// CVT_D32_S_MM
    0U,	// CVT_D32_W
    0U,	// CVT_D32_W_MM
    0U,	// CVT_D64_L
    0U,	// CVT_D64_S
    0U,	// CVT_D64_S_MM
    0U,	// CVT_D64_W
    0U,	// CVT_D64_W_MM
    0U,	// CVT_D_L_MMR6
    0U,	// CVT_L_D64
    0U,	// CVT_L_D64_MM
    0U,	// CVT_L_D_MMR6
    0U,	// CVT_L_S
    0U,	// CVT_L_S_MM
    0U,	// CVT_L_S_MMR6
    0U,	// CVT_PS_PW64
    2U,	// CVT_PS_S64
    0U,	// CVT_PW_PS64
    0U,	// CVT_S_D32
    0U,	// CVT_S_D32_MM
    0U,	// CVT_S_D64
    0U,	// CVT_S_D64_MM
    0U,	// CVT_S_L
    0U,	// CVT_S_L_MMR6
    0U,	// CVT_S_PL64
    0U,	// CVT_S_PU64
    0U,	// CVT_S_W
    0U,	// CVT_S_W_MM
    0U,	// CVT_S_W_MMR6
    0U,	// CVT_W_D32
    0U,	// CVT_W_D32_MM
    0U,	// CVT_W_D64
    0U,	// CVT_W_D64_MM
    0U,	// CVT_W_S
    0U,	// CVT_W_S_MM
    0U,	// CVT_W_S_MMR6
    2U,	// C_EQ_D32
    2U,	// C_EQ_D32_MM
    2U,	// C_EQ_D64
    2U,	// C_EQ_D64_MM
    2U,	// C_EQ_S
    2U,	// C_EQ_S_MM
    2U,	// C_F_D32
    2U,	// C_F_D32_MM
    2U,	// C_F_D64
    2U,	// C_F_D64_MM
    2U,	// C_F_S
    2U,	// C_F_S_MM
    2U,	// C_LE_D32
    2U,	// C_LE_D32_MM
    2U,	// C_LE_D64
    2U,	// C_LE_D64_MM
    2U,	// C_LE_S
    2U,	// C_LE_S_MM
    2U,	// C_LT_D32
    2U,	// C_LT_D32_MM
    2U,	// C_LT_D64
    2U,	// C_LT_D64_MM
    2U,	// C_LT_S
    2U,	// C_LT_S_MM
    2U,	// C_NGE_D32
    2U,	// C_NGE_D32_MM
    2U,	// C_NGE_D64
    2U,	// C_NGE_D64_MM
    2U,	// C_NGE_S
    2U,	// C_NGE_S_MM
    2U,	// C_NGLE_D32
    2U,	// C_NGLE_D32_MM
    2U,	// C_NGLE_D64
    2U,	// C_NGLE_D64_MM
    2U,	// C_NGLE_S
    2U,	// C_NGLE_S_MM
    2U,	// C_NGL_D32
    2U,	// C_NGL_D32_MM
    2U,	// C_NGL_D64
    2U,	// C_NGL_D64_MM
    2U,	// C_NGL_S
    2U,	// C_NGL_S_MM
    2U,	// C_NGT_D32
    2U,	// C_NGT_D32_MM
    2U,	// C_NGT_D64
    2U,	// C_NGT_D64_MM
    2U,	// C_NGT_S
    2U,	// C_NGT_S_MM
    2U,	// C_OLE_D32
    2U,	// C_OLE_D32_MM
    2U,	// C_OLE_D64
    2U,	// C_OLE_D64_MM
    2U,	// C_OLE_S
    2U,	// C_OLE_S_MM
    2U,	// C_OLT_D32
    2U,	// C_OLT_D32_MM
    2U,	// C_OLT_D64
    2U,	// C_OLT_D64_MM
    2U,	// C_OLT_S
    2U,	// C_OLT_S_MM
    2U,	// C_SEQ_D32
    2U,	// C_SEQ_D32_MM
    2U,	// C_SEQ_D64
    2U,	// C_SEQ_D64_MM
    2U,	// C_SEQ_S
    2U,	// C_SEQ_S_MM
    2U,	// C_SF_D32
    2U,	// C_SF_D32_MM
    2U,	// C_SF_D64
    2U,	// C_SF_D64_MM
    2U,	// C_SF_S
    2U,	// C_SF_S_MM
    2U,	// C_UEQ_D32
    2U,	// C_UEQ_D32_MM
    2U,	// C_UEQ_D64
    2U,	// C_UEQ_D64_MM
    2U,	// C_UEQ_S
    2U,	// C_UEQ_S_MM
    2U,	// C_ULE_D32
    2U,	// C_ULE_D32_MM
    2U,	// C_ULE_D64
    2U,	// C_ULE_D64_MM
    2U,	// C_ULE_S
    2U,	// C_ULE_S_MM
    2U,	// C_ULT_D32
    2U,	// C_ULT_D32_MM
    2U,	// C_ULT_D64
    2U,	// C_ULT_D64_MM
    2U,	// C_ULT_S
    2U,	// C_ULT_S_MM
    2U,	// C_UN_D32
    2U,	// C_UN_D32_MM
    2U,	// C_UN_D64
    2U,	// C_UN_D64_MM
    2U,	// C_UN_S
    2U,	// C_UN_S_MM
    0U,	// CmpRxRy16
    0U,	// CmpiRxImm16
    0U,	// CmpiRxImmX16
    2U,	// DADD
    2U,	// DADDi
    2U,	// DADDiu
    2U,	// DADDu
    10U,	// DAHI
    1090U,	// DALIGN
    10U,	// DATI
    10U,	// DAUI
    0U,	// DBITSWAP
    0U,	// DCLO
    0U,	// DCLO_R6
    0U,	// DCLZ
    0U,	// DCLZ_R6
    2U,	// DDIV
    2U,	// DDIVU
    0U,	// DERET
    0U,	// DERET_MM
    0U,	// DERET_MMR6
    1614U,	// DEXT
    2126U,	// DEXT64_32
    2630U,	// DEXTM
    224U,	// DEXTU
    0U,	// DI
    3150U,	// DINS
    3654U,	// DINSM
    288U,	// DINSU
    2U,	// DIV
    2U,	// DIVU
    2U,	// DIVU_MMR6
    2U,	// DIV_MMR6
    2U,	// DIV_S_B
    2U,	// DIV_S_D
    2U,	// DIV_S_H
    2U,	// DIV_S_W
    2U,	// DIV_U_B
    2U,	// DIV_U_D
    2U,	// DIV_U_H
    2U,	// DIV_U_W
    0U,	// DI_MM
    0U,	// DI_MMR6
    4162U,	// DLSA
    4162U,	// DLSA_R6
    4U,	// DMFC0
    0U,	// DMFC1
    4U,	// DMFC2
    0U,	// DMFC2_OCTEON
    4U,	// DMFGC0
    2U,	// DMOD
    2U,	// DMODU
    0U,	// DMT
    0U,	// DMTC0
    0U,	// DMTC1
    0U,	// DMTC2
    0U,	// DMTC2_OCTEON
    0U,	// DMTGC0
    2U,	// DMUH
    2U,	// DMUHU
    2U,	// DMUL
    0U,	// DMULT
    0U,	// DMULTu
    2U,	// DMULU
    2U,	// DMUL_R6
    2U,	// DOTP_S_D
    2U,	// DOTP_S_H
    2U,	// DOTP_S_W
    2U,	// DOTP_U_D
    2U,	// DOTP_U_H
    2U,	// DOTP_U_W
    26U,	// DPADD_S_D
    26U,	// DPADD_S_H
    26U,	// DPADD_S_W
    26U,	// DPADD_U_D
    26U,	// DPADD_U_H
    26U,	// DPADD_U_W
    2U,	// DPAQX_SA_W_PH
    2U,	// DPAQX_SA_W_PH_MMR2
    2U,	// DPAQX_S_W_PH
    2U,	// DPAQX_S_W_PH_MMR2
    2U,	// DPAQ_SA_L_W
    2U,	// DPAQ_SA_L_W_MM
    2U,	// DPAQ_S_W_PH
    2U,	// DPAQ_S_W_PH_MM
    2U,	// DPAU_H_QBL
    2U,	// DPAU_H_QBL_MM
    2U,	// DPAU_H_QBR
    2U,	// DPAU_H_QBR_MM
    2U,	// DPAX_W_PH
    2U,	// DPAX_W_PH_MMR2
    2U,	// DPA_W_PH
    2U,	// DPA_W_PH_MMR2
    0U,	// DPOP
    2U,	// DPSQX_SA_W_PH
    2U,	// DPSQX_SA_W_PH_MMR2
    2U,	// DPSQX_S_W_PH
    2U,	// DPSQX_S_W_PH_MMR2
    2U,	// DPSQ_SA_L_W
    2U,	// DPSQ_SA_L_W_MM
    2U,	// DPSQ_S_W_PH
    2U,	// DPSQ_S_W_PH_MM
    26U,	// DPSUB_S_D
    26U,	// DPSUB_S_H
    26U,	// DPSUB_S_W
    26U,	// DPSUB_U_D
    26U,	// DPSUB_U_H
    26U,	// DPSUB_U_W
    2U,	// DPSU_H_QBL
    2U,	// DPSU_H_QBL_MM
    2U,	// DPSU_H_QBR
    2U,	// DPSU_H_QBR_MM
    2U,	// DPSX_W_PH
    2U,	// DPSX_W_PH_MMR2
    2U,	// DPS_W_PH
    2U,	// DPS_W_PH_MMR2
    14U,	// DROTR
    6U,	// DROTR32
    2U,	// DROTRV
    0U,	// DSBH
    0U,	// DSDIV
    0U,	// DSHD
    14U,	// DSLL
    6U,	// DSLL32
    0U,	// DSLL64_32
    2U,	// DSLLV
    14U,	// DSRA
    6U,	// DSRA32
    2U,	// DSRAV
    14U,	// DSRL
    6U,	// DSRL32
    2U,	// DSRLV
    2U,	// DSUB
    2U,	// DSUBu
    0U,	// DUDIV
    0U,	// DVP
    0U,	// DVPE
    0U,	// DVP_MMR6
    0U,	// DivRxRy16
    0U,	// DivuRxRy16
    0U,	// EHB
    0U,	// EHB_MM
    0U,	// EHB_MMR6
    0U,	// EI
    0U,	// EI_MM
    0U,	// EI_MMR6
    0U,	// EMT
    0U,	// ERET
    0U,	// ERETNC
    0U,	// ERETNC_MMR6
    0U,	// ERET_MM
    0U,	// ERET_MMR6
    0U,	// EVP
    0U,	// EVPE
    0U,	// EVP_MMR6
    2118U,	// EXT
    6U,	// EXTP
    6U,	// EXTPDP
    2U,	// EXTPDPV
    2U,	// EXTPDPV_MM
    6U,	// EXTPDP_MM
    2U,	// EXTPV
    2U,	// EXTPV_MM
    6U,	// EXTP_MM
    2U,	// EXTRV_RS_W
    2U,	// EXTRV_RS_W_MM
    2U,	// EXTRV_R_W
    2U,	// EXTRV_R_W_MM
    2U,	// EXTRV_S_H
    2U,	// EXTRV_S_H_MM
    2U,	// EXTRV_W
    2U,	// EXTRV_W_MM
    6U,	// EXTR_RS_W
    6U,	// EXTR_RS_W_MM
    6U,	// EXTR_R_W
    6U,	// EXTR_R_W_MM
    6U,	// EXTR_S_H
    6U,	// EXTR_S_H_MM
    6U,	// EXTR_W
    6U,	// EXTR_W_MM
    582U,	// EXTS
    582U,	// EXTS32
    2118U,	// EXT_MM
    2118U,	// EXT_MMR6
    0U,	// FABS_D32
    0U,	// FABS_D32_MM
    0U,	// FABS_D64
    0U,	// FABS_D64_MM
    0U,	// FABS_S
    0U,	// FABS_S_MM
    2U,	// FADD_D
    2U,	// FADD_D32
    2U,	// FADD_D32_MM
    2U,	// FADD_D64
    2U,	// FADD_D64_MM
    2U,	// FADD_PS64
    2U,	// FADD_S
    2U,	// FADD_S_MM
    34U,	// FADD_S_MMR6
    2U,	// FADD_W
    2U,	// FCAF_D
    2U,	// FCAF_W
    2U,	// FCEQ_D
    2U,	// FCEQ_W
    0U,	// FCLASS_D
    0U,	// FCLASS_W
    2U,	// FCLE_D
    2U,	// FCLE_W
    2U,	// FCLT_D
    2U,	// FCLT_W
    0U,	// FCMP_D32
    0U,	// FCMP_D32_MM
    0U,	// FCMP_D64
    0U,	// FCMP_S32
    0U,	// FCMP_S32_MM
    2U,	// FCNE_D
    2U,	// FCNE_W
    2U,	// FCOR_D
    2U,	// FCOR_W
    2U,	// FCUEQ_D
    2U,	// FCUEQ_W
    2U,	// FCULE_D
    2U,	// FCULE_W
    2U,	// FCULT_D
    2U,	// FCULT_W
    2U,	// FCUNE_D
    2U,	// FCUNE_W
    2U,	// FCUN_D
    2U,	// FCUN_W
    2U,	// FDIV_D
    2U,	// FDIV_D32
    2U,	// FDIV_D32_MM
    2U,	// FDIV_D64
    2U,	// FDIV_D64_MM
    2U,	// FDIV_S
    2U,	// FDIV_S_MM
    34U,	// FDIV_S_MMR6
    2U,	// FDIV_W
    2U,	// FEXDO_H
    2U,	// FEXDO_W
    2U,	// FEXP2_D
    2U,	// FEXP2_W
    0U,	// FEXUPL_D
    0U,	// FEXUPL_W
    0U,	// FEXUPR_D
    0U,	// FEXUPR_W
    0U,	// FFINT_S_D
    0U,	// FFINT_S_W
    0U,	// FFINT_U_D
    0U,	// FFINT_U_W
    0U,	// FFQL_D
    0U,	// FFQL_W
    0U,	// FFQR_D
    0U,	// FFQR_W
    0U,	// FILL_B
    0U,	// FILL_D
    0U,	// FILL_H
    0U,	// FILL_W
    0U,	// FLOG2_D
    0U,	// FLOG2_W
    0U,	// FLOOR_L_D64
    0U,	// FLOOR_L_D_MMR6
    0U,	// FLOOR_L_S
    0U,	// FLOOR_L_S_MMR6
    0U,	// FLOOR_W_D32
    0U,	// FLOOR_W_D64
    0U,	// FLOOR_W_D_MMR6
    0U,	// FLOOR_W_MM
    0U,	// FLOOR_W_S
    0U,	// FLOOR_W_S_MM
    0U,	// FLOOR_W_S_MMR6
    26U,	// FMADD_D
    26U,	// FMADD_W
    2U,	// FMAX_A_D
    2U,	// FMAX_A_W
    2U,	// FMAX_D
    2U,	// FMAX_W
    2U,	// FMIN_A_D
    2U,	// FMIN_A_W
    2U,	// FMIN_D
    2U,	// FMIN_W
    0U,	// FMOV_D32
    0U,	// FMOV_D32_MM
    0U,	// FMOV_D64
    0U,	// FMOV_D64_MM
    0U,	// FMOV_D_MMR6
    0U,	// FMOV_S
    0U,	// FMOV_S_MM
    0U,	// FMOV_S_MMR6
    26U,	// FMSUB_D
    26U,	// FMSUB_W
    2U,	// FMUL_D
    2U,	// FMUL_D32
    2U,	// FMUL_D32_MM
    2U,	// FMUL_D64
    2U,	// FMUL_D64_MM
    2U,	// FMUL_PS64
    2U,	// FMUL_S
    2U,	// FMUL_S_MM
    34U,	// FMUL_S_MMR6
    2U,	// FMUL_W
    0U,	// FNEG_D32
    0U,	// FNEG_D32_MM
    0U,	// FNEG_D64
    0U,	// FNEG_D64_MM
    0U,	// FNEG_S
    0U,	// FNEG_S_MM
    0U,	// FNEG_S_MMR6
    0U,	// FORK
    0U,	// FRCP_D
    0U,	// FRCP_W
    0U,	// FRINT_D
    0U,	// FRINT_W
    0U,	// FRSQRT_D
    0U,	// FRSQRT_W
    2U,	// FSAF_D
    2U,	// FSAF_W
    2U,	// FSEQ_D
    2U,	// FSEQ_W
    2U,	// FSLE_D
    2U,	// FSLE_W
    2U,	// FSLT_D
    2U,	// FSLT_W
    2U,	// FSNE_D
    2U,	// FSNE_W
    2U,	// FSOR_D
    2U,	// FSOR_W
    0U,	// FSQRT_D
    0U,	// FSQRT_D32
    0U,	// FSQRT_D32_MM
    0U,	// FSQRT_D64
    0U,	// FSQRT_D64_MM
    0U,	// FSQRT_S
    0U,	// FSQRT_S_MM
    0U,	// FSQRT_W
    2U,	// FSUB_D
    2U,	// FSUB_D32
    2U,	// FSUB_D32_MM
    2U,	// FSUB_D64
    2U,	// FSUB_D64_MM
    2U,	// FSUB_PS64
    2U,	// FSUB_S
    2U,	// FSUB_S_MM
    34U,	// FSUB_S_MMR6
    2U,	// FSUB_W
    2U,	// FSUEQ_D
    2U,	// FSUEQ_W
    2U,	// FSULE_D
    2U,	// FSULE_W
    2U,	// FSULT_D
    2U,	// FSULT_W
    2U,	// FSUNE_D
    2U,	// FSUNE_W
    2U,	// FSUN_D
    2U,	// FSUN_W
    0U,	// FTINT_S_D
    0U,	// FTINT_S_W
    0U,	// FTINT_U_D
    0U,	// FTINT_U_W
    2U,	// FTQ_H
    2U,	// FTQ_W
    0U,	// FTRUNC_S_D
    0U,	// FTRUNC_S_W
    0U,	// FTRUNC_U_D
    0U,	// FTRUNC_U_W
    0U,	// GINVI
    0U,	// GINVI_MMR6
    0U,	// GINVT
    0U,	// GINVT_MMR6
    2U,	// HADD_S_D
    2U,	// HADD_S_H
    2U,	// HADD_S_W
    2U,	// HADD_U_D
    2U,	// HADD_U_H
    2U,	// HADD_U_W
    2U,	// HSUB_S_D
    2U,	// HSUB_S_H
    2U,	// HSUB_S_W
    2U,	// HSUB_U_D
    2U,	// HSUB_U_H
    2U,	// HSUB_U_W
    0U,	// HYPCALL
    0U,	// HYPCALL_MM
    2U,	// ILVEV_B
    2U,	// ILVEV_D
    2U,	// ILVEV_H
    2U,	// ILVEV_W
    2U,	// ILVL_B
    2U,	// ILVL_D
    2U,	// ILVL_H
    2U,	// ILVL_W
    2U,	// ILVOD_B
    2U,	// ILVOD_D
    2U,	// ILVOD_H
    2U,	// ILVOD_W
    2U,	// ILVR_B
    2U,	// ILVR_D
    2U,	// ILVR_H
    2U,	// ILVR_W
    3142U,	// INS
    0U,	// INSERT_B
    0U,	// INSERT_D
    0U,	// INSERT_H
    0U,	// INSERT_W
    0U,	// INSV
    0U,	// INSVE_B
    0U,	// INSVE_D
    0U,	// INSVE_H
    0U,	// INSVE_W
    0U,	// INSV_MM
    3142U,	// INS_MM
    3142U,	// INS_MMR6
    0U,	// J
    0U,	// JAL
    0U,	// JALR
    0U,	// JALR16_MM
    0U,	// JALR64
    0U,	// JALRC16_MMR6
    0U,	// JALRC_HB_MMR6
    0U,	// JALRC_MMR6
    0U,	// JALRS16_MM
    0U,	// JALRS_MM
    0U,	// JALR_HB
    0U,	// JALR_HB64
    0U,	// JALR_MM
    0U,	// JALS_MM
    0U,	// JALX
    0U,	// JALX_MM
    0U,	// JAL_MM
    0U,	// JIALC
    0U,	// JIALC64
    0U,	// JIALC_MMR6
    0U,	// JIC
    0U,	// JIC64
    0U,	// JIC_MMR6
    0U,	// JR
    0U,	// JR16_MM
    0U,	// JR64
    0U,	// JRADDIUSP
    0U,	// JRC16_MM
    0U,	// JRC16_MMR6
    0U,	// JRCADDIUSP_MMR6
    0U,	// JR_HB
    0U,	// JR_HB64
    0U,	// JR_HB64_R6
    0U,	// JR_HB_R6
    0U,	// JR_MM
    0U,	// J_MM
    0U,	// Jal16
    0U,	// JalB16
    0U,	// JrRa16
    0U,	// JrcRa16
    0U,	// JrcRx16
    0U,	// JumpLinkReg16
    0U,	// LB
    0U,	// LB64
    0U,	// LBE
    0U,	// LBE_MM
    0U,	// LBU16_MM
    0U,	// LBUX
    0U,	// LBUX_MM
    0U,	// LBU_MMR6
    0U,	// LB_MM
    0U,	// LB_MMR6
    0U,	// LBu
    0U,	// LBu64
    0U,	// LBuE
    0U,	// LBuE_MM
    0U,	// LBu_MM
    0U,	// LD
    0U,	// LDC1
    0U,	// LDC164
    0U,	// LDC1_D64_MMR6
    0U,	// LDC1_MM
    0U,	// LDC2
    0U,	// LDC2_MMR6
    0U,	// LDC2_R6
    0U,	// LDC3
    0U,	// LDI_B
    0U,	// LDI_D
    0U,	// LDI_H
    0U,	// LDI_W
    0U,	// LDL
    0U,	// LDPC
    0U,	// LDR
    0U,	// LDXC1
    0U,	// LDXC164
    0U,	// LD_B
    0U,	// LD_D
    0U,	// LD_H
    0U,	// LD_W
    0U,	// LEA_ADDiu
    0U,	// LEA_ADDiu64
    0U,	// LEA_ADDiu_MM
    0U,	// LH
    0U,	// LH64
    0U,	// LHE
    0U,	// LHE_MM
    0U,	// LHU16_MM
    0U,	// LHX
    0U,	// LHX_MM
    0U,	// LH_MM
    0U,	// LHu
    0U,	// LHu64
    0U,	// LHuE
    0U,	// LHuE_MM
    0U,	// LHu_MM
    0U,	// LI16_MM
    0U,	// LI16_MMR6
    0U,	// LL
    0U,	// LL64
    0U,	// LL64_R6
    0U,	// LLD
    0U,	// LLD_R6
    0U,	// LLE
    0U,	// LLE_MM
    0U,	// LL_MM
    0U,	// LL_MMR6
    0U,	// LL_R6
    4162U,	// LSA
    0U,	// LSA_MMR6
    4162U,	// LSA_R6
    0U,	// LUI_MMR6
    0U,	// LUXC1
    0U,	// LUXC164
    0U,	// LUXC1_MM
    0U,	// LUi
    0U,	// LUi64
    0U,	// LUi_MM
    0U,	// LW
    0U,	// LW16_MM
    0U,	// LW64
    0U,	// LWC1
    0U,	// LWC1_MM
    0U,	// LWC2
    0U,	// LWC2_MMR6
    0U,	// LWC2_R6
    0U,	// LWC3
    0U,	// LWDSP
    0U,	// LWDSP_MM
    0U,	// LWE
    0U,	// LWE_MM
    0U,	// LWGP_MM
    0U,	// LWL
    0U,	// LWL64
    0U,	// LWLE
    0U,	// LWLE_MM
    0U,	// LWL_MM
    0U,	// LWM16_MM
    0U,	// LWM16_MMR6
    0U,	// LWM32_MM
    0U,	// LWPC
    0U,	// LWPC_MMR6
    0U,	// LWP_MM
    0U,	// LWR
    0U,	// LWR64
    0U,	// LWRE
    0U,	// LWRE_MM
    0U,	// LWR_MM
    0U,	// LWSP_MM
    0U,	// LWUPC
    0U,	// LWU_MM
    0U,	// LWX
    0U,	// LWXC1
    0U,	// LWXC1_MM
    0U,	// LWXS_MM
    0U,	// LWX_MM
    0U,	// LW_MM
    0U,	// LW_MMR6
    0U,	// LWu
    0U,	// LbRxRyOffMemX16
    0U,	// LbuRxRyOffMemX16
    0U,	// LhRxRyOffMemX16
    0U,	// LhuRxRyOffMemX16
    0U,	// LiRxImm16
    0U,	// LiRxImmAlignX16
    0U,	// LiRxImmX16
    0U,	// LwRxPcTcp16
    0U,	// LwRxPcTcpX16
    0U,	// LwRxRyOffMemX16
    0U,	// LwRxSpImmX16
    0U,	// MADD
    26U,	// MADDF_D
    26U,	// MADDF_D_MMR6
    26U,	// MADDF_S
    26U,	// MADDF_S_MMR6
    26U,	// MADDR_Q_H
    26U,	// MADDR_Q_W
    0U,	// MADDU
    2U,	// MADDU_DSP
    2U,	// MADDU_DSP_MM
    0U,	// MADDU_MM
    26U,	// MADDV_B
    26U,	// MADDV_D
    26U,	// MADDV_H
    26U,	// MADDV_W
    4674U,	// MADD_D32
    4674U,	// MADD_D32_MM
    4674U,	// MADD_D64
    2U,	// MADD_DSP
    2U,	// MADD_DSP_MM
    0U,	// MADD_MM
    26U,	// MADD_Q_H
    26U,	// MADD_Q_W
    4674U,	// MADD_S
    4674U,	// MADD_S_MM
    2U,	// MAQ_SA_W_PHL
    2U,	// MAQ_SA_W_PHL_MM
    2U,	// MAQ_SA_W_PHR
    2U,	// MAQ_SA_W_PHR_MM
    2U,	// MAQ_S_W_PHL
    2U,	// MAQ_S_W_PHL_MM
    2U,	// MAQ_S_W_PHR
    2U,	// MAQ_S_W_PHR_MM
    2U,	// MAXA_D
    2U,	// MAXA_D_MMR6
    2U,	// MAXA_S
    2U,	// MAXA_S_MMR6
    2U,	// MAXI_S_B
    2U,	// MAXI_S_D
    2U,	// MAXI_S_H
    2U,	// MAXI_S_W
    6U,	// MAXI_U_B
    6U,	// MAXI_U_D
    6U,	// MAXI_U_H
    6U,	// MAXI_U_W
    2U,	// MAX_A_B
    2U,	// MAX_A_D
    2U,	// MAX_A_H
    2U,	// MAX_A_W
    2U,	// MAX_D
    2U,	// MAX_D_MMR6
    2U,	// MAX_S
    2U,	// MAX_S_B
    2U,	// MAX_S_D
    2U,	// MAX_S_H
    2U,	// MAX_S_MMR6
    2U,	// MAX_S_W
    2U,	// MAX_U_B
    2U,	// MAX_U_D
    2U,	// MAX_U_H
    2U,	// MAX_U_W
    4U,	// MFC0
    4U,	// MFC0_MMR6
    0U,	// MFC1
    0U,	// MFC1_D64
    0U,	// MFC1_MM
    0U,	// MFC1_MMR6
    4U,	// MFC2
    0U,	// MFC2_MMR6
    4U,	// MFGC0
    4U,	// MFGC0_MM
    4U,	// MFHC0_MMR6
    0U,	// MFHC1_D32
    0U,	// MFHC1_D32_MM
    0U,	// MFHC1_D64
    0U,	// MFHC1_D64_MM
    0U,	// MFHC2_MMR6
    4U,	// MFHGC0
    4U,	// MFHGC0_MM
    0U,	// MFHI
    0U,	// MFHI16_MM
    0U,	// MFHI64
    0U,	// MFHI_DSP
    0U,	// MFHI_DSP_MM
    0U,	// MFHI_MM
    0U,	// MFLO
    0U,	// MFLO16_MM
    0U,	// MFLO64
    0U,	// MFLO_DSP
    0U,	// MFLO_DSP_MM
    0U,	// MFLO_MM
    9310U,	// MFTR
    2U,	// MINA_D
    2U,	// MINA_D_MMR6
    2U,	// MINA_S
    2U,	// MINA_S_MMR6
    2U,	// MINI_S_B
    2U,	// MINI_S_D
    2U,	// MINI_S_H
    2U,	// MINI_S_W
    6U,	// MINI_U_B
    6U,	// MINI_U_D
    6U,	// MINI_U_H
    6U,	// MINI_U_W
    2U,	// MIN_A_B
    2U,	// MIN_A_D
    2U,	// MIN_A_H
    2U,	// MIN_A_W
    2U,	// MIN_D
    2U,	// MIN_D_MMR6
    2U,	// MIN_S
    2U,	// MIN_S_B
    2U,	// MIN_S_D
    2U,	// MIN_S_H
    2U,	// MIN_S_MMR6
    2U,	// MIN_S_W
    2U,	// MIN_U_B
    2U,	// MIN_U_D
    2U,	// MIN_U_H
    2U,	// MIN_U_W
    2U,	// MOD
    2U,	// MODSUB
    2U,	// MODSUB_MM
    2U,	// MODU
    2U,	// MODU_MMR6
    2U,	// MOD_MMR6
    2U,	// MOD_S_B
    2U,	// MOD_S_D
    2U,	// MOD_S_H
    2U,	// MOD_S_W
    2U,	// MOD_U_B
    2U,	// MOD_U_D
    2U,	// MOD_U_H
    2U,	// MOD_U_W
    0U,	// MOVE16_MM
    0U,	// MOVE16_MMR6
    4674U,	// MOVEP_MM
    4674U,	// MOVEP_MMR6
    0U,	// MOVE_V
    2U,	// MOVF_D32
    2U,	// MOVF_D32_MM
    2U,	// MOVF_D64
    2U,	// MOVF_I
    2U,	// MOVF_I64
    2U,	// MOVF_I_MM
    2U,	// MOVF_S
    2U,	// MOVF_S_MM
    2U,	// MOVN_I64_D64
    2U,	// MOVN_I64_I
    2U,	// MOVN_I64_I64
    2U,	// MOVN_I64_S
    2U,	// MOVN_I_D32
    2U,	// MOVN_I_D32_MM
    2U,	// MOVN_I_D64
    2U,	// MOVN_I_I
    2U,	// MOVN_I_I64
    2U,	// MOVN_I_MM
    2U,	// MOVN_I_S
    2U,	// MOVN_I_S_MM
    2U,	// MOVT_D32
    2U,	// MOVT_D32_MM
    2U,	// MOVT_D64
    2U,	// MOVT_I
    2U,	// MOVT_I64
    2U,	// MOVT_I_MM
    2U,	// MOVT_S
    2U,	// MOVT_S_MM
    2U,	// MOVZ_I64_D64
    2U,	// MOVZ_I64_I
    2U,	// MOVZ_I64_I64
    2U,	// MOVZ_I64_S
    2U,	// MOVZ_I_D32
    2U,	// MOVZ_I_D32_MM
    2U,	// MOVZ_I_D64
    2U,	// MOVZ_I_I
    2U,	// MOVZ_I_I64
    2U,	// MOVZ_I_MM
    2U,	// MOVZ_I_S
    2U,	// MOVZ_I_S_MM
    0U,	// MSUB
    26U,	// MSUBF_D
    26U,	// MSUBF_D_MMR6
    26U,	// MSUBF_S
    26U,	// MSUBF_S_MMR6
    26U,	// MSUBR_Q_H
    26U,	// MSUBR_Q_W
    0U,	// MSUBU
    2U,	// MSUBU_DSP
    2U,	// MSUBU_DSP_MM
    0U,	// MSUBU_MM
    26U,	// MSUBV_B
    26U,	// MSUBV_D
    26U,	// MSUBV_H
    26U,	// MSUBV_W
    4674U,	// MSUB_D32
    4674U,	// MSUB_D32_MM
    4674U,	// MSUB_D64
    2U,	// MSUB_DSP
    2U,	// MSUB_DSP_MM
    0U,	// MSUB_MM
    26U,	// MSUB_Q_H
    26U,	// MSUB_Q_W
    4674U,	// MSUB_S
    4674U,	// MSUB_S_MM
    0U,	// MTC0
    0U,	// MTC0_MMR6
    0U,	// MTC1
    0U,	// MTC1_D64
    0U,	// MTC1_D64_MM
    0U,	// MTC1_MM
    0U,	// MTC1_MMR6
    0U,	// MTC2
    0U,	// MTC2_MMR6
    0U,	// MTGC0
    0U,	// MTGC0_MM
    0U,	// MTHC0_MMR6
    0U,	// MTHC1_D32
    0U,	// MTHC1_D32_MM
    0U,	// MTHC1_D64
    0U,	// MTHC1_D64_MM
    0U,	// MTHC2_MMR6
    0U,	// MTHGC0
    0U,	// MTHGC0_MM
    0U,	// MTHI
    0U,	// MTHI64
    0U,	// MTHI_DSP
    0U,	// MTHI_DSP_MM
    0U,	// MTHI_MM
    0U,	// MTHLIP
    0U,	// MTHLIP_MM
    0U,	// MTLO
    0U,	// MTLO64
    0U,	// MTLO_DSP
    0U,	// MTLO_DSP_MM
    0U,	// MTLO_MM
    0U,	// MTM0
    0U,	// MTM1
    0U,	// MTM2
    0U,	// MTP0
    0U,	// MTP1
    0U,	// MTP2
    1U,	// MTTR
    2U,	// MUH
    2U,	// MUHU
    2U,	// MUHU_MMR6
    2U,	// MUH_MMR6
    2U,	// MUL
    2U,	// MULEQ_S_W_PHL
    2U,	// MULEQ_S_W_PHL_MM
    2U,	// MULEQ_S_W_PHR
    2U,	// MULEQ_S_W_PHR_MM
    2U,	// MULEU_S_PH_QBL
    2U,	// MULEU_S_PH_QBL_MM
    2U,	// MULEU_S_PH_QBR
    2U,	// MULEU_S_PH_QBR_MM
    2U,	// MULQ_RS_PH
    2U,	// MULQ_RS_PH_MM
    2U,	// MULQ_RS_W
    2U,	// MULQ_RS_W_MMR2
    2U,	// MULQ_S_PH
    2U,	// MULQ_S_PH_MMR2
    2U,	// MULQ_S_W
    2U,	// MULQ_S_W_MMR2
    2U,	// MULR_PS64
    2U,	// MULR_Q_H
    2U,	// MULR_Q_W
    2U,	// MULSAQ_S_W_PH
    2U,	// MULSAQ_S_W_PH_MM
    2U,	// MULSA_W_PH
    2U,	// MULSA_W_PH_MMR2
    0U,	// MULT
    2U,	// MULTU_DSP
    2U,	// MULTU_DSP_MM
    2U,	// MULT_DSP
    2U,	// MULT_DSP_MM
    0U,	// MULT_MM
    0U,	// MULTu
    0U,	// MULTu_MM
    2U,	// MULU
    2U,	// MULU_MMR6
    2U,	// MULV_B
    2U,	// MULV_D
    2U,	// MULV_H
    2U,	// MULV_W
    2U,	// MUL_MM
    2U,	// MUL_MMR6
    2U,	// MUL_PH
    2U,	// MUL_PH_MMR2
    2U,	// MUL_Q_H
    2U,	// MUL_Q_W
    2U,	// MUL_R6
    2U,	// MUL_S_PH
    2U,	// MUL_S_PH_MMR2
    0U,	// Mfhi16
    0U,	// Mflo16
    0U,	// Move32R16
    0U,	// MoveR3216
    0U,	// NLOC_B
    0U,	// NLOC_D
    0U,	// NLOC_H
    0U,	// NLOC_W
    0U,	// NLZC_B
    0U,	// NLZC_D
    0U,	// NLZC_H
    0U,	// NLZC_W
    4674U,	// NMADD_D32
    4674U,	// NMADD_D32_MM
    4674U,	// NMADD_D64
    4674U,	// NMADD_S
    4674U,	// NMADD_S_MM
    4674U,	// NMSUB_D32
    4674U,	// NMSUB_D32_MM
    4674U,	// NMSUB_D64
    4674U,	// NMSUB_S
    4674U,	// NMSUB_S_MM
    2U,	// NOR
    2U,	// NOR64
    8U,	// NORI_B
    2U,	// NOR_MM
    2U,	// NOR_MMR6
    2U,	// NOR_V
    0U,	// NOT16_MM
    0U,	// NOT16_MMR6
    0U,	// NegRxRy16
    0U,	// NotRxRy16
    2U,	// OR
    0U,	// OR16_MM
    0U,	// OR16_MMR6
    2U,	// OR64
    8U,	// ORI_B
    10U,	// ORI_MMR6
    2U,	// OR_MM
    2U,	// OR_MMR6
    2U,	// OR_V
    10U,	// ORi
    10U,	// ORi64
    10U,	// ORi_MM
    0U,	// OrRxRxRy16
    2U,	// PACKRL_PH
    2U,	// PACKRL_PH_MM
    0U,	// PAUSE
    0U,	// PAUSE_MM
    0U,	// PAUSE_MMR6
    2U,	// PCKEV_B
    2U,	// PCKEV_D
    2U,	// PCKEV_H
    2U,	// PCKEV_W
    2U,	// PCKOD_B
    2U,	// PCKOD_D
    2U,	// PCKOD_H
    2U,	// PCKOD_W
    0U,	// PCNT_B
    0U,	// PCNT_D
    0U,	// PCNT_H
    0U,	// PCNT_W
    2U,	// PICK_PH
    2U,	// PICK_PH_MM
    2U,	// PICK_QB
    2U,	// PICK_QB_MM
    2U,	// PLL_PS64
    2U,	// PLU_PS64
    0U,	// POP
    0U,	// PRECEQU_PH_QBL
    0U,	// PRECEQU_PH_QBLA
    0U,	// PRECEQU_PH_QBLA_MM
    0U,	// PRECEQU_PH_QBL_MM
    0U,	// PRECEQU_PH_QBR
    0U,	// PRECEQU_PH_QBRA
    0U,	// PRECEQU_PH_QBRA_MM
    0U,	// PRECEQU_PH_QBR_MM
    0U,	// PRECEQ_W_PHL
    0U,	// PRECEQ_W_PHL_MM
    0U,	// PRECEQ_W_PHR
    0U,	// PRECEQ_W_PHR_MM
    0U,	// PRECEU_PH_QBL
    0U,	// PRECEU_PH_QBLA
    0U,	// PRECEU_PH_QBLA_MM
    0U,	// PRECEU_PH_QBL_MM
    0U,	// PRECEU_PH_QBR
    0U,	// PRECEU_PH_QBRA
    0U,	// PRECEU_PH_QBRA_MM
    0U,	// PRECEU_PH_QBR_MM
    2U,	// PRECRQU_S_QB_PH
    2U,	// PRECRQU_S_QB_PH_MM
    2U,	// PRECRQ_PH_W
    2U,	// PRECRQ_PH_W_MM
    2U,	// PRECRQ_QB_PH
    2U,	// PRECRQ_QB_PH_MM
    2U,	// PRECRQ_RS_PH_W
    2U,	// PRECRQ_RS_PH_W_MM
    2U,	// PRECR_QB_PH
    2U,	// PRECR_QB_PH_MMR2
    6U,	// PRECR_SRA_PH_W
    6U,	// PRECR_SRA_PH_W_MMR2
    6U,	// PRECR_SRA_R_PH_W
    6U,	// PRECR_SRA_R_PH_W_MMR2
    0U,	// PREF
    0U,	// PREFE
    0U,	// PREFE_MM
    0U,	// PREFX_MM
    0U,	// PREF_MM
    0U,	// PREF_MMR6
    0U,	// PREF_R6
    6U,	// PREPEND
    6U,	// PREPEND_MMR2
    2U,	// PUL_PS64
    2U,	// PUU_PS64
    0U,	// RADDU_W_QB
    0U,	// RADDU_W_QB_MM
    0U,	// RDDSP
    0U,	// RDDSP_MM
    8U,	// RDHWR
    8U,	// RDHWR64
    8U,	// RDHWR_MM
    4U,	// RDHWR_MMR6
    0U,	// RDPGPR_MMR6
    0U,	// RECIP_D32
    0U,	// RECIP_D32_MM
    0U,	// RECIP_D64
    0U,	// RECIP_D64_MM
    0U,	// RECIP_S
    0U,	// RECIP_S_MM
    0U,	// REPLV_PH
    0U,	// REPLV_PH_MM
    0U,	// REPLV_QB
    0U,	// REPLV_QB_MM
    0U,	// REPL_PH
    0U,	// REPL_PH_MM
    0U,	// REPL_QB
    0U,	// REPL_QB_MM
    0U,	// RINT_D
    0U,	// RINT_D_MMR6
    0U,	// RINT_S
    0U,	// RINT_S_MMR6
    6U,	// ROTR
    2U,	// ROTRV
    2U,	// ROTRV_MM
    6U,	// ROTR_MM
    0U,	// ROUND_L_D64
    0U,	// ROUND_L_D_MMR6
    0U,	// ROUND_L_S
    0U,	// ROUND_L_S_MMR6
    0U,	// ROUND_W_D32
    0U,	// ROUND_W_D64
    0U,	// ROUND_W_D_MMR6
    0U,	// ROUND_W_MM
    0U,	// ROUND_W_S
    0U,	// ROUND_W_S_MM
    0U,	// ROUND_W_S_MMR6
    0U,	// RSQRT_D32
    0U,	// RSQRT_D32_MM
    0U,	// RSQRT_D64
    0U,	// RSQRT_D64_MM
    0U,	// RSQRT_S
    0U,	// RSQRT_S_MM
    0U,	// Restore16
    0U,	// RestoreX16
    0U,	// SAA
    0U,	// SAAD
    4U,	// SAT_S_B
    14U,	// SAT_S_D
    16U,	// SAT_S_H
    6U,	// SAT_S_W
    4U,	// SAT_U_B
    14U,	// SAT_U_D
    16U,	// SAT_U_H
    6U,	// SAT_U_W
    0U,	// SB
    0U,	// SB16_MM
    0U,	// SB16_MMR6
    0U,	// SB64
    0U,	// SBE
    0U,	// SBE_MM
    0U,	// SB_MM
    0U,	// SB_MMR6
    0U,	// SC
    0U,	// SC64
    0U,	// SC64_R6
    0U,	// SCD
    0U,	// SCD_R6
    0U,	// SCE
    0U,	// SCE_MM
    0U,	// SC_MM
    0U,	// SC_MMR6
    0U,	// SC_R6
    0U,	// SD
    0U,	// SDBBP
    0U,	// SDBBP16_MM
    0U,	// SDBBP16_MMR6
    0U,	// SDBBP_MM
    0U,	// SDBBP_MMR6
    0U,	// SDBBP_R6
    0U,	// SDC1
    0U,	// SDC164
    0U,	// SDC1_D64_MMR6
    0U,	// SDC1_MM
    0U,	// SDC2
    0U,	// SDC2_MMR6
    0U,	// SDC2_R6
    0U,	// SDC3
    0U,	// SDIV
    0U,	// SDIV_MM
    0U,	// SDL
    0U,	// SDR
    0U,	// SDXC1
    0U,	// SDXC164
    0U,	// SEB
    0U,	// SEB64
    0U,	// SEB_MM
    0U,	// SEH
    0U,	// SEH64
    0U,	// SEH_MM
    2U,	// SELEQZ
    2U,	// SELEQZ64
    2U,	// SELEQZ_D
    2U,	// SELEQZ_D_MMR6
    2U,	// SELEQZ_MMR6
    2U,	// SELEQZ_S
    2U,	// SELEQZ_S_MMR6
    2U,	// SELNEZ
    2U,	// SELNEZ64
    2U,	// SELNEZ_D
    2U,	// SELNEZ_D_MMR6
    2U,	// SELNEZ_MMR6
    2U,	// SELNEZ_S
    2U,	// SELNEZ_S_MMR6
    26U,	// SEL_D
    26U,	// SEL_D_MMR6
    26U,	// SEL_S
    26U,	// SEL_S_MMR6
    2U,	// SEQ
    2U,	// SEQi
    0U,	// SH
    0U,	// SH16_MM
    0U,	// SH16_MMR6
    0U,	// SH64
    0U,	// SHE
    0U,	// SHE_MM
    8U,	// SHF_B
    8U,	// SHF_H
    8U,	// SHF_W
    0U,	// SHILO
    0U,	// SHILOV
    0U,	// SHILOV_MM
    0U,	// SHILO_MM
    2U,	// SHLLV_PH
    2U,	// SHLLV_PH_MM
    2U,	// SHLLV_QB
    2U,	// SHLLV_QB_MM
    2U,	// SHLLV_S_PH
    2U,	// SHLLV_S_PH_MM
    2U,	// SHLLV_S_W
    2U,	// SHLLV_S_W_MM
    16U,	// SHLL_PH
    16U,	// SHLL_PH_MM
    4U,	// SHLL_QB
    4U,	// SHLL_QB_MM
    16U,	// SHLL_S_PH
    16U,	// SHLL_S_PH_MM
    6U,	// SHLL_S_W
    6U,	// SHLL_S_W_MM
    2U,	// SHRAV_PH
    2U,	// SHRAV_PH_MM
    2U,	// SHRAV_QB
    2U,	// SHRAV_QB_MMR2
    2U,	// SHRAV_R_PH
    2U,	// SHRAV_R_PH_MM
    2U,	// SHRAV_R_QB
    2U,	// SHRAV_R_QB_MMR2
    2U,	// SHRAV_R_W
    2U,	// SHRAV_R_W_MM
    16U,	// SHRA_PH
    16U,	// SHRA_PH_MM
    4U,	// SHRA_QB
    4U,	// SHRA_QB_MMR2
    16U,	// SHRA_R_PH
    16U,	// SHRA_R_PH_MM
    4U,	// SHRA_R_QB
    4U,	// SHRA_R_QB_MMR2
    6U,	// SHRA_R_W
    6U,	// SHRA_R_W_MM
    2U,	// SHRLV_PH
    2U,	// SHRLV_PH_MMR2
    2U,	// SHRLV_QB
    2U,	// SHRLV_QB_MM
    16U,	// SHRL_PH
    16U,	// SHRL_PH_MMR2
    4U,	// SHRL_QB
    4U,	// SHRL_QB_MM
    0U,	// SH_MM
    0U,	// SH_MMR6
    0U,	// SIGRIE
    0U,	// SIGRIE_MMR6
    150U,	// SLDI_B
    36U,	// SLDI_D
    146U,	// SLDI_H
    38U,	// SLDI_W
    154U,	// SLD_B
    154U,	// SLD_D
    154U,	// SLD_H
    154U,	// SLD_W
    6U,	// SLL
    2U,	// SLL16_MM
    2U,	// SLL16_MMR6
    1U,	// SLL64_32
    1U,	// SLL64_64
    4U,	// SLLI_B
    14U,	// SLLI_D
    16U,	// SLLI_H
    6U,	// SLLI_W
    2U,	// SLLV
    2U,	// SLLV_MM
    2U,	// SLL_B
    2U,	// SLL_D
    2U,	// SLL_H
    6U,	// SLL_MM
    6U,	// SLL_MMR6
    2U,	// SLL_W
    2U,	// SLT
    2U,	// SLT64
    2U,	// SLT_MM
    2U,	// SLTi
    2U,	// SLTi64
    2U,	// SLTi_MM
    2U,	// SLTiu
    2U,	// SLTiu64
    2U,	// SLTiu_MM
    2U,	// SLTu
    2U,	// SLTu64
    2U,	// SLTu_MM
    2U,	// SNE
    2U,	// SNEi
    144U,	// SPLATI_B
    158U,	// SPLATI_D
    132U,	// SPLATI_H
    140U,	// SPLATI_W
    130U,	// SPLAT_B
    130U,	// SPLAT_D
    130U,	// SPLAT_H
    130U,	// SPLAT_W
    6U,	// SRA
    4U,	// SRAI_B
    14U,	// SRAI_D
    16U,	// SRAI_H
    6U,	// SRAI_W
    4U,	// SRARI_B
    14U,	// SRARI_D
    16U,	// SRARI_H
    6U,	// SRARI_W
    2U,	// SRAR_B
    2U,	// SRAR_D
    2U,	// SRAR_H
    2U,	// SRAR_W
    2U,	// SRAV
    2U,	// SRAV_MM
    2U,	// SRA_B
    2U,	// SRA_D
    2U,	// SRA_H
    6U,	// SRA_MM
    2U,	// SRA_W
    6U,	// SRL
    2U,	// SRL16_MM
    2U,	// SRL16_MMR6
    4U,	// SRLI_B
    14U,	// SRLI_D
    16U,	// SRLI_H
    6U,	// SRLI_W
    4U,	// SRLRI_B
    14U,	// SRLRI_D
    16U,	// SRLRI_H
    6U,	// SRLRI_W
    2U,	// SRLR_B
    2U,	// SRLR_D
    2U,	// SRLR_H
    2U,	// SRLR_W
    2U,	// SRLV
    2U,	// SRLV_MM
    2U,	// SRL_B
    2U,	// SRL_D
    2U,	// SRL_H
    6U,	// SRL_MM
    2U,	// SRL_W
    0U,	// SSNOP
    0U,	// SSNOP_MM
    0U,	// SSNOP_MMR6
    0U,	// ST_B
    0U,	// ST_D
    0U,	// ST_H
    0U,	// ST_W
    2U,	// SUB
    2U,	// SUBQH_PH
    2U,	// SUBQH_PH_MMR2
    2U,	// SUBQH_R_PH
    2U,	// SUBQH_R_PH_MMR2
    2U,	// SUBQH_R_W
    2U,	// SUBQH_R_W_MMR2
    2U,	// SUBQH_W
    2U,	// SUBQH_W_MMR2
    2U,	// SUBQ_PH
    2U,	// SUBQ_PH_MM
    2U,	// SUBQ_S_PH
    2U,	// SUBQ_S_PH_MM
    2U,	// SUBQ_S_W
    2U,	// SUBQ_S_W_MM
    2U,	// SUBSUS_U_B
    2U,	// SUBSUS_U_D
    2U,	// SUBSUS_U_H
    2U,	// SUBSUS_U_W
    2U,	// SUBSUU_S_B
    2U,	// SUBSUU_S_D
    2U,	// SUBSUU_S_H
    2U,	// SUBSUU_S_W
    2U,	// SUBS_S_B
    2U,	// SUBS_S_D
    2U,	// SUBS_S_H
    2U,	// SUBS_S_W
    2U,	// SUBS_U_B
    2U,	// SUBS_U_D
    2U,	// SUBS_U_H
    2U,	// SUBS_U_W
    2U,	// SUBU16_MM
    2U,	// SUBU16_MMR6
    2U,	// SUBUH_QB
    2U,	// SUBUH_QB_MMR2
    2U,	// SUBUH_R_QB
    2U,	// SUBUH_R_QB_MMR2
    2U,	// SUBU_MMR6
    2U,	// SUBU_PH
    2U,	// SUBU_PH_MMR2
    2U,	// SUBU_QB
    2U,	// SUBU_QB_MM
    2U,	// SUBU_S_PH
    2U,	// SUBU_S_PH_MMR2
    2U,	// SUBU_S_QB
    2U,	// SUBU_S_QB_MM
    6U,	// SUBVI_B
    6U,	// SUBVI_D
    6U,	// SUBVI_H
    6U,	// SUBVI_W
    2U,	// SUBV_B
    2U,	// SUBV_D
    2U,	// SUBV_H
    2U,	// SUBV_W
    2U,	// SUB_MM
    2U,	// SUB_MMR6
    2U,	// SUBu
    2U,	// SUBu_MM
    0U,	// SUXC1
    0U,	// SUXC164
    0U,	// SUXC1_MM
    0U,	// SW
    0U,	// SW16_MM
    0U,	// SW16_MMR6
    0U,	// SW64
    0U,	// SWC1
    0U,	// SWC1_MM
    0U,	// SWC2
    0U,	// SWC2_MMR6
    0U,	// SWC2_R6
    0U,	// SWC3
    0U,	// SWDSP
    0U,	// SWDSP_MM
    0U,	// SWE
    0U,	// SWE_MM
    0U,	// SWL
    0U,	// SWL64
    0U,	// SWLE
    0U,	// SWLE_MM
    0U,	// SWL_MM
    0U,	// SWM16_MM
    0U,	// SWM16_MMR6
    0U,	// SWM32_MM
    0U,	// SWP_MM
    0U,	// SWR
    0U,	// SWR64
    0U,	// SWRE
    0U,	// SWRE_MM
    0U,	// SWR_MM
    0U,	// SWSP_MM
    0U,	// SWSP_MMR6
    0U,	// SWXC1
    0U,	// SWXC1_MM
    0U,	// SW_MM
    0U,	// SW_MMR6
    0U,	// SYNC
    0U,	// SYNCI
    0U,	// SYNCI_MM
    0U,	// SYNCI_MMR6
    0U,	// SYNC_MM
    0U,	// SYNC_MMR6
    0U,	// SYSCALL
    0U,	// SYSCALL_MM
    0U,	// Save16
    0U,	// SaveX16
    0U,	// SbRxRyOffMemX16
    0U,	// SebRx16
    0U,	// SehRx16
    0U,	// ShRxRyOffMemX16
    6U,	// SllX16
    0U,	// SllvRxRy16
    0U,	// SltRxRy16
    0U,	// SltiRxImm16
    0U,	// SltiRxImmX16
    0U,	// SltiuRxImm16
    0U,	// SltiuRxImmX16
    0U,	// SltuRxRy16
    6U,	// SraX16
    0U,	// SravRxRy16
    6U,	// SrlX16
    0U,	// SrlvRxRy16
    2U,	// SubuRxRyRz16
    0U,	// SwRxRyOffMemX16
    0U,	// SwRxSpImmX16
    40U,	// TEQ
    0U,	// TEQI
    0U,	// TEQI_MM
    16U,	// TEQ_MM
    40U,	// TGE
    0U,	// TGEI
    0U,	// TGEIU
    0U,	// TGEIU_MM
    0U,	// TGEI_MM
    40U,	// TGEU
    16U,	// TGEU_MM
    16U,	// TGE_MM
    0U,	// TLBGINV
    0U,	// TLBGINVF
    0U,	// TLBGINVF_MM
    0U,	// TLBGINV_MM
    0U,	// TLBGP
    0U,	// TLBGP_MM
    0U,	// TLBGR
    0U,	// TLBGR_MM
    0U,	// TLBGWI
    0U,	// TLBGWI_MM
    0U,	// TLBGWR
    0U,	// TLBGWR_MM
    0U,	// TLBINV
    0U,	// TLBINVF
    0U,	// TLBINVF_MMR6
    0U,	// TLBINV_MMR6
    0U,	// TLBP
    0U,	// TLBP_MM
    0U,	// TLBR
    0U,	// TLBR_MM
    0U,	// TLBWI
    0U,	// TLBWI_MM
    0U,	// TLBWR
    0U,	// TLBWR_MM
    40U,	// TLT
    0U,	// TLTI
    0U,	// TLTIU_MM
    0U,	// TLTI_MM
    40U,	// TLTU
    16U,	// TLTU_MM
    16U,	// TLT_MM
    40U,	// TNE
    0U,	// TNEI
    0U,	// TNEI_MM
    16U,	// TNE_MM
    0U,	// TRUNC_L_D64
    0U,	// TRUNC_L_D_MMR6
    0U,	// TRUNC_L_S
    0U,	// TRUNC_L_S_MMR6
    0U,	// TRUNC_W_D32
    0U,	// TRUNC_W_D64
    0U,	// TRUNC_W_D_MMR6
    0U,	// TRUNC_W_MM
    0U,	// TRUNC_W_S
    0U,	// TRUNC_W_S_MM
    0U,	// TRUNC_W_S_MMR6
    0U,	// TTLTIU
    0U,	// UDIV
    0U,	// UDIV_MM
    2U,	// V3MULU
    2U,	// VMM0
    2U,	// VMULU
    26U,	// VSHF_B
    26U,	// VSHF_D
    26U,	// VSHF_H
    26U,	// VSHF_W
    0U,	// WAIT
    0U,	// WAIT_MM
    0U,	// WAIT_MMR6
    0U,	// WRDSP
    0U,	// WRDSP_MM
    0U,	// WRPGPR_MMR6
    0U,	// WSBH
    0U,	// WSBH_MM
    0U,	// WSBH_MMR6
    2U,	// XOR
    0U,	// XOR16_MM
    0U,	// XOR16_MMR6
    2U,	// XOR64
    8U,	// XORI_B
    10U,	// XORI_MMR6
    2U,	// XOR_MM
    2U,	// XOR_MMR6
    2U,	// XOR_V
    10U,	// XORi
    10U,	// XORi64
    10U,	// XORi_MM
    0U,	// XorRxRxRy16
    0U,	// YIELD
  };

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  return {AsmStrs+(Bits & 16383)-1, Bits};

}
/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void MipsInstPrinter::printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O) {
  O << "\t";

  auto MnemonicInfo = getMnemonic(MI);

  O << MnemonicInfo.first;

  uint64_t Bits = MnemonicInfo.second;
  assert(Bits != 0 && "Cannot print this instruction.");

  // Fragment 0 encoded into 4 bits for 16 unique commands.
  switch ((Bits >> 14) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_INSTR_REF, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_...
    return;
    break;
  case 1:
    // ABSMacro, BEQLImmMacro, BGE, BGEImmMacro, BGEL, BGELImmMacro, BGEU, BG...
    printOperand(MI, 0, O);
    break;
  case 2:
    // B_MMR6_Pseudo, B_MM_Pseudo, B16_MM, BAL, BALC, BALC_MMR6, BC, BC16_MMR...
    printOperand(MI, Address, 0, O);
    break;
  case 3:
    // CTTC1, MTTACX, MTTC0, MTTC1, MTTGPR, MTTHC1, MTTHI, MTTLO, MultRxRyRz1...
    printOperand(MI, 1, O);
    O << ", ";
    break;
  case 4:
    // LWM_MM, SWM_MM, LWM16_MM, LWM16_MMR6, LWM32_MM, SWM16_MM, SWM16_MMR6, ...
    printRegisterList(MI, 0, O);
    O << ", ";
    printMemOperand(MI, 1, O);
    return;
    break;
  case 5:
    // SelBeqZ, SelBneZ, SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZ...
    printOperand(MI, 3, O);
    break;
  case 6:
    // AND16_MM, AND16_MMR6, LSA_MMR6, MTHC1_D32, MTHC1_D32_MM, MTHC1_D64, MT...
    printOperand(MI, 2, O);
    O << ", ";
    break;
  case 7:
    // BREAK, BREAK_MM, BREAK_MMR6, HYPCALL, HYPCALL_MM, SDBBP_MM, SYSCALL_MM...
    printUImm<10>(MI, 0, O);
    break;
  case 8:
    // BREAK16_MM, BREAK16_MMR6, SDBBP16_MM, SDBBP16_MMR6
    printUImm<4>(MI, 0, O);
    return;
    break;
  case 9:
    // CACHE, CACHEE, CACHEE_MM, CACHE_MM, CACHE_MMR6, CACHE_R6, PREF, PREFE,...
    printUImm<5>(MI, 2, O);
    O << ", ";
    break;
  case 10:
    // FCMP_D32, FCMP_D32_MM, FCMP_D64, FCMP_S32, FCMP_S32_MM
    printFCCOperand(MI, 2, O);
    break;
  case 11:
    // Jal16, JalB16
    printUImm<26>(MI, 0, O);
    break;
  case 12:
    // SDBBP, SDBBP_MMR6, SDBBP_R6, SYSCALL
    printUImm<20>(MI, 0, O);
    return;
    break;
  case 13:
    // SIGRIE, SIGRIE_MMR6
    printUImm<16>(MI, 0, O);
    return;
    break;
  case 14:
    // SYNC, SYNC_MM, SYNC_MMR6
    printUImm<5>(MI, 0, O);
    return;
    break;
  case 15:
    // SYNCI, SYNCI_MM, SYNCI_MMR6
    printMemOperand(MI, 0, O);
    return;
    break;
  }


  // Fragment 1 encoded into 5 bits for 18 unique commands.
  switch ((Bits >> 18) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABSMacro, BEQLImmMacro, BGE, BGEImmMacro, BGEL, BGELImmMacro, BGEU, BG...
    O << ", ";
    break;
  case 1:
    // B_MMR6_Pseudo, B_MM_Pseudo, Constant32, JalOneReg, MFTDSP, MTTDSP, ADD...
    return;
    break;
  case 2:
    // CTTC1, MTTACX, MTTC0, MTTC1, MTTGPR, MTTHC1, MTTHI, MTTLO, CTC1, CTC1_...
    printOperand(MI, 0, O);
    break;
  case 3:
    // LwConstant32
    O << ", 1f\n\tb\t2f\n\t.align\t2\n1: \t.word\t";
    printOperand(MI, 1, O);
    O << "\n2:";
    return;
    break;
  case 4:
    // MultRxRyRz16, MultuRxRyRz16, SltCCRxRy16, SltiCCRxImmX16, SltiuCCRxImm...
    printOperand(MI, 2, O);
    break;
  case 5:
    // SelBeqZ, SelBneZ
    O << ", .+4\n\t\n\tmove ";
    printOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 6:
    // AND16_MM, AND16_MMR6, LSA_MMR6, OR16_MM, OR16_MMR6, PREFX_MM, XOR16_MM...
    printOperand(MI, 1, O);
    break;
  case 7:
    // AddiuRxPcImmX16
    O << ", $pc, ";
    printOperand(MI, 1, O);
    return;
    break;
  case 8:
    // AddiuSpImm16, Bimm16
    O << " # 16 bit inst";
    return;
    break;
  case 9:
    // Bteqz16, Btnez16
    O << "  # 16 bit inst";
    return;
    break;
  case 10:
    // CACHE, CACHEE, CACHEE_MM, CACHE_MM, CACHE_MMR6, CACHE_R6, PREF, PREFE,...
    printMemOperand(MI, 0, O);
    return;
    break;
  case 11:
    // FCMP_D32, FCMP_D32_MM, FCMP_D64
    O << ".d\t";
    printOperand(MI, 0, O);
    O << ", ";
    printOperand(MI, 1, O);
    return;
    break;
  case 12:
    // FCMP_S32, FCMP_S32_MM
    O << ".s\t";
    printOperand(MI, 0, O);
    O << ", ";
    printOperand(MI, 1, O);
    return;
    break;
  case 13:
    // INSERT_B, INSERT_D, INSERT_H, INSERT_W, INSVE_B, INSVE_D, INSVE_H, INS...
    O << '[';
    break;
  case 14:
    // Jal16
    O << "\n\tnop";
    return;
    break;
  case 15:
    // JalB16
    O << "\t# branch\n\tnop";
    return;
    break;
  case 16:
    // SAA, SAAD
    O << ", (";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 17:
    // SC, SC64, SC64_R6, SCD, SCD_R6, SCE, SCE_MM, SC_MM, SC_MMR6, SC_R6
    printMemOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 26 unique commands.
  switch ((Bits >> 23) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABSMacro, BEQLImmMacro, BGE, BGEImmMacro, BGEL, BGELImmMacro, BGEU, BG...
    printOperand(MI, 1, O);
    break;
  case 1:
    // CTTC1, MTTACX, MTTC1, MTTGPR, MTTHC1, MTTHI, MTTLO, ADDIUS5_MM, AND16_...
    return;
    break;
  case 2:
    // GotPrologue16, AddiuRxRxImm16, AddiuRxRxImmX16, AndRxRxRy16, BINSLI_B,...
    printOperand(MI, 2, O);
    break;
  case 3:
    // LDMacro, LOAD_ACC128, LOAD_ACC64, LOAD_ACC64DSP, LOAD_CCOND_DSP, LoadA...
    printMemOperand(MI, 1, O);
    return;
    break;
  case 4:
    // MTTC0, DMTC0, DMTC2, DMTGC0, FORK, LSA_MMR6, MTC0, MTC0_MMR6, MTC2, MT...
    O << ", ";
    break;
  case 5:
    // MultRxRyRz16, MultuRxRyRz16
    O << "\n\tmflo\t";
    printOperand(MI, 0, O);
    return;
    break;
  case 6:
    // SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZSlti, SelTBteqZSlt...
    printOperand(MI, 4, O);
    break;
  case 7:
    // SltCCRxRy16, SltiCCRxImmX16, SltiuCCRxImmX16, SltuCCRxRy16, SltuRxRyRz...
    O << "\n\tmove\t";
    printOperand(MI, 0, O);
    O << ", $t8";
    return;
    break;
  case 8:
    // AddiuRxRyOffMemX16, LEA_ADDiu, LEA_ADDiu64, LEA_ADDiu_MM
    printMemOperandEA(MI, 1, O);
    return;
    break;
  case 9:
    // BBIT0, BBIT032, BBIT1, BBIT132
    printUImm<5>(MI, 1, O);
    O << ", ";
    printOperand(MI, Address, 2, O);
    return;
    break;
  case 10:
    // BC1EQZ, BC1EQZC_MMR6, BC1F, BC1FL, BC1F_MM, BC1NEZ, BC1NEZC_MMR6, BC1T...
    printOperand(MI, Address, 1, O);
    break;
  case 11:
    // BREAK, BREAK_MM, BREAK_MMR6, RDDSP, WRDSP
    printUImm<10>(MI, 1, O);
    return;
    break;
  case 12:
    // DMFC2_OCTEON, DMTC2_OCTEON, LUI_MMR6, LUi, LUi64, LUi_MM
    printUImm<16>(MI, 1, O);
    return;
    break;
  case 13:
    // GINVT, GINVT_MMR6
    printUImm<2>(MI, 1, O);
    return;
    break;
  case 14:
    // INSERT_B
    printUImm<4>(MI, 3, O);
    O << "], ";
    printOperand(MI, 2, O);
    return;
    break;
  case 15:
    // INSERT_D
    printUImm<1>(MI, 3, O);
    O << "], ";
    printOperand(MI, 2, O);
    return;
    break;
  case 16:
    // INSERT_H
    printUImm<3>(MI, 3, O);
    O << "], ";
    printOperand(MI, 2, O);
    return;
    break;
  case 17:
    // INSERT_W
    printUImm<2>(MI, 3, O);
    O << "], ";
    printOperand(MI, 2, O);
    return;
    break;
  case 18:
    // INSVE_B
    printUImm<4>(MI, 2, O);
    O << "], ";
    printOperand(MI, 3, O);
    O << '[';
    printUImm<0>(MI, 4, O);
    O << ']';
    return;
    break;
  case 19:
    // INSVE_D
    printUImm<1>(MI, 2, O);
    O << "], ";
    printOperand(MI, 3, O);
    O << '[';
    printUImm<0>(MI, 4, O);
    O << ']';
    return;
    break;
  case 20:
    // INSVE_H
    printUImm<3>(MI, 2, O);
    O << "], ";
    printOperand(MI, 3, O);
    O << '[';
    printUImm<0>(MI, 4, O);
    O << ']';
    return;
    break;
  case 21:
    // INSVE_W
    printUImm<2>(MI, 2, O);
    O << "], ";
    printOperand(MI, 3, O);
    O << '[';
    printUImm<0>(MI, 4, O);
    O << ']';
    return;
    break;
  case 22:
    // LWP_MM, SWP_MM
    printMemOperand(MI, 2, O);
    return;
    break;
  case 23:
    // PREFX_MM
    O << '(';
    printOperand(MI, 0, O);
    O << ')';
    return;
    break;
  case 24:
    // RDDSP_MM, WRDSP_MM
    printUImm<7>(MI, 1, O);
    return;
    break;
  case 25:
    // REPL_QB, REPL_QB_MM
    printUImm<8>(MI, 1, O);
    return;
    break;
  }


  // Fragment 3 encoded into 5 bits for 18 unique commands.
  switch ((Bits >> 28) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABSMacro, CFTC1, JalTwoReg, LoadAddrImm32, LoadAddrImm64, LoadImm32, L...
    return;
    break;
  case 1:
    // BEQLImmMacro, BGE, BGEImmMacro, BGEL, BGELImmMacro, BGEU, BGEUImmMacro...
    O << ", ";
    break;
  case 2:
    // BteqzT8CmpX16, BteqzT8CmpiX16, BteqzT8SltX16, BteqzT8SltiX16, BteqzT8S...
    O << "\n\tbteqz\t";
    printOperand(MI, Address, 2, O);
    return;
    break;
  case 3:
    // BtnezT8CmpX16, BtnezT8CmpiX16, BtnezT8SltX16, BtnezT8SltiX16, BtnezT8S...
    O << "\n\tbtnez\t";
    printOperand(MI, Address, 2, O);
    return;
    break;
  case 4:
    // GotPrologue16
    O << "\n\taddiu\t";
    printOperand(MI, 1, O);
    O << ", $pc, ";
    printOperand(MI, 3, O);
    O << "\n ";
    return;
    break;
  case 5:
    // MTTC0, DMTC0, DMTC2, DMTGC0, MTC0, MTC0_MMR6, MTC2, MTGC0, MTGC0_MM, M...
    printUImm<3>(MI, 2, O);
    return;
    break;
  case 6:
    // SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZSlti, SelTBteqZSlt...
    O << "\n\tbteqz\t.+4\n\tmove ";
    printOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 7:
    // SelTBtneZCmp, SelTBtneZCmpi, SelTBtneZSlt, SelTBtneZSlti, SelTBtneZSlt...
    O << "\n\tbtnez\t.+4\n\tmove ";
    printOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 8:
    // AddiuRxRxImm16, LwRxPcTcp16
    O << "\t# 16 bit inst";
    return;
    break;
  case 9:
    // BeqzRxImm16, BnezRxImm16
    O << "  # 16 bit inst";
    return;
    break;
  case 10:
    // COPY_S_B, COPY_S_D, COPY_S_H, COPY_S_W, COPY_U_B, COPY_U_H, COPY_U_W, ...
    O << '[';
    break;
  case 11:
    // CmpiRxImm16, LiRxImm16, SltiRxImm16, SltiuRxImm16
    O << " \t# 16 bit inst";
    return;
    break;
  case 12:
    // DSLL64_32
    O << ", 32";
    return;
    break;
  case 13:
    // FORK
    printOperand(MI, 2, O);
    return;
    break;
  case 14:
    // LBUX, LBUX_MM, LDXC1, LDXC164, LHX, LHX_MM, LUXC1, LUXC164, LUXC1_MM, ...
    O << '(';
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 15:
    // LSA_MMR6
    printOperand(MI, 0, O);
    O << ", ";
    printUImm<2, 1>(MI, 3, O);
    return;
    break;
  case 16:
    // MTTR
    printUImm<1>(MI, 2, O);
    O << ", ";
    printUImm<3>(MI, 3, O);
    O << ", ";
    printUImm<1>(MI, 4, O);
    return;
    break;
  case 17:
    // SLL64_32, SLL64_64
    O << ", 0";
    return;
    break;
  }


  // Fragment 4 encoded into 5 bits for 21 unique commands.
  switch ((Bits >> 33) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // BEQLImmMacro, BGE, BGEImmMacro, BGEL, BGELImmMacro, BGEU, BGEUImmMacro...
    printOperand(MI, Address, 2, O);
    return;
    break;
  case 1:
    // DMULImmMacro, DMULMacro, DMULOMacro, DMULOUMacro, DROL, DROLImm, DROR,...
    printOperand(MI, 2, O);
    break;
  case 2:
    // MFTC0, BCLRI_B, BNEGI_B, BSETI_B, COPY_S_H, COPY_U_H, DMFC0, DMFC2, DM...
    printUImm<3>(MI, 2, O);
    break;
  case 3:
    // ADDVI_B, ADDVI_D, ADDVI_H, ADDVI_W, APPEND, APPEND_MMR2, BCLRI_W, BNEG...
    printUImm<5>(MI, 2, O);
    break;
  case 4:
    // ANDI_B, NORI_B, ORI_B, RDHWR, RDHWR64, RDHWR_MM, SHF_B, SHF_H, SHF_W, ...
    printUImm<8>(MI, 2, O);
    return;
    break;
  case 5:
    // ANDI_MMR6, ANDi, ANDi64, ANDi_MM, AUI, AUI_MMR6, DAHI, DATI, DAUI, ORI...
    printUImm<16>(MI, 2, O);
    return;
    break;
  case 6:
    // BALIGN, BALIGN_MMR2, COPY_S_W, COPY_U_W, SPLATI_W
    printUImm<2>(MI, 2, O);
    break;
  case 7:
    // BCLRI_D, BNEGI_D, BSETI_D, DEXT, DEXT64_32, DINS, DROTR, DSLL, DSRA, D...
    printUImm<6>(MI, 2, O);
    break;
  case 8:
    // BCLRI_H, BNEGI_H, BSETI_H, COPY_S_B, COPY_U_B, SAT_S_H, SAT_U_H, SHLL_...
    printUImm<4>(MI, 2, O);
    break;
  case 9:
    // BINSLI_B, BINSRI_B, SLDI_H
    printUImm<3>(MI, 3, O);
    break;
  case 10:
    // BINSLI_D, BINSRI_D
    printUImm<6>(MI, 3, O);
    return;
    break;
  case 11:
    // BINSLI_H, BINSRI_H, SLDI_B
    printUImm<4>(MI, 3, O);
    break;
  case 12:
    // BINSLI_W, BINSRI_W
    printUImm<5>(MI, 3, O);
    return;
    break;
  case 13:
    // BINSL_B, BINSL_D, BINSL_H, BINSL_W, BINSR_B, BINSR_D, BINSR_H, BINSR_W...
    printOperand(MI, 3, O);
    break;
  case 14:
    // BMNZI_B, BMZI_B, BSELI_B
    printUImm<8>(MI, 3, O);
    return;
    break;
  case 15:
    // COPY_S_D, MFTR, SPLATI_D
    printUImm<1>(MI, 2, O);
    break;
  case 16:
    // DEXTU, DINSU
    printUImm<5, 32>(MI, 2, O);
    O << ", ";
    break;
  case 17:
    // FADD_S_MMR6, FDIV_S_MMR6, FMUL_S_MMR6, FSUB_S_MMR6
    printOperand(MI, 1, O);
    return;
    break;
  case 18:
    // SLDI_D
    printUImm<1>(MI, 3, O);
    O << ']';
    return;
    break;
  case 19:
    // SLDI_W
    printUImm<2>(MI, 3, O);
    O << ']';
    return;
    break;
  case 20:
    // TEQ, TGE, TGEU, TLT, TLTU, TNE
    printUImm<10>(MI, 2, O);
    return;
    break;
  }


  // Fragment 5 encoded into 3 bits for 5 unique commands.
  switch ((Bits >> 38) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DMULImmMacro, DMULMacro, DMULOMacro, DMULOUMacro, DROL, DROLImm, DROR,...
    return;
    break;
  case 1:
    // ALIGN, ALIGN_MMR6, CINS, CINS32, CINS64_32, CINS_i32, DALIGN, DEXT, DE...
    O << ", ";
    break;
  case 2:
    // COPY_S_B, COPY_S_D, COPY_S_H, COPY_S_W, COPY_U_B, COPY_U_H, COPY_U_W, ...
    O << ']';
    return;
    break;
  case 3:
    // DEXTU
    printUImm<5, 1>(MI, 3, O);
    return;
    break;
  case 4:
    // DINSU
    printUImm<6>(MI, 3, O);
    return;
    break;
  }


  // Fragment 6 encoded into 4 bits for 10 unique commands.
  switch ((Bits >> 41) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ALIGN, ALIGN_MMR6
    printUImm<2>(MI, 3, O);
    return;
    break;
  case 1:
    // CINS, CINS32, CINS64_32, CINS_i32, EXTS, EXTS32
    printUImm<5>(MI, 3, O);
    return;
    break;
  case 2:
    // DALIGN, MFTR
    printUImm<3>(MI, 3, O);
    break;
  case 3:
    // DEXT
    printUImm<6, 1>(MI, 3, O);
    return;
    break;
  case 4:
    // DEXT64_32, EXT, EXT_MM, EXT_MMR6
    printUImm<5, 1>(MI, 3, O);
    return;
    break;
  case 5:
    // DEXTM
    printUImm<5, 33>(MI, 3, O);
    return;
    break;
  case 6:
    // DINS, INS, INS_MM, INS_MMR6
    printUImm<6>(MI, 3, O);
    return;
    break;
  case 7:
    // DINSM
    printUImm<6, 2>(MI, 3, O);
    return;
    break;
  case 8:
    // DLSA, DLSA_R6, LSA, LSA_R6
    printUImm<2, 1>(MI, 3, O);
    return;
    break;
  case 9:
    // MADD_D32, MADD_D32_MM, MADD_D64, MADD_S, MADD_S_MM, MOVEP_MM, MOVEP_MM...
    printOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 45) & 1) {
    // MFTR
    O << ", ";
    printUImm<1>(MI, 4, O);
    return;
  } else {
    // DALIGN
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *MipsInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 442 && "Invalid register number!");


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ "f10\0"
  /* 4 */ "w10\0"
  /* 8 */ "f20\0"
  /* 12 */ "DSPOutFlag20\0"
  /* 25 */ "w20\0"
  /* 29 */ "f30\0"
  /* 33 */ "w30\0"
  /* 37 */ "ac0\0"
  /* 41 */ "fcc0\0"
  /* 46 */ "f0\0"
  /* 49 */ "mpl0\0"
  /* 54 */ "p0\0"
  /* 57 */ "w0\0"
  /* 60 */ "f11\0"
  /* 64 */ "w11\0"
  /* 68 */ "f21\0"
  /* 72 */ "DSPOutFlag21\0"
  /* 85 */ "w21\0"
  /* 89 */ "f31\0"
  /* 93 */ "w31\0"
  /* 97 */ "ac1\0"
  /* 101 */ "fcc1\0"
  /* 106 */ "f1\0"
  /* 109 */ "mpl1\0"
  /* 114 */ "p1\0"
  /* 117 */ "w1\0"
  /* 120 */ "f12\0"
  /* 124 */ "w12\0"
  /* 128 */ "f22\0"
  /* 132 */ "DSPOutFlag22\0"
  /* 145 */ "w22\0"
  /* 149 */ "ac2\0"
  /* 153 */ "fcc2\0"
  /* 158 */ "f2\0"
  /* 161 */ "mpl2\0"
  /* 166 */ "p2\0"
  /* 169 */ "w2\0"
  /* 172 */ "f13\0"
  /* 176 */ "w13\0"
  /* 180 */ "f23\0"
  /* 184 */ "DSPOutFlag23\0"
  /* 197 */ "w23\0"
  /* 201 */ "ac3\0"
  /* 205 */ "fcc3\0"
  /* 210 */ "f3\0"
  /* 213 */ "w3\0"
  /* 216 */ "f14\0"
  /* 220 */ "w14\0"
  /* 224 */ "f24\0"
  /* 228 */ "w24\0"
  /* 232 */ "fcc4\0"
  /* 237 */ "f4\0"
  /* 240 */ "w4\0"
  /* 243 */ "f15\0"
  /* 247 */ "w15\0"
  /* 251 */ "f25\0"
  /* 255 */ "w25\0"
  /* 259 */ "fcc5\0"
  /* 264 */ "f5\0"
  /* 267 */ "w5\0"
  /* 270 */ "f16\0"
  /* 274 */ "w16\0"
  /* 278 */ "f26\0"
  /* 282 */ "w26\0"
  /* 286 */ "fcc6\0"
  /* 291 */ "f6\0"
  /* 294 */ "w6\0"
  /* 297 */ "f17\0"
  /* 301 */ "w17\0"
  /* 305 */ "f27\0"
  /* 309 */ "w27\0"
  /* 313 */ "fcc7\0"
  /* 318 */ "f7\0"
  /* 321 */ "w7\0"
  /* 324 */ "f18\0"
  /* 328 */ "w18\0"
  /* 332 */ "f28\0"
  /* 336 */ "w28\0"
  /* 340 */ "f8\0"
  /* 343 */ "w8\0"
  /* 346 */ "DSPOutFlag16_19\0"
  /* 362 */ "f19\0"
  /* 366 */ "w19\0"
  /* 370 */ "f29\0"
  /* 374 */ "w29\0"
  /* 378 */ "f9\0"
  /* 381 */ "w9\0"
  /* 384 */ "DSPEFI\0"
  /* 391 */ "ra\0"
  /* 394 */ "hwr_cc\0"
  /* 401 */ "pc\0"
  /* 404 */ "DSPCCond\0"
  /* 413 */ "DSPOutFlag\0"
  /* 424 */ "hi\0"
  /* 427 */ "hwr_cpunum\0"
  /* 438 */ "lo\0"
  /* 441 */ "zero\0"
  /* 446 */ "hwr_synci_step\0"
  /* 461 */ "fp\0"
  /* 464 */ "gp\0"
  /* 467 */ "sp\0"
  /* 470 */ "hwr_ccres\0"
  /* 480 */ "DSPPos\0"
  /* 487 */ "DSPSCount\0"
  /* 497 */ "DSPCarry\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint16_t RegAsmOffset[] = {
    62, 404, 497, 384, 413, 480, 487, 461, 464, 122, 62, 2, 272, 218, 
    245, 174, 299, 401, 391, 467, 441, 218, 245, 272, 299, 37, 97, 149, 
    201, 62, 2, 62, 122, 174, 218, 245, 272, 299, 326, 360, 2, 62, 
    122, 174, 218, 245, 272, 299, 326, 360, 2, 62, 122, 174, 218, 245, 
    272, 299, 326, 360, 1, 61, 121, 173, 217, 244, 271, 298, 325, 359, 
    9, 69, 129, 181, 225, 252, 279, 306, 333, 371, 30, 90, 1, 61, 
    121, 173, 217, 244, 271, 298, 325, 359, 9, 69, 129, 181, 225, 252, 
    279, 306, 333, 371, 30, 90, 1, 61, 121, 173, 217, 244, 271, 298, 
    325, 359, 9, 69, 129, 181, 225, 252, 279, 306, 333, 371, 30, 90, 
    46, 158, 237, 291, 340, 0, 120, 216, 270, 324, 8, 128, 224, 278, 
    332, 29, 12, 72, 132, 184, 46, 106, 158, 210, 237, 264, 291, 318, 
    340, 378, 0, 60, 120, 172, 216, 243, 270, 297, 324, 362, 8, 68, 
    128, 180, 224, 251, 278, 305, 332, 370, 29, 89, 41, 101, 153, 205, 
    232, 259, 286, 313, 2, 62, 122, 174, 218, 245, 272, 299, 326, 360, 
    1, 61, 121, 173, 217, 244, 271, 298, 325, 359, 9, 69, 129, 181, 
    225, 252, 279, 306, 333, 371, 30, 90, 461, 46, 106, 158, 210, 237, 
    264, 291, 318, 340, 378, 0, 60, 120, 172, 216, 243, 270, 297, 324, 
    362, 8, 68, 128, 180, 224, 251, 278, 305, 332, 370, 29, 89, 464, 
    37, 97, 149, 201, 427, 446, 394, 470, 218, 245, 272, 299, 326, 360, 
    1, 61, 121, 173, 217, 244, 271, 298, 325, 359, 9, 69, 129, 181, 
    225, 252, 279, 306, 333, 371, 30, 90, 279, 306, 37, 97, 149, 201, 
    49, 109, 161, 326, 360, 1, 61, 121, 173, 217, 244, 271, 298, 325, 
    359, 9, 69, 129, 181, 225, 252, 279, 306, 333, 371, 30, 90, 54, 
    114, 166, 391, 271, 298, 325, 359, 9, 69, 129, 181, 467, 326, 360, 
    1, 61, 121, 173, 217, 244, 225, 252, 122, 174, 57, 117, 169, 213, 
    240, 267, 294, 321, 343, 381, 4, 64, 124, 176, 220, 247, 274, 301, 
    328, 366, 25, 85, 145, 197, 228, 255, 282, 309, 336, 374, 33, 93, 
    441, 218, 245, 272, 299, 37, 46, 106, 158, 210, 237, 264, 291, 318, 
    340, 378, 0, 60, 120, 172, 216, 243, 270, 297, 324, 362, 8, 68, 
    128, 180, 224, 251, 278, 305, 332, 370, 29, 89, 346, 424, 279, 306, 
    438, 271, 298, 325, 359, 9, 69, 129, 181, 326, 360, 1, 61, 121, 
    173, 217, 244, 225, 252, 122, 174, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool MipsInstPrinter::printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &OS) {
  static const PatternsForOpcode OpToPatterns[] = {
    {Mips::MFTACX, 0, 1 },
    {Mips::MFTC0, 1, 1 },
    {Mips::MFTHI, 2, 1 },
    {Mips::MFTLO, 3, 1 },
    {Mips::MTTACX, 4, 1 },
    {Mips::MTTC0, 5, 1 },
    {Mips::MTTHI, 6, 1 },
    {Mips::MTTLO, 7, 1 },
    {Mips::NORImm, 8, 1 },
    {Mips::NORImm64, 9, 1 },
    {Mips::SLTImm64, 10, 1 },
    {Mips::SLTUImm64, 11, 1 },
    {Mips::ADDIUPC, 12, 1 },
    {Mips::ADDIUPC_MMR6, 13, 1 },
    {Mips::ADDu, 14, 1 },
    {Mips::BC1F, 15, 1 },
    {Mips::BC1FL, 16, 1 },
    {Mips::BC1F_MM, 17, 1 },
    {Mips::BC1T, 18, 1 },
    {Mips::BC1TL, 19, 1 },
    {Mips::BC1T_MM, 20, 1 },
    {Mips::BEQL, 21, 1 },
    {Mips::BGEZAL, 22, 1 },
    {Mips::BGEZAL_MM, 23, 1 },
    {Mips::BNEL, 24, 1 },
    {Mips::BREAK, 25, 2 },
    {Mips::BREAK_MM, 27, 2 },
    {Mips::C_EQ_D32, 29, 1 },
    {Mips::C_EQ_D32_MM, 30, 1 },
    {Mips::C_EQ_D64, 31, 1 },
    {Mips::C_EQ_D64_MM, 32, 1 },
    {Mips::C_EQ_S, 33, 1 },
    {Mips::C_EQ_S_MM, 34, 1 },
    {Mips::C_F_D32, 35, 1 },
    {Mips::C_F_D32_MM, 36, 1 },
    {Mips::C_F_D64, 37, 1 },
    {Mips::C_F_D64_MM, 38, 1 },
    {Mips::C_F_S, 39, 1 },
    {Mips::C_F_S_MM, 40, 1 },
    {Mips::C_LE_D32, 41, 1 },
    {Mips::C_LE_D32_MM, 42, 1 },
    {Mips::C_LE_D64, 43, 1 },
    {Mips::C_LE_D64_MM, 44, 1 },
    {Mips::C_LE_S, 45, 1 },
    {Mips::C_LE_S_MM, 46, 1 },
    {Mips::C_LT_D32, 47, 1 },
    {Mips::C_LT_D32_MM, 48, 1 },
    {Mips::C_LT_D64, 49, 1 },
    {Mips::C_LT_D64_MM, 50, 1 },
    {Mips::C_LT_S, 51, 1 },
    {Mips::C_LT_S_MM, 52, 1 },
    {Mips::C_NGE_D32, 53, 1 },
    {Mips::C_NGE_D32_MM, 54, 1 },
    {Mips::C_NGE_D64, 55, 1 },
    {Mips::C_NGE_D64_MM, 56, 1 },
    {Mips::C_NGE_S, 57, 1 },
    {Mips::C_NGE_S_MM, 58, 1 },
    {Mips::C_NGLE_D32, 59, 1 },
    {Mips::C_NGLE_D32_MM, 60, 1 },
    {Mips::C_NGLE_D64, 61, 1 },
    {Mips::C_NGLE_D64_MM, 62, 1 },
    {Mips::C_NGLE_S, 63, 1 },
    {Mips::C_NGLE_S_MM, 64, 1 },
    {Mips::C_NGL_D32, 65, 1 },
    {Mips::C_NGL_D32_MM, 66, 1 },
    {Mips::C_NGL_D64, 67, 1 },
    {Mips::C_NGL_D64_MM, 68, 1 },
    {Mips::C_NGL_S, 69, 1 },
    {Mips::C_NGL_S_MM, 70, 1 },
    {Mips::C_NGT_D32, 71, 1 },
    {Mips::C_NGT_D32_MM, 72, 1 },
    {Mips::C_NGT_D64, 73, 1 },
    {Mips::C_NGT_D64_MM, 74, 1 },
    {Mips::C_NGT_S, 75, 1 },
    {Mips::C_NGT_S_MM, 76, 1 },
    {Mips::C_OLE_D32, 77, 1 },
    {Mips::C_OLE_D32_MM, 78, 1 },
    {Mips::C_OLE_D64, 79, 1 },
    {Mips::C_OLE_D64_MM, 80, 1 },
    {Mips::C_OLE_S, 81, 1 },
    {Mips::C_OLE_S_MM, 82, 1 },
    {Mips::C_OLT_D32, 83, 1 },
    {Mips::C_OLT_D32_MM, 84, 1 },
    {Mips::C_OLT_D64, 85, 1 },
    {Mips::C_OLT_D64_MM, 86, 1 },
    {Mips::C_OLT_S, 87, 1 },
    {Mips::C_OLT_S_MM, 88, 1 },
    {Mips::C_SEQ_D32, 89, 1 },
    {Mips::C_SEQ_D32_MM, 90, 1 },
    {Mips::C_SEQ_D64, 91, 1 },
    {Mips::C_SEQ_D64_MM, 92, 1 },
    {Mips::C_SEQ_S, 93, 1 },
    {Mips::C_SEQ_S_MM, 94, 1 },
    {Mips::C_SF_D32, 95, 1 },
    {Mips::C_SF_D32_MM, 96, 1 },
    {Mips::C_SF_D64, 97, 1 },
    {Mips::C_SF_D64_MM, 98, 1 },
    {Mips::C_SF_S, 99, 1 },
    {Mips::C_SF_S_MM, 100, 1 },
    {Mips::C_UEQ_D32, 101, 1 },
    {Mips::C_UEQ_D32_MM, 102, 1 },
    {Mips::C_UEQ_D64, 103, 1 },
    {Mips::C_UEQ_D64_MM, 104, 1 },
    {Mips::C_UEQ_S, 105, 1 },
    {Mips::C_UEQ_S_MM, 106, 1 },
    {Mips::C_ULE_D32, 107, 1 },
    {Mips::C_ULE_D32_MM, 108, 1 },
    {Mips::C_ULE_D64, 109, 1 },
    {Mips::C_ULE_D64_MM, 110, 1 },
    {Mips::C_ULE_S, 111, 1 },
    {Mips::C_ULE_S_MM, 112, 1 },
    {Mips::C_ULT_D32, 113, 1 },
    {Mips::C_ULT_D32_MM, 114, 1 },
    {Mips::C_ULT_D64, 115, 1 },
    {Mips::C_ULT_D64_MM, 116, 1 },
    {Mips::C_ULT_S, 117, 1 },
    {Mips::C_ULT_S_MM, 118, 1 },
    {Mips::C_UN_D32, 119, 1 },
    {Mips::C_UN_D32_MM, 120, 1 },
    {Mips::C_UN_D64, 121, 1 },
    {Mips::C_UN_D64_MM, 122, 1 },
    {Mips::C_UN_S, 123, 1 },
    {Mips::C_UN_S_MM, 124, 1 },
    {Mips::DADDu, 125, 1 },
    {Mips::DI, 126, 1 },
    {Mips::DIV, 127, 1 },
    {Mips::DIVU, 128, 1 },
    {Mips::DI_MM, 129, 1 },
    {Mips::DI_MMR6, 130, 1 },
    {Mips::DMT, 131, 1 },
    {Mips::DSUB, 132, 2 },
    {Mips::DSUBu, 134, 2 },
    {Mips::DVPE, 136, 1 },
    {Mips::EI, 137, 1 },
    {Mips::EI_MM, 138, 1 },
    {Mips::EI_MMR6, 139, 1 },
    {Mips::EMT, 140, 1 },
    {Mips::EVPE, 141, 1 },
    {Mips::HYPCALL, 142, 1 },
    {Mips::HYPCALL_MM, 143, 1 },
    {Mips::JALR, 144, 1 },
    {Mips::JALR64, 145, 1 },
    {Mips::JALRC_HB_MMR6, 146, 1 },
    {Mips::JALRC_MMR6, 147, 1 },
    {Mips::JALR_HB, 148, 1 },
    {Mips::JALR_HB64, 149, 1 },
    {Mips::JIALC, 150, 1 },
    {Mips::JIALC64, 151, 1 },
    {Mips::JIC, 152, 1 },
    {Mips::JIC64, 153, 1 },
    {Mips::MOVE16_MM, 154, 1 },
    {Mips::Move32R16, 155, 1 },
    {Mips::OR, 156, 1 },
    {Mips::OR64, 157, 1 },
    {Mips::RDHWR, 158, 1 },
    {Mips::RDHWR64, 159, 1 },
    {Mips::RDHWR_MM, 160, 1 },
    {Mips::RDHWR_MMR6, 161, 1 },
    {Mips::SDBBP, 162, 1 },
    {Mips::SDBBP_MMR6, 163, 1 },
    {Mips::SDBBP_R6, 164, 1 },
    {Mips::SIGRIE, 165, 1 },
    {Mips::SIGRIE_MMR6, 166, 1 },
    {Mips::SLL, 167, 1 },
    {Mips::SLL_MM, 168, 1 },
    {Mips::SLL_MMR6, 169, 1 },
    {Mips::SUB, 170, 2 },
    {Mips::SUBU_MMR6, 172, 2 },
    {Mips::SUB_MM, 174, 2 },
    {Mips::SUB_MMR6, 176, 2 },
    {Mips::SUBu, 178, 2 },
    {Mips::SUBu_MM, 180, 2 },
    {Mips::SWSP_MM, 182, 1 },
    {Mips::SYNC, 183, 1 },
    {Mips::SYNC_MM, 184, 1 },
    {Mips::SYNC_MMR6, 185, 1 },
    {Mips::SYSCALL, 186, 1 },
    {Mips::SYSCALL_MM, 187, 1 },
    {Mips::TEQ, 188, 1 },
    {Mips::TEQ_MM, 189, 1 },
    {Mips::TGE, 190, 1 },
    {Mips::TGEU, 191, 1 },
    {Mips::TGEU_MM, 192, 1 },
    {Mips::TGE_MM, 193, 1 },
    {Mips::TLT, 194, 1 },
    {Mips::TLTU, 195, 1 },
    {Mips::TLTU_MM, 196, 1 },
    {Mips::TLT_MM, 197, 1 },
    {Mips::TNE, 198, 1 },
    {Mips::TNE_MM, 199, 1 },
    {Mips::WAIT_MM, 200, 1 },
    {Mips::WRDSP, 201, 1 },
    {Mips::WRDSP_MM, 202, 1 },
    {Mips::YIELD, 203, 1 },
  };

  static const AliasPattern Patterns[] = {
    // Mips::MFTACX - 0
    {0, 0, 2, 2 },
    // Mips::MFTC0 - 1
    {10, 2, 3, 3 },
    // Mips::MFTHI - 2
    {23, 5, 2, 2 },
    // Mips::MFTLO - 3
    {32, 7, 2, 2 },
    // Mips::MTTACX - 4
    {41, 9, 2, 2 },
    // Mips::MTTC0 - 5
    {51, 11, 3, 3 },
    // Mips::MTTHI - 6
    {64, 14, 2, 2 },
    // Mips::MTTLO - 7
    {73, 16, 2, 2 },
    // Mips::NORImm - 8
    {82, 18, 3, 2 },
    // Mips::NORImm64 - 9
    {82, 20, 3, 2 },
    // Mips::SLTImm64 - 10
    {93, 22, 3, 2 },
    // Mips::SLTUImm64 - 11
    {104, 24, 3, 2 },
    // Mips::ADDIUPC - 12
    {116, 26, 2, 1 },
    // Mips::ADDIUPC_MMR6 - 13
    {116, 27, 2, 1 },
    // Mips::ADDu - 14
    {128, 28, 3, 3 },
    // Mips::BC1F - 15
    {140, 31, 2, 1 },
    // Mips::BC1FL - 16
    {148, 32, 2, 1 },
    // Mips::BC1F_MM - 17
    {140, 33, 2, 1 },
    // Mips::BC1T - 18
    {157, 34, 2, 1 },
    // Mips::BC1TL - 19
    {165, 35, 2, 1 },
    // Mips::BC1T_MM - 20
    {157, 36, 2, 1 },
    // Mips::BEQL - 21
    {174, 37, 3, 2 },
    // Mips::BGEZAL - 22
    {187, 39, 2, 1 },
    // Mips::BGEZAL_MM - 23
    {187, 40, 2, 1 },
    // Mips::BNEL - 24
    {194, 41, 3, 2 },
    // Mips::BREAK - 25
    {207, 43, 2, 2 },
    {213, 45, 2, 2 },
    // Mips::BREAK_MM - 27
    {207, 47, 2, 2 },
    {213, 49, 2, 2 },
    // Mips::C_EQ_D32 - 29
    {224, 51, 3, 3 },
    // Mips::C_EQ_D32_MM - 30
    {224, 54, 3, 3 },
    // Mips::C_EQ_D64 - 31
    {224, 57, 3, 3 },
    // Mips::C_EQ_D64_MM - 32
    {224, 60, 3, 3 },
    // Mips::C_EQ_S - 33
    {238, 63, 3, 3 },
    // Mips::C_EQ_S_MM - 34
    {238, 66, 3, 3 },
    // Mips::C_F_D32 - 35
    {252, 69, 3, 3 },
    // Mips::C_F_D32_MM - 36
    {252, 72, 3, 3 },
    // Mips::C_F_D64 - 37
    {252, 75, 3, 3 },
    // Mips::C_F_D64_MM - 38
    {252, 78, 3, 3 },
    // Mips::C_F_S - 39
    {265, 81, 3, 3 },
    // Mips::C_F_S_MM - 40
    {265, 84, 3, 3 },
    // Mips::C_LE_D32 - 41
    {278, 87, 3, 3 },
    // Mips::C_LE_D32_MM - 42
    {278, 90, 3, 3 },
    // Mips::C_LE_D64 - 43
    {278, 93, 3, 3 },
    // Mips::C_LE_D64_MM - 44
    {278, 96, 3, 3 },
    // Mips::C_LE_S - 45
    {292, 99, 3, 3 },
    // Mips::C_LE_S_MM - 46
    {292, 102, 3, 3 },
    // Mips::C_LT_D32 - 47
    {306, 105, 3, 3 },
    // Mips::C_LT_D32_MM - 48
    {306, 108, 3, 3 },
    // Mips::C_LT_D64 - 49
    {306, 111, 3, 3 },
    // Mips::C_LT_D64_MM - 50
    {306, 114, 3, 3 },
    // Mips::C_LT_S - 51
    {320, 117, 3, 3 },
    // Mips::C_LT_S_MM - 52
    {320, 120, 3, 3 },
    // Mips::C_NGE_D32 - 53
    {334, 123, 3, 3 },
    // Mips::C_NGE_D32_MM - 54
    {334, 126, 3, 3 },
    // Mips::C_NGE_D64 - 55
    {334, 129, 3, 3 },
    // Mips::C_NGE_D64_MM - 56
    {334, 132, 3, 3 },
    // Mips::C_NGE_S - 57
    {349, 135, 3, 3 },
    // Mips::C_NGE_S_MM - 58
    {349, 138, 3, 3 },
    // Mips::C_NGLE_D32 - 59
    {364, 141, 3, 3 },
    // Mips::C_NGLE_D32_MM - 60
    {364, 144, 3, 3 },
    // Mips::C_NGLE_D64 - 61
    {364, 147, 3, 3 },
    // Mips::C_NGLE_D64_MM - 62
    {364, 150, 3, 3 },
    // Mips::C_NGLE_S - 63
    {380, 153, 3, 3 },
    // Mips::C_NGLE_S_MM - 64
    {380, 156, 3, 3 },
    // Mips::C_NGL_D32 - 65
    {396, 159, 3, 3 },
    // Mips::C_NGL_D32_MM - 66
    {396, 162, 3, 3 },
    // Mips::C_NGL_D64 - 67
    {396, 165, 3, 3 },
    // Mips::C_NGL_D64_MM - 68
    {396, 168, 3, 3 },
    // Mips::C_NGL_S - 69
    {411, 171, 3, 3 },
    // Mips::C_NGL_S_MM - 70
    {411, 174, 3, 3 },
    // Mips::C_NGT_D32 - 71
    {426, 177, 3, 3 },
    // Mips::C_NGT_D32_MM - 72
    {426, 180, 3, 3 },
    // Mips::C_NGT_D64 - 73
    {426, 183, 3, 3 },
    // Mips::C_NGT_D64_MM - 74
    {426, 186, 3, 3 },
    // Mips::C_NGT_S - 75
    {441, 189, 3, 3 },
    // Mips::C_NGT_S_MM - 76
    {441, 192, 3, 3 },
    // Mips::C_OLE_D32 - 77
    {456, 195, 3, 3 },
    // Mips::C_OLE_D32_MM - 78
    {456, 198, 3, 3 },
    // Mips::C_OLE_D64 - 79
    {456, 201, 3, 3 },
    // Mips::C_OLE_D64_MM - 80
    {456, 204, 3, 3 },
    // Mips::C_OLE_S - 81
    {471, 207, 3, 3 },
    // Mips::C_OLE_S_MM - 82
    {471, 210, 3, 3 },
    // Mips::C_OLT_D32 - 83
    {486, 213, 3, 3 },
    // Mips::C_OLT_D32_MM - 84
    {486, 216, 3, 3 },
    // Mips::C_OLT_D64 - 85
    {486, 219, 3, 3 },
    // Mips::C_OLT_D64_MM - 86
    {486, 222, 3, 3 },
    // Mips::C_OLT_S - 87
    {501, 225, 3, 3 },
    // Mips::C_OLT_S_MM - 88
    {501, 228, 3, 3 },
    // Mips::C_SEQ_D32 - 89
    {516, 231, 3, 3 },
    // Mips::C_SEQ_D32_MM - 90
    {516, 234, 3, 3 },
    // Mips::C_SEQ_D64 - 91
    {516, 237, 3, 3 },
    // Mips::C_SEQ_D64_MM - 92
    {516, 240, 3, 3 },
    // Mips::C_SEQ_S - 93
    {531, 243, 3, 3 },
    // Mips::C_SEQ_S_MM - 94
    {531, 246, 3, 3 },
    // Mips::C_SF_D32 - 95
    {546, 249, 3, 3 },
    // Mips::C_SF_D32_MM - 96
    {546, 252, 3, 3 },
    // Mips::C_SF_D64 - 97
    {546, 255, 3, 3 },
    // Mips::C_SF_D64_MM - 98
    {546, 258, 3, 3 },
    // Mips::C_SF_S - 99
    {560, 261, 3, 3 },
    // Mips::C_SF_S_MM - 100
    {560, 264, 3, 3 },
    // Mips::C_UEQ_D32 - 101
    {574, 267, 3, 3 },
    // Mips::C_UEQ_D32_MM - 102
    {574, 270, 3, 3 },
    // Mips::C_UEQ_D64 - 103
    {574, 273, 3, 3 },
    // Mips::C_UEQ_D64_MM - 104
    {574, 276, 3, 3 },
    // Mips::C_UEQ_S - 105
    {589, 279, 3, 3 },
    // Mips::C_UEQ_S_MM - 106
    {589, 282, 3, 3 },
    // Mips::C_ULE_D32 - 107
    {604, 285, 3, 3 },
    // Mips::C_ULE_D32_MM - 108
    {604, 288, 3, 3 },
    // Mips::C_ULE_D64 - 109
    {604, 291, 3, 3 },
    // Mips::C_ULE_D64_MM - 110
    {604, 294, 3, 3 },
    // Mips::C_ULE_S - 111
    {619, 297, 3, 3 },
    // Mips::C_ULE_S_MM - 112
    {619, 300, 3, 3 },
    // Mips::C_ULT_D32 - 113
    {634, 303, 3, 3 },
    // Mips::C_ULT_D32_MM - 114
    {634, 306, 3, 3 },
    // Mips::C_ULT_D64 - 115
    {634, 309, 3, 3 },
    // Mips::C_ULT_D64_MM - 116
    {634, 312, 3, 3 },
    // Mips::C_ULT_S - 117
    {649, 315, 3, 3 },
    // Mips::C_ULT_S_MM - 118
    {649, 318, 3, 3 },
    // Mips::C_UN_D32 - 119
    {664, 321, 3, 3 },
    // Mips::C_UN_D32_MM - 120
    {664, 324, 3, 3 },
    // Mips::C_UN_D64 - 121
    {664, 327, 3, 3 },
    // Mips::C_UN_D64_MM - 122
    {664, 330, 3, 3 },
    // Mips::C_UN_S - 123
    {678, 333, 3, 3 },
    // Mips::C_UN_S_MM - 124
    {678, 336, 3, 3 },
    // Mips::DADDu - 125
    {128, 339, 3, 3 },
    // Mips::DI - 126
    {692, 342, 1, 1 },
    // Mips::DIV - 127
    {695, 343, 3, 3 },
    // Mips::DIVU - 128
    {706, 346, 3, 3 },
    // Mips::DI_MM - 129
    {692, 349, 1, 1 },
    // Mips::DI_MMR6 - 130
    {692, 350, 1, 1 },
    // Mips::DMT - 131
    {718, 351, 1, 1 },
    // Mips::DSUB - 132
    {722, 352, 3, 3 },
    {734, 355, 3, 3 },
    // Mips::DSUBu - 134
    {742, 358, 3, 3 },
    {755, 361, 3, 3 },
    // Mips::DVPE - 136
    {764, 364, 1, 1 },
    // Mips::EI - 137
    {769, 365, 1, 1 },
    // Mips::EI_MM - 138
    {769, 366, 1, 1 },
    // Mips::EI_MMR6 - 139
    {769, 367, 1, 1 },
    // Mips::EMT - 140
    {772, 368, 1, 1 },
    // Mips::EVPE - 141
    {776, 369, 1, 1 },
    // Mips::HYPCALL - 142
    {781, 370, 1, 1 },
    // Mips::HYPCALL_MM - 143
    {781, 371, 1, 1 },
    // Mips::JALR - 144
    {789, 372, 2, 2 },
    // Mips::JALR64 - 145
    {789, 374, 2, 2 },
    // Mips::JALRC_HB_MMR6 - 146
    {795, 376, 2, 2 },
    // Mips::JALRC_MMR6 - 147
    {807, 378, 2, 2 },
    // Mips::JALR_HB - 148
    {816, 380, 2, 2 },
    // Mips::JALR_HB64 - 149
    {816, 382, 2, 2 },
    // Mips::JIALC - 150
    {827, 384, 2, 2 },
    // Mips::JIALC64 - 151
    {827, 386, 2, 2 },
    // Mips::JIC - 152
    {836, 388, 2, 2 },
    // Mips::JIC64 - 153
    {836, 390, 2, 2 },
    // Mips::MOVE16_MM - 154
    {843, 392, 2, 2 },
    // Mips::Move32R16 - 155
    {843, 394, 2, 2 },
    // Mips::OR - 156
    {128, 396, 3, 3 },
    // Mips::OR64 - 157
    {128, 399, 3, 3 },
    // Mips::RDHWR - 158
    {847, 402, 3, 3 },
    // Mips::RDHWR64 - 159
    {847, 405, 3, 3 },
    // Mips::RDHWR_MM - 160
    {847, 408, 3, 3 },
    // Mips::RDHWR_MMR6 - 161
    {847, 411, 3, 3 },
    // Mips::SDBBP - 162
    {860, 414, 1, 1 },
    // Mips::SDBBP_MMR6 - 163
    {860, 415, 1, 1 },
    // Mips::SDBBP_R6 - 164
    {860, 416, 1, 1 },
    // Mips::SIGRIE - 165
    {866, 417, 1, 1 },
    // Mips::SIGRIE_MMR6 - 166
    {866, 418, 1, 1 },
    // Mips::SLL - 167
    {843, 419, 3, 3 },
    // Mips::SLL_MM - 168
    {843, 422, 3, 3 },
    // Mips::SLL_MMR6 - 169
    {843, 425, 3, 3 },
    // Mips::SUB - 170
    {873, 428, 3, 3 },
    {884, 431, 3, 3 },
    // Mips::SUBU_MMR6 - 172
    {891, 434, 3, 3 },
    {903, 437, 3, 3 },
    // Mips::SUB_MM - 174
    {873, 440, 3, 3 },
    {884, 443, 3, 3 },
    // Mips::SUB_MMR6 - 176
    {873, 446, 3, 3 },
    {884, 449, 3, 3 },
    // Mips::SUBu - 178
    {891, 452, 3, 3 },
    {903, 455, 3, 3 },
    // Mips::SUBu_MM - 180
    {891, 458, 3, 3 },
    {903, 461, 3, 3 },
    // Mips::SWSP_MM - 182
    {911, 464, 3, 1 },
    // Mips::SYNC - 183
    {923, 465, 1, 1 },
    // Mips::SYNC_MM - 184
    {923, 466, 1, 1 },
    // Mips::SYNC_MMR6 - 185
    {923, 467, 1, 1 },
    // Mips::SYSCALL - 186
    {928, 468, 1, 1 },
    // Mips::SYSCALL_MM - 187
    {928, 469, 1, 1 },
    // Mips::TEQ - 188
    {936, 470, 3, 3 },
    // Mips::TEQ_MM - 189
    {936, 473, 3, 3 },
    // Mips::TGE - 190
    {947, 476, 3, 3 },
    // Mips::TGEU - 191
    {958, 479, 3, 3 },
    // Mips::TGEU_MM - 192
    {958, 482, 3, 3 },
    // Mips::TGE_MM - 193
    {947, 485, 3, 3 },
    // Mips::TLT - 194
    {970, 488, 3, 3 },
    // Mips::TLTU - 195
    {981, 491, 3, 3 },
    // Mips::TLTU_MM - 196
    {981, 494, 3, 3 },
    // Mips::TLT_MM - 197
    {970, 497, 3, 3 },
    // Mips::TNE - 198
    {993, 500, 3, 3 },
    // Mips::TNE_MM - 199
    {993, 503, 3, 3 },
    // Mips::WAIT_MM - 200
    {1004, 506, 1, 1 },
    // Mips::WRDSP - 201
    {1009, 507, 2, 2 },
    // Mips::WRDSP_MM - 202
    {1009, 509, 2, 2 },
    // Mips::YIELD - 203
    {1018, 511, 2, 2 },
  };

  static const AliasPatternCond Conds[] = {
    // (MFTACX GPR32Opnd:$rt, AC0) - 0
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::AC0},
    // (MFTC0 GPR32Opnd:$rd, COP0Opnd:$rt, 0) - 2
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::COP0RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MFTHI GPR32Opnd:$rt, AC0) - 5
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::AC0},
    // (MFTLO GPR32Opnd:$rt, AC0) - 7
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::AC0},
    // (MTTACX AC0, GPR32Opnd:$rt) - 9
    {AliasPatternCond::K_Reg, Mips::AC0},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (MTTC0 COP0Opnd:$rt, GPR32Opnd:$rd, 0) - 11
    {AliasPatternCond::K_RegClass, Mips::COP0RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTTHI AC0, GPR32Opnd:$rt) - 14
    {AliasPatternCond::K_Reg, Mips::AC0},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (MTTLO AC0, GPR32Opnd:$rt) - 16
    {AliasPatternCond::K_Reg, Mips::AC0},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (NORImm GPR32Opnd:$rs, GPR32Opnd:$rs, simm32_relaxed:$imm) - 18
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    // (NORImm64 GPR64Opnd:$rs, GPR64Opnd:$rs, imm64:$imm) - 20
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    // (SLTImm64 GPR64Opnd:$rs, GPR64Opnd:$rs, imm64:$imm) - 22
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    // (SLTUImm64 GPR64Opnd:$rs, GPR64Opnd:$rs, imm64:$imm) - 24
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    // (ADDIUPC GPR32Opnd:$rd, simm19_lsl2:$imm) - 26
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (ADDIUPC_MMR6 GPR32Opnd:$rd, simm19_lsl2:$imm) - 27
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (ADDu GPR32Opnd:$dst, GPR32Opnd:$src, ZERO) - 28
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (BC1F FCC0, brtarget:$offset) - 31
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BC1FL FCC0, brtarget:$offset) - 32
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BC1F_MM FCC0, brtarget:$offset) - 33
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BC1T FCC0, brtarget:$offset) - 34
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BC1TL FCC0, brtarget:$offset) - 35
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BC1T_MM FCC0, brtarget:$offset) - 36
    {AliasPatternCond::K_Reg, Mips::FCC0},
    // (BEQL GPR32Opnd:$rs, ZERO, brtarget:$offset) - 37
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (BGEZAL ZERO, brtarget:$offset) - 39
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (BGEZAL_MM ZERO, brtarget_mm:$offset) - 40
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (BNEL GPR32Opnd:$rs, ZERO, brtarget:$offset) - 41
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (BREAK 0, 0) - 43
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (BREAK uimm10:$imm, 0) - 45
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (BREAK_MM 0, 0) - 47
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (BREAK_MM uimm10:$imm, 0) - 49
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (C_EQ_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 51
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_EQ_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 54
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_EQ_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 57
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_EQ_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 60
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_EQ_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 63
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_EQ_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 66
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_F_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 69
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_F_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 72
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_F_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 75
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_F_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 78
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_F_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 81
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_F_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 84
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_LE_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 87
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_LE_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 90
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_LE_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 93
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_LE_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 96
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_LE_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 99
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_LE_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 102
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_LT_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 105
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_LT_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 108
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_LT_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 111
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_LT_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 114
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_LT_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 117
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_LT_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 120
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGE_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 123
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGE_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 126
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGE_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 129
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGE_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 132
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGE_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 135
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGE_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 138
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGLE_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 141
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGLE_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 144
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGLE_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 147
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGLE_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 150
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGLE_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 153
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGLE_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 156
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGL_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 159
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGL_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 162
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGL_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 165
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGL_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 168
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGL_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 171
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGL_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 174
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGT_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 177
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGT_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 180
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_NGT_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 183
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGT_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 186
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_NGT_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 189
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_NGT_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 192
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_OLE_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 195
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_OLE_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 198
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_OLE_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 201
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_OLE_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 204
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_OLE_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 207
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_OLE_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 210
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_OLT_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 213
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_OLT_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 216
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_OLT_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 219
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_OLT_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 222
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_OLT_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 225
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_OLT_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 228
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_SEQ_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 231
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_SEQ_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 234
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_SEQ_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 237
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_SEQ_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 240
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_SEQ_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 243
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_SEQ_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 246
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_SF_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 249
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_SF_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 252
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_SF_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 255
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_SF_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 258
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_SF_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 261
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_SF_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 264
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_UEQ_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 267
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_UEQ_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 270
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_UEQ_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 273
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_UEQ_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 276
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_UEQ_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 279
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_UEQ_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 282
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_ULE_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 285
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_ULE_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 288
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_ULE_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 291
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_ULE_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 294
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_ULE_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 297
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_ULE_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 300
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_ULT_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 303
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_ULT_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 306
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_ULT_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 309
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_ULT_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 312
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_ULT_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 315
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_ULT_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 318
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_UN_D32 FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 321
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_UN_D32_MM FCC0, AFGR64Opnd:$fs, AFGR64Opnd:$ft) - 324
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::AFGR64RegClassID},
    // (C_UN_D64 FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 327
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_UN_D64_MM FCC0, FGR64Opnd:$fs, FGR64Opnd:$ft) - 330
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR64RegClassID},
    // (C_UN_S FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 333
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (C_UN_S_MM FCC0, FGR32Opnd:$fs, FGR32Opnd:$ft) - 336
    {AliasPatternCond::K_Reg, Mips::FCC0},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::FGR32RegClassID},
    // (DADDu GPR64Opnd:$dst, GPR64Opnd:$src, ZERO_64) - 339
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    // (DI ZERO) - 342
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (DIV GPR32Opnd:$rs, GPR32Opnd:$rs, GPR32Opnd:$rt) - 343
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (DIVU GPR32Opnd:$rs, GPR32Opnd:$rs, GPR32Opnd:$rt) - 346
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (DI_MM ZERO) - 349
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (DI_MMR6 ZERO) - 350
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (DMT ZERO) - 351
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (DSUB GPR64Opnd:$rt, ZERO_64, GPR64Opnd:$rs) - 352
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    // (DSUB GPR64Opnd:$rt, ZERO_64, GPR64Opnd:$rt) - 355
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    {AliasPatternCond::K_TiedReg, 0},
    // (DSUBu GPR64Opnd:$rt, ZERO_64, GPR64Opnd:$rs) - 358
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    // (DSUBu GPR64Opnd:$rt, ZERO_64, GPR64Opnd:$rt) - 361
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    {AliasPatternCond::K_TiedReg, 0},
    // (DVPE ZERO) - 364
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (EI ZERO) - 365
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (EI_MM ZERO) - 366
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (EI_MMR6 ZERO) - 367
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (EMT ZERO) - 368
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (EVPE ZERO) - 369
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (HYPCALL 0) - 370
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (HYPCALL_MM 0) - 371
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (JALR ZERO, GPR32Opnd:$rs) - 372
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (JALR64 ZERO_64, GPR64Opnd:$rs) - 374
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    // (JALRC_HB_MMR6 RA, GPR32Opnd:$rs) - 376
    {AliasPatternCond::K_Reg, Mips::RA},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (JALRC_MMR6 RA, GPR32Opnd:$rs) - 378
    {AliasPatternCond::K_Reg, Mips::RA},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (JALR_HB RA, GPR32Opnd:$rs) - 380
    {AliasPatternCond::K_Reg, Mips::RA},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (JALR_HB64 RA_64, GPR64Opnd:$rs) - 382
    {AliasPatternCond::K_Reg, Mips::RA_64},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    // (JIALC GPR32Opnd:$rs, 0) - 384
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (JIALC64 GPR64Opnd:$rs, 0) - 386
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (JIC GPR32Opnd:$rs, 0) - 388
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (JIC64 GPR64Opnd:$rs, 0) - 390
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MOVE16_MM ZERO, ZERO) - 392
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (Move32R16 ZERO, S0) - 394
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Reg, Mips::S0},
    // (OR GPR32Opnd:$dst, GPR32Opnd:$src, ZERO) - 396
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    // (OR64 GPR64Opnd:$dst, GPR64Opnd:$src, ZERO_64) - 399
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO_64},
    // (RDHWR GPR32Opnd:$rt, HWRegsOpnd:$rs, 0) - 402
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::HWRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RDHWR64 GPR64Opnd:$rt, HWRegsOpnd:$rs, 0) - 405
    {AliasPatternCond::K_RegClass, Mips::GPR64RegClassID},
    {AliasPatternCond::K_RegClass, Mips::HWRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RDHWR_MM GPR32Opnd:$rt, HWRegsOpnd:$rs, 0) - 408
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::HWRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RDHWR_MMR6 GPR32Opnd:$rt, HWRegsOpnd:$rs, 0) - 411
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::HWRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SDBBP 0) - 414
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SDBBP_MMR6 0) - 415
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SDBBP_R6 0) - 416
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SIGRIE 0) - 417
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SIGRIE_MMR6 0) - 418
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SLL ZERO, ZERO, 0) - 419
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SLL_MM ZERO, ZERO, 0) - 422
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SLL_MMR6 ZERO, ZERO, 0) - 425
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SUB GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 428
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUB GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 431
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SUBU_MMR6 GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 434
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUBU_MMR6 GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 437
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SUB_MM GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 440
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUB_MM GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 443
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SUB_MMR6 GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 446
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUB_MMR6 GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 449
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SUBu GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 452
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUBu GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 455
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SUBu_MM GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs) - 458
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SUBu_MM GPR32Opnd:$rt, ZERO, GPR32Opnd:$rt) - 461
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_TiedReg, 0},
    // (SWSP_MM GPR32Opnd:$rt, mem_mm_sp_imm5_lsl2:$offset) - 464
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    // (SYNC 0) - 465
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SYNC_MM 0) - 466
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SYNC_MMR6 0) - 467
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SYSCALL 0) - 468
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SYSCALL_MM 0) - 469
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TEQ GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 470
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TEQ_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 473
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TGE GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 476
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TGEU GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 479
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TGEU_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 482
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TGE_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 485
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLT GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 488
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLTU GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 491
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLTU_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 494
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLT_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 497
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TNE GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 500
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TNE_MM GPR32Opnd:$rs, GPR32Opnd:$rt, 0) - 503
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (WAIT_MM 0) - 506
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (WRDSP GPR32Opnd:$rt, 31) - 507
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (WRDSP_MM GPR32Opnd:$rt, 31) - 509
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (YIELD ZERO, GPR32Opnd:$rs) - 511
    {AliasPatternCond::K_Reg, Mips::ZERO},
    {AliasPatternCond::K_RegClass, Mips::GPR32RegClassID},
  };

  static const char AsmStrings[] =
    /* 0 */ "mftacx $\x01\0"
    /* 10 */ "mftc0 $\x01, $\x02\0"
    /* 23 */ "mfthi $\x01\0"
    /* 32 */ "mftlo $\x01\0"
    /* 41 */ "mttacx $\x02\0"
    /* 51 */ "mttc0 $\x02, $\x01\0"
    /* 64 */ "mtthi $\x02\0"
    /* 73 */ "mttlo $\x02\0"
    /* 82 */ "nor	$\x01, $\x03\0"
    /* 93 */ "slt	$\x01, $\x03\0"
    /* 104 */ "sltu	$\x01, $\x03\0"
    /* 116 */ "lapc $\x01, $\x02\0"
    /* 128 */ "move $\x01, $\x02\0"
    /* 140 */ "bc1f $\x02\0"
    /* 148 */ "bc1fl $\x02\0"
    /* 157 */ "bc1t $\x02\0"
    /* 165 */ "bc1tl $\x02\0"
    /* 174 */ "beqzl $\x01, $\x03\0"
    /* 187 */ "bal $\x02\0"
    /* 194 */ "bnezl $\x01, $\x03\0"
    /* 207 */ "break\0"
    /* 213 */ "break $\xFF\x01\x01\0"
    /* 224 */ "c.eq.d $\x02, $\x03\0"
    /* 238 */ "c.eq.s $\x02, $\x03\0"
    /* 252 */ "c.f.d $\x02, $\x03\0"
    /* 265 */ "c.f.s $\x02, $\x03\0"
    /* 278 */ "c.le.d $\x02, $\x03\0"
    /* 292 */ "c.le.s $\x02, $\x03\0"
    /* 306 */ "c.lt.d $\x02, $\x03\0"
    /* 320 */ "c.lt.s $\x02, $\x03\0"
    /* 334 */ "c.nge.d $\x02, $\x03\0"
    /* 349 */ "c.nge.s $\x02, $\x03\0"
    /* 364 */ "c.ngle.d $\x02, $\x03\0"
    /* 380 */ "c.ngle.s $\x02, $\x03\0"
    /* 396 */ "c.ngl.d $\x02, $\x03\0"
    /* 411 */ "c.ngl.s $\x02, $\x03\0"
    /* 426 */ "c.ngt.d $\x02, $\x03\0"
    /* 441 */ "c.ngt.s $\x02, $\x03\0"
    /* 456 */ "c.ole.d $\x02, $\x03\0"
    /* 471 */ "c.ole.s $\x02, $\x03\0"
    /* 486 */ "c.olt.d $\x02, $\x03\0"
    /* 501 */ "c.olt.s $\x02, $\x03\0"
    /* 516 */ "c.seq.d $\x02, $\x03\0"
    /* 531 */ "c.seq.s $\x02, $\x03\0"
    /* 546 */ "c.sf.d $\x02, $\x03\0"
    /* 560 */ "c.sf.s $\x02, $\x03\0"
    /* 574 */ "c.ueq.d $\x02, $\x03\0"
    /* 589 */ "c.ueq.s $\x02, $\x03\0"
    /* 604 */ "c.ule.d $\x02, $\x03\0"
    /* 619 */ "c.ule.s $\x02, $\x03\0"
    /* 634 */ "c.ult.d $\x02, $\x03\0"
    /* 649 */ "c.ult.s $\x02, $\x03\0"
    /* 664 */ "c.un.d $\x02, $\x03\0"
    /* 678 */ "c.un.s $\x02, $\x03\0"
    /* 692 */ "di\0"
    /* 695 */ "div $\x01, $\x03\0"
    /* 706 */ "divu $\x01, $\x03\0"
    /* 718 */ "dmt\0"
    /* 722 */ "dneg $\x01, $\x03\0"
    /* 734 */ "dneg $\x01\0"
    /* 742 */ "dnegu $\x01, $\x03\0"
    /* 755 */ "dnegu $\x01\0"
    /* 764 */ "dvpe\0"
    /* 769 */ "ei\0"
    /* 772 */ "emt\0"
    /* 776 */ "evpe\0"
    /* 781 */ "hypcall\0"
    /* 789 */ "jr $\x02\0"
    /* 795 */ "jalrc.hb $\x02\0"
    /* 807 */ "jalrc $\x02\0"
    /* 816 */ "jalr.hb $\x02\0"
    /* 827 */ "jalrc $\x01\0"
    /* 836 */ "jrc $\x01\0"
    /* 843 */ "nop\0"
    /* 847 */ "rdhwr $\x01, $\x02\0"
    /* 860 */ "sdbbp\0"
    /* 866 */ "sigrie\0"
    /* 873 */ "neg $\x01, $\x03\0"
    /* 884 */ "neg $\x01\0"
    /* 891 */ "negu $\x01, $\x03\0"
    /* 903 */ "negu $\x01\0"
    /* 911 */ "sw $\x01, $\xFF\x02\x02\0"
    /* 923 */ "sync\0"
    /* 928 */ "syscall\0"
    /* 936 */ "teq $\x01, $\x02\0"
    /* 947 */ "tge $\x01, $\x02\0"
    /* 958 */ "tgeu $\x01, $\x02\0"
    /* 970 */ "tlt $\x01, $\x02\0"
    /* 981 */ "tltu $\x01, $\x02\0"
    /* 993 */ "tne $\x01, $\x02\0"
    /* 1004 */ "wait\0"
    /* 1009 */ "wrdsp $\x01\0"
    /* 1018 */ "yield $\x02\0"
  ;

#ifndef NDEBUG
  static struct SortCheck {
    SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
      assert(std::is_sorted(
                 OpToPatterns.begin(), OpToPatterns.end(),
                 [](const PatternsForOpcode &L, const PatternsForOpcode &R) {
                   return L.Opcode < R.Opcode;
                 }) &&
             "tablegen failed to sort opcode patterns");
    }
  } sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M {
    makeArrayRef(OpToPatterns),
    makeArrayRef(Patterns),
    makeArrayRef(Conds),
    StringRef(AsmStrings, array_lengthof(AsmStrings)),
    nullptr,
  };
  const char *AsmString = matchAliasPatterns(MI, nullptr, M);
  if (!AsmString) return false;

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      OS << '\t';
      ++I;
    }
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, Address, OpIdx, PrintMethodIdx, OS);
        } else
          printOperand(MI, unsigned(AsmString[I++]) - 1, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

void MipsInstPrinter::printCustomAliasOperand(
         const MCInst *MI, uint64_t Address, unsigned OpIdx,
         unsigned PrintMethodIdx,
         raw_ostream &OS) {
  switch (PrintMethodIdx) {
  default:
    llvm_unreachable("Unknown PrintMethod kind");
    break;
  case 0:
    printUImm<10>(MI, OpIdx, OS);
    break;
  case 1:
    printMemOperand(MI, OpIdx, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR
