/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace Hexagon {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    INLINEASM_BR	= 2,
    CFI_INSTRUCTION	= 3,
    EH_LABEL	= 4,
    GC_LABEL	= 5,
    ANNOTATION_LABEL	= 6,
    KILL	= 7,
    EXTRACT_SUBREG	= 8,
    INSERT_SUBREG	= 9,
    IMPLICIT_DEF	= 10,
    SUBREG_TO_REG	= 11,
    COPY_TO_REGCLASS	= 12,
    DBG_VALUE	= 13,
    DBG_INSTR_REF	= 14,
    DBG_LABEL	= 15,
    REG_SEQUENCE	= 16,
    COPY	= 17,
    BUNDLE	= 18,
    LIFETIME_START	= 19,
    LIFETIME_END	= 20,
    PSEUDO_PROBE	= 21,
    STACKMAP	= 22,
    FENTRY_CALL	= 23,
    PATCHPOINT	= 24,
    LOAD_STACK_GUARD	= 25,
    PREALLOCATED_SETUP	= 26,
    PREALLOCATED_ARG	= 27,
    STATEPOINT	= 28,
    LOCAL_ESCAPE	= 29,
    FAULTING_OP	= 30,
    PATCHABLE_OP	= 31,
    PATCHABLE_FUNCTION_ENTER	= 32,
    PATCHABLE_RET	= 33,
    PATCHABLE_FUNCTION_EXIT	= 34,
    PATCHABLE_TAIL_CALL	= 35,
    PATCHABLE_EVENT_CALL	= 36,
    PATCHABLE_TYPED_EVENT_CALL	= 37,
    ICALL_BRANCH_FUNNEL	= 38,
    G_ADD	= 39,
    G_SUB	= 40,
    G_MUL	= 41,
    G_SDIV	= 42,
    G_UDIV	= 43,
    G_SREM	= 44,
    G_UREM	= 45,
    G_AND	= 46,
    G_OR	= 47,
    G_XOR	= 48,
    G_IMPLICIT_DEF	= 49,
    G_PHI	= 50,
    G_FRAME_INDEX	= 51,
    G_GLOBAL_VALUE	= 52,
    G_EXTRACT	= 53,
    G_UNMERGE_VALUES	= 54,
    G_INSERT	= 55,
    G_MERGE_VALUES	= 56,
    G_BUILD_VECTOR	= 57,
    G_BUILD_VECTOR_TRUNC	= 58,
    G_CONCAT_VECTORS	= 59,
    G_PTRTOINT	= 60,
    G_INTTOPTR	= 61,
    G_BITCAST	= 62,
    G_FREEZE	= 63,
    G_INTRINSIC_TRUNC	= 64,
    G_INTRINSIC_ROUND	= 65,
    G_INTRINSIC_LRINT	= 66,
    G_INTRINSIC_ROUNDEVEN	= 67,
    G_READCYCLECOUNTER	= 68,
    G_LOAD	= 69,
    G_SEXTLOAD	= 70,
    G_ZEXTLOAD	= 71,
    G_INDEXED_LOAD	= 72,
    G_INDEXED_SEXTLOAD	= 73,
    G_INDEXED_ZEXTLOAD	= 74,
    G_STORE	= 75,
    G_INDEXED_STORE	= 76,
    G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 77,
    G_ATOMIC_CMPXCHG	= 78,
    G_ATOMICRMW_XCHG	= 79,
    G_ATOMICRMW_ADD	= 80,
    G_ATOMICRMW_SUB	= 81,
    G_ATOMICRMW_AND	= 82,
    G_ATOMICRMW_NAND	= 83,
    G_ATOMICRMW_OR	= 84,
    G_ATOMICRMW_XOR	= 85,
    G_ATOMICRMW_MAX	= 86,
    G_ATOMICRMW_MIN	= 87,
    G_ATOMICRMW_UMAX	= 88,
    G_ATOMICRMW_UMIN	= 89,
    G_ATOMICRMW_FADD	= 90,
    G_ATOMICRMW_FSUB	= 91,
    G_FENCE	= 92,
    G_BRCOND	= 93,
    G_BRINDIRECT	= 94,
    G_INTRINSIC	= 95,
    G_INTRINSIC_W_SIDE_EFFECTS	= 96,
    G_ANYEXT	= 97,
    G_TRUNC	= 98,
    G_CONSTANT	= 99,
    G_FCONSTANT	= 100,
    G_VASTART	= 101,
    G_VAARG	= 102,
    G_SEXT	= 103,
    G_SEXT_INREG	= 104,
    G_ZEXT	= 105,
    G_SHL	= 106,
    G_LSHR	= 107,
    G_ASHR	= 108,
    G_FSHL	= 109,
    G_FSHR	= 110,
    G_ICMP	= 111,
    G_FCMP	= 112,
    G_SELECT	= 113,
    G_UADDO	= 114,
    G_UADDE	= 115,
    G_USUBO	= 116,
    G_USUBE	= 117,
    G_SADDO	= 118,
    G_SADDE	= 119,
    G_SSUBO	= 120,
    G_SSUBE	= 121,
    G_UMULO	= 122,
    G_SMULO	= 123,
    G_UMULH	= 124,
    G_SMULH	= 125,
    G_UADDSAT	= 126,
    G_SADDSAT	= 127,
    G_USUBSAT	= 128,
    G_SSUBSAT	= 129,
    G_USHLSAT	= 130,
    G_SSHLSAT	= 131,
    G_SMULFIX	= 132,
    G_UMULFIX	= 133,
    G_SMULFIXSAT	= 134,
    G_UMULFIXSAT	= 135,
    G_SDIVFIX	= 136,
    G_UDIVFIX	= 137,
    G_SDIVFIXSAT	= 138,
    G_UDIVFIXSAT	= 139,
    G_FADD	= 140,
    G_FSUB	= 141,
    G_FMUL	= 142,
    G_FMA	= 143,
    G_FMAD	= 144,
    G_FDIV	= 145,
    G_FREM	= 146,
    G_FPOW	= 147,
    G_FPOWI	= 148,
    G_FEXP	= 149,
    G_FEXP2	= 150,
    G_FLOG	= 151,
    G_FLOG2	= 152,
    G_FLOG10	= 153,
    G_FNEG	= 154,
    G_FPEXT	= 155,
    G_FPTRUNC	= 156,
    G_FPTOSI	= 157,
    G_FPTOUI	= 158,
    G_SITOFP	= 159,
    G_UITOFP	= 160,
    G_FABS	= 161,
    G_FCOPYSIGN	= 162,
    G_FCANONICALIZE	= 163,
    G_FMINNUM	= 164,
    G_FMAXNUM	= 165,
    G_FMINNUM_IEEE	= 166,
    G_FMAXNUM_IEEE	= 167,
    G_FMINIMUM	= 168,
    G_FMAXIMUM	= 169,
    G_PTR_ADD	= 170,
    G_PTRMASK	= 171,
    G_SMIN	= 172,
    G_SMAX	= 173,
    G_UMIN	= 174,
    G_UMAX	= 175,
    G_ABS	= 176,
    G_BR	= 177,
    G_BRJT	= 178,
    G_INSERT_VECTOR_ELT	= 179,
    G_EXTRACT_VECTOR_ELT	= 180,
    G_SHUFFLE_VECTOR	= 181,
    G_CTTZ	= 182,
    G_CTTZ_ZERO_UNDEF	= 183,
    G_CTLZ	= 184,
    G_CTLZ_ZERO_UNDEF	= 185,
    G_CTPOP	= 186,
    G_BSWAP	= 187,
    G_BITREVERSE	= 188,
    G_FCEIL	= 189,
    G_FCOS	= 190,
    G_FSIN	= 191,
    G_FSQRT	= 192,
    G_FFLOOR	= 193,
    G_FRINT	= 194,
    G_FNEARBYINT	= 195,
    G_ADDRSPACE_CAST	= 196,
    G_BLOCK_ADDR	= 197,
    G_JUMP_TABLE	= 198,
    G_DYN_STACKALLOC	= 199,
    G_STRICT_FADD	= 200,
    G_STRICT_FSUB	= 201,
    G_STRICT_FMUL	= 202,
    G_STRICT_FDIV	= 203,
    G_STRICT_FREM	= 204,
    G_STRICT_FMA	= 205,
    G_STRICT_FSQRT	= 206,
    G_READ_REGISTER	= 207,
    G_WRITE_REGISTER	= 208,
    G_MEMCPY	= 209,
    G_MEMMOVE	= 210,
    G_MEMSET	= 211,
    G_VECREDUCE_SEQ_FADD	= 212,
    G_VECREDUCE_SEQ_FMUL	= 213,
    G_VECREDUCE_FADD	= 214,
    G_VECREDUCE_FMUL	= 215,
    G_VECREDUCE_FMAX	= 216,
    G_VECREDUCE_FMIN	= 217,
    G_VECREDUCE_ADD	= 218,
    G_VECREDUCE_MUL	= 219,
    G_VECREDUCE_AND	= 220,
    G_VECREDUCE_OR	= 221,
    G_VECREDUCE_XOR	= 222,
    G_VECREDUCE_SMAX	= 223,
    G_VECREDUCE_SMIN	= 224,
    G_VECREDUCE_UMAX	= 225,
    G_VECREDUCE_UMIN	= 226,
    A2_addsp	= 227,
    A2_iconst	= 228,
    A2_neg	= 229,
    A2_not	= 230,
    A2_tfrf	= 231,
    A2_tfrfnew	= 232,
    A2_tfrp	= 233,
    A2_tfrpf	= 234,
    A2_tfrpfnew	= 235,
    A2_tfrpi	= 236,
    A2_tfrpt	= 237,
    A2_tfrptnew	= 238,
    A2_tfrt	= 239,
    A2_tfrtnew	= 240,
    A2_vaddb_map	= 241,
    A2_vsubb_map	= 242,
    A2_zxtb	= 243,
    A4_boundscheck	= 244,
    ADJCALLSTACKDOWN	= 245,
    ADJCALLSTACKUP	= 246,
    C2_cmpgei	= 247,
    C2_cmpgeui	= 248,
    C2_cmplt	= 249,
    C2_cmpltu	= 250,
    C2_pxfer_map	= 251,
    DUPLEX_Pseudo	= 252,
    ENDLOOP0	= 253,
    ENDLOOP01	= 254,
    ENDLOOP1	= 255,
    J2_endloop0	= 256,
    J2_endloop01	= 257,
    J2_endloop1	= 258,
    J2_jumpf_nopred_map	= 259,
    J2_jumprf_nopred_map	= 260,
    J2_jumprt_nopred_map	= 261,
    J2_jumpt_nopred_map	= 262,
    J2_trap1_noregmap	= 263,
    L2_loadalignb_zomap	= 264,
    L2_loadalignh_zomap	= 265,
    L2_loadbsw2_zomap	= 266,
    L2_loadbsw4_zomap	= 267,
    L2_loadbzw2_zomap	= 268,
    L2_loadbzw4_zomap	= 269,
    L2_loadrb_zomap	= 270,
    L2_loadrd_zomap	= 271,
    L2_loadrh_zomap	= 272,
    L2_loadri_zomap	= 273,
    L2_loadrub_zomap	= 274,
    L2_loadruh_zomap	= 275,
    L2_ploadrbf_zomap	= 276,
    L2_ploadrbfnew_zomap	= 277,
    L2_ploadrbt_zomap	= 278,
    L2_ploadrbtnew_zomap	= 279,
    L2_ploadrdf_zomap	= 280,
    L2_ploadrdfnew_zomap	= 281,
    L2_ploadrdt_zomap	= 282,
    L2_ploadrdtnew_zomap	= 283,
    L2_ploadrhf_zomap	= 284,
    L2_ploadrhfnew_zomap	= 285,
    L2_ploadrht_zomap	= 286,
    L2_ploadrhtnew_zomap	= 287,
    L2_ploadrif_zomap	= 288,
    L2_ploadrifnew_zomap	= 289,
    L2_ploadrit_zomap	= 290,
    L2_ploadritnew_zomap	= 291,
    L2_ploadrubf_zomap	= 292,
    L2_ploadrubfnew_zomap	= 293,
    L2_ploadrubt_zomap	= 294,
    L2_ploadrubtnew_zomap	= 295,
    L2_ploadruhf_zomap	= 296,
    L2_ploadruhfnew_zomap	= 297,
    L2_ploadruht_zomap	= 298,
    L2_ploadruhtnew_zomap	= 299,
    L4_add_memopb_zomap	= 300,
    L4_add_memoph_zomap	= 301,
    L4_add_memopw_zomap	= 302,
    L4_and_memopb_zomap	= 303,
    L4_and_memoph_zomap	= 304,
    L4_and_memopw_zomap	= 305,
    L4_iadd_memopb_zomap	= 306,
    L4_iadd_memoph_zomap	= 307,
    L4_iadd_memopw_zomap	= 308,
    L4_iand_memopb_zomap	= 309,
    L4_iand_memoph_zomap	= 310,
    L4_iand_memopw_zomap	= 311,
    L4_ior_memopb_zomap	= 312,
    L4_ior_memoph_zomap	= 313,
    L4_ior_memopw_zomap	= 314,
    L4_isub_memopb_zomap	= 315,
    L4_isub_memoph_zomap	= 316,
    L4_isub_memopw_zomap	= 317,
    L4_or_memopb_zomap	= 318,
    L4_or_memoph_zomap	= 319,
    L4_or_memopw_zomap	= 320,
    L4_return_map_to_raw_f	= 321,
    L4_return_map_to_raw_fnew_pnt	= 322,
    L4_return_map_to_raw_fnew_pt	= 323,
    L4_return_map_to_raw_t	= 324,
    L4_return_map_to_raw_tnew_pnt	= 325,
    L4_return_map_to_raw_tnew_pt	= 326,
    L4_sub_memopb_zomap	= 327,
    L4_sub_memoph_zomap	= 328,
    L4_sub_memopw_zomap	= 329,
    L6_deallocframe_map_to_raw	= 330,
    L6_return_map_to_raw	= 331,
    LDriw_ctr	= 332,
    LDriw_pred	= 333,
    M2_mpysmi	= 334,
    M2_mpyui	= 335,
    M2_vrcmpys_acc_s1	= 336,
    M2_vrcmpys_s1	= 337,
    M2_vrcmpys_s1rp	= 338,
    M7_vdmpy	= 339,
    M7_vdmpy_acc	= 340,
    PS_aligna	= 341,
    PS_alloca	= 342,
    PS_call_nr	= 343,
    PS_crash	= 344,
    PS_false	= 345,
    PS_fi	= 346,
    PS_fia	= 347,
    PS_loadrb_pci	= 348,
    PS_loadrb_pcr	= 349,
    PS_loadrd_pci	= 350,
    PS_loadrd_pcr	= 351,
    PS_loadrh_pci	= 352,
    PS_loadrh_pcr	= 353,
    PS_loadri_pci	= 354,
    PS_loadri_pcr	= 355,
    PS_loadrub_pci	= 356,
    PS_loadrub_pcr	= 357,
    PS_loadruh_pci	= 358,
    PS_loadruh_pcr	= 359,
    PS_pselect	= 360,
    PS_qfalse	= 361,
    PS_qtrue	= 362,
    PS_storerb_pci	= 363,
    PS_storerb_pcr	= 364,
    PS_storerd_pci	= 365,
    PS_storerd_pcr	= 366,
    PS_storerf_pci	= 367,
    PS_storerf_pcr	= 368,
    PS_storerh_pci	= 369,
    PS_storerh_pcr	= 370,
    PS_storeri_pci	= 371,
    PS_storeri_pcr	= 372,
    PS_tailcall_i	= 373,
    PS_tailcall_r	= 374,
    PS_true	= 375,
    PS_vdd0	= 376,
    PS_vloadrq_ai	= 377,
    PS_vloadrv_ai	= 378,
    PS_vloadrv_nt_ai	= 379,
    PS_vloadrw_ai	= 380,
    PS_vloadrw_nt_ai	= 381,
    PS_vmulw	= 382,
    PS_vmulw_acc	= 383,
    PS_vselect	= 384,
    PS_vstorerq_ai	= 385,
    PS_vstorerv_ai	= 386,
    PS_vstorerv_nt_ai	= 387,
    PS_vstorerw_ai	= 388,
    PS_vstorerw_nt_ai	= 389,
    PS_wselect	= 390,
    S2_asr_i_p_rnd_goodsyntax	= 391,
    S2_asr_i_r_rnd_goodsyntax	= 392,
    S2_pstorerbf_zomap	= 393,
    S2_pstorerbnewf_zomap	= 394,
    S2_pstorerbnewt_zomap	= 395,
    S2_pstorerbt_zomap	= 396,
    S2_pstorerdf_zomap	= 397,
    S2_pstorerdt_zomap	= 398,
    S2_pstorerff_zomap	= 399,
    S2_pstorerft_zomap	= 400,
    S2_pstorerhf_zomap	= 401,
    S2_pstorerhnewf_zomap	= 402,
    S2_pstorerhnewt_zomap	= 403,
    S2_pstorerht_zomap	= 404,
    S2_pstorerif_zomap	= 405,
    S2_pstorerinewf_zomap	= 406,
    S2_pstorerinewt_zomap	= 407,
    S2_pstorerit_zomap	= 408,
    S2_storerb_zomap	= 409,
    S2_storerbnew_zomap	= 410,
    S2_storerd_zomap	= 411,
    S2_storerf_zomap	= 412,
    S2_storerh_zomap	= 413,
    S2_storerhnew_zomap	= 414,
    S2_storeri_zomap	= 415,
    S2_storerinew_zomap	= 416,
    S2_tableidxb_goodsyntax	= 417,
    S2_tableidxd_goodsyntax	= 418,
    S2_tableidxh_goodsyntax	= 419,
    S2_tableidxw_goodsyntax	= 420,
    S4_pstorerbfnew_zomap	= 421,
    S4_pstorerbnewfnew_zomap	= 422,
    S4_pstorerbnewtnew_zomap	= 423,
    S4_pstorerbtnew_zomap	= 424,
    S4_pstorerdfnew_zomap	= 425,
    S4_pstorerdtnew_zomap	= 426,
    S4_pstorerffnew_zomap	= 427,
    S4_pstorerftnew_zomap	= 428,
    S4_pstorerhfnew_zomap	= 429,
    S4_pstorerhnewfnew_zomap	= 430,
    S4_pstorerhnewtnew_zomap	= 431,
    S4_pstorerhtnew_zomap	= 432,
    S4_pstorerifnew_zomap	= 433,
    S4_pstorerinewfnew_zomap	= 434,
    S4_pstorerinewtnew_zomap	= 435,
    S4_pstoreritnew_zomap	= 436,
    S4_storeirb_zomap	= 437,
    S4_storeirbf_zomap	= 438,
    S4_storeirbfnew_zomap	= 439,
    S4_storeirbt_zomap	= 440,
    S4_storeirbtnew_zomap	= 441,
    S4_storeirh_zomap	= 442,
    S4_storeirhf_zomap	= 443,
    S4_storeirhfnew_zomap	= 444,
    S4_storeirht_zomap	= 445,
    S4_storeirhtnew_zomap	= 446,
    S4_storeiri_zomap	= 447,
    S4_storeirif_zomap	= 448,
    S4_storeirifnew_zomap	= 449,
    S4_storeirit_zomap	= 450,
    S4_storeiritnew_zomap	= 451,
    S5_asrhub_rnd_sat_goodsyntax	= 452,
    S5_vasrhrnd_goodsyntax	= 453,
    S6_allocframe_to_raw	= 454,
    STriw_ctr	= 455,
    STriw_pred	= 456,
    V6_MAP_equb	= 457,
    V6_MAP_equb_and	= 458,
    V6_MAP_equb_ior	= 459,
    V6_MAP_equb_xor	= 460,
    V6_MAP_equh	= 461,
    V6_MAP_equh_and	= 462,
    V6_MAP_equh_ior	= 463,
    V6_MAP_equh_xor	= 464,
    V6_MAP_equw	= 465,
    V6_MAP_equw_and	= 466,
    V6_MAP_equw_ior	= 467,
    V6_MAP_equw_xor	= 468,
    V6_extractw_alt	= 469,
    V6_hi	= 470,
    V6_ld0	= 471,
    V6_ldcnp0	= 472,
    V6_ldcnpnt0	= 473,
    V6_ldcp0	= 474,
    V6_ldcpnt0	= 475,
    V6_ldnp0	= 476,
    V6_ldnpnt0	= 477,
    V6_ldnt0	= 478,
    V6_ldntnt0	= 479,
    V6_ldp0	= 480,
    V6_ldpnt0	= 481,
    V6_ldtnp0	= 482,
    V6_ldtnpnt0	= 483,
    V6_ldtp0	= 484,
    V6_ldtpnt0	= 485,
    V6_ldu0	= 486,
    V6_lo	= 487,
    V6_st0	= 488,
    V6_stn0	= 489,
    V6_stnnt0	= 490,
    V6_stnp0	= 491,
    V6_stnpnt0	= 492,
    V6_stnq0	= 493,
    V6_stnqnt0	= 494,
    V6_stnt0	= 495,
    V6_stp0	= 496,
    V6_stpnt0	= 497,
    V6_stq0	= 498,
    V6_stqnt0	= 499,
    V6_stu0	= 500,
    V6_stunp0	= 501,
    V6_stup0	= 502,
    V6_vabsb_alt	= 503,
    V6_vabsb_sat_alt	= 504,
    V6_vabsdiffh_alt	= 505,
    V6_vabsdiffub_alt	= 506,
    V6_vabsdiffuh_alt	= 507,
    V6_vabsdiffw_alt	= 508,
    V6_vabsh_alt	= 509,
    V6_vabsh_sat_alt	= 510,
    V6_vabsub_alt	= 511,
    V6_vabsuh_alt	= 512,
    V6_vabsuw_alt	= 513,
    V6_vabsw_alt	= 514,
    V6_vabsw_sat_alt	= 515,
    V6_vaddb_alt	= 516,
    V6_vaddb_dv_alt	= 517,
    V6_vaddbnq_alt	= 518,
    V6_vaddbq_alt	= 519,
    V6_vaddbsat_alt	= 520,
    V6_vaddbsat_dv_alt	= 521,
    V6_vaddh_alt	= 522,
    V6_vaddh_dv_alt	= 523,
    V6_vaddhnq_alt	= 524,
    V6_vaddhq_alt	= 525,
    V6_vaddhsat_alt	= 526,
    V6_vaddhsat_dv_alt	= 527,
    V6_vaddhw_acc_alt	= 528,
    V6_vaddhw_alt	= 529,
    V6_vaddubh_acc_alt	= 530,
    V6_vaddubh_alt	= 531,
    V6_vaddubsat_alt	= 532,
    V6_vaddubsat_dv_alt	= 533,
    V6_vadduhsat_alt	= 534,
    V6_vadduhsat_dv_alt	= 535,
    V6_vadduhw_acc_alt	= 536,
    V6_vadduhw_alt	= 537,
    V6_vadduwsat_alt	= 538,
    V6_vadduwsat_dv_alt	= 539,
    V6_vaddw_alt	= 540,
    V6_vaddw_dv_alt	= 541,
    V6_vaddwnq_alt	= 542,
    V6_vaddwq_alt	= 543,
    V6_vaddwsat_alt	= 544,
    V6_vaddwsat_dv_alt	= 545,
    V6_vandnqrt_acc_alt	= 546,
    V6_vandnqrt_alt	= 547,
    V6_vandqrt_acc_alt	= 548,
    V6_vandqrt_alt	= 549,
    V6_vandvrt_acc_alt	= 550,
    V6_vandvrt_alt	= 551,
    V6_vaslh_acc_alt	= 552,
    V6_vaslh_alt	= 553,
    V6_vaslhv_alt	= 554,
    V6_vaslw_acc_alt	= 555,
    V6_vaslw_alt	= 556,
    V6_vaslwv_alt	= 557,
    V6_vasr_into_alt	= 558,
    V6_vasrh_acc_alt	= 559,
    V6_vasrh_alt	= 560,
    V6_vasrhv_alt	= 561,
    V6_vasrw_acc_alt	= 562,
    V6_vasrw_alt	= 563,
    V6_vasrwv_alt	= 564,
    V6_vassignp	= 565,
    V6_vavgb_alt	= 566,
    V6_vavgbrnd_alt	= 567,
    V6_vavgh_alt	= 568,
    V6_vavghrnd_alt	= 569,
    V6_vavgub_alt	= 570,
    V6_vavgubrnd_alt	= 571,
    V6_vavguh_alt	= 572,
    V6_vavguhrnd_alt	= 573,
    V6_vavguw_alt	= 574,
    V6_vavguwrnd_alt	= 575,
    V6_vavgw_alt	= 576,
    V6_vavgwrnd_alt	= 577,
    V6_vcl0h_alt	= 578,
    V6_vcl0w_alt	= 579,
    V6_vd0	= 580,
    V6_vdd0	= 581,
    V6_vdealb4w_alt	= 582,
    V6_vdealb_alt	= 583,
    V6_vdealh_alt	= 584,
    V6_vdmpybus_acc_alt	= 585,
    V6_vdmpybus_alt	= 586,
    V6_vdmpybus_dv_acc_alt	= 587,
    V6_vdmpybus_dv_alt	= 588,
    V6_vdmpyhb_acc_alt	= 589,
    V6_vdmpyhb_alt	= 590,
    V6_vdmpyhb_dv_acc_alt	= 591,
    V6_vdmpyhb_dv_alt	= 592,
    V6_vdmpyhisat_acc_alt	= 593,
    V6_vdmpyhisat_alt	= 594,
    V6_vdmpyhsat_acc_alt	= 595,
    V6_vdmpyhsat_alt	= 596,
    V6_vdmpyhsuisat_acc_alt	= 597,
    V6_vdmpyhsuisat_alt	= 598,
    V6_vdmpyhsusat_acc_alt	= 599,
    V6_vdmpyhsusat_alt	= 600,
    V6_vdmpyhvsat_acc_alt	= 601,
    V6_vdmpyhvsat_alt	= 602,
    V6_vdsaduh_acc_alt	= 603,
    V6_vdsaduh_alt	= 604,
    V6_vgathermh_pseudo	= 605,
    V6_vgathermhq_pseudo	= 606,
    V6_vgathermhw_pseudo	= 607,
    V6_vgathermhwq_pseudo	= 608,
    V6_vgathermw_pseudo	= 609,
    V6_vgathermwq_pseudo	= 610,
    V6_vlsrh_alt	= 611,
    V6_vlsrhv_alt	= 612,
    V6_vlsrw_alt	= 613,
    V6_vlsrwv_alt	= 614,
    V6_vmaxb_alt	= 615,
    V6_vmaxh_alt	= 616,
    V6_vmaxub_alt	= 617,
    V6_vmaxuh_alt	= 618,
    V6_vmaxw_alt	= 619,
    V6_vminb_alt	= 620,
    V6_vminh_alt	= 621,
    V6_vminub_alt	= 622,
    V6_vminuh_alt	= 623,
    V6_vminw_alt	= 624,
    V6_vmpabus_acc_alt	= 625,
    V6_vmpabus_alt	= 626,
    V6_vmpabusv_alt	= 627,
    V6_vmpabuu_acc_alt	= 628,
    V6_vmpabuu_alt	= 629,
    V6_vmpabuuv_alt	= 630,
    V6_vmpahb_acc_alt	= 631,
    V6_vmpahb_alt	= 632,
    V6_vmpauhb_acc_alt	= 633,
    V6_vmpauhb_alt	= 634,
    V6_vmpybus_acc_alt	= 635,
    V6_vmpybus_alt	= 636,
    V6_vmpybusv_acc_alt	= 637,
    V6_vmpybusv_alt	= 638,
    V6_vmpybv_acc_alt	= 639,
    V6_vmpybv_alt	= 640,
    V6_vmpyewuh_alt	= 641,
    V6_vmpyh_acc_alt	= 642,
    V6_vmpyh_alt	= 643,
    V6_vmpyhsat_acc_alt	= 644,
    V6_vmpyhsrs_alt	= 645,
    V6_vmpyhss_alt	= 646,
    V6_vmpyhus_acc_alt	= 647,
    V6_vmpyhus_alt	= 648,
    V6_vmpyhv_acc_alt	= 649,
    V6_vmpyhv_alt	= 650,
    V6_vmpyhvsrs_alt	= 651,
    V6_vmpyiewh_acc_alt	= 652,
    V6_vmpyiewuh_acc_alt	= 653,
    V6_vmpyiewuh_alt	= 654,
    V6_vmpyih_acc_alt	= 655,
    V6_vmpyih_alt	= 656,
    V6_vmpyihb_acc_alt	= 657,
    V6_vmpyihb_alt	= 658,
    V6_vmpyiowh_alt	= 659,
    V6_vmpyiwb_acc_alt	= 660,
    V6_vmpyiwb_alt	= 661,
    V6_vmpyiwh_acc_alt	= 662,
    V6_vmpyiwh_alt	= 663,
    V6_vmpyiwub_acc_alt	= 664,
    V6_vmpyiwub_alt	= 665,
    V6_vmpyowh_alt	= 666,
    V6_vmpyowh_rnd_alt	= 667,
    V6_vmpyowh_rnd_sacc_alt	= 668,
    V6_vmpyowh_sacc_alt	= 669,
    V6_vmpyub_acc_alt	= 670,
    V6_vmpyub_alt	= 671,
    V6_vmpyubv_acc_alt	= 672,
    V6_vmpyubv_alt	= 673,
    V6_vmpyuh_acc_alt	= 674,
    V6_vmpyuh_alt	= 675,
    V6_vmpyuhv_acc_alt	= 676,
    V6_vmpyuhv_alt	= 677,
    V6_vnavgb_alt	= 678,
    V6_vnavgh_alt	= 679,
    V6_vnavgub_alt	= 680,
    V6_vnavgw_alt	= 681,
    V6_vnormamth_alt	= 682,
    V6_vnormamtw_alt	= 683,
    V6_vpackeb_alt	= 684,
    V6_vpackeh_alt	= 685,
    V6_vpackhb_sat_alt	= 686,
    V6_vpackhub_sat_alt	= 687,
    V6_vpackob_alt	= 688,
    V6_vpackoh_alt	= 689,
    V6_vpackwh_sat_alt	= 690,
    V6_vpackwuh_sat_alt	= 691,
    V6_vpopcounth_alt	= 692,
    V6_vrmpybub_rtt_acc_alt	= 693,
    V6_vrmpybub_rtt_alt	= 694,
    V6_vrmpybus_acc_alt	= 695,
    V6_vrmpybus_alt	= 696,
    V6_vrmpybusi_acc_alt	= 697,
    V6_vrmpybusi_alt	= 698,
    V6_vrmpybusv_acc_alt	= 699,
    V6_vrmpybusv_alt	= 700,
    V6_vrmpybv_acc_alt	= 701,
    V6_vrmpybv_alt	= 702,
    V6_vrmpyub_acc_alt	= 703,
    V6_vrmpyub_alt	= 704,
    V6_vrmpyub_rtt_acc_alt	= 705,
    V6_vrmpyub_rtt_alt	= 706,
    V6_vrmpyubi_acc_alt	= 707,
    V6_vrmpyubi_alt	= 708,
    V6_vrmpyubv_acc_alt	= 709,
    V6_vrmpyubv_alt	= 710,
    V6_vrotr_alt	= 711,
    V6_vroundhb_alt	= 712,
    V6_vroundhub_alt	= 713,
    V6_vrounduhub_alt	= 714,
    V6_vrounduwuh_alt	= 715,
    V6_vroundwh_alt	= 716,
    V6_vroundwuh_alt	= 717,
    V6_vrsadubi_acc_alt	= 718,
    V6_vrsadubi_alt	= 719,
    V6_vsathub_alt	= 720,
    V6_vsatuwuh_alt	= 721,
    V6_vsatwh_alt	= 722,
    V6_vsb_alt	= 723,
    V6_vscattermh_add_alt	= 724,
    V6_vscattermh_alt	= 725,
    V6_vscattermhq_alt	= 726,
    V6_vscattermw_add_alt	= 727,
    V6_vscattermw_alt	= 728,
    V6_vscattermwh_add_alt	= 729,
    V6_vscattermwh_alt	= 730,
    V6_vscattermwhq_alt	= 731,
    V6_vscattermwq_alt	= 732,
    V6_vsh_alt	= 733,
    V6_vshufeh_alt	= 734,
    V6_vshuffb_alt	= 735,
    V6_vshuffeb_alt	= 736,
    V6_vshuffh_alt	= 737,
    V6_vshuffob_alt	= 738,
    V6_vshufoeb_alt	= 739,
    V6_vshufoeh_alt	= 740,
    V6_vshufoh_alt	= 741,
    V6_vsubb_alt	= 742,
    V6_vsubb_dv_alt	= 743,
    V6_vsubbnq_alt	= 744,
    V6_vsubbq_alt	= 745,
    V6_vsubbsat_alt	= 746,
    V6_vsubbsat_dv_alt	= 747,
    V6_vsubh_alt	= 748,
    V6_vsubh_dv_alt	= 749,
    V6_vsubhnq_alt	= 750,
    V6_vsubhq_alt	= 751,
    V6_vsubhsat_alt	= 752,
    V6_vsubhsat_dv_alt	= 753,
    V6_vsubhw_alt	= 754,
    V6_vsububh_alt	= 755,
    V6_vsububsat_alt	= 756,
    V6_vsububsat_dv_alt	= 757,
    V6_vsubuhsat_alt	= 758,
    V6_vsubuhsat_dv_alt	= 759,
    V6_vsubuhw_alt	= 760,
    V6_vsubuwsat_alt	= 761,
    V6_vsubuwsat_dv_alt	= 762,
    V6_vsubw_alt	= 763,
    V6_vsubw_dv_alt	= 764,
    V6_vsubwnq_alt	= 765,
    V6_vsubwq_alt	= 766,
    V6_vsubwsat_alt	= 767,
    V6_vsubwsat_dv_alt	= 768,
    V6_vtmpyb_acc_alt	= 769,
    V6_vtmpyb_alt	= 770,
    V6_vtmpybus_acc_alt	= 771,
    V6_vtmpybus_alt	= 772,
    V6_vtmpyhb_acc_alt	= 773,
    V6_vtmpyhb_alt	= 774,
    V6_vtran2x2_map	= 775,
    V6_vunpackb_alt	= 776,
    V6_vunpackh_alt	= 777,
    V6_vunpackob_alt	= 778,
    V6_vunpackoh_alt	= 779,
    V6_vunpackub_alt	= 780,
    V6_vunpackuh_alt	= 781,
    V6_vzb_alt	= 782,
    V6_vzh_alt	= 783,
    V6_zld0	= 784,
    V6_zldp0	= 785,
    Y2_dcfetch	= 786,
    dup_A2_add	= 787,
    dup_A2_addi	= 788,
    dup_A2_andir	= 789,
    dup_A2_combineii	= 790,
    dup_A2_sxtb	= 791,
    dup_A2_sxth	= 792,
    dup_A2_tfr	= 793,
    dup_A2_tfrsi	= 794,
    dup_A2_zxtb	= 795,
    dup_A2_zxth	= 796,
    dup_A4_combineii	= 797,
    dup_A4_combineir	= 798,
    dup_A4_combineri	= 799,
    dup_C2_cmoveif	= 800,
    dup_C2_cmoveit	= 801,
    dup_C2_cmovenewif	= 802,
    dup_C2_cmovenewit	= 803,
    dup_C2_cmpeqi	= 804,
    dup_L2_deallocframe	= 805,
    dup_L2_loadrb_io	= 806,
    dup_L2_loadrd_io	= 807,
    dup_L2_loadrh_io	= 808,
    dup_L2_loadri_io	= 809,
    dup_L2_loadrub_io	= 810,
    dup_L2_loadruh_io	= 811,
    dup_S2_allocframe	= 812,
    dup_S2_storerb_io	= 813,
    dup_S2_storerd_io	= 814,
    dup_S2_storerh_io	= 815,
    dup_S2_storeri_io	= 816,
    dup_S4_storeirb_io	= 817,
    dup_S4_storeiri_io	= 818,
    A2_abs	= 819,
    A2_absp	= 820,
    A2_abssat	= 821,
    A2_add	= 822,
    A2_addh_h16_hh	= 823,
    A2_addh_h16_hl	= 824,
    A2_addh_h16_lh	= 825,
    A2_addh_h16_ll	= 826,
    A2_addh_h16_sat_hh	= 827,
    A2_addh_h16_sat_hl	= 828,
    A2_addh_h16_sat_lh	= 829,
    A2_addh_h16_sat_ll	= 830,
    A2_addh_l16_hl	= 831,
    A2_addh_l16_ll	= 832,
    A2_addh_l16_sat_hl	= 833,
    A2_addh_l16_sat_ll	= 834,
    A2_addi	= 835,
    A2_addp	= 836,
    A2_addpsat	= 837,
    A2_addsat	= 838,
    A2_addsph	= 839,
    A2_addspl	= 840,
    A2_and	= 841,
    A2_andir	= 842,
    A2_andp	= 843,
    A2_aslh	= 844,
    A2_asrh	= 845,
    A2_combine_hh	= 846,
    A2_combine_hl	= 847,
    A2_combine_lh	= 848,
    A2_combine_ll	= 849,
    A2_combineii	= 850,
    A2_combinew	= 851,
    A2_max	= 852,
    A2_maxp	= 853,
    A2_maxu	= 854,
    A2_maxup	= 855,
    A2_min	= 856,
    A2_minp	= 857,
    A2_minu	= 858,
    A2_minup	= 859,
    A2_negp	= 860,
    A2_negsat	= 861,
    A2_nop	= 862,
    A2_notp	= 863,
    A2_or	= 864,
    A2_orir	= 865,
    A2_orp	= 866,
    A2_paddf	= 867,
    A2_paddfnew	= 868,
    A2_paddif	= 869,
    A2_paddifnew	= 870,
    A2_paddit	= 871,
    A2_padditnew	= 872,
    A2_paddt	= 873,
    A2_paddtnew	= 874,
    A2_pandf	= 875,
    A2_pandfnew	= 876,
    A2_pandt	= 877,
    A2_pandtnew	= 878,
    A2_porf	= 879,
    A2_porfnew	= 880,
    A2_port	= 881,
    A2_portnew	= 882,
    A2_psubf	= 883,
    A2_psubfnew	= 884,
    A2_psubt	= 885,
    A2_psubtnew	= 886,
    A2_pxorf	= 887,
    A2_pxorfnew	= 888,
    A2_pxort	= 889,
    A2_pxortnew	= 890,
    A2_roundsat	= 891,
    A2_sat	= 892,
    A2_satb	= 893,
    A2_sath	= 894,
    A2_satub	= 895,
    A2_satuh	= 896,
    A2_sub	= 897,
    A2_subh_h16_hh	= 898,
    A2_subh_h16_hl	= 899,
    A2_subh_h16_lh	= 900,
    A2_subh_h16_ll	= 901,
    A2_subh_h16_sat_hh	= 902,
    A2_subh_h16_sat_hl	= 903,
    A2_subh_h16_sat_lh	= 904,
    A2_subh_h16_sat_ll	= 905,
    A2_subh_l16_hl	= 906,
    A2_subh_l16_ll	= 907,
    A2_subh_l16_sat_hl	= 908,
    A2_subh_l16_sat_ll	= 909,
    A2_subp	= 910,
    A2_subri	= 911,
    A2_subsat	= 912,
    A2_svaddh	= 913,
    A2_svaddhs	= 914,
    A2_svadduhs	= 915,
    A2_svavgh	= 916,
    A2_svavghs	= 917,
    A2_svnavgh	= 918,
    A2_svsubh	= 919,
    A2_svsubhs	= 920,
    A2_svsubuhs	= 921,
    A2_swiz	= 922,
    A2_sxtb	= 923,
    A2_sxth	= 924,
    A2_sxtw	= 925,
    A2_tfr	= 926,
    A2_tfrcrr	= 927,
    A2_tfrih	= 928,
    A2_tfril	= 929,
    A2_tfrrcr	= 930,
    A2_tfrsi	= 931,
    A2_vabsh	= 932,
    A2_vabshsat	= 933,
    A2_vabsw	= 934,
    A2_vabswsat	= 935,
    A2_vaddh	= 936,
    A2_vaddhs	= 937,
    A2_vaddub	= 938,
    A2_vaddubs	= 939,
    A2_vadduhs	= 940,
    A2_vaddw	= 941,
    A2_vaddws	= 942,
    A2_vavgh	= 943,
    A2_vavghcr	= 944,
    A2_vavghr	= 945,
    A2_vavgub	= 946,
    A2_vavgubr	= 947,
    A2_vavguh	= 948,
    A2_vavguhr	= 949,
    A2_vavguw	= 950,
    A2_vavguwr	= 951,
    A2_vavgw	= 952,
    A2_vavgwcr	= 953,
    A2_vavgwr	= 954,
    A2_vcmpbeq	= 955,
    A2_vcmpbgtu	= 956,
    A2_vcmpheq	= 957,
    A2_vcmphgt	= 958,
    A2_vcmphgtu	= 959,
    A2_vcmpweq	= 960,
    A2_vcmpwgt	= 961,
    A2_vcmpwgtu	= 962,
    A2_vconj	= 963,
    A2_vmaxb	= 964,
    A2_vmaxh	= 965,
    A2_vmaxub	= 966,
    A2_vmaxuh	= 967,
    A2_vmaxuw	= 968,
    A2_vmaxw	= 969,
    A2_vminb	= 970,
    A2_vminh	= 971,
    A2_vminub	= 972,
    A2_vminuh	= 973,
    A2_vminuw	= 974,
    A2_vminw	= 975,
    A2_vnavgh	= 976,
    A2_vnavghcr	= 977,
    A2_vnavghr	= 978,
    A2_vnavgw	= 979,
    A2_vnavgwcr	= 980,
    A2_vnavgwr	= 981,
    A2_vraddub	= 982,
    A2_vraddub_acc	= 983,
    A2_vrsadub	= 984,
    A2_vrsadub_acc	= 985,
    A2_vsubh	= 986,
    A2_vsubhs	= 987,
    A2_vsubub	= 988,
    A2_vsububs	= 989,
    A2_vsubuhs	= 990,
    A2_vsubw	= 991,
    A2_vsubws	= 992,
    A2_xor	= 993,
    A2_xorp	= 994,
    A2_zxth	= 995,
    A4_addp_c	= 996,
    A4_andn	= 997,
    A4_andnp	= 998,
    A4_bitsplit	= 999,
    A4_bitspliti	= 1000,
    A4_boundscheck_hi	= 1001,
    A4_boundscheck_lo	= 1002,
    A4_cmpbeq	= 1003,
    A4_cmpbeqi	= 1004,
    A4_cmpbgt	= 1005,
    A4_cmpbgti	= 1006,
    A4_cmpbgtu	= 1007,
    A4_cmpbgtui	= 1008,
    A4_cmpheq	= 1009,
    A4_cmpheqi	= 1010,
    A4_cmphgt	= 1011,
    A4_cmphgti	= 1012,
    A4_cmphgtu	= 1013,
    A4_cmphgtui	= 1014,
    A4_combineii	= 1015,
    A4_combineir	= 1016,
    A4_combineri	= 1017,
    A4_cround_ri	= 1018,
    A4_cround_rr	= 1019,
    A4_ext	= 1020,
    A4_modwrapu	= 1021,
    A4_orn	= 1022,
    A4_ornp	= 1023,
    A4_paslhf	= 1024,
    A4_paslhfnew	= 1025,
    A4_paslht	= 1026,
    A4_paslhtnew	= 1027,
    A4_pasrhf	= 1028,
    A4_pasrhfnew	= 1029,
    A4_pasrht	= 1030,
    A4_pasrhtnew	= 1031,
    A4_psxtbf	= 1032,
    A4_psxtbfnew	= 1033,
    A4_psxtbt	= 1034,
    A4_psxtbtnew	= 1035,
    A4_psxthf	= 1036,
    A4_psxthfnew	= 1037,
    A4_psxtht	= 1038,
    A4_psxthtnew	= 1039,
    A4_pzxtbf	= 1040,
    A4_pzxtbfnew	= 1041,
    A4_pzxtbt	= 1042,
    A4_pzxtbtnew	= 1043,
    A4_pzxthf	= 1044,
    A4_pzxthfnew	= 1045,
    A4_pzxtht	= 1046,
    A4_pzxthtnew	= 1047,
    A4_rcmpeq	= 1048,
    A4_rcmpeqi	= 1049,
    A4_rcmpneq	= 1050,
    A4_rcmpneqi	= 1051,
    A4_round_ri	= 1052,
    A4_round_ri_sat	= 1053,
    A4_round_rr	= 1054,
    A4_round_rr_sat	= 1055,
    A4_subp_c	= 1056,
    A4_tfrcpp	= 1057,
    A4_tfrpcp	= 1058,
    A4_tlbmatch	= 1059,
    A4_vcmpbeq_any	= 1060,
    A4_vcmpbeqi	= 1061,
    A4_vcmpbgt	= 1062,
    A4_vcmpbgti	= 1063,
    A4_vcmpbgtui	= 1064,
    A4_vcmpheqi	= 1065,
    A4_vcmphgti	= 1066,
    A4_vcmphgtui	= 1067,
    A4_vcmpweqi	= 1068,
    A4_vcmpwgti	= 1069,
    A4_vcmpwgtui	= 1070,
    A4_vrmaxh	= 1071,
    A4_vrmaxuh	= 1072,
    A4_vrmaxuw	= 1073,
    A4_vrmaxw	= 1074,
    A4_vrminh	= 1075,
    A4_vrminuh	= 1076,
    A4_vrminuw	= 1077,
    A4_vrminw	= 1078,
    A5_ACS	= 1079,
    A5_vaddhubs	= 1080,
    A6_vcmpbeq_notany	= 1081,
    A6_vminub_RdP	= 1082,
    A7_clip	= 1083,
    A7_croundd_ri	= 1084,
    A7_croundd_rr	= 1085,
    A7_vclip	= 1086,
    C2_all8	= 1087,
    C2_and	= 1088,
    C2_andn	= 1089,
    C2_any8	= 1090,
    C2_bitsclr	= 1091,
    C2_bitsclri	= 1092,
    C2_bitsset	= 1093,
    C2_ccombinewf	= 1094,
    C2_ccombinewnewf	= 1095,
    C2_ccombinewnewt	= 1096,
    C2_ccombinewt	= 1097,
    C2_cmoveif	= 1098,
    C2_cmoveit	= 1099,
    C2_cmovenewif	= 1100,
    C2_cmovenewit	= 1101,
    C2_cmpeq	= 1102,
    C2_cmpeqi	= 1103,
    C2_cmpeqp	= 1104,
    C2_cmpgt	= 1105,
    C2_cmpgti	= 1106,
    C2_cmpgtp	= 1107,
    C2_cmpgtu	= 1108,
    C2_cmpgtui	= 1109,
    C2_cmpgtup	= 1110,
    C2_mask	= 1111,
    C2_mux	= 1112,
    C2_muxii	= 1113,
    C2_muxir	= 1114,
    C2_muxri	= 1115,
    C2_not	= 1116,
    C2_or	= 1117,
    C2_orn	= 1118,
    C2_tfrpr	= 1119,
    C2_tfrrp	= 1120,
    C2_vitpack	= 1121,
    C2_vmux	= 1122,
    C2_xor	= 1123,
    C4_addipc	= 1124,
    C4_and_and	= 1125,
    C4_and_andn	= 1126,
    C4_and_or	= 1127,
    C4_and_orn	= 1128,
    C4_cmplte	= 1129,
    C4_cmpltei	= 1130,
    C4_cmplteu	= 1131,
    C4_cmplteui	= 1132,
    C4_cmpneq	= 1133,
    C4_cmpneqi	= 1134,
    C4_fastcorner9	= 1135,
    C4_fastcorner9_not	= 1136,
    C4_nbitsclr	= 1137,
    C4_nbitsclri	= 1138,
    C4_nbitsset	= 1139,
    C4_or_and	= 1140,
    C4_or_andn	= 1141,
    C4_or_or	= 1142,
    C4_or_orn	= 1143,
    CALLProfile	= 1144,
    CONST32	= 1145,
    CONST64	= 1146,
    DuplexIClass0	= 1147,
    DuplexIClass1	= 1148,
    DuplexIClass2	= 1149,
    DuplexIClass3	= 1150,
    DuplexIClass4	= 1151,
    DuplexIClass5	= 1152,
    DuplexIClass6	= 1153,
    DuplexIClass7	= 1154,
    DuplexIClass8	= 1155,
    DuplexIClass9	= 1156,
    DuplexIClassA	= 1157,
    DuplexIClassB	= 1158,
    DuplexIClassC	= 1159,
    DuplexIClassD	= 1160,
    DuplexIClassE	= 1161,
    DuplexIClassF	= 1162,
    EH_RETURN_JMPR	= 1163,
    F2_conv_d2df	= 1164,
    F2_conv_d2sf	= 1165,
    F2_conv_df2d	= 1166,
    F2_conv_df2d_chop	= 1167,
    F2_conv_df2sf	= 1168,
    F2_conv_df2ud	= 1169,
    F2_conv_df2ud_chop	= 1170,
    F2_conv_df2uw	= 1171,
    F2_conv_df2uw_chop	= 1172,
    F2_conv_df2w	= 1173,
    F2_conv_df2w_chop	= 1174,
    F2_conv_sf2d	= 1175,
    F2_conv_sf2d_chop	= 1176,
    F2_conv_sf2df	= 1177,
    F2_conv_sf2ud	= 1178,
    F2_conv_sf2ud_chop	= 1179,
    F2_conv_sf2uw	= 1180,
    F2_conv_sf2uw_chop	= 1181,
    F2_conv_sf2w	= 1182,
    F2_conv_sf2w_chop	= 1183,
    F2_conv_ud2df	= 1184,
    F2_conv_ud2sf	= 1185,
    F2_conv_uw2df	= 1186,
    F2_conv_uw2sf	= 1187,
    F2_conv_w2df	= 1188,
    F2_conv_w2sf	= 1189,
    F2_dfadd	= 1190,
    F2_dfclass	= 1191,
    F2_dfcmpeq	= 1192,
    F2_dfcmpge	= 1193,
    F2_dfcmpgt	= 1194,
    F2_dfcmpuo	= 1195,
    F2_dfimm_n	= 1196,
    F2_dfimm_p	= 1197,
    F2_dfmax	= 1198,
    F2_dfmin	= 1199,
    F2_dfmpyfix	= 1200,
    F2_dfmpyhh	= 1201,
    F2_dfmpylh	= 1202,
    F2_dfmpyll	= 1203,
    F2_dfsub	= 1204,
    F2_sfadd	= 1205,
    F2_sfclass	= 1206,
    F2_sfcmpeq	= 1207,
    F2_sfcmpge	= 1208,
    F2_sfcmpgt	= 1209,
    F2_sfcmpuo	= 1210,
    F2_sffixupd	= 1211,
    F2_sffixupn	= 1212,
    F2_sffixupr	= 1213,
    F2_sffma	= 1214,
    F2_sffma_lib	= 1215,
    F2_sffma_sc	= 1216,
    F2_sffms	= 1217,
    F2_sffms_lib	= 1218,
    F2_sfimm_n	= 1219,
    F2_sfimm_p	= 1220,
    F2_sfinvsqrta	= 1221,
    F2_sfmax	= 1222,
    F2_sfmin	= 1223,
    F2_sfmpy	= 1224,
    F2_sfrecipa	= 1225,
    F2_sfsub	= 1226,
    G4_tfrgcpp	= 1227,
    G4_tfrgcrr	= 1228,
    G4_tfrgpcp	= 1229,
    G4_tfrgrcr	= 1230,
    HI	= 1231,
    J2_call	= 1232,
    J2_callf	= 1233,
    J2_callr	= 1234,
    J2_callrf	= 1235,
    J2_callrt	= 1236,
    J2_callt	= 1237,
    J2_jump	= 1238,
    J2_jumpf	= 1239,
    J2_jumpfnew	= 1240,
    J2_jumpfnewpt	= 1241,
    J2_jumpfpt	= 1242,
    J2_jumpr	= 1243,
    J2_jumprf	= 1244,
    J2_jumprfnew	= 1245,
    J2_jumprfnewpt	= 1246,
    J2_jumprfpt	= 1247,
    J2_jumprgtez	= 1248,
    J2_jumprgtezpt	= 1249,
    J2_jumprltez	= 1250,
    J2_jumprltezpt	= 1251,
    J2_jumprnz	= 1252,
    J2_jumprnzpt	= 1253,
    J2_jumprt	= 1254,
    J2_jumprtnew	= 1255,
    J2_jumprtnewpt	= 1256,
    J2_jumprtpt	= 1257,
    J2_jumprz	= 1258,
    J2_jumprzpt	= 1259,
    J2_jumpt	= 1260,
    J2_jumptnew	= 1261,
    J2_jumptnewpt	= 1262,
    J2_jumptpt	= 1263,
    J2_loop0i	= 1264,
    J2_loop0iext	= 1265,
    J2_loop0r	= 1266,
    J2_loop0rext	= 1267,
    J2_loop1i	= 1268,
    J2_loop1iext	= 1269,
    J2_loop1r	= 1270,
    J2_loop1rext	= 1271,
    J2_pause	= 1272,
    J2_ploop1si	= 1273,
    J2_ploop1sr	= 1274,
    J2_ploop2si	= 1275,
    J2_ploop2sr	= 1276,
    J2_ploop3si	= 1277,
    J2_ploop3sr	= 1278,
    J2_trap0	= 1279,
    J2_trap1	= 1280,
    J4_cmpeq_f_jumpnv_nt	= 1281,
    J4_cmpeq_f_jumpnv_t	= 1282,
    J4_cmpeq_fp0_jump_nt	= 1283,
    J4_cmpeq_fp0_jump_t	= 1284,
    J4_cmpeq_fp1_jump_nt	= 1285,
    J4_cmpeq_fp1_jump_t	= 1286,
    J4_cmpeq_t_jumpnv_nt	= 1287,
    J4_cmpeq_t_jumpnv_t	= 1288,
    J4_cmpeq_tp0_jump_nt	= 1289,
    J4_cmpeq_tp0_jump_t	= 1290,
    J4_cmpeq_tp1_jump_nt	= 1291,
    J4_cmpeq_tp1_jump_t	= 1292,
    J4_cmpeqi_f_jumpnv_nt	= 1293,
    J4_cmpeqi_f_jumpnv_t	= 1294,
    J4_cmpeqi_fp0_jump_nt	= 1295,
    J4_cmpeqi_fp0_jump_t	= 1296,
    J4_cmpeqi_fp1_jump_nt	= 1297,
    J4_cmpeqi_fp1_jump_t	= 1298,
    J4_cmpeqi_t_jumpnv_nt	= 1299,
    J4_cmpeqi_t_jumpnv_t	= 1300,
    J4_cmpeqi_tp0_jump_nt	= 1301,
    J4_cmpeqi_tp0_jump_t	= 1302,
    J4_cmpeqi_tp1_jump_nt	= 1303,
    J4_cmpeqi_tp1_jump_t	= 1304,
    J4_cmpeqn1_f_jumpnv_nt	= 1305,
    J4_cmpeqn1_f_jumpnv_t	= 1306,
    J4_cmpeqn1_fp0_jump_nt	= 1307,
    J4_cmpeqn1_fp0_jump_t	= 1308,
    J4_cmpeqn1_fp1_jump_nt	= 1309,
    J4_cmpeqn1_fp1_jump_t	= 1310,
    J4_cmpeqn1_t_jumpnv_nt	= 1311,
    J4_cmpeqn1_t_jumpnv_t	= 1312,
    J4_cmpeqn1_tp0_jump_nt	= 1313,
    J4_cmpeqn1_tp0_jump_t	= 1314,
    J4_cmpeqn1_tp1_jump_nt	= 1315,
    J4_cmpeqn1_tp1_jump_t	= 1316,
    J4_cmpgt_f_jumpnv_nt	= 1317,
    J4_cmpgt_f_jumpnv_t	= 1318,
    J4_cmpgt_fp0_jump_nt	= 1319,
    J4_cmpgt_fp0_jump_t	= 1320,
    J4_cmpgt_fp1_jump_nt	= 1321,
    J4_cmpgt_fp1_jump_t	= 1322,
    J4_cmpgt_t_jumpnv_nt	= 1323,
    J4_cmpgt_t_jumpnv_t	= 1324,
    J4_cmpgt_tp0_jump_nt	= 1325,
    J4_cmpgt_tp0_jump_t	= 1326,
    J4_cmpgt_tp1_jump_nt	= 1327,
    J4_cmpgt_tp1_jump_t	= 1328,
    J4_cmpgti_f_jumpnv_nt	= 1329,
    J4_cmpgti_f_jumpnv_t	= 1330,
    J4_cmpgti_fp0_jump_nt	= 1331,
    J4_cmpgti_fp0_jump_t	= 1332,
    J4_cmpgti_fp1_jump_nt	= 1333,
    J4_cmpgti_fp1_jump_t	= 1334,
    J4_cmpgti_t_jumpnv_nt	= 1335,
    J4_cmpgti_t_jumpnv_t	= 1336,
    J4_cmpgti_tp0_jump_nt	= 1337,
    J4_cmpgti_tp0_jump_t	= 1338,
    J4_cmpgti_tp1_jump_nt	= 1339,
    J4_cmpgti_tp1_jump_t	= 1340,
    J4_cmpgtn1_f_jumpnv_nt	= 1341,
    J4_cmpgtn1_f_jumpnv_t	= 1342,
    J4_cmpgtn1_fp0_jump_nt	= 1343,
    J4_cmpgtn1_fp0_jump_t	= 1344,
    J4_cmpgtn1_fp1_jump_nt	= 1345,
    J4_cmpgtn1_fp1_jump_t	= 1346,
    J4_cmpgtn1_t_jumpnv_nt	= 1347,
    J4_cmpgtn1_t_jumpnv_t	= 1348,
    J4_cmpgtn1_tp0_jump_nt	= 1349,
    J4_cmpgtn1_tp0_jump_t	= 1350,
    J4_cmpgtn1_tp1_jump_nt	= 1351,
    J4_cmpgtn1_tp1_jump_t	= 1352,
    J4_cmpgtu_f_jumpnv_nt	= 1353,
    J4_cmpgtu_f_jumpnv_t	= 1354,
    J4_cmpgtu_fp0_jump_nt	= 1355,
    J4_cmpgtu_fp0_jump_t	= 1356,
    J4_cmpgtu_fp1_jump_nt	= 1357,
    J4_cmpgtu_fp1_jump_t	= 1358,
    J4_cmpgtu_t_jumpnv_nt	= 1359,
    J4_cmpgtu_t_jumpnv_t	= 1360,
    J4_cmpgtu_tp0_jump_nt	= 1361,
    J4_cmpgtu_tp0_jump_t	= 1362,
    J4_cmpgtu_tp1_jump_nt	= 1363,
    J4_cmpgtu_tp1_jump_t	= 1364,
    J4_cmpgtui_f_jumpnv_nt	= 1365,
    J4_cmpgtui_f_jumpnv_t	= 1366,
    J4_cmpgtui_fp0_jump_nt	= 1367,
    J4_cmpgtui_fp0_jump_t	= 1368,
    J4_cmpgtui_fp1_jump_nt	= 1369,
    J4_cmpgtui_fp1_jump_t	= 1370,
    J4_cmpgtui_t_jumpnv_nt	= 1371,
    J4_cmpgtui_t_jumpnv_t	= 1372,
    J4_cmpgtui_tp0_jump_nt	= 1373,
    J4_cmpgtui_tp0_jump_t	= 1374,
    J4_cmpgtui_tp1_jump_nt	= 1375,
    J4_cmpgtui_tp1_jump_t	= 1376,
    J4_cmplt_f_jumpnv_nt	= 1377,
    J4_cmplt_f_jumpnv_t	= 1378,
    J4_cmplt_t_jumpnv_nt	= 1379,
    J4_cmplt_t_jumpnv_t	= 1380,
    J4_cmpltu_f_jumpnv_nt	= 1381,
    J4_cmpltu_f_jumpnv_t	= 1382,
    J4_cmpltu_t_jumpnv_nt	= 1383,
    J4_cmpltu_t_jumpnv_t	= 1384,
    J4_hintjumpr	= 1385,
    J4_jumpseti	= 1386,
    J4_jumpsetr	= 1387,
    J4_tstbit0_f_jumpnv_nt	= 1388,
    J4_tstbit0_f_jumpnv_t	= 1389,
    J4_tstbit0_fp0_jump_nt	= 1390,
    J4_tstbit0_fp0_jump_t	= 1391,
    J4_tstbit0_fp1_jump_nt	= 1392,
    J4_tstbit0_fp1_jump_t	= 1393,
    J4_tstbit0_t_jumpnv_nt	= 1394,
    J4_tstbit0_t_jumpnv_t	= 1395,
    J4_tstbit0_tp0_jump_nt	= 1396,
    J4_tstbit0_tp0_jump_t	= 1397,
    J4_tstbit0_tp1_jump_nt	= 1398,
    J4_tstbit0_tp1_jump_t	= 1399,
    L2_deallocframe	= 1400,
    L2_loadalignb_io	= 1401,
    L2_loadalignb_pbr	= 1402,
    L2_loadalignb_pci	= 1403,
    L2_loadalignb_pcr	= 1404,
    L2_loadalignb_pi	= 1405,
    L2_loadalignb_pr	= 1406,
    L2_loadalignh_io	= 1407,
    L2_loadalignh_pbr	= 1408,
    L2_loadalignh_pci	= 1409,
    L2_loadalignh_pcr	= 1410,
    L2_loadalignh_pi	= 1411,
    L2_loadalignh_pr	= 1412,
    L2_loadbsw2_io	= 1413,
    L2_loadbsw2_pbr	= 1414,
    L2_loadbsw2_pci	= 1415,
    L2_loadbsw2_pcr	= 1416,
    L2_loadbsw2_pi	= 1417,
    L2_loadbsw2_pr	= 1418,
    L2_loadbsw4_io	= 1419,
    L2_loadbsw4_pbr	= 1420,
    L2_loadbsw4_pci	= 1421,
    L2_loadbsw4_pcr	= 1422,
    L2_loadbsw4_pi	= 1423,
    L2_loadbsw4_pr	= 1424,
    L2_loadbzw2_io	= 1425,
    L2_loadbzw2_pbr	= 1426,
    L2_loadbzw2_pci	= 1427,
    L2_loadbzw2_pcr	= 1428,
    L2_loadbzw2_pi	= 1429,
    L2_loadbzw2_pr	= 1430,
    L2_loadbzw4_io	= 1431,
    L2_loadbzw4_pbr	= 1432,
    L2_loadbzw4_pci	= 1433,
    L2_loadbzw4_pcr	= 1434,
    L2_loadbzw4_pi	= 1435,
    L2_loadbzw4_pr	= 1436,
    L2_loadrb_io	= 1437,
    L2_loadrb_pbr	= 1438,
    L2_loadrb_pci	= 1439,
    L2_loadrb_pcr	= 1440,
    L2_loadrb_pi	= 1441,
    L2_loadrb_pr	= 1442,
    L2_loadrbgp	= 1443,
    L2_loadrd_io	= 1444,
    L2_loadrd_pbr	= 1445,
    L2_loadrd_pci	= 1446,
    L2_loadrd_pcr	= 1447,
    L2_loadrd_pi	= 1448,
    L2_loadrd_pr	= 1449,
    L2_loadrdgp	= 1450,
    L2_loadrh_io	= 1451,
    L2_loadrh_pbr	= 1452,
    L2_loadrh_pci	= 1453,
    L2_loadrh_pcr	= 1454,
    L2_loadrh_pi	= 1455,
    L2_loadrh_pr	= 1456,
    L2_loadrhgp	= 1457,
    L2_loadri_io	= 1458,
    L2_loadri_pbr	= 1459,
    L2_loadri_pci	= 1460,
    L2_loadri_pcr	= 1461,
    L2_loadri_pi	= 1462,
    L2_loadri_pr	= 1463,
    L2_loadrigp	= 1464,
    L2_loadrub_io	= 1465,
    L2_loadrub_pbr	= 1466,
    L2_loadrub_pci	= 1467,
    L2_loadrub_pcr	= 1468,
    L2_loadrub_pi	= 1469,
    L2_loadrub_pr	= 1470,
    L2_loadrubgp	= 1471,
    L2_loadruh_io	= 1472,
    L2_loadruh_pbr	= 1473,
    L2_loadruh_pci	= 1474,
    L2_loadruh_pcr	= 1475,
    L2_loadruh_pi	= 1476,
    L2_loadruh_pr	= 1477,
    L2_loadruhgp	= 1478,
    L2_loadw_locked	= 1479,
    L2_ploadrbf_io	= 1480,
    L2_ploadrbf_pi	= 1481,
    L2_ploadrbfnew_io	= 1482,
    L2_ploadrbfnew_pi	= 1483,
    L2_ploadrbt_io	= 1484,
    L2_ploadrbt_pi	= 1485,
    L2_ploadrbtnew_io	= 1486,
    L2_ploadrbtnew_pi	= 1487,
    L2_ploadrdf_io	= 1488,
    L2_ploadrdf_pi	= 1489,
    L2_ploadrdfnew_io	= 1490,
    L2_ploadrdfnew_pi	= 1491,
    L2_ploadrdt_io	= 1492,
    L2_ploadrdt_pi	= 1493,
    L2_ploadrdtnew_io	= 1494,
    L2_ploadrdtnew_pi	= 1495,
    L2_ploadrhf_io	= 1496,
    L2_ploadrhf_pi	= 1497,
    L2_ploadrhfnew_io	= 1498,
    L2_ploadrhfnew_pi	= 1499,
    L2_ploadrht_io	= 1500,
    L2_ploadrht_pi	= 1501,
    L2_ploadrhtnew_io	= 1502,
    L2_ploadrhtnew_pi	= 1503,
    L2_ploadrif_io	= 1504,
    L2_ploadrif_pi	= 1505,
    L2_ploadrifnew_io	= 1506,
    L2_ploadrifnew_pi	= 1507,
    L2_ploadrit_io	= 1508,
    L2_ploadrit_pi	= 1509,
    L2_ploadritnew_io	= 1510,
    L2_ploadritnew_pi	= 1511,
    L2_ploadrubf_io	= 1512,
    L2_ploadrubf_pi	= 1513,
    L2_ploadrubfnew_io	= 1514,
    L2_ploadrubfnew_pi	= 1515,
    L2_ploadrubt_io	= 1516,
    L2_ploadrubt_pi	= 1517,
    L2_ploadrubtnew_io	= 1518,
    L2_ploadrubtnew_pi	= 1519,
    L2_ploadruhf_io	= 1520,
    L2_ploadruhf_pi	= 1521,
    L2_ploadruhfnew_io	= 1522,
    L2_ploadruhfnew_pi	= 1523,
    L2_ploadruht_io	= 1524,
    L2_ploadruht_pi	= 1525,
    L2_ploadruhtnew_io	= 1526,
    L2_ploadruhtnew_pi	= 1527,
    L4_add_memopb_io	= 1528,
    L4_add_memoph_io	= 1529,
    L4_add_memopw_io	= 1530,
    L4_and_memopb_io	= 1531,
    L4_and_memoph_io	= 1532,
    L4_and_memopw_io	= 1533,
    L4_iadd_memopb_io	= 1534,
    L4_iadd_memoph_io	= 1535,
    L4_iadd_memopw_io	= 1536,
    L4_iand_memopb_io	= 1537,
    L4_iand_memoph_io	= 1538,
    L4_iand_memopw_io	= 1539,
    L4_ior_memopb_io	= 1540,
    L4_ior_memoph_io	= 1541,
    L4_ior_memopw_io	= 1542,
    L4_isub_memopb_io	= 1543,
    L4_isub_memoph_io	= 1544,
    L4_isub_memopw_io	= 1545,
    L4_loadalignb_ap	= 1546,
    L4_loadalignb_ur	= 1547,
    L4_loadalignh_ap	= 1548,
    L4_loadalignh_ur	= 1549,
    L4_loadbsw2_ap	= 1550,
    L4_loadbsw2_ur	= 1551,
    L4_loadbsw4_ap	= 1552,
    L4_loadbsw4_ur	= 1553,
    L4_loadbzw2_ap	= 1554,
    L4_loadbzw2_ur	= 1555,
    L4_loadbzw4_ap	= 1556,
    L4_loadbzw4_ur	= 1557,
    L4_loadd_locked	= 1558,
    L4_loadrb_ap	= 1559,
    L4_loadrb_rr	= 1560,
    L4_loadrb_ur	= 1561,
    L4_loadrd_ap	= 1562,
    L4_loadrd_rr	= 1563,
    L4_loadrd_ur	= 1564,
    L4_loadrh_ap	= 1565,
    L4_loadrh_rr	= 1566,
    L4_loadrh_ur	= 1567,
    L4_loadri_ap	= 1568,
    L4_loadri_rr	= 1569,
    L4_loadri_ur	= 1570,
    L4_loadrub_ap	= 1571,
    L4_loadrub_rr	= 1572,
    L4_loadrub_ur	= 1573,
    L4_loadruh_ap	= 1574,
    L4_loadruh_rr	= 1575,
    L4_loadruh_ur	= 1576,
    L4_or_memopb_io	= 1577,
    L4_or_memoph_io	= 1578,
    L4_or_memopw_io	= 1579,
    L4_ploadrbf_abs	= 1580,
    L4_ploadrbf_rr	= 1581,
    L4_ploadrbfnew_abs	= 1582,
    L4_ploadrbfnew_rr	= 1583,
    L4_ploadrbt_abs	= 1584,
    L4_ploadrbt_rr	= 1585,
    L4_ploadrbtnew_abs	= 1586,
    L4_ploadrbtnew_rr	= 1587,
    L4_ploadrdf_abs	= 1588,
    L4_ploadrdf_rr	= 1589,
    L4_ploadrdfnew_abs	= 1590,
    L4_ploadrdfnew_rr	= 1591,
    L4_ploadrdt_abs	= 1592,
    L4_ploadrdt_rr	= 1593,
    L4_ploadrdtnew_abs	= 1594,
    L4_ploadrdtnew_rr	= 1595,
    L4_ploadrhf_abs	= 1596,
    L4_ploadrhf_rr	= 1597,
    L4_ploadrhfnew_abs	= 1598,
    L4_ploadrhfnew_rr	= 1599,
    L4_ploadrht_abs	= 1600,
    L4_ploadrht_rr	= 1601,
    L4_ploadrhtnew_abs	= 1602,
    L4_ploadrhtnew_rr	= 1603,
    L4_ploadrif_abs	= 1604,
    L4_ploadrif_rr	= 1605,
    L4_ploadrifnew_abs	= 1606,
    L4_ploadrifnew_rr	= 1607,
    L4_ploadrit_abs	= 1608,
    L4_ploadrit_rr	= 1609,
    L4_ploadritnew_abs	= 1610,
    L4_ploadritnew_rr	= 1611,
    L4_ploadrubf_abs	= 1612,
    L4_ploadrubf_rr	= 1613,
    L4_ploadrubfnew_abs	= 1614,
    L4_ploadrubfnew_rr	= 1615,
    L4_ploadrubt_abs	= 1616,
    L4_ploadrubt_rr	= 1617,
    L4_ploadrubtnew_abs	= 1618,
    L4_ploadrubtnew_rr	= 1619,
    L4_ploadruhf_abs	= 1620,
    L4_ploadruhf_rr	= 1621,
    L4_ploadruhfnew_abs	= 1622,
    L4_ploadruhfnew_rr	= 1623,
    L4_ploadruht_abs	= 1624,
    L4_ploadruht_rr	= 1625,
    L4_ploadruhtnew_abs	= 1626,
    L4_ploadruhtnew_rr	= 1627,
    L4_return	= 1628,
    L4_return_f	= 1629,
    L4_return_fnew_pnt	= 1630,
    L4_return_fnew_pt	= 1631,
    L4_return_t	= 1632,
    L4_return_tnew_pnt	= 1633,
    L4_return_tnew_pt	= 1634,
    L4_sub_memopb_io	= 1635,
    L4_sub_memoph_io	= 1636,
    L4_sub_memopw_io	= 1637,
    L6_memcpy	= 1638,
    LO	= 1639,
    M2_acci	= 1640,
    M2_accii	= 1641,
    M2_cmaci_s0	= 1642,
    M2_cmacr_s0	= 1643,
    M2_cmacs_s0	= 1644,
    M2_cmacs_s1	= 1645,
    M2_cmacsc_s0	= 1646,
    M2_cmacsc_s1	= 1647,
    M2_cmpyi_s0	= 1648,
    M2_cmpyr_s0	= 1649,
    M2_cmpyrs_s0	= 1650,
    M2_cmpyrs_s1	= 1651,
    M2_cmpyrsc_s0	= 1652,
    M2_cmpyrsc_s1	= 1653,
    M2_cmpys_s0	= 1654,
    M2_cmpys_s1	= 1655,
    M2_cmpysc_s0	= 1656,
    M2_cmpysc_s1	= 1657,
    M2_cnacs_s0	= 1658,
    M2_cnacs_s1	= 1659,
    M2_cnacsc_s0	= 1660,
    M2_cnacsc_s1	= 1661,
    M2_dpmpyss_acc_s0	= 1662,
    M2_dpmpyss_nac_s0	= 1663,
    M2_dpmpyss_rnd_s0	= 1664,
    M2_dpmpyss_s0	= 1665,
    M2_dpmpyuu_acc_s0	= 1666,
    M2_dpmpyuu_nac_s0	= 1667,
    M2_dpmpyuu_s0	= 1668,
    M2_hmmpyh_rs1	= 1669,
    M2_hmmpyh_s1	= 1670,
    M2_hmmpyl_rs1	= 1671,
    M2_hmmpyl_s1	= 1672,
    M2_maci	= 1673,
    M2_macsin	= 1674,
    M2_macsip	= 1675,
    M2_mmachs_rs0	= 1676,
    M2_mmachs_rs1	= 1677,
    M2_mmachs_s0	= 1678,
    M2_mmachs_s1	= 1679,
    M2_mmacls_rs0	= 1680,
    M2_mmacls_rs1	= 1681,
    M2_mmacls_s0	= 1682,
    M2_mmacls_s1	= 1683,
    M2_mmacuhs_rs0	= 1684,
    M2_mmacuhs_rs1	= 1685,
    M2_mmacuhs_s0	= 1686,
    M2_mmacuhs_s1	= 1687,
    M2_mmaculs_rs0	= 1688,
    M2_mmaculs_rs1	= 1689,
    M2_mmaculs_s0	= 1690,
    M2_mmaculs_s1	= 1691,
    M2_mmpyh_rs0	= 1692,
    M2_mmpyh_rs1	= 1693,
    M2_mmpyh_s0	= 1694,
    M2_mmpyh_s1	= 1695,
    M2_mmpyl_rs0	= 1696,
    M2_mmpyl_rs1	= 1697,
    M2_mmpyl_s0	= 1698,
    M2_mmpyl_s1	= 1699,
    M2_mmpyuh_rs0	= 1700,
    M2_mmpyuh_rs1	= 1701,
    M2_mmpyuh_s0	= 1702,
    M2_mmpyuh_s1	= 1703,
    M2_mmpyul_rs0	= 1704,
    M2_mmpyul_rs1	= 1705,
    M2_mmpyul_s0	= 1706,
    M2_mmpyul_s1	= 1707,
    M2_mnaci	= 1708,
    M2_mpy_acc_hh_s0	= 1709,
    M2_mpy_acc_hh_s1	= 1710,
    M2_mpy_acc_hl_s0	= 1711,
    M2_mpy_acc_hl_s1	= 1712,
    M2_mpy_acc_lh_s0	= 1713,
    M2_mpy_acc_lh_s1	= 1714,
    M2_mpy_acc_ll_s0	= 1715,
    M2_mpy_acc_ll_s1	= 1716,
    M2_mpy_acc_sat_hh_s0	= 1717,
    M2_mpy_acc_sat_hh_s1	= 1718,
    M2_mpy_acc_sat_hl_s0	= 1719,
    M2_mpy_acc_sat_hl_s1	= 1720,
    M2_mpy_acc_sat_lh_s0	= 1721,
    M2_mpy_acc_sat_lh_s1	= 1722,
    M2_mpy_acc_sat_ll_s0	= 1723,
    M2_mpy_acc_sat_ll_s1	= 1724,
    M2_mpy_hh_s0	= 1725,
    M2_mpy_hh_s1	= 1726,
    M2_mpy_hl_s0	= 1727,
    M2_mpy_hl_s1	= 1728,
    M2_mpy_lh_s0	= 1729,
    M2_mpy_lh_s1	= 1730,
    M2_mpy_ll_s0	= 1731,
    M2_mpy_ll_s1	= 1732,
    M2_mpy_nac_hh_s0	= 1733,
    M2_mpy_nac_hh_s1	= 1734,
    M2_mpy_nac_hl_s0	= 1735,
    M2_mpy_nac_hl_s1	= 1736,
    M2_mpy_nac_lh_s0	= 1737,
    M2_mpy_nac_lh_s1	= 1738,
    M2_mpy_nac_ll_s0	= 1739,
    M2_mpy_nac_ll_s1	= 1740,
    M2_mpy_nac_sat_hh_s0	= 1741,
    M2_mpy_nac_sat_hh_s1	= 1742,
    M2_mpy_nac_sat_hl_s0	= 1743,
    M2_mpy_nac_sat_hl_s1	= 1744,
    M2_mpy_nac_sat_lh_s0	= 1745,
    M2_mpy_nac_sat_lh_s1	= 1746,
    M2_mpy_nac_sat_ll_s0	= 1747,
    M2_mpy_nac_sat_ll_s1	= 1748,
    M2_mpy_rnd_hh_s0	= 1749,
    M2_mpy_rnd_hh_s1	= 1750,
    M2_mpy_rnd_hl_s0	= 1751,
    M2_mpy_rnd_hl_s1	= 1752,
    M2_mpy_rnd_lh_s0	= 1753,
    M2_mpy_rnd_lh_s1	= 1754,
    M2_mpy_rnd_ll_s0	= 1755,
    M2_mpy_rnd_ll_s1	= 1756,
    M2_mpy_sat_hh_s0	= 1757,
    M2_mpy_sat_hh_s1	= 1758,
    M2_mpy_sat_hl_s0	= 1759,
    M2_mpy_sat_hl_s1	= 1760,
    M2_mpy_sat_lh_s0	= 1761,
    M2_mpy_sat_lh_s1	= 1762,
    M2_mpy_sat_ll_s0	= 1763,
    M2_mpy_sat_ll_s1	= 1764,
    M2_mpy_sat_rnd_hh_s0	= 1765,
    M2_mpy_sat_rnd_hh_s1	= 1766,
    M2_mpy_sat_rnd_hl_s0	= 1767,
    M2_mpy_sat_rnd_hl_s1	= 1768,
    M2_mpy_sat_rnd_lh_s0	= 1769,
    M2_mpy_sat_rnd_lh_s1	= 1770,
    M2_mpy_sat_rnd_ll_s0	= 1771,
    M2_mpy_sat_rnd_ll_s1	= 1772,
    M2_mpy_up	= 1773,
    M2_mpy_up_s1	= 1774,
    M2_mpy_up_s1_sat	= 1775,
    M2_mpyd_acc_hh_s0	= 1776,
    M2_mpyd_acc_hh_s1	= 1777,
    M2_mpyd_acc_hl_s0	= 1778,
    M2_mpyd_acc_hl_s1	= 1779,
    M2_mpyd_acc_lh_s0	= 1780,
    M2_mpyd_acc_lh_s1	= 1781,
    M2_mpyd_acc_ll_s0	= 1782,
    M2_mpyd_acc_ll_s1	= 1783,
    M2_mpyd_hh_s0	= 1784,
    M2_mpyd_hh_s1	= 1785,
    M2_mpyd_hl_s0	= 1786,
    M2_mpyd_hl_s1	= 1787,
    M2_mpyd_lh_s0	= 1788,
    M2_mpyd_lh_s1	= 1789,
    M2_mpyd_ll_s0	= 1790,
    M2_mpyd_ll_s1	= 1791,
    M2_mpyd_nac_hh_s0	= 1792,
    M2_mpyd_nac_hh_s1	= 1793,
    M2_mpyd_nac_hl_s0	= 1794,
    M2_mpyd_nac_hl_s1	= 1795,
    M2_mpyd_nac_lh_s0	= 1796,
    M2_mpyd_nac_lh_s1	= 1797,
    M2_mpyd_nac_ll_s0	= 1798,
    M2_mpyd_nac_ll_s1	= 1799,
    M2_mpyd_rnd_hh_s0	= 1800,
    M2_mpyd_rnd_hh_s1	= 1801,
    M2_mpyd_rnd_hl_s0	= 1802,
    M2_mpyd_rnd_hl_s1	= 1803,
    M2_mpyd_rnd_lh_s0	= 1804,
    M2_mpyd_rnd_lh_s1	= 1805,
    M2_mpyd_rnd_ll_s0	= 1806,
    M2_mpyd_rnd_ll_s1	= 1807,
    M2_mpyi	= 1808,
    M2_mpysin	= 1809,
    M2_mpysip	= 1810,
    M2_mpysu_up	= 1811,
    M2_mpyu_acc_hh_s0	= 1812,
    M2_mpyu_acc_hh_s1	= 1813,
    M2_mpyu_acc_hl_s0	= 1814,
    M2_mpyu_acc_hl_s1	= 1815,
    M2_mpyu_acc_lh_s0	= 1816,
    M2_mpyu_acc_lh_s1	= 1817,
    M2_mpyu_acc_ll_s0	= 1818,
    M2_mpyu_acc_ll_s1	= 1819,
    M2_mpyu_hh_s0	= 1820,
    M2_mpyu_hh_s1	= 1821,
    M2_mpyu_hl_s0	= 1822,
    M2_mpyu_hl_s1	= 1823,
    M2_mpyu_lh_s0	= 1824,
    M2_mpyu_lh_s1	= 1825,
    M2_mpyu_ll_s0	= 1826,
    M2_mpyu_ll_s1	= 1827,
    M2_mpyu_nac_hh_s0	= 1828,
    M2_mpyu_nac_hh_s1	= 1829,
    M2_mpyu_nac_hl_s0	= 1830,
    M2_mpyu_nac_hl_s1	= 1831,
    M2_mpyu_nac_lh_s0	= 1832,
    M2_mpyu_nac_lh_s1	= 1833,
    M2_mpyu_nac_ll_s0	= 1834,
    M2_mpyu_nac_ll_s1	= 1835,
    M2_mpyu_up	= 1836,
    M2_mpyud_acc_hh_s0	= 1837,
    M2_mpyud_acc_hh_s1	= 1838,
    M2_mpyud_acc_hl_s0	= 1839,
    M2_mpyud_acc_hl_s1	= 1840,
    M2_mpyud_acc_lh_s0	= 1841,
    M2_mpyud_acc_lh_s1	= 1842,
    M2_mpyud_acc_ll_s0	= 1843,
    M2_mpyud_acc_ll_s1	= 1844,
    M2_mpyud_hh_s0	= 1845,
    M2_mpyud_hh_s1	= 1846,
    M2_mpyud_hl_s0	= 1847,
    M2_mpyud_hl_s1	= 1848,
    M2_mpyud_lh_s0	= 1849,
    M2_mpyud_lh_s1	= 1850,
    M2_mpyud_ll_s0	= 1851,
    M2_mpyud_ll_s1	= 1852,
    M2_mpyud_nac_hh_s0	= 1853,
    M2_mpyud_nac_hh_s1	= 1854,
    M2_mpyud_nac_hl_s0	= 1855,
    M2_mpyud_nac_hl_s1	= 1856,
    M2_mpyud_nac_lh_s0	= 1857,
    M2_mpyud_nac_lh_s1	= 1858,
    M2_mpyud_nac_ll_s0	= 1859,
    M2_mpyud_nac_ll_s1	= 1860,
    M2_nacci	= 1861,
    M2_naccii	= 1862,
    M2_subacc	= 1863,
    M2_vabsdiffh	= 1864,
    M2_vabsdiffw	= 1865,
    M2_vcmac_s0_sat_i	= 1866,
    M2_vcmac_s0_sat_r	= 1867,
    M2_vcmpy_s0_sat_i	= 1868,
    M2_vcmpy_s0_sat_r	= 1869,
    M2_vcmpy_s1_sat_i	= 1870,
    M2_vcmpy_s1_sat_r	= 1871,
    M2_vdmacs_s0	= 1872,
    M2_vdmacs_s1	= 1873,
    M2_vdmpyrs_s0	= 1874,
    M2_vdmpyrs_s1	= 1875,
    M2_vdmpys_s0	= 1876,
    M2_vdmpys_s1	= 1877,
    M2_vmac2	= 1878,
    M2_vmac2es	= 1879,
    M2_vmac2es_s0	= 1880,
    M2_vmac2es_s1	= 1881,
    M2_vmac2s_s0	= 1882,
    M2_vmac2s_s1	= 1883,
    M2_vmac2su_s0	= 1884,
    M2_vmac2su_s1	= 1885,
    M2_vmpy2es_s0	= 1886,
    M2_vmpy2es_s1	= 1887,
    M2_vmpy2s_s0	= 1888,
    M2_vmpy2s_s0pack	= 1889,
    M2_vmpy2s_s1	= 1890,
    M2_vmpy2s_s1pack	= 1891,
    M2_vmpy2su_s0	= 1892,
    M2_vmpy2su_s1	= 1893,
    M2_vraddh	= 1894,
    M2_vradduh	= 1895,
    M2_vrcmaci_s0	= 1896,
    M2_vrcmaci_s0c	= 1897,
    M2_vrcmacr_s0	= 1898,
    M2_vrcmacr_s0c	= 1899,
    M2_vrcmpyi_s0	= 1900,
    M2_vrcmpyi_s0c	= 1901,
    M2_vrcmpyr_s0	= 1902,
    M2_vrcmpyr_s0c	= 1903,
    M2_vrcmpys_acc_s1_h	= 1904,
    M2_vrcmpys_acc_s1_l	= 1905,
    M2_vrcmpys_s1_h	= 1906,
    M2_vrcmpys_s1_l	= 1907,
    M2_vrcmpys_s1rp_h	= 1908,
    M2_vrcmpys_s1rp_l	= 1909,
    M2_vrmac_s0	= 1910,
    M2_vrmpy_s0	= 1911,
    M2_xor_xacc	= 1912,
    M4_and_and	= 1913,
    M4_and_andn	= 1914,
    M4_and_or	= 1915,
    M4_and_xor	= 1916,
    M4_cmpyi_wh	= 1917,
    M4_cmpyi_whc	= 1918,
    M4_cmpyr_wh	= 1919,
    M4_cmpyr_whc	= 1920,
    M4_mac_up_s1_sat	= 1921,
    M4_mpyri_addi	= 1922,
    M4_mpyri_addr	= 1923,
    M4_mpyri_addr_u2	= 1924,
    M4_mpyrr_addi	= 1925,
    M4_mpyrr_addr	= 1926,
    M4_nac_up_s1_sat	= 1927,
    M4_or_and	= 1928,
    M4_or_andn	= 1929,
    M4_or_or	= 1930,
    M4_or_xor	= 1931,
    M4_pmpyw	= 1932,
    M4_pmpyw_acc	= 1933,
    M4_vpmpyh	= 1934,
    M4_vpmpyh_acc	= 1935,
    M4_vrmpyeh_acc_s0	= 1936,
    M4_vrmpyeh_acc_s1	= 1937,
    M4_vrmpyeh_s0	= 1938,
    M4_vrmpyeh_s1	= 1939,
    M4_vrmpyoh_acc_s0	= 1940,
    M4_vrmpyoh_acc_s1	= 1941,
    M4_vrmpyoh_s0	= 1942,
    M4_vrmpyoh_s1	= 1943,
    M4_xor_and	= 1944,
    M4_xor_andn	= 1945,
    M4_xor_or	= 1946,
    M4_xor_xacc	= 1947,
    M5_vdmacbsu	= 1948,
    M5_vdmpybsu	= 1949,
    M5_vmacbsu	= 1950,
    M5_vmacbuu	= 1951,
    M5_vmpybsu	= 1952,
    M5_vmpybuu	= 1953,
    M5_vrmacbsu	= 1954,
    M5_vrmacbuu	= 1955,
    M5_vrmpybsu	= 1956,
    M5_vrmpybuu	= 1957,
    M6_vabsdiffb	= 1958,
    M6_vabsdiffub	= 1959,
    M7_dcmpyiw	= 1960,
    M7_dcmpyiw_acc	= 1961,
    M7_dcmpyiwc	= 1962,
    M7_dcmpyiwc_acc	= 1963,
    M7_dcmpyrw	= 1964,
    M7_dcmpyrw_acc	= 1965,
    M7_dcmpyrwc	= 1966,
    M7_dcmpyrwc_acc	= 1967,
    M7_wcmpyiw	= 1968,
    M7_wcmpyiw_rnd	= 1969,
    M7_wcmpyiwc	= 1970,
    M7_wcmpyiwc_rnd	= 1971,
    M7_wcmpyrw	= 1972,
    M7_wcmpyrw_rnd	= 1973,
    M7_wcmpyrwc	= 1974,
    M7_wcmpyrwc_rnd	= 1975,
    PS_call_stk	= 1976,
    PS_callr_nr	= 1977,
    PS_jmpret	= 1978,
    PS_jmpretf	= 1979,
    PS_jmpretfnew	= 1980,
    PS_jmpretfnewpt	= 1981,
    PS_jmprett	= 1982,
    PS_jmprettnew	= 1983,
    PS_jmprettnewpt	= 1984,
    PS_loadrbabs	= 1985,
    PS_loadrdabs	= 1986,
    PS_loadrhabs	= 1987,
    PS_loadriabs	= 1988,
    PS_loadrubabs	= 1989,
    PS_loadruhabs	= 1990,
    PS_storerbabs	= 1991,
    PS_storerbnewabs	= 1992,
    PS_storerdabs	= 1993,
    PS_storerfabs	= 1994,
    PS_storerhabs	= 1995,
    PS_storerhnewabs	= 1996,
    PS_storeriabs	= 1997,
    PS_storerinewabs	= 1998,
    PS_trap1	= 1999,
    RESTORE_DEALLOC_BEFORE_TAILCALL_V4	= 2000,
    RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT	= 2001,
    RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC	= 2002,
    RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC	= 2003,
    RESTORE_DEALLOC_RET_JMP_V4	= 2004,
    RESTORE_DEALLOC_RET_JMP_V4_EXT	= 2005,
    RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC	= 2006,
    RESTORE_DEALLOC_RET_JMP_V4_PIC	= 2007,
    S2_addasl_rrri	= 2008,
    S2_allocframe	= 2009,
    S2_asl_i_p	= 2010,
    S2_asl_i_p_acc	= 2011,
    S2_asl_i_p_and	= 2012,
    S2_asl_i_p_nac	= 2013,
    S2_asl_i_p_or	= 2014,
    S2_asl_i_p_xacc	= 2015,
    S2_asl_i_r	= 2016,
    S2_asl_i_r_acc	= 2017,
    S2_asl_i_r_and	= 2018,
    S2_asl_i_r_nac	= 2019,
    S2_asl_i_r_or	= 2020,
    S2_asl_i_r_sat	= 2021,
    S2_asl_i_r_xacc	= 2022,
    S2_asl_i_vh	= 2023,
    S2_asl_i_vw	= 2024,
    S2_asl_r_p	= 2025,
    S2_asl_r_p_acc	= 2026,
    S2_asl_r_p_and	= 2027,
    S2_asl_r_p_nac	= 2028,
    S2_asl_r_p_or	= 2029,
    S2_asl_r_p_xor	= 2030,
    S2_asl_r_r	= 2031,
    S2_asl_r_r_acc	= 2032,
    S2_asl_r_r_and	= 2033,
    S2_asl_r_r_nac	= 2034,
    S2_asl_r_r_or	= 2035,
    S2_asl_r_r_sat	= 2036,
    S2_asl_r_vh	= 2037,
    S2_asl_r_vw	= 2038,
    S2_asr_i_p	= 2039,
    S2_asr_i_p_acc	= 2040,
    S2_asr_i_p_and	= 2041,
    S2_asr_i_p_nac	= 2042,
    S2_asr_i_p_or	= 2043,
    S2_asr_i_p_rnd	= 2044,
    S2_asr_i_r	= 2045,
    S2_asr_i_r_acc	= 2046,
    S2_asr_i_r_and	= 2047,
    S2_asr_i_r_nac	= 2048,
    S2_asr_i_r_or	= 2049,
    S2_asr_i_r_rnd	= 2050,
    S2_asr_i_svw_trun	= 2051,
    S2_asr_i_vh	= 2052,
    S2_asr_i_vw	= 2053,
    S2_asr_r_p	= 2054,
    S2_asr_r_p_acc	= 2055,
    S2_asr_r_p_and	= 2056,
    S2_asr_r_p_nac	= 2057,
    S2_asr_r_p_or	= 2058,
    S2_asr_r_p_xor	= 2059,
    S2_asr_r_r	= 2060,
    S2_asr_r_r_acc	= 2061,
    S2_asr_r_r_and	= 2062,
    S2_asr_r_r_nac	= 2063,
    S2_asr_r_r_or	= 2064,
    S2_asr_r_r_sat	= 2065,
    S2_asr_r_svw_trun	= 2066,
    S2_asr_r_vh	= 2067,
    S2_asr_r_vw	= 2068,
    S2_brev	= 2069,
    S2_brevp	= 2070,
    S2_cabacdecbin	= 2071,
    S2_cl0	= 2072,
    S2_cl0p	= 2073,
    S2_cl1	= 2074,
    S2_cl1p	= 2075,
    S2_clb	= 2076,
    S2_clbnorm	= 2077,
    S2_clbp	= 2078,
    S2_clrbit_i	= 2079,
    S2_clrbit_r	= 2080,
    S2_ct0	= 2081,
    S2_ct0p	= 2082,
    S2_ct1	= 2083,
    S2_ct1p	= 2084,
    S2_deinterleave	= 2085,
    S2_extractu	= 2086,
    S2_extractu_rp	= 2087,
    S2_extractup	= 2088,
    S2_extractup_rp	= 2089,
    S2_insert	= 2090,
    S2_insert_rp	= 2091,
    S2_insertp	= 2092,
    S2_insertp_rp	= 2093,
    S2_interleave	= 2094,
    S2_lfsp	= 2095,
    S2_lsl_r_p	= 2096,
    S2_lsl_r_p_acc	= 2097,
    S2_lsl_r_p_and	= 2098,
    S2_lsl_r_p_nac	= 2099,
    S2_lsl_r_p_or	= 2100,
    S2_lsl_r_p_xor	= 2101,
    S2_lsl_r_r	= 2102,
    S2_lsl_r_r_acc	= 2103,
    S2_lsl_r_r_and	= 2104,
    S2_lsl_r_r_nac	= 2105,
    S2_lsl_r_r_or	= 2106,
    S2_lsl_r_vh	= 2107,
    S2_lsl_r_vw	= 2108,
    S2_lsr_i_p	= 2109,
    S2_lsr_i_p_acc	= 2110,
    S2_lsr_i_p_and	= 2111,
    S2_lsr_i_p_nac	= 2112,
    S2_lsr_i_p_or	= 2113,
    S2_lsr_i_p_xacc	= 2114,
    S2_lsr_i_r	= 2115,
    S2_lsr_i_r_acc	= 2116,
    S2_lsr_i_r_and	= 2117,
    S2_lsr_i_r_nac	= 2118,
    S2_lsr_i_r_or	= 2119,
    S2_lsr_i_r_xacc	= 2120,
    S2_lsr_i_vh	= 2121,
    S2_lsr_i_vw	= 2122,
    S2_lsr_r_p	= 2123,
    S2_lsr_r_p_acc	= 2124,
    S2_lsr_r_p_and	= 2125,
    S2_lsr_r_p_nac	= 2126,
    S2_lsr_r_p_or	= 2127,
    S2_lsr_r_p_xor	= 2128,
    S2_lsr_r_r	= 2129,
    S2_lsr_r_r_acc	= 2130,
    S2_lsr_r_r_and	= 2131,
    S2_lsr_r_r_nac	= 2132,
    S2_lsr_r_r_or	= 2133,
    S2_lsr_r_vh	= 2134,
    S2_lsr_r_vw	= 2135,
    S2_mask	= 2136,
    S2_packhl	= 2137,
    S2_parityp	= 2138,
    S2_pstorerbf_io	= 2139,
    S2_pstorerbf_pi	= 2140,
    S2_pstorerbfnew_pi	= 2141,
    S2_pstorerbnewf_io	= 2142,
    S2_pstorerbnewf_pi	= 2143,
    S2_pstorerbnewfnew_pi	= 2144,
    S2_pstorerbnewt_io	= 2145,
    S2_pstorerbnewt_pi	= 2146,
    S2_pstorerbnewtnew_pi	= 2147,
    S2_pstorerbt_io	= 2148,
    S2_pstorerbt_pi	= 2149,
    S2_pstorerbtnew_pi	= 2150,
    S2_pstorerdf_io	= 2151,
    S2_pstorerdf_pi	= 2152,
    S2_pstorerdfnew_pi	= 2153,
    S2_pstorerdt_io	= 2154,
    S2_pstorerdt_pi	= 2155,
    S2_pstorerdtnew_pi	= 2156,
    S2_pstorerff_io	= 2157,
    S2_pstorerff_pi	= 2158,
    S2_pstorerffnew_pi	= 2159,
    S2_pstorerft_io	= 2160,
    S2_pstorerft_pi	= 2161,
    S2_pstorerftnew_pi	= 2162,
    S2_pstorerhf_io	= 2163,
    S2_pstorerhf_pi	= 2164,
    S2_pstorerhfnew_pi	= 2165,
    S2_pstorerhnewf_io	= 2166,
    S2_pstorerhnewf_pi	= 2167,
    S2_pstorerhnewfnew_pi	= 2168,
    S2_pstorerhnewt_io	= 2169,
    S2_pstorerhnewt_pi	= 2170,
    S2_pstorerhnewtnew_pi	= 2171,
    S2_pstorerht_io	= 2172,
    S2_pstorerht_pi	= 2173,
    S2_pstorerhtnew_pi	= 2174,
    S2_pstorerif_io	= 2175,
    S2_pstorerif_pi	= 2176,
    S2_pstorerifnew_pi	= 2177,
    S2_pstorerinewf_io	= 2178,
    S2_pstorerinewf_pi	= 2179,
    S2_pstorerinewfnew_pi	= 2180,
    S2_pstorerinewt_io	= 2181,
    S2_pstorerinewt_pi	= 2182,
    S2_pstorerinewtnew_pi	= 2183,
    S2_pstorerit_io	= 2184,
    S2_pstorerit_pi	= 2185,
    S2_pstoreritnew_pi	= 2186,
    S2_setbit_i	= 2187,
    S2_setbit_r	= 2188,
    S2_shuffeb	= 2189,
    S2_shuffeh	= 2190,
    S2_shuffob	= 2191,
    S2_shuffoh	= 2192,
    S2_storerb_io	= 2193,
    S2_storerb_pbr	= 2194,
    S2_storerb_pci	= 2195,
    S2_storerb_pcr	= 2196,
    S2_storerb_pi	= 2197,
    S2_storerb_pr	= 2198,
    S2_storerbgp	= 2199,
    S2_storerbnew_io	= 2200,
    S2_storerbnew_pbr	= 2201,
    S2_storerbnew_pci	= 2202,
    S2_storerbnew_pcr	= 2203,
    S2_storerbnew_pi	= 2204,
    S2_storerbnew_pr	= 2205,
    S2_storerbnewgp	= 2206,
    S2_storerd_io	= 2207,
    S2_storerd_pbr	= 2208,
    S2_storerd_pci	= 2209,
    S2_storerd_pcr	= 2210,
    S2_storerd_pi	= 2211,
    S2_storerd_pr	= 2212,
    S2_storerdgp	= 2213,
    S2_storerf_io	= 2214,
    S2_storerf_pbr	= 2215,
    S2_storerf_pci	= 2216,
    S2_storerf_pcr	= 2217,
    S2_storerf_pi	= 2218,
    S2_storerf_pr	= 2219,
    S2_storerfgp	= 2220,
    S2_storerh_io	= 2221,
    S2_storerh_pbr	= 2222,
    S2_storerh_pci	= 2223,
    S2_storerh_pcr	= 2224,
    S2_storerh_pi	= 2225,
    S2_storerh_pr	= 2226,
    S2_storerhgp	= 2227,
    S2_storerhnew_io	= 2228,
    S2_storerhnew_pbr	= 2229,
    S2_storerhnew_pci	= 2230,
    S2_storerhnew_pcr	= 2231,
    S2_storerhnew_pi	= 2232,
    S2_storerhnew_pr	= 2233,
    S2_storerhnewgp	= 2234,
    S2_storeri_io	= 2235,
    S2_storeri_pbr	= 2236,
    S2_storeri_pci	= 2237,
    S2_storeri_pcr	= 2238,
    S2_storeri_pi	= 2239,
    S2_storeri_pr	= 2240,
    S2_storerigp	= 2241,
    S2_storerinew_io	= 2242,
    S2_storerinew_pbr	= 2243,
    S2_storerinew_pci	= 2244,
    S2_storerinew_pcr	= 2245,
    S2_storerinew_pi	= 2246,
    S2_storerinew_pr	= 2247,
    S2_storerinewgp	= 2248,
    S2_storew_locked	= 2249,
    S2_svsathb	= 2250,
    S2_svsathub	= 2251,
    S2_tableidxb	= 2252,
    S2_tableidxd	= 2253,
    S2_tableidxh	= 2254,
    S2_tableidxw	= 2255,
    S2_togglebit_i	= 2256,
    S2_togglebit_r	= 2257,
    S2_tstbit_i	= 2258,
    S2_tstbit_r	= 2259,
    S2_valignib	= 2260,
    S2_valignrb	= 2261,
    S2_vcnegh	= 2262,
    S2_vcrotate	= 2263,
    S2_vrcnegh	= 2264,
    S2_vrndpackwh	= 2265,
    S2_vrndpackwhs	= 2266,
    S2_vsathb	= 2267,
    S2_vsathb_nopack	= 2268,
    S2_vsathub	= 2269,
    S2_vsathub_nopack	= 2270,
    S2_vsatwh	= 2271,
    S2_vsatwh_nopack	= 2272,
    S2_vsatwuh	= 2273,
    S2_vsatwuh_nopack	= 2274,
    S2_vsplatrb	= 2275,
    S2_vsplatrh	= 2276,
    S2_vspliceib	= 2277,
    S2_vsplicerb	= 2278,
    S2_vsxtbh	= 2279,
    S2_vsxthw	= 2280,
    S2_vtrunehb	= 2281,
    S2_vtrunewh	= 2282,
    S2_vtrunohb	= 2283,
    S2_vtrunowh	= 2284,
    S2_vzxtbh	= 2285,
    S2_vzxthw	= 2286,
    S4_addaddi	= 2287,
    S4_addi_asl_ri	= 2288,
    S4_addi_lsr_ri	= 2289,
    S4_andi_asl_ri	= 2290,
    S4_andi_lsr_ri	= 2291,
    S4_clbaddi	= 2292,
    S4_clbpaddi	= 2293,
    S4_clbpnorm	= 2294,
    S4_extract	= 2295,
    S4_extract_rp	= 2296,
    S4_extractp	= 2297,
    S4_extractp_rp	= 2298,
    S4_lsli	= 2299,
    S4_ntstbit_i	= 2300,
    S4_ntstbit_r	= 2301,
    S4_or_andi	= 2302,
    S4_or_andix	= 2303,
    S4_or_ori	= 2304,
    S4_ori_asl_ri	= 2305,
    S4_ori_lsr_ri	= 2306,
    S4_parity	= 2307,
    S4_pstorerbf_abs	= 2308,
    S4_pstorerbf_rr	= 2309,
    S4_pstorerbfnew_abs	= 2310,
    S4_pstorerbfnew_io	= 2311,
    S4_pstorerbfnew_rr	= 2312,
    S4_pstorerbnewf_abs	= 2313,
    S4_pstorerbnewf_rr	= 2314,
    S4_pstorerbnewfnew_abs	= 2315,
    S4_pstorerbnewfnew_io	= 2316,
    S4_pstorerbnewfnew_rr	= 2317,
    S4_pstorerbnewt_abs	= 2318,
    S4_pstorerbnewt_rr	= 2319,
    S4_pstorerbnewtnew_abs	= 2320,
    S4_pstorerbnewtnew_io	= 2321,
    S4_pstorerbnewtnew_rr	= 2322,
    S4_pstorerbt_abs	= 2323,
    S4_pstorerbt_rr	= 2324,
    S4_pstorerbtnew_abs	= 2325,
    S4_pstorerbtnew_io	= 2326,
    S4_pstorerbtnew_rr	= 2327,
    S4_pstorerdf_abs	= 2328,
    S4_pstorerdf_rr	= 2329,
    S4_pstorerdfnew_abs	= 2330,
    S4_pstorerdfnew_io	= 2331,
    S4_pstorerdfnew_rr	= 2332,
    S4_pstorerdt_abs	= 2333,
    S4_pstorerdt_rr	= 2334,
    S4_pstorerdtnew_abs	= 2335,
    S4_pstorerdtnew_io	= 2336,
    S4_pstorerdtnew_rr	= 2337,
    S4_pstorerff_abs	= 2338,
    S4_pstorerff_rr	= 2339,
    S4_pstorerffnew_abs	= 2340,
    S4_pstorerffnew_io	= 2341,
    S4_pstorerffnew_rr	= 2342,
    S4_pstorerft_abs	= 2343,
    S4_pstorerft_rr	= 2344,
    S4_pstorerftnew_abs	= 2345,
    S4_pstorerftnew_io	= 2346,
    S4_pstorerftnew_rr	= 2347,
    S4_pstorerhf_abs	= 2348,
    S4_pstorerhf_rr	= 2349,
    S4_pstorerhfnew_abs	= 2350,
    S4_pstorerhfnew_io	= 2351,
    S4_pstorerhfnew_rr	= 2352,
    S4_pstorerhnewf_abs	= 2353,
    S4_pstorerhnewf_rr	= 2354,
    S4_pstorerhnewfnew_abs	= 2355,
    S4_pstorerhnewfnew_io	= 2356,
    S4_pstorerhnewfnew_rr	= 2357,
    S4_pstorerhnewt_abs	= 2358,
    S4_pstorerhnewt_rr	= 2359,
    S4_pstorerhnewtnew_abs	= 2360,
    S4_pstorerhnewtnew_io	= 2361,
    S4_pstorerhnewtnew_rr	= 2362,
    S4_pstorerht_abs	= 2363,
    S4_pstorerht_rr	= 2364,
    S4_pstorerhtnew_abs	= 2365,
    S4_pstorerhtnew_io	= 2366,
    S4_pstorerhtnew_rr	= 2367,
    S4_pstorerif_abs	= 2368,
    S4_pstorerif_rr	= 2369,
    S4_pstorerifnew_abs	= 2370,
    S4_pstorerifnew_io	= 2371,
    S4_pstorerifnew_rr	= 2372,
    S4_pstorerinewf_abs	= 2373,
    S4_pstorerinewf_rr	= 2374,
    S4_pstorerinewfnew_abs	= 2375,
    S4_pstorerinewfnew_io	= 2376,
    S4_pstorerinewfnew_rr	= 2377,
    S4_pstorerinewt_abs	= 2378,
    S4_pstorerinewt_rr	= 2379,
    S4_pstorerinewtnew_abs	= 2380,
    S4_pstorerinewtnew_io	= 2381,
    S4_pstorerinewtnew_rr	= 2382,
    S4_pstorerit_abs	= 2383,
    S4_pstorerit_rr	= 2384,
    S4_pstoreritnew_abs	= 2385,
    S4_pstoreritnew_io	= 2386,
    S4_pstoreritnew_rr	= 2387,
    S4_stored_locked	= 2388,
    S4_storeirb_io	= 2389,
    S4_storeirbf_io	= 2390,
    S4_storeirbfnew_io	= 2391,
    S4_storeirbt_io	= 2392,
    S4_storeirbtnew_io	= 2393,
    S4_storeirh_io	= 2394,
    S4_storeirhf_io	= 2395,
    S4_storeirhfnew_io	= 2396,
    S4_storeirht_io	= 2397,
    S4_storeirhtnew_io	= 2398,
    S4_storeiri_io	= 2399,
    S4_storeirif_io	= 2400,
    S4_storeirifnew_io	= 2401,
    S4_storeirit_io	= 2402,
    S4_storeiritnew_io	= 2403,
    S4_storerb_ap	= 2404,
    S4_storerb_rr	= 2405,
    S4_storerb_ur	= 2406,
    S4_storerbnew_ap	= 2407,
    S4_storerbnew_rr	= 2408,
    S4_storerbnew_ur	= 2409,
    S4_storerd_ap	= 2410,
    S4_storerd_rr	= 2411,
    S4_storerd_ur	= 2412,
    S4_storerf_ap	= 2413,
    S4_storerf_rr	= 2414,
    S4_storerf_ur	= 2415,
    S4_storerh_ap	= 2416,
    S4_storerh_rr	= 2417,
    S4_storerh_ur	= 2418,
    S4_storerhnew_ap	= 2419,
    S4_storerhnew_rr	= 2420,
    S4_storerhnew_ur	= 2421,
    S4_storeri_ap	= 2422,
    S4_storeri_rr	= 2423,
    S4_storeri_ur	= 2424,
    S4_storerinew_ap	= 2425,
    S4_storerinew_rr	= 2426,
    S4_storerinew_ur	= 2427,
    S4_subaddi	= 2428,
    S4_subi_asl_ri	= 2429,
    S4_subi_lsr_ri	= 2430,
    S4_vrcrotate	= 2431,
    S4_vrcrotate_acc	= 2432,
    S4_vxaddsubh	= 2433,
    S4_vxaddsubhr	= 2434,
    S4_vxaddsubw	= 2435,
    S4_vxsubaddh	= 2436,
    S4_vxsubaddhr	= 2437,
    S4_vxsubaddw	= 2438,
    S5_asrhub_rnd_sat	= 2439,
    S5_asrhub_sat	= 2440,
    S5_popcountp	= 2441,
    S5_vasrhrnd	= 2442,
    S6_rol_i_p	= 2443,
    S6_rol_i_p_acc	= 2444,
    S6_rol_i_p_and	= 2445,
    S6_rol_i_p_nac	= 2446,
    S6_rol_i_p_or	= 2447,
    S6_rol_i_p_xacc	= 2448,
    S6_rol_i_r	= 2449,
    S6_rol_i_r_acc	= 2450,
    S6_rol_i_r_and	= 2451,
    S6_rol_i_r_nac	= 2452,
    S6_rol_i_r_or	= 2453,
    S6_rol_i_r_xacc	= 2454,
    S6_vsplatrbp	= 2455,
    S6_vtrunehb_ppp	= 2456,
    S6_vtrunohb_ppp	= 2457,
    SA1_addi	= 2458,
    SA1_addrx	= 2459,
    SA1_addsp	= 2460,
    SA1_and1	= 2461,
    SA1_clrf	= 2462,
    SA1_clrfnew	= 2463,
    SA1_clrt	= 2464,
    SA1_clrtnew	= 2465,
    SA1_cmpeqi	= 2466,
    SA1_combine0i	= 2467,
    SA1_combine1i	= 2468,
    SA1_combine2i	= 2469,
    SA1_combine3i	= 2470,
    SA1_combinerz	= 2471,
    SA1_combinezr	= 2472,
    SA1_dec	= 2473,
    SA1_inc	= 2474,
    SA1_seti	= 2475,
    SA1_setin1	= 2476,
    SA1_sxtb	= 2477,
    SA1_sxth	= 2478,
    SA1_tfr	= 2479,
    SA1_zxtb	= 2480,
    SA1_zxth	= 2481,
    SAVE_REGISTERS_CALL_V4	= 2482,
    SAVE_REGISTERS_CALL_V4STK	= 2483,
    SAVE_REGISTERS_CALL_V4STK_EXT	= 2484,
    SAVE_REGISTERS_CALL_V4STK_EXT_PIC	= 2485,
    SAVE_REGISTERS_CALL_V4STK_PIC	= 2486,
    SAVE_REGISTERS_CALL_V4_EXT	= 2487,
    SAVE_REGISTERS_CALL_V4_EXT_PIC	= 2488,
    SAVE_REGISTERS_CALL_V4_PIC	= 2489,
    SL1_loadri_io	= 2490,
    SL1_loadrub_io	= 2491,
    SL2_deallocframe	= 2492,
    SL2_jumpr31	= 2493,
    SL2_jumpr31_f	= 2494,
    SL2_jumpr31_fnew	= 2495,
    SL2_jumpr31_t	= 2496,
    SL2_jumpr31_tnew	= 2497,
    SL2_loadrb_io	= 2498,
    SL2_loadrd_sp	= 2499,
    SL2_loadrh_io	= 2500,
    SL2_loadri_sp	= 2501,
    SL2_loadruh_io	= 2502,
    SL2_return	= 2503,
    SL2_return_f	= 2504,
    SL2_return_fnew	= 2505,
    SL2_return_t	= 2506,
    SL2_return_tnew	= 2507,
    SS1_storeb_io	= 2508,
    SS1_storew_io	= 2509,
    SS2_allocframe	= 2510,
    SS2_storebi0	= 2511,
    SS2_storebi1	= 2512,
    SS2_stored_sp	= 2513,
    SS2_storeh_io	= 2514,
    SS2_storew_sp	= 2515,
    SS2_storewi0	= 2516,
    SS2_storewi1	= 2517,
    TFRI64_V2_ext	= 2518,
    TFRI64_V4	= 2519,
    V6_extractw	= 2520,
    V6_lvsplatb	= 2521,
    V6_lvsplath	= 2522,
    V6_lvsplatw	= 2523,
    V6_pred_and	= 2524,
    V6_pred_and_n	= 2525,
    V6_pred_not	= 2526,
    V6_pred_or	= 2527,
    V6_pred_or_n	= 2528,
    V6_pred_scalar2	= 2529,
    V6_pred_scalar2v2	= 2530,
    V6_pred_xor	= 2531,
    V6_shuffeqh	= 2532,
    V6_shuffeqw	= 2533,
    V6_vL32Ub_ai	= 2534,
    V6_vL32Ub_pi	= 2535,
    V6_vL32Ub_ppu	= 2536,
    V6_vL32b_ai	= 2537,
    V6_vL32b_cur_ai	= 2538,
    V6_vL32b_cur_npred_ai	= 2539,
    V6_vL32b_cur_npred_pi	= 2540,
    V6_vL32b_cur_npred_ppu	= 2541,
    V6_vL32b_cur_pi	= 2542,
    V6_vL32b_cur_ppu	= 2543,
    V6_vL32b_cur_pred_ai	= 2544,
    V6_vL32b_cur_pred_pi	= 2545,
    V6_vL32b_cur_pred_ppu	= 2546,
    V6_vL32b_npred_ai	= 2547,
    V6_vL32b_npred_pi	= 2548,
    V6_vL32b_npred_ppu	= 2549,
    V6_vL32b_nt_ai	= 2550,
    V6_vL32b_nt_cur_ai	= 2551,
    V6_vL32b_nt_cur_npred_ai	= 2552,
    V6_vL32b_nt_cur_npred_pi	= 2553,
    V6_vL32b_nt_cur_npred_ppu	= 2554,
    V6_vL32b_nt_cur_pi	= 2555,
    V6_vL32b_nt_cur_ppu	= 2556,
    V6_vL32b_nt_cur_pred_ai	= 2557,
    V6_vL32b_nt_cur_pred_pi	= 2558,
    V6_vL32b_nt_cur_pred_ppu	= 2559,
    V6_vL32b_nt_npred_ai	= 2560,
    V6_vL32b_nt_npred_pi	= 2561,
    V6_vL32b_nt_npred_ppu	= 2562,
    V6_vL32b_nt_pi	= 2563,
    V6_vL32b_nt_ppu	= 2564,
    V6_vL32b_nt_pred_ai	= 2565,
    V6_vL32b_nt_pred_pi	= 2566,
    V6_vL32b_nt_pred_ppu	= 2567,
    V6_vL32b_nt_tmp_ai	= 2568,
    V6_vL32b_nt_tmp_npred_ai	= 2569,
    V6_vL32b_nt_tmp_npred_pi	= 2570,
    V6_vL32b_nt_tmp_npred_ppu	= 2571,
    V6_vL32b_nt_tmp_pi	= 2572,
    V6_vL32b_nt_tmp_ppu	= 2573,
    V6_vL32b_nt_tmp_pred_ai	= 2574,
    V6_vL32b_nt_tmp_pred_pi	= 2575,
    V6_vL32b_nt_tmp_pred_ppu	= 2576,
    V6_vL32b_pi	= 2577,
    V6_vL32b_ppu	= 2578,
    V6_vL32b_pred_ai	= 2579,
    V6_vL32b_pred_pi	= 2580,
    V6_vL32b_pred_ppu	= 2581,
    V6_vL32b_tmp_ai	= 2582,
    V6_vL32b_tmp_npred_ai	= 2583,
    V6_vL32b_tmp_npred_pi	= 2584,
    V6_vL32b_tmp_npred_ppu	= 2585,
    V6_vL32b_tmp_pi	= 2586,
    V6_vL32b_tmp_ppu	= 2587,
    V6_vL32b_tmp_pred_ai	= 2588,
    V6_vL32b_tmp_pred_pi	= 2589,
    V6_vL32b_tmp_pred_ppu	= 2590,
    V6_vS32Ub_ai	= 2591,
    V6_vS32Ub_npred_ai	= 2592,
    V6_vS32Ub_npred_pi	= 2593,
    V6_vS32Ub_npred_ppu	= 2594,
    V6_vS32Ub_pi	= 2595,
    V6_vS32Ub_ppu	= 2596,
    V6_vS32Ub_pred_ai	= 2597,
    V6_vS32Ub_pred_pi	= 2598,
    V6_vS32Ub_pred_ppu	= 2599,
    V6_vS32b_ai	= 2600,
    V6_vS32b_new_ai	= 2601,
    V6_vS32b_new_npred_ai	= 2602,
    V6_vS32b_new_npred_pi	= 2603,
    V6_vS32b_new_npred_ppu	= 2604,
    V6_vS32b_new_pi	= 2605,
    V6_vS32b_new_ppu	= 2606,
    V6_vS32b_new_pred_ai	= 2607,
    V6_vS32b_new_pred_pi	= 2608,
    V6_vS32b_new_pred_ppu	= 2609,
    V6_vS32b_npred_ai	= 2610,
    V6_vS32b_npred_pi	= 2611,
    V6_vS32b_npred_ppu	= 2612,
    V6_vS32b_nqpred_ai	= 2613,
    V6_vS32b_nqpred_pi	= 2614,
    V6_vS32b_nqpred_ppu	= 2615,
    V6_vS32b_nt_ai	= 2616,
    V6_vS32b_nt_new_ai	= 2617,
    V6_vS32b_nt_new_npred_ai	= 2618,
    V6_vS32b_nt_new_npred_pi	= 2619,
    V6_vS32b_nt_new_npred_ppu	= 2620,
    V6_vS32b_nt_new_pi	= 2621,
    V6_vS32b_nt_new_ppu	= 2622,
    V6_vS32b_nt_new_pred_ai	= 2623,
    V6_vS32b_nt_new_pred_pi	= 2624,
    V6_vS32b_nt_new_pred_ppu	= 2625,
    V6_vS32b_nt_npred_ai	= 2626,
    V6_vS32b_nt_npred_pi	= 2627,
    V6_vS32b_nt_npred_ppu	= 2628,
    V6_vS32b_nt_nqpred_ai	= 2629,
    V6_vS32b_nt_nqpred_pi	= 2630,
    V6_vS32b_nt_nqpred_ppu	= 2631,
    V6_vS32b_nt_pi	= 2632,
    V6_vS32b_nt_ppu	= 2633,
    V6_vS32b_nt_pred_ai	= 2634,
    V6_vS32b_nt_pred_pi	= 2635,
    V6_vS32b_nt_pred_ppu	= 2636,
    V6_vS32b_nt_qpred_ai	= 2637,
    V6_vS32b_nt_qpred_pi	= 2638,
    V6_vS32b_nt_qpred_ppu	= 2639,
    V6_vS32b_pi	= 2640,
    V6_vS32b_ppu	= 2641,
    V6_vS32b_pred_ai	= 2642,
    V6_vS32b_pred_pi	= 2643,
    V6_vS32b_pred_ppu	= 2644,
    V6_vS32b_qpred_ai	= 2645,
    V6_vS32b_qpred_pi	= 2646,
    V6_vS32b_qpred_ppu	= 2647,
    V6_vS32b_srls_ai	= 2648,
    V6_vS32b_srls_pi	= 2649,
    V6_vS32b_srls_ppu	= 2650,
    V6_vabsb	= 2651,
    V6_vabsb_sat	= 2652,
    V6_vabsdiffh	= 2653,
    V6_vabsdiffub	= 2654,
    V6_vabsdiffuh	= 2655,
    V6_vabsdiffw	= 2656,
    V6_vabsh	= 2657,
    V6_vabsh_sat	= 2658,
    V6_vabsw	= 2659,
    V6_vabsw_sat	= 2660,
    V6_vaddb	= 2661,
    V6_vaddb_dv	= 2662,
    V6_vaddbnq	= 2663,
    V6_vaddbq	= 2664,
    V6_vaddbsat	= 2665,
    V6_vaddbsat_dv	= 2666,
    V6_vaddcarry	= 2667,
    V6_vaddcarryo	= 2668,
    V6_vaddcarrysat	= 2669,
    V6_vaddclbh	= 2670,
    V6_vaddclbw	= 2671,
    V6_vaddh	= 2672,
    V6_vaddh_dv	= 2673,
    V6_vaddhnq	= 2674,
    V6_vaddhq	= 2675,
    V6_vaddhsat	= 2676,
    V6_vaddhsat_dv	= 2677,
    V6_vaddhw	= 2678,
    V6_vaddhw_acc	= 2679,
    V6_vaddubh	= 2680,
    V6_vaddubh_acc	= 2681,
    V6_vaddubsat	= 2682,
    V6_vaddubsat_dv	= 2683,
    V6_vaddububb_sat	= 2684,
    V6_vadduhsat	= 2685,
    V6_vadduhsat_dv	= 2686,
    V6_vadduhw	= 2687,
    V6_vadduhw_acc	= 2688,
    V6_vadduwsat	= 2689,
    V6_vadduwsat_dv	= 2690,
    V6_vaddw	= 2691,
    V6_vaddw_dv	= 2692,
    V6_vaddwnq	= 2693,
    V6_vaddwq	= 2694,
    V6_vaddwsat	= 2695,
    V6_vaddwsat_dv	= 2696,
    V6_valignb	= 2697,
    V6_valignbi	= 2698,
    V6_vand	= 2699,
    V6_vandnqrt	= 2700,
    V6_vandnqrt_acc	= 2701,
    V6_vandqrt	= 2702,
    V6_vandqrt_acc	= 2703,
    V6_vandvnqv	= 2704,
    V6_vandvqv	= 2705,
    V6_vandvrt	= 2706,
    V6_vandvrt_acc	= 2707,
    V6_vaslh	= 2708,
    V6_vaslh_acc	= 2709,
    V6_vaslhv	= 2710,
    V6_vaslw	= 2711,
    V6_vaslw_acc	= 2712,
    V6_vaslwv	= 2713,
    V6_vasr_into	= 2714,
    V6_vasrh	= 2715,
    V6_vasrh_acc	= 2716,
    V6_vasrhbrndsat	= 2717,
    V6_vasrhbsat	= 2718,
    V6_vasrhubrndsat	= 2719,
    V6_vasrhubsat	= 2720,
    V6_vasrhv	= 2721,
    V6_vasruhubrndsat	= 2722,
    V6_vasruhubsat	= 2723,
    V6_vasruwuhrndsat	= 2724,
    V6_vasruwuhsat	= 2725,
    V6_vasrw	= 2726,
    V6_vasrw_acc	= 2727,
    V6_vasrwh	= 2728,
    V6_vasrwhrndsat	= 2729,
    V6_vasrwhsat	= 2730,
    V6_vasrwuhrndsat	= 2731,
    V6_vasrwuhsat	= 2732,
    V6_vasrwv	= 2733,
    V6_vassign	= 2734,
    V6_vavgb	= 2735,
    V6_vavgbrnd	= 2736,
    V6_vavgh	= 2737,
    V6_vavghrnd	= 2738,
    V6_vavgub	= 2739,
    V6_vavgubrnd	= 2740,
    V6_vavguh	= 2741,
    V6_vavguhrnd	= 2742,
    V6_vavguw	= 2743,
    V6_vavguwrnd	= 2744,
    V6_vavgw	= 2745,
    V6_vavgwrnd	= 2746,
    V6_vccombine	= 2747,
    V6_vcl0h	= 2748,
    V6_vcl0w	= 2749,
    V6_vcmov	= 2750,
    V6_vcombine	= 2751,
    V6_vdeal	= 2752,
    V6_vdealb	= 2753,
    V6_vdealb4w	= 2754,
    V6_vdealh	= 2755,
    V6_vdealvdd	= 2756,
    V6_vdelta	= 2757,
    V6_vdmpybus	= 2758,
    V6_vdmpybus_acc	= 2759,
    V6_vdmpybus_dv	= 2760,
    V6_vdmpybus_dv_acc	= 2761,
    V6_vdmpyhb	= 2762,
    V6_vdmpyhb_acc	= 2763,
    V6_vdmpyhb_dv	= 2764,
    V6_vdmpyhb_dv_acc	= 2765,
    V6_vdmpyhisat	= 2766,
    V6_vdmpyhisat_acc	= 2767,
    V6_vdmpyhsat	= 2768,
    V6_vdmpyhsat_acc	= 2769,
    V6_vdmpyhsuisat	= 2770,
    V6_vdmpyhsuisat_acc	= 2771,
    V6_vdmpyhsusat	= 2772,
    V6_vdmpyhsusat_acc	= 2773,
    V6_vdmpyhvsat	= 2774,
    V6_vdmpyhvsat_acc	= 2775,
    V6_vdsaduh	= 2776,
    V6_vdsaduh_acc	= 2777,
    V6_veqb	= 2778,
    V6_veqb_and	= 2779,
    V6_veqb_or	= 2780,
    V6_veqb_xor	= 2781,
    V6_veqh	= 2782,
    V6_veqh_and	= 2783,
    V6_veqh_or	= 2784,
    V6_veqh_xor	= 2785,
    V6_veqw	= 2786,
    V6_veqw_and	= 2787,
    V6_veqw_or	= 2788,
    V6_veqw_xor	= 2789,
    V6_vgathermh	= 2790,
    V6_vgathermhq	= 2791,
    V6_vgathermhw	= 2792,
    V6_vgathermhwq	= 2793,
    V6_vgathermw	= 2794,
    V6_vgathermwq	= 2795,
    V6_vgtb	= 2796,
    V6_vgtb_and	= 2797,
    V6_vgtb_or	= 2798,
    V6_vgtb_xor	= 2799,
    V6_vgth	= 2800,
    V6_vgth_and	= 2801,
    V6_vgth_or	= 2802,
    V6_vgth_xor	= 2803,
    V6_vgtub	= 2804,
    V6_vgtub_and	= 2805,
    V6_vgtub_or	= 2806,
    V6_vgtub_xor	= 2807,
    V6_vgtuh	= 2808,
    V6_vgtuh_and	= 2809,
    V6_vgtuh_or	= 2810,
    V6_vgtuh_xor	= 2811,
    V6_vgtuw	= 2812,
    V6_vgtuw_and	= 2813,
    V6_vgtuw_or	= 2814,
    V6_vgtuw_xor	= 2815,
    V6_vgtw	= 2816,
    V6_vgtw_and	= 2817,
    V6_vgtw_or	= 2818,
    V6_vgtw_xor	= 2819,
    V6_vhist	= 2820,
    V6_vhistq	= 2821,
    V6_vinsertwr	= 2822,
    V6_vlalignb	= 2823,
    V6_vlalignbi	= 2824,
    V6_vlsrb	= 2825,
    V6_vlsrh	= 2826,
    V6_vlsrhv	= 2827,
    V6_vlsrw	= 2828,
    V6_vlsrwv	= 2829,
    V6_vlut4	= 2830,
    V6_vlutvvb	= 2831,
    V6_vlutvvb_nm	= 2832,
    V6_vlutvvb_oracc	= 2833,
    V6_vlutvvb_oracci	= 2834,
    V6_vlutvvbi	= 2835,
    V6_vlutvwh	= 2836,
    V6_vlutvwh_nm	= 2837,
    V6_vlutvwh_oracc	= 2838,
    V6_vlutvwh_oracci	= 2839,
    V6_vlutvwhi	= 2840,
    V6_vmaxb	= 2841,
    V6_vmaxh	= 2842,
    V6_vmaxub	= 2843,
    V6_vmaxuh	= 2844,
    V6_vmaxw	= 2845,
    V6_vminb	= 2846,
    V6_vminh	= 2847,
    V6_vminub	= 2848,
    V6_vminuh	= 2849,
    V6_vminw	= 2850,
    V6_vmpabus	= 2851,
    V6_vmpabus_acc	= 2852,
    V6_vmpabusv	= 2853,
    V6_vmpabuu	= 2854,
    V6_vmpabuu_acc	= 2855,
    V6_vmpabuuv	= 2856,
    V6_vmpahb	= 2857,
    V6_vmpahb_acc	= 2858,
    V6_vmpahhsat	= 2859,
    V6_vmpauhb	= 2860,
    V6_vmpauhb_acc	= 2861,
    V6_vmpauhuhsat	= 2862,
    V6_vmpsuhuhsat	= 2863,
    V6_vmpybus	= 2864,
    V6_vmpybus_acc	= 2865,
    V6_vmpybusv	= 2866,
    V6_vmpybusv_acc	= 2867,
    V6_vmpybv	= 2868,
    V6_vmpybv_acc	= 2869,
    V6_vmpyewuh	= 2870,
    V6_vmpyewuh_64	= 2871,
    V6_vmpyh	= 2872,
    V6_vmpyh_acc	= 2873,
    V6_vmpyhsat_acc	= 2874,
    V6_vmpyhsrs	= 2875,
    V6_vmpyhss	= 2876,
    V6_vmpyhus	= 2877,
    V6_vmpyhus_acc	= 2878,
    V6_vmpyhv	= 2879,
    V6_vmpyhv_acc	= 2880,
    V6_vmpyhvsrs	= 2881,
    V6_vmpyieoh	= 2882,
    V6_vmpyiewh_acc	= 2883,
    V6_vmpyiewuh	= 2884,
    V6_vmpyiewuh_acc	= 2885,
    V6_vmpyih	= 2886,
    V6_vmpyih_acc	= 2887,
    V6_vmpyihb	= 2888,
    V6_vmpyihb_acc	= 2889,
    V6_vmpyiowh	= 2890,
    V6_vmpyiwb	= 2891,
    V6_vmpyiwb_acc	= 2892,
    V6_vmpyiwh	= 2893,
    V6_vmpyiwh_acc	= 2894,
    V6_vmpyiwub	= 2895,
    V6_vmpyiwub_acc	= 2896,
    V6_vmpyowh	= 2897,
    V6_vmpyowh_64_acc	= 2898,
    V6_vmpyowh_rnd	= 2899,
    V6_vmpyowh_rnd_sacc	= 2900,
    V6_vmpyowh_sacc	= 2901,
    V6_vmpyub	= 2902,
    V6_vmpyub_acc	= 2903,
    V6_vmpyubv	= 2904,
    V6_vmpyubv_acc	= 2905,
    V6_vmpyuh	= 2906,
    V6_vmpyuh_acc	= 2907,
    V6_vmpyuhe	= 2908,
    V6_vmpyuhe_acc	= 2909,
    V6_vmpyuhv	= 2910,
    V6_vmpyuhv_acc	= 2911,
    V6_vmux	= 2912,
    V6_vnavgb	= 2913,
    V6_vnavgh	= 2914,
    V6_vnavgub	= 2915,
    V6_vnavgw	= 2916,
    V6_vnccombine	= 2917,
    V6_vncmov	= 2918,
    V6_vnormamth	= 2919,
    V6_vnormamtw	= 2920,
    V6_vnot	= 2921,
    V6_vor	= 2922,
    V6_vpackeb	= 2923,
    V6_vpackeh	= 2924,
    V6_vpackhb_sat	= 2925,
    V6_vpackhub_sat	= 2926,
    V6_vpackob	= 2927,
    V6_vpackoh	= 2928,
    V6_vpackwh_sat	= 2929,
    V6_vpackwuh_sat	= 2930,
    V6_vpopcounth	= 2931,
    V6_vprefixqb	= 2932,
    V6_vprefixqh	= 2933,
    V6_vprefixqw	= 2934,
    V6_vrdelta	= 2935,
    V6_vrmpybub_rtt	= 2936,
    V6_vrmpybub_rtt_acc	= 2937,
    V6_vrmpybus	= 2938,
    V6_vrmpybus_acc	= 2939,
    V6_vrmpybusi	= 2940,
    V6_vrmpybusi_acc	= 2941,
    V6_vrmpybusv	= 2942,
    V6_vrmpybusv_acc	= 2943,
    V6_vrmpybv	= 2944,
    V6_vrmpybv_acc	= 2945,
    V6_vrmpyub	= 2946,
    V6_vrmpyub_acc	= 2947,
    V6_vrmpyub_rtt	= 2948,
    V6_vrmpyub_rtt_acc	= 2949,
    V6_vrmpyubi	= 2950,
    V6_vrmpyubi_acc	= 2951,
    V6_vrmpyubv	= 2952,
    V6_vrmpyubv_acc	= 2953,
    V6_vrmpyzbb_rt	= 2954,
    V6_vrmpyzbb_rt_acc	= 2955,
    V6_vrmpyzbb_rx	= 2956,
    V6_vrmpyzbb_rx_acc	= 2957,
    V6_vrmpyzbub_rt	= 2958,
    V6_vrmpyzbub_rt_acc	= 2959,
    V6_vrmpyzbub_rx	= 2960,
    V6_vrmpyzbub_rx_acc	= 2961,
    V6_vrmpyzcb_rt	= 2962,
    V6_vrmpyzcb_rt_acc	= 2963,
    V6_vrmpyzcb_rx	= 2964,
    V6_vrmpyzcb_rx_acc	= 2965,
    V6_vrmpyzcbs_rt	= 2966,
    V6_vrmpyzcbs_rt_acc	= 2967,
    V6_vrmpyzcbs_rx	= 2968,
    V6_vrmpyzcbs_rx_acc	= 2969,
    V6_vrmpyznb_rt	= 2970,
    V6_vrmpyznb_rt_acc	= 2971,
    V6_vrmpyznb_rx	= 2972,
    V6_vrmpyznb_rx_acc	= 2973,
    V6_vror	= 2974,
    V6_vrotr	= 2975,
    V6_vroundhb	= 2976,
    V6_vroundhub	= 2977,
    V6_vrounduhub	= 2978,
    V6_vrounduwuh	= 2979,
    V6_vroundwh	= 2980,
    V6_vroundwuh	= 2981,
    V6_vrsadubi	= 2982,
    V6_vrsadubi_acc	= 2983,
    V6_vsatdw	= 2984,
    V6_vsathub	= 2985,
    V6_vsatuwuh	= 2986,
    V6_vsatwh	= 2987,
    V6_vsb	= 2988,
    V6_vscattermh	= 2989,
    V6_vscattermh_add	= 2990,
    V6_vscattermhq	= 2991,
    V6_vscattermhw	= 2992,
    V6_vscattermhw_add	= 2993,
    V6_vscattermhwq	= 2994,
    V6_vscattermw	= 2995,
    V6_vscattermw_add	= 2996,
    V6_vscattermwq	= 2997,
    V6_vsh	= 2998,
    V6_vshufeh	= 2999,
    V6_vshuff	= 3000,
    V6_vshuffb	= 3001,
    V6_vshuffeb	= 3002,
    V6_vshuffh	= 3003,
    V6_vshuffob	= 3004,
    V6_vshuffvdd	= 3005,
    V6_vshufoeb	= 3006,
    V6_vshufoeh	= 3007,
    V6_vshufoh	= 3008,
    V6_vsubb	= 3009,
    V6_vsubb_dv	= 3010,
    V6_vsubbnq	= 3011,
    V6_vsubbq	= 3012,
    V6_vsubbsat	= 3013,
    V6_vsubbsat_dv	= 3014,
    V6_vsubcarry	= 3015,
    V6_vsubcarryo	= 3016,
    V6_vsubh	= 3017,
    V6_vsubh_dv	= 3018,
    V6_vsubhnq	= 3019,
    V6_vsubhq	= 3020,
    V6_vsubhsat	= 3021,
    V6_vsubhsat_dv	= 3022,
    V6_vsubhw	= 3023,
    V6_vsububh	= 3024,
    V6_vsububsat	= 3025,
    V6_vsububsat_dv	= 3026,
    V6_vsubububb_sat	= 3027,
    V6_vsubuhsat	= 3028,
    V6_vsubuhsat_dv	= 3029,
    V6_vsubuhw	= 3030,
    V6_vsubuwsat	= 3031,
    V6_vsubuwsat_dv	= 3032,
    V6_vsubw	= 3033,
    V6_vsubw_dv	= 3034,
    V6_vsubwnq	= 3035,
    V6_vsubwq	= 3036,
    V6_vsubwsat	= 3037,
    V6_vsubwsat_dv	= 3038,
    V6_vswap	= 3039,
    V6_vtmpyb	= 3040,
    V6_vtmpyb_acc	= 3041,
    V6_vtmpybus	= 3042,
    V6_vtmpybus_acc	= 3043,
    V6_vtmpyhb	= 3044,
    V6_vtmpyhb_acc	= 3045,
    V6_vunpackb	= 3046,
    V6_vunpackh	= 3047,
    V6_vunpackob	= 3048,
    V6_vunpackoh	= 3049,
    V6_vunpackub	= 3050,
    V6_vunpackuh	= 3051,
    V6_vwhist128	= 3052,
    V6_vwhist128m	= 3053,
    V6_vwhist128q	= 3054,
    V6_vwhist128qm	= 3055,
    V6_vwhist256	= 3056,
    V6_vwhist256_sat	= 3057,
    V6_vwhist256q	= 3058,
    V6_vwhist256q_sat	= 3059,
    V6_vxor	= 3060,
    V6_vzb	= 3061,
    V6_vzh	= 3062,
    V6_zLd_ai	= 3063,
    V6_zLd_pi	= 3064,
    V6_zLd_ppu	= 3065,
    V6_zLd_pred_ai	= 3066,
    V6_zLd_pred_pi	= 3067,
    V6_zLd_pred_ppu	= 3068,
    V6_zextract	= 3069,
    Y2_barrier	= 3070,
    Y2_break	= 3071,
    Y2_dccleana	= 3072,
    Y2_dccleaninva	= 3073,
    Y2_dcfetchbo	= 3074,
    Y2_dcinva	= 3075,
    Y2_dczeroa	= 3076,
    Y2_icinva	= 3077,
    Y2_isync	= 3078,
    Y2_syncht	= 3079,
    Y2_wait	= 3080,
    Y4_l2fetch	= 3081,
    Y4_trace	= 3082,
    Y5_l2fetch	= 3083,
    Y6_diag	= 3084,
    Y6_diag0	= 3085,
    Y6_diag1	= 3086,
    dep_A2_addsat	= 3087,
    dep_A2_subsat	= 3088,
    dep_S2_packhl	= 3089,
    invalid_decode	= 3090,
    INSTRUCTION_LIST_END = 3091
  };

} // end namespace Hexagon
} // end namespace llvm
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_SCHED_ENUM
#undef GET_INSTRINFO_SCHED_ENUM
namespace llvm {

namespace Hexagon {
namespace Sched {
  enum {
    NoInstrModel	= 0,
    tc_01d44cb2	= 1,
    PSEUDO	= 2,
    tc_c57d9f39	= 3,
    tc_1c2c7a4a	= 4,
    tc_442395f3	= 5,
    tc_713b66bf	= 6,
    tc_86173609	= 7,
    tc_5da50c4b	= 8,
    tc_4a55d03c	= 9,
    tc_d33e5eee	= 10,
    tc_651cbe02	= 11,
    DUPLEX	= 12,
    tc_ENDLOOP	= 13,
    tc_23708a21	= 14,
    tc_56a124a7	= 15,
    tc_2f573607	= 16,
    tc_53c851ab	= 17,
    tc_fedb7e19	= 18,
    tc_4222e6bf	= 19,
    tc_075c8dd8	= 20,
    tc_9bcfb2ee	= 21,
    tc_158aa3f7	= 22,
    tc_df5d53f9	= 23,
    tc_14ab4f41	= 24,
    tc_f38f92e1	= 25,
    tc_1981450d	= 26,
    tc_e9170fb7	= 27,
    tc_40d64c94	= 28,
    LD_tc_ld_SLOT01	= 29,
    tc_38382228	= 30,
    tc_c21d7447	= 31,
    tc_7f8ae742	= 32,
    tc_5a4b5e58	= 33,
    tc_197dce51	= 34,
    tc_44fffc58	= 35,
    tc_5ceb2f9e	= 36,
    tc_56c4f9fe	= 37,
    tc_b4dc7630	= 38,
    tc_a2b365d2	= 39,
    tc_60e324ff	= 40,
    tc_db5555f3	= 41,
    tc_c0749f3c	= 42,
    PSEUDOM	= 43,
    tc_3aacf4a8	= 44,
    tc_c5dba46e	= 45,
    tc_af25efd9	= 46,
    tc_0dfac0a7	= 47,
    tc_8035e91f	= 48,
    tc_011e0e9d	= 49,
    tc_ae5babd7	= 50,
    tc_5deb5e47	= 51,
    tc_bb831a7c	= 52,
    tc_92240447	= 53,
    tc_7c31e19a	= 54,
    tc_d03278fd	= 55,
    tc_65cbd974	= 56,
    tc_934753bb	= 57,
    ST_tc_st_SLOT01	= 58,
    CVI_VA	= 59,
    tc_0ec46cf9	= 60,
    tc_718b5c53	= 61,
    CVI_GATHER_PSEUDO	= 62,
    tc_d45ba9cd	= 63,
    tc_388f9897	= 64,
    tc_9124c04f	= 65,
    tc_4ac61d92	= 66,
    tc_aee6250c	= 67,
    tc_eed07714	= 68,
    tc_74a42bda	= 69,
    tc_a9edeffa	= 70,
    tc_838c4d7a	= 71,
    tc_d61dfdc3	= 72,
    tc_8a825db2	= 73,
    tc_f34c1c21	= 74,
    tc_95a33176	= 75,
    tc_9f6cd987	= 76,
    tc_b837298f	= 77,
    tc_8b5bd4f5	= 78,
    tc_84a7500d	= 79,
    tc_7476d766	= 80,
    tc_49fdfd4b	= 81,
    tc_f098b237	= 82,
    tc_20131976	= 83,
    tc_1d41f8b7	= 84,
    tc_a1297125	= 85,
    tc_112d30d6	= 86,
    tc_d68dca5c	= 87,
    tc_788b1d09	= 88,
    tc_38e0bae9	= 89,
    tc_407e96f9	= 90,
    tc_7401744f	= 91,
    tc_9b3c0462	= 92,
    tc_151bf368	= 93,
    tc_9c52f549	= 94,
    tc_55b33fda	= 95,
    tc_6fc5dbea	= 96,
    tc_3edca78f	= 97,
    tc_a7a13fac	= 98,
    tc_9783714b	= 99,
    tc_f0e8e832	= 100,
    tc_65279839	= 101,
    tc_0a195f2c	= 102,
    tc_01e1be3b	= 103,
    tc_556f6577	= 104,
    tc_02fe1c65	= 105,
    tc_9e72dc89	= 106,
    tc_9edb7c77	= 107,
    tc_7f7f45f5	= 108,
    tc_c20701f0	= 109,
    tc_f7569068	= 110,
    tc_fae9dfa5	= 111,
    tc_6ae3426b	= 112,
    tc_69bfb303	= 113,
    tc_362b0be2	= 114,
    tc_dc51281d	= 115,
    tc_decdde8a	= 116,
    tc_eeda4109	= 117,
    tc_711c805f	= 118,
    tc_ed03645c	= 119,
    tc_42ff66ba	= 120,
    tc_57a55b54	= 121,
    tc_1248597c	= 122,
    tc_9406230a	= 123,
    tc_d57d649c	= 124,
    tc_4abdbdc6	= 125,
    tc_6d861a95	= 126,
    tc_45f9d1be	= 127,
    tc_24e109c7	= 128,
    tc_9e27f2f9	= 129,
    tc_f6e2aff9	= 130,
    tc_24f426ab	= 131,
    tc_975a4e54	= 132,
    tc_5502c366	= 133,
    tc_7b9187d3	= 134,
    tc_f999c66e	= 135,
    tc_1c7522a8	= 136,
    tc_76bb5435	= 137,
    tc_8a6d0d94	= 138,
    tc_64b00d8a	= 139,
    tc_5f2afaf7	= 140,
    tc_ac65613f	= 141,
    tc_a32e03e7	= 142,
    tc_822c3c68	= 143,
    tc_abfd9a6d	= 144,
    tc_bf2ffc0f	= 145,
    tc_7c6d32e4	= 146,
    tc_45791fb8	= 147,
    tc_b7c4062a	= 148,
    tc_5944960d	= 149,
    tc_2c13e7f5	= 150,
    tc_a154b476	= 151,
    tc_a4e22bbd	= 152,
    tc_503ce0f3	= 153,
    tc_0655b949	= 154,
    tc_6e20402a	= 155,
    tc_a7bdb22c	= 156,
    tc_db596beb	= 157,
    tc_a08b630b	= 158,
    tc_1fcb8495	= 159,
    tc_9edefe01	= 160,
    tc_449acf79	= 161,
    tc_ce59038e	= 162,
    tc_f529831b	= 163,
    tc_addc37a8	= 164,
    tc_6f42bc60	= 165,
    tc_e3d699e3	= 166,
    tc_ba9255a6	= 167,
    tc_1fe4ab69	= 168,
    tc_bb07f2c5	= 169,
    tc_8e82e8ca	= 170,
    tc_cfa0e29b	= 171,
    tc_0a6c20ae	= 172,
    tc_0fac1eb8	= 173,
    tc_829d8a86	= 174,
    tc_280f7fe1	= 175,
    tc_887d1bb7	= 176,
    tc_96ef76ef	= 177,
    tc_55a9a350	= 178,
    tc_f0cdeccf	= 179,
    tc_a38c45dc	= 180,
    tc_d3632d88	= 181,
    tc_5e4cf0e8	= 182,
    tc_ef921005	= 183,
    tc_5b347363	= 184,
    tc_3d14a17b	= 185,
    tc_3fbf1042	= 186,
    tc_63567288	= 187,
    tc_59a7822c	= 188,
    tc_937dd41c	= 189,
    tc_a4ee89db	= 190,
    tc_c818ff7f	= 191,
    tc_1242dc2a	= 192,
    tc_44d5a428	= 193,
    tc_540c3da3	= 194,
    tc_c4edf264	= 195,
    tc_5bf8afbb	= 196,
    tc_a7e6707d	= 197,
    tc_3c56e5ce	= 198,
    tc_abe8c3b2	= 199,
    tc_453fe68d	= 200,
    tc_1ba8a0cd	= 201,
    tc_52447ecc	= 202,
    tc_3904b926	= 203,
    tc_b9db8205	= 204,
    tc_663c80a7	= 205,
    tc_f21e8abb	= 206,
    tc_131f1c81	= 207,
    tc_c7039829	= 208,
    tc_e2d2e9e5	= 209,
    tc_ab23f776	= 210,
    tc_7177e272	= 211,
    tc_e99d4c2e	= 212,
    tc_6942b6e0	= 213,
    tc_a02a10a8	= 214,
    tc_54a0dc47	= 215,
    tc_447d9895	= 216,
    tc_191381c1	= 217,
    tc_3e2aaafc	= 218,
    tc_3ce09744	= 219,
    tc_20a4bbec	= 220,
    tc_c127de3a	= 221,
    tc_257f6f7c	= 222,
    tc_7e6a3e89	= 223,
    tc_e35c1e93	= 224,
    tc_05ca8cfd	= 225,
    tc_d8287c14	= 226,
    tc_08a4f1b6	= 227,
    tc_56e64202	= 228,
    tc_ac4046bc	= 229,
    tc_2e8f5f6e	= 230,
    tc_7417e785	= 231,
    tc_309dbb4f	= 232,
    tc_df80eeb0	= 233,
    tc_16ff9ef8	= 234,
    tc_51d0ecc3	= 235,
    tc_561aaa58	= 236,
    tc_946013d8	= 237,
    tc_46d6c3e0	= 238,
    tc_87adc037	= 239,
    tc_649072c2	= 240,
    tc_b091f1c6	= 241,
    tc_0b04c6c7	= 242,
    tc_660769f1	= 243,
    tc_e8797b98	= 244,
    tc_05ac6f98	= 245,
    tc_05058f6f	= 246,
    tc_fd7610da	= 247,
    tc_1381a97c	= 248,
    tc_e3f68a46	= 249,
    tc_f1de44ef	= 250,
    tc_9d1dc972	= 251,
    tc_90bcc1db	= 252,
    tc_cd94bfe0	= 253,
    tc_15fdf750	= 254,
    tc_1ad8a370	= 255,
    tc_e675c45a	= 256,
    tc_61bf7c03	= 257,
    tc_933f2b39	= 258,
    tc_26a377fe	= 259,
    tc_2d4051cd	= 260,
    tc_6e7fa133	= 261,
    tc_8772086c	= 262,
    tc_b4416217	= 263,
    tc_9f363d21	= 264,
    tc_8e420e4d	= 265,
    tc_7273323b	= 266,
    tc_58d21193	= 267,
    tc_71646d06	= 268,
    tc_04da405a	= 269,
    tc_2c745bb8	= 270,
    tc_b28e51aa	= 271,
    tc_767c4e9d	= 272,
    tc_e699ae41	= 273,
    tc_a0dbea28	= 274,
    tc_dd5b0695	= 275,
    tc_3ad719fb	= 276,
    tc_77f94a5e	= 277,
    tc_55255f2b	= 278,
    tc_b1ae5f67	= 279,
    tc_2237d952	= 280,
    tc_0ba0d5da	= 281,
    tc_9b34f5e0	= 282,
    tc_d7718fbe	= 283,
    tc_a3070909	= 284,
    tc_2c3e17fc	= 285,
    tc_28e55c6f	= 286,
    tc_invalid	= 287,
    SCHED_LIST_END = 288
  };
} // end namespace Sched
} // end namespace Hexagon
} // end namespace llvm
#endif // GET_INSTRINFO_SCHED_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { Hexagon::R31, Hexagon::R30, Hexagon::R29, 0 };
static const MCPhysReg ImplicitList2[] = { Hexagon::R29, Hexagon::R30, 0 };
static const MCPhysReg ImplicitList3[] = { Hexagon::R29, 0 };
static const MCPhysReg ImplicitList4[] = { Hexagon::R29, Hexagon::R30, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList5[] = { Hexagon::SA0, Hexagon::LC0, 0 };
static const MCPhysReg ImplicitList6[] = { Hexagon::PC, Hexagon::LC0, 0 };
static const MCPhysReg ImplicitList7[] = { Hexagon::SA0, Hexagon::SA1, Hexagon::LC0, Hexagon::LC1, 0 };
static const MCPhysReg ImplicitList8[] = { Hexagon::PC, Hexagon::LC0, Hexagon::LC1, 0 };
static const MCPhysReg ImplicitList9[] = { Hexagon::SA1, Hexagon::LC1, 0 };
static const MCPhysReg ImplicitList10[] = { Hexagon::PC, Hexagon::LC1, 0 };
static const MCPhysReg ImplicitList11[] = { Hexagon::LC0, Hexagon::SA0, 0 };
static const MCPhysReg ImplicitList12[] = { Hexagon::LC0, Hexagon::P3, Hexagon::PC, Hexagon::USR, 0 };
static const MCPhysReg ImplicitList13[] = { Hexagon::LC0, Hexagon::LC1, Hexagon::SA0, Hexagon::SA1, 0 };
static const MCPhysReg ImplicitList14[] = { Hexagon::LC0, Hexagon::LC1, Hexagon::P3, Hexagon::PC, Hexagon::USR, 0 };
static const MCPhysReg ImplicitList15[] = { Hexagon::LC1, Hexagon::SA1, 0 };
static const MCPhysReg ImplicitList16[] = { Hexagon::LC1, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList17[] = { Hexagon::R30, 0 };
static const MCPhysReg ImplicitList18[] = { Hexagon::CS, 0 };
static const MCPhysReg ImplicitList19[] = { Hexagon::PC, 0 };
static const MCPhysReg ImplicitList20[] = { Hexagon::FRAMEKEY, 0 };
static const MCPhysReg ImplicitList21[] = { Hexagon::FRAMEKEY, Hexagon::FRAMELIMIT, Hexagon::R30, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList22[] = { Hexagon::USR_OVF, 0 };
static const MCPhysReg ImplicitList23[] = { Hexagon::R16, 0 };
static const MCPhysReg ImplicitList24[] = { Hexagon::R28, 0 };
static const MCPhysReg ImplicitList25[] = { Hexagon::USR, 0 };
static const MCPhysReg ImplicitList26[] = { Hexagon::PC, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList27[] = { Hexagon::LC0, Hexagon::SA0, Hexagon::USR, 0 };
static const MCPhysReg ImplicitList28[] = { Hexagon::SA0, Hexagon::LC0, Hexagon::USR, 0 };
static const MCPhysReg ImplicitList29[] = { Hexagon::LC0, Hexagon::P3, Hexagon::SA0, Hexagon::USR, 0 };
static const MCPhysReg ImplicitList30[] = { Hexagon::GOSP, 0 };
static const MCPhysReg ImplicitList31[] = { Hexagon::GOSP, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList32[] = { Hexagon::P0, 0 };
static const MCPhysReg ImplicitList33[] = { Hexagon::P0, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList34[] = { Hexagon::P1, 0 };
static const MCPhysReg ImplicitList35[] = { Hexagon::P1, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList36[] = { Hexagon::GP, 0 };
static const MCPhysReg ImplicitList37[] = { Hexagon::PC, Hexagon::R29, 0 };
static const MCPhysReg ImplicitList38[] = { Hexagon::PC, Hexagon::R31, Hexagon::R6, Hexagon::R7, Hexagon::P0, 0 };
static const MCPhysReg ImplicitList39[] = { Hexagon::R29, Hexagon::R30, Hexagon::R31, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList40[] = { Hexagon::R14, Hexagon::R15, Hexagon::R28, Hexagon::R29, Hexagon::R30, Hexagon::R31, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList41[] = { Hexagon::R29, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList42[] = { Hexagon::R14, Hexagon::R15, Hexagon::R28, Hexagon::P0, 0 };
static const MCPhysReg ImplicitList43[] = { Hexagon::R14, Hexagon::R15, Hexagon::R28, 0 };
static const MCPhysReg ImplicitList44[] = { Hexagon::FRAMEKEY, Hexagon::R30, 0 };
static const MCPhysReg ImplicitList45[] = { Hexagon::R31, 0 };
static const MCPhysReg ImplicitList46[] = { Hexagon::P0, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList47[] = { Hexagon::PC, Hexagon::R29, Hexagon::R30, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList48[] = { Hexagon::FRAMEKEY, Hexagon::P0, Hexagon::R30, 0 };
static const MCPhysReg ImplicitList49[] = { Hexagon::FRAMEKEY, Hexagon::FRAMELIMIT, Hexagon::R29, Hexagon::R30, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList50[] = { Hexagon::VTMP, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { Hexagon::CtrRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::CtrRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::CtrRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { Hexagon::CtrRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo155[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::CtrRegs64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { Hexagon::CtrRegs64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GuestRegs64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GuestRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { Hexagon::GuestRegs64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { Hexagon::GuestRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo242[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo243[] = { { Hexagon::GeneralDoubleLow8RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo244[] = { { Hexagon::GeneralDoubleLow8RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo245[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo246[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::GeneralDoubleLow8RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo247[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo248[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo249[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo250[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo251[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo252[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo253[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo254[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo255[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo256[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo257[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo258[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo259[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo260[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo261[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo262[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo263[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo264[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo265[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo266[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo267[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo268[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo269[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo270[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo271[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo272[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo273[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo274[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo275[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo276[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo277[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo278[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo279[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo280[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo281[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo282[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo283[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo284[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo285[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo286[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo287[] = { { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo288[] = { { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo289[] = { { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo290[] = { { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo291[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo292[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo293[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo294[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc HexagonInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1 = INLINEASM
  { 2,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #2 = INLINEASM_BR
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #3 = CFI_INSTRUCTION
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #4 = EH_LABEL
  { 5,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #5 = GC_LABEL
  { 6,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #6 = ANNOTATION_LABEL
  { 7,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #7 = KILL
  { 8,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4 },  // Inst #8 = EXTRACT_SUBREG
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5 },  // Inst #9 = INSERT_SUBREG
  { 10,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #10 = IMPLICIT_DEF
  { 11,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6 },  // Inst #11 = SUBREG_TO_REG
  { 12,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4 },  // Inst #12 = COPY_TO_REGCLASS
  { 13,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #13 = DBG_VALUE
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #14 = DBG_INSTR_REF
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #15 = DBG_LABEL
  { 16,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7 },  // Inst #16 = REG_SEQUENCE
  { 17,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7 },  // Inst #17 = COPY
  { 18,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #18 = BUNDLE
  { 19,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #19 = LIFETIME_START
  { 20,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #20 = LIFETIME_END
  { 21,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8 },  // Inst #21 = PSEUDO_PROBE
  { 22,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9 },  // Inst #22 = STACKMAP
  { 23,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #23 = FENTRY_CALL
  { 24,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo10 },  // Inst #24 = PATCHPOINT
  { 25,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo11 },  // Inst #25 = LOAD_STACK_GUARD
  { 26,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #26 = PREALLOCATED_SETUP
  { 27,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12 },  // Inst #27 = PREALLOCATED_ARG
  { 28,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #28 = STATEPOINT
  { 29,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13 },  // Inst #29 = LOCAL_ESCAPE
  { 30,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #30 = FAULTING_OP
  { 31,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #31 = PATCHABLE_OP
  { 32,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #32 = PATCHABLE_FUNCTION_ENTER
  { 33,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #33 = PATCHABLE_RET
  { 34,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #34 = PATCHABLE_FUNCTION_EXIT
  { 35,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #35 = PATCHABLE_TAIL_CALL
  { 36,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14 },  // Inst #36 = PATCHABLE_EVENT_CALL
  { 37,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15 },  // Inst #37 = PATCHABLE_TYPED_EVENT_CALL
  { 38,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #38 = ICALL_BRANCH_FUNNEL
  { 39,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #39 = G_ADD
  { 40,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #40 = G_SUB
  { 41,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #41 = G_MUL
  { 42,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #42 = G_SDIV
  { 43,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #43 = G_UDIV
  { 44,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #44 = G_SREM
  { 45,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #45 = G_UREM
  { 46,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #46 = G_AND
  { 47,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #47 = G_OR
  { 48,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #48 = G_XOR
  { 49,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #49 = G_IMPLICIT_DEF
  { 50,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #50 = G_PHI
  { 51,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #51 = G_FRAME_INDEX
  { 52,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #52 = G_GLOBAL_VALUE
  { 53,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #53 = G_EXTRACT
  { 54,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #54 = G_UNMERGE_VALUES
  { 55,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #55 = G_INSERT
  { 56,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #56 = G_MERGE_VALUES
  { 57,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #57 = G_BUILD_VECTOR
  { 58,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #58 = G_BUILD_VECTOR_TRUNC
  { 59,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #59 = G_CONCAT_VECTORS
  { 60,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #60 = G_PTRTOINT
  { 61,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #61 = G_INTTOPTR
  { 62,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #62 = G_BITCAST
  { 63,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #63 = G_FREEZE
  { 64,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #64 = G_INTRINSIC_TRUNC
  { 65,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #65 = G_INTRINSIC_ROUND
  { 66,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #66 = G_INTRINSIC_LRINT
  { 67,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #67 = G_INTRINSIC_ROUNDEVEN
  { 68,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #68 = G_READCYCLECOUNTER
  { 69,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #69 = G_LOAD
  { 70,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #70 = G_SEXTLOAD
  { 71,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #71 = G_ZEXTLOAD
  { 72,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #72 = G_INDEXED_LOAD
  { 73,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #73 = G_INDEXED_SEXTLOAD
  { 74,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #74 = G_INDEXED_ZEXTLOAD
  { 75,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #75 = G_STORE
  { 76,	5,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo24 },  // Inst #76 = G_INDEXED_STORE
  { 77,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #77 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
  { 78,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #78 = G_ATOMIC_CMPXCHG
  { 79,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #79 = G_ATOMICRMW_XCHG
  { 80,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #80 = G_ATOMICRMW_ADD
  { 81,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #81 = G_ATOMICRMW_SUB
  { 82,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #82 = G_ATOMICRMW_AND
  { 83,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #83 = G_ATOMICRMW_NAND
  { 84,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #84 = G_ATOMICRMW_OR
  { 85,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #85 = G_ATOMICRMW_XOR
  { 86,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #86 = G_ATOMICRMW_MAX
  { 87,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #87 = G_ATOMICRMW_MIN
  { 88,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #88 = G_ATOMICRMW_UMAX
  { 89,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #89 = G_ATOMICRMW_UMIN
  { 90,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #90 = G_ATOMICRMW_FADD
  { 91,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #91 = G_ATOMICRMW_FSUB
  { 92,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9 },  // Inst #92 = G_FENCE
  { 93,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #93 = G_BRCOND
  { 94,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #94 = G_BRINDIRECT
  { 95,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #95 = G_INTRINSIC
  { 96,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #96 = G_INTRINSIC_W_SIDE_EFFECTS
  { 97,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #97 = G_ANYEXT
  { 98,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #98 = G_TRUNC
  { 99,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #99 = G_CONSTANT
  { 100,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #100 = G_FCONSTANT
  { 101,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #101 = G_VASTART
  { 102,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #102 = G_VAARG
  { 103,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #103 = G_SEXT
  { 104,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo29 },  // Inst #104 = G_SEXT_INREG
  { 105,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #105 = G_ZEXT
  { 106,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #106 = G_SHL
  { 107,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #107 = G_LSHR
  { 108,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #108 = G_ASHR
  { 109,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #109 = G_FSHL
  { 110,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #110 = G_FSHR
  { 111,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo32 },  // Inst #111 = G_ICMP
  { 112,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo32 },  // Inst #112 = G_FCMP
  { 113,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #113 = G_SELECT
  { 114,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #114 = G_UADDO
  { 115,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #115 = G_UADDE
  { 116,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #116 = G_USUBO
  { 117,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #117 = G_USUBE
  { 118,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #118 = G_SADDO
  { 119,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #119 = G_SADDE
  { 120,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #120 = G_SSUBO
  { 121,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #121 = G_SSUBE
  { 122,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #122 = G_UMULO
  { 123,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #123 = G_SMULO
  { 124,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #124 = G_UMULH
  { 125,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #125 = G_SMULH
  { 126,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #126 = G_UADDSAT
  { 127,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #127 = G_SADDSAT
  { 128,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #128 = G_USUBSAT
  { 129,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #129 = G_SSUBSAT
  { 130,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #130 = G_USHLSAT
  { 131,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #131 = G_SSHLSAT
  { 132,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #132 = G_SMULFIX
  { 133,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #133 = G_UMULFIX
  { 134,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #134 = G_SMULFIXSAT
  { 135,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #135 = G_UMULFIXSAT
  { 136,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #136 = G_SDIVFIX
  { 137,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #137 = G_UDIVFIX
  { 138,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #138 = G_SDIVFIXSAT
  { 139,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #139 = G_UDIVFIXSAT
  { 140,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #140 = G_FADD
  { 141,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #141 = G_FSUB
  { 142,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #142 = G_FMUL
  { 143,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #143 = G_FMA
  { 144,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #144 = G_FMAD
  { 145,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #145 = G_FDIV
  { 146,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #146 = G_FREM
  { 147,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #147 = G_FPOW
  { 148,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #148 = G_FPOWI
  { 149,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #149 = G_FEXP
  { 150,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #150 = G_FEXP2
  { 151,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #151 = G_FLOG
  { 152,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #152 = G_FLOG2
  { 153,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #153 = G_FLOG10
  { 154,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #154 = G_FNEG
  { 155,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #155 = G_FPEXT
  { 156,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #156 = G_FPTRUNC
  { 157,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #157 = G_FPTOSI
  { 158,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #158 = G_FPTOUI
  { 159,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #159 = G_SITOFP
  { 160,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #160 = G_UITOFP
  { 161,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #161 = G_FABS
  { 162,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #162 = G_FCOPYSIGN
  { 163,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #163 = G_FCANONICALIZE
  { 164,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #164 = G_FMINNUM
  { 165,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #165 = G_FMAXNUM
  { 166,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #166 = G_FMINNUM_IEEE
  { 167,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #167 = G_FMAXNUM_IEEE
  { 168,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #168 = G_FMINIMUM
  { 169,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #169 = G_FMAXIMUM
  { 170,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #170 = G_PTR_ADD
  { 171,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #171 = G_PTRMASK
  { 172,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #172 = G_SMIN
  { 173,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #173 = G_SMAX
  { 174,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #174 = G_UMIN
  { 175,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #175 = G_UMAX
  { 176,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #176 = G_ABS
  { 177,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #177 = G_BR
  { 178,	3,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo36 },  // Inst #178 = G_BRJT
  { 179,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #179 = G_INSERT_VECTOR_ELT
  { 180,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo38 },  // Inst #180 = G_EXTRACT_VECTOR_ELT
  { 181,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo39 },  // Inst #181 = G_SHUFFLE_VECTOR
  { 182,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #182 = G_CTTZ
  { 183,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #183 = G_CTTZ_ZERO_UNDEF
  { 184,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #184 = G_CTLZ
  { 185,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #185 = G_CTLZ_ZERO_UNDEF
  { 186,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #186 = G_CTPOP
  { 187,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #187 = G_BSWAP
  { 188,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #188 = G_BITREVERSE
  { 189,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #189 = G_FCEIL
  { 190,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #190 = G_FCOS
  { 191,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #191 = G_FSIN
  { 192,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #192 = G_FSQRT
  { 193,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #193 = G_FFLOOR
  { 194,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #194 = G_FRINT
  { 195,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #195 = G_FNEARBYINT
  { 196,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #196 = G_ADDRSPACE_CAST
  { 197,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #197 = G_BLOCK_ADDR
  { 198,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #198 = G_JUMP_TABLE
  { 199,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40 },  // Inst #199 = G_DYN_STACKALLOC
  { 200,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #200 = G_STRICT_FADD
  { 201,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #201 = G_STRICT_FSUB
  { 202,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #202 = G_STRICT_FMUL
  { 203,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #203 = G_STRICT_FDIV
  { 204,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #204 = G_STRICT_FREM
  { 205,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #205 = G_STRICT_FMA
  { 206,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #206 = G_STRICT_FSQRT
  { 207,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #207 = G_READ_REGISTER
  { 208,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo41 },  // Inst #208 = G_WRITE_REGISTER
  { 209,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo42 },  // Inst #209 = G_MEMCPY
  { 210,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo42 },  // Inst #210 = G_MEMMOVE
  { 211,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo42 },  // Inst #211 = G_MEMSET
  { 212,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo38 },  // Inst #212 = G_VECREDUCE_SEQ_FADD
  { 213,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo38 },  // Inst #213 = G_VECREDUCE_SEQ_FMUL
  { 214,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #214 = G_VECREDUCE_FADD
  { 215,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #215 = G_VECREDUCE_FMUL
  { 216,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #216 = G_VECREDUCE_FMAX
  { 217,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #217 = G_VECREDUCE_FMIN
  { 218,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #218 = G_VECREDUCE_ADD
  { 219,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #219 = G_VECREDUCE_MUL
  { 220,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #220 = G_VECREDUCE_AND
  { 221,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #221 = G_VECREDUCE_OR
  { 222,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #222 = G_VECREDUCE_XOR
  { 223,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #223 = G_VECREDUCE_SMAX
  { 224,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #224 = G_VECREDUCE_SMIN
  { 225,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #225 = G_VECREDUCE_UMAX
  { 226,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #226 = G_VECREDUCE_UMIN
  { 227,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo), 0x3ULL, nullptr, nullptr, OperandInfo43 },  // Inst #227 = A2_addsp
  { 228,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x2aULL, nullptr, nullptr, OperandInfo44 },  // Inst #228 = A2_iconst
  { 229,	2,	1,	4,	3,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #229 = A2_neg
  { 230,	2,	1,	4,	3,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #230 = A2_not
  { 231,	3,	1,	4,	4,	0|(1ULL<<MCID::Pseudo), 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #231 = A2_tfrf
  { 232,	3,	1,	4,	5,	0|(1ULL<<MCID::Pseudo), 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #232 = A2_tfrfnew
  { 233,	2,	1,	4,	6,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Predicable), 0x0ULL, nullptr, nullptr, OperandInfo47 },  // Inst #233 = A2_tfrp
  { 234,	3,	1,	4,	6,	0|(1ULL<<MCID::Pseudo), 0xc00ULL, nullptr, nullptr, OperandInfo48 },  // Inst #234 = A2_tfrpf
  { 235,	3,	1,	4,	7,	0|(1ULL<<MCID::Pseudo), 0x1c00ULL, nullptr, nullptr, OperandInfo48 },  // Inst #235 = A2_tfrpfnew
  { 236,	2,	1,	4,	6,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x3ULL, nullptr, nullptr, OperandInfo49 },  // Inst #236 = A2_tfrpi
  { 237,	3,	1,	4,	6,	0|(1ULL<<MCID::Pseudo), 0x400ULL, nullptr, nullptr, OperandInfo48 },  // Inst #237 = A2_tfrpt
  { 238,	3,	1,	4,	7,	0|(1ULL<<MCID::Pseudo), 0x1400ULL, nullptr, nullptr, OperandInfo48 },  // Inst #238 = A2_tfrptnew
  { 239,	3,	1,	4,	4,	0|(1ULL<<MCID::Pseudo), 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #239 = A2_tfrt
  { 240,	3,	1,	4,	5,	0|(1ULL<<MCID::Pseudo), 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #240 = A2_tfrtnew
  { 241,	3,	1,	4,	8,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo50 },  // Inst #241 = A2_vaddb_map
  { 242,	3,	1,	4,	8,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo50 },  // Inst #242 = A2_vsubb_map
  { 243,	2,	1,	4,	6,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #243 = A2_zxtb
  { 244,	3,	1,	4,	9,	0|(1ULL<<MCID::Pseudo), 0x3ULL, nullptr, nullptr, OperandInfo51 },  // Inst #244 = A4_boundscheck
  { 245,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x2aULL, ImplicitList1, ImplicitList2, OperandInfo9 },  // Inst #245 = ADJCALLSTACKDOWN
  { 246,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x2aULL, ImplicitList3, ImplicitList4, OperandInfo9 },  // Inst #246 = ADJCALLSTACKUP
  { 247,	3,	1,	4,	10,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Compare), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #247 = C2_cmpgei
  { 248,	3,	1,	4,	10,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Compare), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #248 = C2_cmpgeui
  { 249,	3,	1,	4,	10,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #249 = C2_cmplt
  { 250,	3,	1,	4,	10,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #250 = C2_cmpltu
  { 251,	2,	1,	4,	11,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo54 },  // Inst #251 = C2_pxfer_map
  { 252,	1,	0,	4,	12,	0|(1ULL<<MCID::Pseudo), 0x2aULL, nullptr, nullptr, OperandInfo2 },  // Inst #252 = DUPLEX_Pseudo
  { 253,	1,	0,	4,	13,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x23ULL, ImplicitList5, ImplicitList6, OperandInfo2 },  // Inst #253 = ENDLOOP0
  { 254,	1,	0,	4,	13,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x23ULL, ImplicitList7, ImplicitList8, OperandInfo2 },  // Inst #254 = ENDLOOP01
  { 255,	1,	0,	4,	13,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x23ULL, ImplicitList9, ImplicitList10, OperandInfo2 },  // Inst #255 = ENDLOOP1
  { 256,	0,	0,	4,	14,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x25ULL, ImplicitList11, ImplicitList12, nullptr },  // Inst #256 = J2_endloop0
  { 257,	0,	0,	4,	14,	0|(1ULL<<MCID::Pseudo), 0x25ULL, ImplicitList13, ImplicitList14, nullptr },  // Inst #257 = J2_endloop01
  { 258,	0,	0,	4,	14,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x25ULL, ImplicitList15, ImplicitList16, nullptr },  // Inst #258 = J2_endloop1
  { 259,	2,	0,	4,	15,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo55 },  // Inst #259 = J2_jumpf_nopred_map
  { 260,	2,	0,	4,	16,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo56 },  // Inst #260 = J2_jumprf_nopred_map
  { 261,	2,	0,	4,	16,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo56 },  // Inst #261 = J2_jumprt_nopred_map
  { 262,	2,	0,	4,	15,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo55 },  // Inst #262 = J2_jumpt_nopred_map
  { 263,	1,	0,	4,	17,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo2 },  // Inst #263 = J2_trap1_noregmap
  { 264,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo57 },  // Inst #264 = L2_loadalignb_zomap
  { 265,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo57 },  // Inst #265 = L2_loadalignh_zomap
  { 266,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo45 },  // Inst #266 = L2_loadbsw2_zomap
  { 267,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo58 },  // Inst #267 = L2_loadbsw4_zomap
  { 268,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo45 },  // Inst #268 = L2_loadbzw2_zomap
  { 269,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo58 },  // Inst #269 = L2_loadbzw4_zomap
  { 270,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo45 },  // Inst #270 = L2_loadrb_zomap
  { 271,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo58 },  // Inst #271 = L2_loadrd_zomap
  { 272,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo45 },  // Inst #272 = L2_loadrh_zomap
  { 273,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo45 },  // Inst #273 = L2_loadri_zomap
  { 274,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo45 },  // Inst #274 = L2_loadrub_zomap
  { 275,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo45 },  // Inst #275 = L2_loadruh_zomap
  { 276,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #276 = L2_ploadrbf_zomap
  { 277,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #277 = L2_ploadrbfnew_zomap
  { 278,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #278 = L2_ploadrbt_zomap
  { 279,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #279 = L2_ploadrbtnew_zomap
  { 280,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo59 },  // Inst #280 = L2_ploadrdf_zomap
  { 281,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo59 },  // Inst #281 = L2_ploadrdfnew_zomap
  { 282,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo59 },  // Inst #282 = L2_ploadrdt_zomap
  { 283,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo59 },  // Inst #283 = L2_ploadrdtnew_zomap
  { 284,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #284 = L2_ploadrhf_zomap
  { 285,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #285 = L2_ploadrhfnew_zomap
  { 286,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #286 = L2_ploadrht_zomap
  { 287,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #287 = L2_ploadrhtnew_zomap
  { 288,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #288 = L2_ploadrif_zomap
  { 289,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #289 = L2_ploadrifnew_zomap
  { 290,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #290 = L2_ploadrit_zomap
  { 291,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #291 = L2_ploadritnew_zomap
  { 292,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #292 = L2_ploadrubf_zomap
  { 293,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #293 = L2_ploadrubfnew_zomap
  { 294,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #294 = L2_ploadrubt_zomap
  { 295,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #295 = L2_ploadrubtnew_zomap
  { 296,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #296 = L2_ploadruhf_zomap
  { 297,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #297 = L2_ploadruhfnew_zomap
  { 298,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #298 = L2_ploadruht_zomap
  { 299,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo46 },  // Inst #299 = L2_ploadruhtnew_zomap
  { 300,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #300 = L4_add_memopb_zomap
  { 301,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #301 = L4_add_memoph_zomap
  { 302,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #302 = L4_add_memopw_zomap
  { 303,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #303 = L4_and_memopb_zomap
  { 304,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #304 = L4_and_memoph_zomap
  { 305,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #305 = L4_and_memopw_zomap
  { 306,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #306 = L4_iadd_memopb_zomap
  { 307,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #307 = L4_iadd_memoph_zomap
  { 308,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #308 = L4_iadd_memopw_zomap
  { 309,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #309 = L4_iand_memopb_zomap
  { 310,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #310 = L4_iand_memoph_zomap
  { 311,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #311 = L4_iand_memopw_zomap
  { 312,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #312 = L4_ior_memopb_zomap
  { 313,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #313 = L4_ior_memoph_zomap
  { 314,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #314 = L4_ior_memopw_zomap
  { 315,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #315 = L4_isub_memopb_zomap
  { 316,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #316 = L4_isub_memoph_zomap
  { 317,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #317 = L4_isub_memopw_zomap
  { 318,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #318 = L4_or_memopb_zomap
  { 319,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #319 = L4_or_memoph_zomap
  { 320,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #320 = L4_or_memopw_zomap
  { 321,	1,	0,	4,	23,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo60 },  // Inst #321 = L4_return_map_to_raw_f
  { 322,	1,	0,	4,	24,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo60 },  // Inst #322 = L4_return_map_to_raw_fnew_pnt
  { 323,	1,	0,	4,	24,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo60 },  // Inst #323 = L4_return_map_to_raw_fnew_pt
  { 324,	1,	0,	4,	25,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo60 },  // Inst #324 = L4_return_map_to_raw_t
  { 325,	1,	0,	4,	26,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo60 },  // Inst #325 = L4_return_map_to_raw_tnew_pnt
  { 326,	1,	0,	4,	26,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo60 },  // Inst #326 = L4_return_map_to_raw_tnew_pt
  { 327,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #327 = L4_sub_memopb_zomap
  { 328,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #328 = L4_sub_memoph_zomap
  { 329,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #329 = L4_sub_memopw_zomap
  { 330,	0,	0,	4,	27,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, nullptr },  // Inst #330 = L6_deallocframe_map_to_raw
  { 331,	0,	0,	4,	28,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, nullptr },  // Inst #331 = L6_return_map_to_raw
  { 332,	3,	1,	4,	29,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x1b4800026ULL, nullptr, nullptr, OperandInfo61 },  // Inst #332 = LDriw_ctr
  { 333,	3,	1,	4,	29,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x1b4800026ULL, nullptr, nullptr, OperandInfo52 },  // Inst #333 = LDriw_pred
  { 334,	3,	1,	4,	30,	0|(1ULL<<MCID::Pseudo), 0x134808027ULL, nullptr, nullptr, OperandInfo62 },  // Inst #334 = M2_mpysmi
  { 335,	3,	1,	4,	31,	0|(1ULL<<MCID::Pseudo), 0x8027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #335 = M2_mpyui
  { 336,	4,	1,	4,	32,	0|(1ULL<<MCID::Pseudo), 0x27ULL, nullptr, nullptr, OperandInfo64 },  // Inst #336 = M2_vrcmpys_acc_s1
  { 337,	3,	1,	4,	31,	0|(1ULL<<MCID::Pseudo), 0x27ULL, nullptr, nullptr, OperandInfo65 },  // Inst #337 = M2_vrcmpys_s1
  { 338,	3,	1,	4,	31,	0|(1ULL<<MCID::Pseudo), 0x8027ULL, nullptr, nullptr, OperandInfo66 },  // Inst #338 = M2_vrcmpys_s1rp
  { 339,	3,	1,	4,	33,	0|(1ULL<<MCID::Pseudo), 0x27ULL, nullptr, nullptr, OperandInfo50 },  // Inst #339 = M7_vdmpy
  { 340,	4,	1,	4,	34,	0|(1ULL<<MCID::Pseudo), 0x27ULL, nullptr, nullptr, OperandInfo67 },  // Inst #340 = M7_vdmpy_acc
  { 341,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x2aULL, ImplicitList17, nullptr, OperandInfo44 },  // Inst #341 = PS_aligna
  { 342,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x2aULL, nullptr, ImplicitList3, OperandInfo62 },  // Inst #342 = PS_alloca
  { 343,	1,	0,	4,	35,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb1080002aULL, nullptr, nullptr, OperandInfo2 },  // Inst #343 = PS_call_nr
  { 344,	0,	0,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0xaaULL, nullptr, nullptr, nullptr },  // Inst #344 = PS_crash
  { 345,	1,	1,	4,	11,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable), 0x7ULL, nullptr, nullptr, OperandInfo60 },  // Inst #345 = PS_false
  { 346,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x21480002aULL, nullptr, nullptr, OperandInfo62 },  // Inst #346 = PS_fi
  { 347,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x21680002aULL, nullptr, nullptr, OperandInfo68 },  // Inst #347 = PS_fia
  { 348,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x380000000026ULL, ImplicitList18, ImplicitList18, OperandInfo69 },  // Inst #348 = PS_loadrb_pci
  { 349,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x380000000026ULL, ImplicitList18, ImplicitList18, OperandInfo70 },  // Inst #349 = PS_loadrb_pcr
  { 350,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x980000000026ULL, ImplicitList18, ImplicitList18, OperandInfo71 },  // Inst #350 = PS_loadrd_pci
  { 351,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x980000000026ULL, ImplicitList18, ImplicitList18, OperandInfo72 },  // Inst #351 = PS_loadrd_pcr
  { 352,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x580000000026ULL, ImplicitList18, ImplicitList18, OperandInfo69 },  // Inst #352 = PS_loadrh_pci
  { 353,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x580000000026ULL, ImplicitList18, ImplicitList18, OperandInfo70 },  // Inst #353 = PS_loadrh_pcr
  { 354,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x780000000026ULL, ImplicitList18, ImplicitList18, OperandInfo69 },  // Inst #354 = PS_loadri_pci
  { 355,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x780000000026ULL, ImplicitList18, ImplicitList18, OperandInfo70 },  // Inst #355 = PS_loadri_pcr
  { 356,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x380000000026ULL, ImplicitList18, ImplicitList18, OperandInfo69 },  // Inst #356 = PS_loadrub_pci
  { 357,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x380000000026ULL, ImplicitList18, ImplicitList18, OperandInfo70 },  // Inst #357 = PS_loadrub_pcr
  { 358,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x580000000026ULL, ImplicitList18, ImplicitList18, OperandInfo69 },  // Inst #358 = PS_loadruh_pci
  { 359,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x580000000026ULL, ImplicitList18, ImplicitList18, OperandInfo70 },  // Inst #359 = PS_loadruh_pcr
  { 360,	4,	1,	4,	6,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo73 },  // Inst #360 = PS_pselect
  { 361,	1,	1,	4,	37,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable), 0x12ULL, nullptr, nullptr, OperandInfo74 },  // Inst #361 = PS_qfalse
  { 362,	1,	1,	4,	37,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable), 0x12ULL, nullptr, nullptr, OperandInfo74 },  // Inst #362 = PS_qtrue
  { 363,	6,	1,	4,	38,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x38000000002bULL, ImplicitList18, ImplicitList18, OperandInfo75 },  // Inst #363 = PS_storerb_pci
  { 364,	5,	1,	4,	39,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x38000000002bULL, ImplicitList18, ImplicitList18, OperandInfo76 },  // Inst #364 = PS_storerb_pcr
  { 365,	6,	1,	4,	38,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x78000000002bULL, ImplicitList18, ImplicitList18, OperandInfo77 },  // Inst #365 = PS_storerd_pci
  { 366,	5,	1,	4,	39,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x78000000002bULL, ImplicitList18, ImplicitList18, OperandInfo78 },  // Inst #366 = PS_storerd_pcr
  { 367,	6,	1,	4,	38,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x58000000002bULL, ImplicitList18, ImplicitList18, OperandInfo75 },  // Inst #367 = PS_storerf_pci
  { 368,	5,	1,	4,	39,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x58000000002bULL, ImplicitList18, ImplicitList18, OperandInfo76 },  // Inst #368 = PS_storerf_pcr
  { 369,	6,	1,	4,	38,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x58000000002bULL, ImplicitList18, ImplicitList18, OperandInfo75 },  // Inst #369 = PS_storerh_pci
  { 370,	5,	1,	4,	39,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x58000000002bULL, ImplicitList18, ImplicitList18, OperandInfo76 },  // Inst #370 = PS_storerh_pcr
  { 371,	6,	1,	4,	38,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x78000000002bULL, ImplicitList18, ImplicitList18, OperandInfo75 },  // Inst #371 = PS_storeri_pci
  { 372,	5,	1,	4,	39,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x78000000002bULL, ImplicitList18, ImplicitList18, OperandInfo76 },  // Inst #372 = PS_storeri_pcr
  { 373,	1,	0,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x2aULL, nullptr, nullptr, OperandInfo2 },  // Inst #373 = PS_tailcall_i
  { 374,	1,	0,	4,	40,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x1000000025ULL, nullptr, ImplicitList19, OperandInfo79 },  // Inst #374 = PS_tailcall_r
  { 375,	1,	1,	4,	11,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable), 0x7ULL, nullptr, nullptr, OperandInfo60 },  // Inst #375 = PS_true
  { 376,	1,	1,	4,	41,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable), 0x13ULL, nullptr, nullptr, OperandInfo80 },  // Inst #376 = PS_vdd0
  { 377,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x2aULL, nullptr, nullptr, OperandInfo81 },  // Inst #377 = PS_vloadrq_ai
  { 378,	3,	1,	4,	42,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0xa00000000014ULL, nullptr, nullptr, OperandInfo82 },  // Inst #378 = PS_vloadrv_ai
  { 379,	3,	1,	4,	42,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0xa00000000014ULL, nullptr, nullptr, OperandInfo82 },  // Inst #379 = PS_vloadrv_nt_ai
  { 380,	3,	1,	4,	42,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0xa00000000014ULL, nullptr, nullptr, OperandInfo83 },  // Inst #380 = PS_vloadrw_ai
  { 381,	3,	1,	4,	42,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0xa00000000014ULL, nullptr, nullptr, OperandInfo83 },  // Inst #381 = PS_vloadrw_nt_ai
  { 382,	3,	1,	4,	43,	0|(1ULL<<MCID::Pseudo), 0x2aULL, nullptr, nullptr, OperandInfo50 },  // Inst #382 = PS_vmulw
  { 383,	4,	1,	4,	43,	0|(1ULL<<MCID::Pseudo), 0x2aULL, nullptr, nullptr, OperandInfo67 },  // Inst #383 = PS_vmulw_acc
  { 384,	4,	1,	4,	44,	0|(1ULL<<MCID::Pseudo), 0x12ULL, nullptr, nullptr, OperandInfo84 },  // Inst #384 = PS_vselect
  { 385,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x2aULL, nullptr, nullptr, OperandInfo85 },  // Inst #385 = PS_vstorerq_ai
  { 386,	3,	0,	4,	45,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0xa00000000016ULL, nullptr, nullptr, OperandInfo86 },  // Inst #386 = PS_vstorerv_ai
  { 387,	3,	0,	4,	45,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0xa00000000016ULL, nullptr, nullptr, OperandInfo86 },  // Inst #387 = PS_vstorerv_nt_ai
  { 388,	3,	0,	4,	45,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0xa00000000016ULL, nullptr, nullptr, OperandInfo87 },  // Inst #388 = PS_vstorerw_ai
  { 389,	3,	0,	4,	45,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0xa00000000016ULL, nullptr, nullptr, OperandInfo87 },  // Inst #389 = PS_vstorerw_nt_ai
  { 390,	4,	1,	4,	46,	0|(1ULL<<MCID::Pseudo), 0x13ULL, nullptr, nullptr, OperandInfo88 },  // Inst #390 = PS_wselect
  { 391,	3,	1,	4,	47,	0|(1ULL<<MCID::Pseudo), 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #391 = S2_asr_i_p_rnd_goodsyntax
  { 392,	3,	1,	4,	47,	0|(1ULL<<MCID::Pseudo), 0x802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #392 = S2_asr_i_r_rnd_goodsyntax
  { 393,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #393 = S2_pstorerbf_zomap
  { 394,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #394 = S2_pstorerbnewf_zomap
  { 395,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #395 = S2_pstorerbnewt_zomap
  { 396,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #396 = S2_pstorerbt_zomap
  { 397,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo51 },  // Inst #397 = S2_pstorerdf_zomap
  { 398,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo51 },  // Inst #398 = S2_pstorerdt_zomap
  { 399,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #399 = S2_pstorerff_zomap
  { 400,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #400 = S2_pstorerft_zomap
  { 401,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #401 = S2_pstorerhf_zomap
  { 402,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #402 = S2_pstorerhnewf_zomap
  { 403,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #403 = S2_pstorerhnewt_zomap
  { 404,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #404 = S2_pstorerht_zomap
  { 405,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #405 = S2_pstorerif_zomap
  { 406,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #406 = S2_pstorerinewf_zomap
  { 407,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #407 = S2_pstorerinewt_zomap
  { 408,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #408 = S2_pstorerit_zomap
  { 409,	2,	0,	4,	50,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #409 = S2_storerb_zomap
  { 410,	2,	0,	4,	51,	0|(1ULL<<MCID::Pseudo), 0x10028ULL, nullptr, nullptr, OperandInfo45 },  // Inst #410 = S2_storerbnew_zomap
  { 411,	2,	0,	4,	50,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo90 },  // Inst #411 = S2_storerd_zomap
  { 412,	2,	0,	4,	50,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #412 = S2_storerf_zomap
  { 413,	2,	0,	4,	50,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #413 = S2_storerh_zomap
  { 414,	2,	0,	4,	51,	0|(1ULL<<MCID::Pseudo), 0x10028ULL, nullptr, nullptr, OperandInfo45 },  // Inst #414 = S2_storerhnew_zomap
  { 415,	2,	0,	4,	50,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo45 },  // Inst #415 = S2_storeri_zomap
  { 416,	2,	0,	4,	51,	0|(1ULL<<MCID::Pseudo), 0x10028ULL, nullptr, nullptr, OperandInfo45 },  // Inst #416 = S2_storerinew_zomap
  { 417,	5,	1,	4,	52,	0|(1ULL<<MCID::Pseudo), 0x802dULL, nullptr, nullptr, OperandInfo91 },  // Inst #417 = S2_tableidxb_goodsyntax
  { 418,	5,	1,	4,	52,	0|(1ULL<<MCID::Pseudo), 0x802dULL, nullptr, nullptr, OperandInfo91 },  // Inst #418 = S2_tableidxd_goodsyntax
  { 419,	5,	1,	4,	52,	0|(1ULL<<MCID::Pseudo), 0x802dULL, nullptr, nullptr, OperandInfo91 },  // Inst #419 = S2_tableidxh_goodsyntax
  { 420,	5,	1,	4,	52,	0|(1ULL<<MCID::Pseudo), 0x802dULL, nullptr, nullptr, OperandInfo91 },  // Inst #420 = S2_tableidxw_goodsyntax
  { 421,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #421 = S4_pstorerbfnew_zomap
  { 422,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #422 = S4_pstorerbnewfnew_zomap
  { 423,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #423 = S4_pstorerbnewtnew_zomap
  { 424,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #424 = S4_pstorerbtnew_zomap
  { 425,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo51 },  // Inst #425 = S4_pstorerdfnew_zomap
  { 426,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo51 },  // Inst #426 = S4_pstorerdtnew_zomap
  { 427,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #427 = S4_pstorerffnew_zomap
  { 428,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #428 = S4_pstorerftnew_zomap
  { 429,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #429 = S4_pstorerhfnew_zomap
  { 430,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #430 = S4_pstorerhnewfnew_zomap
  { 431,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #431 = S4_pstorerhnewtnew_zomap
  { 432,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #432 = S4_pstorerhtnew_zomap
  { 433,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #433 = S4_pstorerifnew_zomap
  { 434,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #434 = S4_pstorerinewfnew_zomap
  { 435,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20028ULL, nullptr, nullptr, OperandInfo53 },  // Inst #435 = S4_pstorerinewtnew_zomap
  { 436,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo53 },  // Inst #436 = S4_pstoreritnew_zomap
  { 437,	2,	0,	4,	54,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #437 = S4_storeirb_zomap
  { 438,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #438 = S4_storeirbf_zomap
  { 439,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #439 = S4_storeirbfnew_zomap
  { 440,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #440 = S4_storeirbt_zomap
  { 441,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #441 = S4_storeirbtnew_zomap
  { 442,	2,	0,	4,	54,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #442 = S4_storeirh_zomap
  { 443,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #443 = S4_storeirhf_zomap
  { 444,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #444 = S4_storeirhfnew_zomap
  { 445,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #445 = S4_storeirht_zomap
  { 446,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #446 = S4_storeirhtnew_zomap
  { 447,	2,	0,	4,	54,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #447 = S4_storeiri_zomap
  { 448,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #448 = S4_storeirif_zomap
  { 449,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #449 = S4_storeirifnew_zomap
  { 450,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #450 = S4_storeirit_zomap
  { 451,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo52 },  // Inst #451 = S4_storeiritnew_zomap
  { 452,	3,	1,	4,	47,	0|(1ULL<<MCID::Pseudo), 0x802dULL, nullptr, nullptr, OperandInfo92 },  // Inst #452 = S5_asrhub_rnd_sat_goodsyntax
  { 453,	3,	1,	4,	47,	0|(1ULL<<MCID::Pseudo), 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #453 = S5_vasrhrnd_goodsyntax
  { 454,	1,	0,	4,	57,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo2 },  // Inst #454 = S6_allocframe_to_raw
  { 455,	3,	0,	4,	58,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x1b280002bULL, nullptr, nullptr, OperandInfo93 },  // Inst #455 = STriw_ctr
  { 456,	3,	0,	4,	58,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x1b280002bULL, nullptr, nullptr, OperandInfo94 },  // Inst #456 = STriw_pred
  { 457,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo95 },  // Inst #457 = V6_MAP_equb
  { 458,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo96 },  // Inst #458 = V6_MAP_equb_and
  { 459,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000028ULL, nullptr, nullptr, OperandInfo96 },  // Inst #459 = V6_MAP_equb_ior
  { 460,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo96 },  // Inst #460 = V6_MAP_equb_xor
  { 461,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo95 },  // Inst #461 = V6_MAP_equh
  { 462,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo96 },  // Inst #462 = V6_MAP_equh_and
  { 463,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000028ULL, nullptr, nullptr, OperandInfo96 },  // Inst #463 = V6_MAP_equh_ior
  { 464,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo96 },  // Inst #464 = V6_MAP_equh_xor
  { 465,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo95 },  // Inst #465 = V6_MAP_equw
  { 466,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo96 },  // Inst #466 = V6_MAP_equw_and
  { 467,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000028ULL, nullptr, nullptr, OperandInfo96 },  // Inst #467 = V6_MAP_equw_ior
  { 468,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo96 },  // Inst #468 = V6_MAP_equw_xor
  { 469,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo97 },  // Inst #469 = V6_extractw_alt
  { 470,	2,	1,	4,	59,	0|(1ULL<<MCID::Pseudo), 0x8000000000008012ULL, nullptr, nullptr, OperandInfo98 },  // Inst #470 = V6_hi
  { 471,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008014ULL, nullptr, nullptr, OperandInfo99 },  // Inst #471 = V6_ld0
  { 472,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #472 = V6_ldcnp0
  { 473,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #473 = V6_ldcnpnt0
  { 474,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #474 = V6_ldcp0
  { 475,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #475 = V6_ldcpnt0
  { 476,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #476 = V6_ldnp0
  { 477,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #477 = V6_ldnpnt0
  { 478,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008014ULL, nullptr, nullptr, OperandInfo99 },  // Inst #478 = V6_ldnt0
  { 479,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo99 },  // Inst #479 = V6_ldntnt0
  { 480,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #480 = V6_ldp0
  { 481,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #481 = V6_ldpnt0
  { 482,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #482 = V6_ldtnp0
  { 483,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #483 = V6_ldtnpnt0
  { 484,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #484 = V6_ldtp0
  { 485,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo100 },  // Inst #485 = V6_ldtpnt0
  { 486,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008014ULL, nullptr, nullptr, OperandInfo99 },  // Inst #486 = V6_ldu0
  { 487,	2,	1,	4,	59,	0|(1ULL<<MCID::Pseudo), 0x8000000000008012ULL, nullptr, nullptr, OperandInfo98 },  // Inst #487 = V6_lo
  { 488,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo101 },  // Inst #488 = V6_st0
  { 489,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000010016ULL, nullptr, nullptr, OperandInfo101 },  // Inst #489 = V6_stn0
  { 490,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000010016ULL, nullptr, nullptr, OperandInfo101 },  // Inst #490 = V6_stnnt0
  { 491,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo102 },  // Inst #491 = V6_stnp0
  { 492,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo102 },  // Inst #492 = V6_stnpnt0
  { 493,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo103 },  // Inst #493 = V6_stnq0
  { 494,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo103 },  // Inst #494 = V6_stnqnt0
  { 495,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo101 },  // Inst #495 = V6_stnt0
  { 496,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo102 },  // Inst #496 = V6_stp0
  { 497,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo102 },  // Inst #497 = V6_stpnt0
  { 498,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo103 },  // Inst #498 = V6_stq0
  { 499,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo103 },  // Inst #499 = V6_stqnt0
  { 500,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo101 },  // Inst #500 = V6_stu0
  { 501,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo102 },  // Inst #501 = V6_stunp0
  { 502,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000016ULL, nullptr, nullptr, OperandInfo102 },  // Inst #502 = V6_stup0
  { 503,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #503 = V6_vabsb_alt
  { 504,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #504 = V6_vabsb_sat_alt
  { 505,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #505 = V6_vabsdiffh_alt
  { 506,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #506 = V6_vabsdiffub_alt
  { 507,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #507 = V6_vabsdiffuh_alt
  { 508,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #508 = V6_vabsdiffw_alt
  { 509,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #509 = V6_vabsh_alt
  { 510,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #510 = V6_vabsh_sat_alt
  { 511,	2,	1,	4,	60,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #511 = V6_vabsub_alt
  { 512,	2,	1,	4,	60,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #512 = V6_vabsuh_alt
  { 513,	2,	1,	4,	60,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #513 = V6_vabsuw_alt
  { 514,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #514 = V6_vabsw_alt
  { 515,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #515 = V6_vabsw_sat_alt
  { 516,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #516 = V6_vaddb_alt
  { 517,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #517 = V6_vaddb_dv_alt
  { 518,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #518 = V6_vaddbnq_alt
  { 519,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #519 = V6_vaddbq_alt
  { 520,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #520 = V6_vaddbsat_alt
  { 521,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #521 = V6_vaddbsat_dv_alt
  { 522,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #522 = V6_vaddh_alt
  { 523,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #523 = V6_vaddh_dv_alt
  { 524,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #524 = V6_vaddhnq_alt
  { 525,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #525 = V6_vaddhq_alt
  { 526,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #526 = V6_vaddhsat_alt
  { 527,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #527 = V6_vaddhsat_dv_alt
  { 528,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo108 },  // Inst #528 = V6_vaddhw_acc_alt
  { 529,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #529 = V6_vaddhw_alt
  { 530,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo108 },  // Inst #530 = V6_vaddubh_acc_alt
  { 531,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #531 = V6_vaddubh_alt
  { 532,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #532 = V6_vaddubsat_alt
  { 533,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #533 = V6_vaddubsat_dv_alt
  { 534,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #534 = V6_vadduhsat_alt
  { 535,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #535 = V6_vadduhsat_dv_alt
  { 536,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo108 },  // Inst #536 = V6_vadduhw_acc_alt
  { 537,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #537 = V6_vadduhw_alt
  { 538,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #538 = V6_vadduwsat_alt
  { 539,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #539 = V6_vadduwsat_dv_alt
  { 540,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #540 = V6_vaddw_alt
  { 541,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #541 = V6_vaddw_dv_alt
  { 542,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #542 = V6_vaddwnq_alt
  { 543,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #543 = V6_vaddwq_alt
  { 544,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #544 = V6_vaddwsat_alt
  { 545,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #545 = V6_vaddwsat_dv_alt
  { 546,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo110 },  // Inst #546 = V6_vandnqrt_acc_alt
  { 547,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo111 },  // Inst #547 = V6_vandnqrt_alt
  { 548,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo110 },  // Inst #548 = V6_vandqrt_acc_alt
  { 549,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo111 },  // Inst #549 = V6_vandqrt_alt
  { 550,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000028ULL, nullptr, nullptr, OperandInfo112 },  // Inst #550 = V6_vandvrt_acc_alt
  { 551,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo113 },  // Inst #551 = V6_vandvrt_alt
  { 552,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #552 = V6_vaslh_acc_alt
  { 553,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #553 = V6_vaslh_alt
  { 554,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #554 = V6_vaslhv_alt
  { 555,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #555 = V6_vaslw_acc_alt
  { 556,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #556 = V6_vaslw_alt
  { 557,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #557 = V6_vaslwv_alt
  { 558,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo108 },  // Inst #558 = V6_vasr_into_alt
  { 559,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #559 = V6_vasrh_acc_alt
  { 560,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #560 = V6_vasrh_alt
  { 561,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #561 = V6_vasrhv_alt
  { 562,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #562 = V6_vasrw_acc_alt
  { 563,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #563 = V6_vasrw_alt
  { 564,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #564 = V6_vasrwv_alt
  { 565,	2,	1,	4,	59,	0|(1ULL<<MCID::Pseudo), 0x8000000000008013ULL, nullptr, nullptr, OperandInfo116 },  // Inst #565 = V6_vassignp
  { 566,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #566 = V6_vavgb_alt
  { 567,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #567 = V6_vavgbrnd_alt
  { 568,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #568 = V6_vavgh_alt
  { 569,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #569 = V6_vavghrnd_alt
  { 570,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #570 = V6_vavgub_alt
  { 571,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #571 = V6_vavgubrnd_alt
  { 572,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #572 = V6_vavguh_alt
  { 573,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #573 = V6_vavguhrnd_alt
  { 574,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #574 = V6_vavguw_alt
  { 575,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #575 = V6_vavguwrnd_alt
  { 576,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #576 = V6_vavgw_alt
  { 577,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #577 = V6_vavgwrnd_alt
  { 578,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #578 = V6_vcl0h_alt
  { 579,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #579 = V6_vcl0w_alt
  { 580,	1,	1,	4,	59,	0|(1ULL<<MCID::Pseudo), 0x8000000000008012ULL, nullptr, nullptr, OperandInfo117 },  // Inst #580 = V6_vd0
  { 581,	1,	1,	4,	61,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo80 },  // Inst #581 = V6_vdd0
  { 582,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #582 = V6_vdealb4w_alt
  { 583,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #583 = V6_vdealb_alt
  { 584,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #584 = V6_vdealh_alt
  { 585,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #585 = V6_vdmpybus_acc_alt
  { 586,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #586 = V6_vdmpybus_alt
  { 587,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo118 },  // Inst #587 = V6_vdmpybus_dv_acc_alt
  { 588,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo119 },  // Inst #588 = V6_vdmpybus_dv_alt
  { 589,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #589 = V6_vdmpyhb_acc_alt
  { 590,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #590 = V6_vdmpyhb_alt
  { 591,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo118 },  // Inst #591 = V6_vdmpyhb_dv_acc_alt
  { 592,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo119 },  // Inst #592 = V6_vdmpyhb_dv_alt
  { 593,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo120 },  // Inst #593 = V6_vdmpyhisat_acc_alt
  { 594,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo121 },  // Inst #594 = V6_vdmpyhisat_alt
  { 595,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #595 = V6_vdmpyhsat_acc_alt
  { 596,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #596 = V6_vdmpyhsat_alt
  { 597,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo120 },  // Inst #597 = V6_vdmpyhsuisat_acc_alt
  { 598,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo121 },  // Inst #598 = V6_vdmpyhsuisat_alt
  { 599,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #599 = V6_vdmpyhsusat_acc_alt
  { 600,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #600 = V6_vdmpyhsusat_alt
  { 601,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo122 },  // Inst #601 = V6_vdmpyhvsat_acc_alt
  { 602,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #602 = V6_vdmpyhvsat_alt
  { 603,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo118 },  // Inst #603 = V6_vdsaduh_acc_alt
  { 604,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo119 },  // Inst #604 = V6_vdsaduh_alt
  { 605,	4,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x9ULL, nullptr, nullptr, OperandInfo123 },  // Inst #605 = V6_vgathermh_pseudo
  { 606,	5,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x9ULL, nullptr, nullptr, OperandInfo124 },  // Inst #606 = V6_vgathermhq_pseudo
  { 607,	4,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x9ULL, nullptr, nullptr, OperandInfo125 },  // Inst #607 = V6_vgathermhw_pseudo
  { 608,	5,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x9ULL, nullptr, nullptr, OperandInfo126 },  // Inst #608 = V6_vgathermhwq_pseudo
  { 609,	4,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x9ULL, nullptr, nullptr, OperandInfo123 },  // Inst #609 = V6_vgathermw_pseudo
  { 610,	5,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x9ULL, nullptr, nullptr, OperandInfo124 },  // Inst #610 = V6_vgathermwq_pseudo
  { 611,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #611 = V6_vlsrh_alt
  { 612,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #612 = V6_vlsrhv_alt
  { 613,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #613 = V6_vlsrw_alt
  { 614,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #614 = V6_vlsrwv_alt
  { 615,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #615 = V6_vmaxb_alt
  { 616,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #616 = V6_vmaxh_alt
  { 617,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #617 = V6_vmaxub_alt
  { 618,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #618 = V6_vmaxuh_alt
  { 619,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #619 = V6_vmaxw_alt
  { 620,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #620 = V6_vminb_alt
  { 621,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #621 = V6_vminh_alt
  { 622,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #622 = V6_vminub_alt
  { 623,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #623 = V6_vminuh_alt
  { 624,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #624 = V6_vminw_alt
  { 625,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo118 },  // Inst #625 = V6_vmpabus_acc_alt
  { 626,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo119 },  // Inst #626 = V6_vmpabus_alt
  { 627,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #627 = V6_vmpabusv_alt
  { 628,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo118 },  // Inst #628 = V6_vmpabuu_acc_alt
  { 629,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo119 },  // Inst #629 = V6_vmpabuu_alt
  { 630,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #630 = V6_vmpabuuv_alt
  { 631,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo118 },  // Inst #631 = V6_vmpahb_acc_alt
  { 632,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo119 },  // Inst #632 = V6_vmpahb_alt
  { 633,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo118 },  // Inst #633 = V6_vmpauhb_acc_alt
  { 634,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo119 },  // Inst #634 = V6_vmpauhb_alt
  { 635,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo127 },  // Inst #635 = V6_vmpybus_acc_alt
  { 636,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo128 },  // Inst #636 = V6_vmpybus_alt
  { 637,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo108 },  // Inst #637 = V6_vmpybusv_acc_alt
  { 638,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #638 = V6_vmpybusv_alt
  { 639,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo108 },  // Inst #639 = V6_vmpybv_acc_alt
  { 640,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #640 = V6_vmpybv_alt
  { 641,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #641 = V6_vmpyewuh_alt
  { 642,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo127 },  // Inst #642 = V6_vmpyh_acc_alt
  { 643,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo128 },  // Inst #643 = V6_vmpyh_alt
  { 644,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo127 },  // Inst #644 = V6_vmpyhsat_acc_alt
  { 645,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #645 = V6_vmpyhsrs_alt
  { 646,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #646 = V6_vmpyhss_alt
  { 647,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo108 },  // Inst #647 = V6_vmpyhus_acc_alt
  { 648,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #648 = V6_vmpyhus_alt
  { 649,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo108 },  // Inst #649 = V6_vmpyhv_acc_alt
  { 650,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #650 = V6_vmpyhv_alt
  { 651,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #651 = V6_vmpyhvsrs_alt
  { 652,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo122 },  // Inst #652 = V6_vmpyiewh_acc_alt
  { 653,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo122 },  // Inst #653 = V6_vmpyiewuh_acc_alt
  { 654,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #654 = V6_vmpyiewuh_alt
  { 655,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo122 },  // Inst #655 = V6_vmpyih_acc_alt
  { 656,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #656 = V6_vmpyih_alt
  { 657,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #657 = V6_vmpyihb_acc_alt
  { 658,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #658 = V6_vmpyihb_alt
  { 659,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #659 = V6_vmpyiowh_alt
  { 660,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #660 = V6_vmpyiwb_acc_alt
  { 661,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #661 = V6_vmpyiwb_alt
  { 662,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #662 = V6_vmpyiwh_acc_alt
  { 663,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #663 = V6_vmpyiwh_alt
  { 664,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #664 = V6_vmpyiwub_acc_alt
  { 665,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #665 = V6_vmpyiwub_alt
  { 666,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #666 = V6_vmpyowh_alt
  { 667,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #667 = V6_vmpyowh_rnd_alt
  { 668,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo122 },  // Inst #668 = V6_vmpyowh_rnd_sacc_alt
  { 669,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo122 },  // Inst #669 = V6_vmpyowh_sacc_alt
  { 670,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo127 },  // Inst #670 = V6_vmpyub_acc_alt
  { 671,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo128 },  // Inst #671 = V6_vmpyub_alt
  { 672,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo108 },  // Inst #672 = V6_vmpyubv_acc_alt
  { 673,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #673 = V6_vmpyubv_alt
  { 674,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo127 },  // Inst #674 = V6_vmpyuh_acc_alt
  { 675,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo128 },  // Inst #675 = V6_vmpyuh_alt
  { 676,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo108 },  // Inst #676 = V6_vmpyuhv_acc_alt
  { 677,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #677 = V6_vmpyuhv_alt
  { 678,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #678 = V6_vnavgb_alt
  { 679,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #679 = V6_vnavgh_alt
  { 680,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #680 = V6_vnavgub_alt
  { 681,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #681 = V6_vnavgw_alt
  { 682,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #682 = V6_vnormamth_alt
  { 683,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #683 = V6_vnormamtw_alt
  { 684,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #684 = V6_vpackeb_alt
  { 685,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #685 = V6_vpackeh_alt
  { 686,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #686 = V6_vpackhb_sat_alt
  { 687,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #687 = V6_vpackhub_sat_alt
  { 688,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #688 = V6_vpackob_alt
  { 689,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #689 = V6_vpackoh_alt
  { 690,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #690 = V6_vpackwh_sat_alt
  { 691,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #691 = V6_vpackwuh_sat_alt
  { 692,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #692 = V6_vpopcounth_alt
  { 693,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo129 },  // Inst #693 = V6_vrmpybub_rtt_acc_alt
  { 694,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo130 },  // Inst #694 = V6_vrmpybub_rtt_alt
  { 695,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #695 = V6_vrmpybus_acc_alt
  { 696,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #696 = V6_vrmpybus_alt
  { 697,	5,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo131 },  // Inst #697 = V6_vrmpybusi_acc_alt
  { 698,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo132 },  // Inst #698 = V6_vrmpybusi_alt
  { 699,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo122 },  // Inst #699 = V6_vrmpybusv_acc_alt
  { 700,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #700 = V6_vrmpybusv_alt
  { 701,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo122 },  // Inst #701 = V6_vrmpybv_acc_alt
  { 702,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #702 = V6_vrmpybv_alt
  { 703,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo114 },  // Inst #703 = V6_vrmpyub_acc_alt
  { 704,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo115 },  // Inst #704 = V6_vrmpyub_alt
  { 705,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo129 },  // Inst #705 = V6_vrmpyub_rtt_acc_alt
  { 706,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo130 },  // Inst #706 = V6_vrmpyub_rtt_alt
  { 707,	5,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo131 },  // Inst #707 = V6_vrmpyubi_acc_alt
  { 708,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo132 },  // Inst #708 = V6_vrmpyubi_alt
  { 709,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo122 },  // Inst #709 = V6_vrmpyubv_acc_alt
  { 710,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #710 = V6_vrmpyubv_alt
  { 711,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #711 = V6_vrotr_alt
  { 712,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #712 = V6_vroundhb_alt
  { 713,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #713 = V6_vroundhub_alt
  { 714,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #714 = V6_vrounduhub_alt
  { 715,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #715 = V6_vrounduwuh_alt
  { 716,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #716 = V6_vroundwh_alt
  { 717,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #717 = V6_vroundwuh_alt
  { 718,	5,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo131 },  // Inst #718 = V6_vrsadubi_acc_alt
  { 719,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo132 },  // Inst #719 = V6_vrsadubi_alt
  { 720,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #720 = V6_vsathub_alt
  { 721,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #721 = V6_vsatuwuh_alt
  { 722,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #722 = V6_vsatwh_alt
  { 723,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo133 },  // Inst #723 = V6_vsb_alt
  { 724,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000028ULL, nullptr, nullptr, OperandInfo134 },  // Inst #724 = V6_vscattermh_add_alt
  { 725,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo134 },  // Inst #725 = V6_vscattermh_alt
  { 726,	5,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo135 },  // Inst #726 = V6_vscattermhq_alt
  { 727,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000028ULL, nullptr, nullptr, OperandInfo134 },  // Inst #727 = V6_vscattermw_add_alt
  { 728,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo134 },  // Inst #728 = V6_vscattermw_alt
  { 729,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000028ULL, nullptr, nullptr, OperandInfo136 },  // Inst #729 = V6_vscattermwh_add_alt
  { 730,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo136 },  // Inst #730 = V6_vscattermwh_alt
  { 731,	5,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo137 },  // Inst #731 = V6_vscattermwhq_alt
  { 732,	5,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo135 },  // Inst #732 = V6_vscattermwq_alt
  { 733,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo133 },  // Inst #733 = V6_vsh_alt
  { 734,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #734 = V6_vshufeh_alt
  { 735,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #735 = V6_vshuffb_alt
  { 736,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #736 = V6_vshuffeb_alt
  { 737,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo104 },  // Inst #737 = V6_vshuffh_alt
  { 738,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #738 = V6_vshuffob_alt
  { 739,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #739 = V6_vshufoeb_alt
  { 740,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #740 = V6_vshufoeh_alt
  { 741,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #741 = V6_vshufoh_alt
  { 742,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #742 = V6_vsubb_alt
  { 743,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #743 = V6_vsubb_dv_alt
  { 744,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #744 = V6_vsubbnq_alt
  { 745,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #745 = V6_vsubbq_alt
  { 746,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #746 = V6_vsubbsat_alt
  { 747,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #747 = V6_vsubbsat_dv_alt
  { 748,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #748 = V6_vsubh_alt
  { 749,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #749 = V6_vsubh_dv_alt
  { 750,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #750 = V6_vsubhnq_alt
  { 751,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #751 = V6_vsubhq_alt
  { 752,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #752 = V6_vsubhsat_alt
  { 753,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #753 = V6_vsubhsat_dv_alt
  { 754,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #754 = V6_vsubhw_alt
  { 755,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #755 = V6_vsububh_alt
  { 756,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #756 = V6_vsububsat_alt
  { 757,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #757 = V6_vsububsat_dv_alt
  { 758,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #758 = V6_vsubuhsat_alt
  { 759,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #759 = V6_vsubuhsat_dv_alt
  { 760,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo109 },  // Inst #760 = V6_vsubuhw_alt
  { 761,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #761 = V6_vsubuwsat_alt
  { 762,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #762 = V6_vsubuwsat_dv_alt
  { 763,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #763 = V6_vsubw_alt
  { 764,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #764 = V6_vsubw_dv_alt
  { 765,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #765 = V6_vsubwnq_alt
  { 766,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo107 },  // Inst #766 = V6_vsubwq_alt
  { 767,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo105 },  // Inst #767 = V6_vsubwsat_alt
  { 768,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo106 },  // Inst #768 = V6_vsubwsat_dv_alt
  { 769,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo118 },  // Inst #769 = V6_vtmpyb_acc_alt
  { 770,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo119 },  // Inst #770 = V6_vtmpyb_alt
  { 771,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo118 },  // Inst #771 = V6_vtmpybus_acc_alt
  { 772,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo119 },  // Inst #772 = V6_vtmpybus_alt
  { 773,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo118 },  // Inst #773 = V6_vtmpyhb_acc_alt
  { 774,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo119 },  // Inst #774 = V6_vtmpyhb_alt
  { 775,	5,	2,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8030000000008028ULL, nullptr, nullptr, OperandInfo138 },  // Inst #775 = V6_vtran2x2_map
  { 776,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo133 },  // Inst #776 = V6_vunpackb_alt
  { 777,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo133 },  // Inst #777 = V6_vunpackh_alt
  { 778,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo139 },  // Inst #778 = V6_vunpackob_alt
  { 779,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008028ULL, nullptr, nullptr, OperandInfo139 },  // Inst #779 = V6_vunpackoh_alt
  { 780,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo133 },  // Inst #780 = V6_vunpackub_alt
  { 781,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo133 },  // Inst #781 = V6_vunpackuh_alt
  { 782,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo133 },  // Inst #782 = V6_vzb_alt
  { 783,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008028ULL, nullptr, nullptr, OperandInfo133 },  // Inst #783 = V6_vzh_alt
  { 784,	1,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo79 },  // Inst #784 = V6_zld0
  { 785,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000028ULL, nullptr, nullptr, OperandInfo56 },  // Inst #785 = V6_zldp0
  { 786,	1,	0,	4,	63,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo79 },  // Inst #786 = Y2_dcfetch
  { 787,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #787 = dup_A2_add
  { 788,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x214808002ULL, nullptr, nullptr, OperandInfo62 },  // Inst #788 = dup_A2_addi
  { 789,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x154808000ULL, nullptr, nullptr, OperandInfo62 },  // Inst #789 = dup_A2_andir
  { 790,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x112800000ULL, nullptr, nullptr, OperandInfo140 },  // Inst #790 = dup_A2_combineii
  { 791,	2,	1,	4,	65,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #791 = dup_A2_sxtb
  { 792,	2,	1,	4,	65,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #792 = dup_A2_sxth
  { 793,	2,	1,	4,	65,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #793 = dup_A2_tfr
  { 794,	2,	1,	4,	65,	0|(1ULL<<MCID::Pseudo), 0x212808000ULL, nullptr, nullptr, OperandInfo44 },  // Inst #794 = dup_A2_tfrsi
  { 795,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8028ULL, nullptr, nullptr, OperandInfo45 },  // Inst #795 = dup_A2_zxtb
  { 796,	2,	1,	4,	65,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #796 = dup_A2_zxth
  { 797,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0xc4800000ULL, nullptr, nullptr, OperandInfo140 },  // Inst #797 = dup_A4_combineii
  { 798,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x112800000ULL, nullptr, nullptr, OperandInfo141 },  // Inst #798 = dup_A4_combineir
  { 799,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x114800000ULL, nullptr, nullptr, OperandInfo142 },  // Inst #799 = dup_A4_combineri
  { 800,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x194808c00ULL, nullptr, nullptr, OperandInfo143 },  // Inst #800 = dup_C2_cmoveif
  { 801,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x194808400ULL, nullptr, nullptr, OperandInfo143 },  // Inst #801 = dup_C2_cmoveit
  { 802,	3,	1,	4,	66,	0|(1ULL<<MCID::Pseudo), 0x194809c00ULL, nullptr, nullptr, OperandInfo143 },  // Inst #802 = dup_C2_cmovenewif
  { 803,	3,	1,	4,	66,	0|(1ULL<<MCID::Pseudo), 0x194809400ULL, nullptr, nullptr, OperandInfo143 },  // Inst #803 = dup_C2_cmovenewit
  { 804,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x154800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #804 = dup_C2_cmpeqi
  { 805,	2,	1,	4,	67,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x800000000026ULL, ImplicitList20, ImplicitList3, OperandInfo58 },  // Inst #805 = dup_L2_deallocframe
  { 806,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x2c0174808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #806 = dup_L2_loadrb_io
  { 807,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x8c0dd4800026ULL, nullptr, nullptr, OperandInfo142 },  // Inst #807 = dup_L2_loadrd_io
  { 808,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x4c0594808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #808 = dup_L2_loadrh_io
  { 809,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x6c09b4808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #809 = dup_L2_loadri_io
  { 810,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x2c0174808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #810 = dup_L2_loadrub_io
  { 811,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x4c0594808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #811 = dup_L2_loadruh_io
  { 812,	3,	1,	4,	69,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x8c000000802bULL, ImplicitList21, ImplicitList17, OperandInfo144 },  // Inst #812 = dup_S2_allocframe
  { 813,	3,	0,	4,	70,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x2c017280002bULL, nullptr, nullptr, OperandInfo145 },  // Inst #813 = dup_S2_storerb_io
  { 814,	3,	0,	4,	70,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x8c0dd280002bULL, nullptr, nullptr, OperandInfo146 },  // Inst #814 = dup_S2_storerd_io
  { 815,	3,	0,	4,	70,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x4c059280002bULL, nullptr, nullptr, OperandInfo145 },  // Inst #815 = dup_S2_storerh_io
  { 816,	3,	0,	4,	70,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x6c09b280002bULL, nullptr, nullptr, OperandInfo145 },  // Inst #816 = dup_S2_storeri_io
  { 817,	3,	0,	4,	71,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x2c0114800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #817 = dup_S4_storeirb_io
  { 818,	3,	0,	4,	71,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x6c0114800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #818 = dup_S4_storeiri_io
  { 819,	2,	1,	4,	72,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo45 },  // Inst #819 = A2_abs
  { 820,	2,	1,	4,	72,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo47 },  // Inst #820 = A2_absp
  { 821,	2,	1,	4,	72,	0, 0x20000000000802dULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #821 = A2_abssat
  { 822,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #822 = A2_add
  { 823,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #823 = A2_addh_h16_hh
  { 824,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #824 = A2_addh_h16_hl
  { 825,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #825 = A2_addh_h16_lh
  { 826,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #826 = A2_addh_h16_ll
  { 827,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #827 = A2_addh_h16_sat_hh
  { 828,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #828 = A2_addh_h16_sat_hl
  { 829,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #829 = A2_addh_h16_sat_lh
  { 830,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #830 = A2_addh_h16_sat_ll
  { 831,	3,	1,	4,	74,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #831 = A2_addh_l16_hl
  { 832,	3,	1,	4,	74,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #832 = A2_addh_l16_ll
  { 833,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #833 = A2_addh_l16_sat_hl
  { 834,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #834 = A2_addh_l16_sat_ll
  { 835,	3,	1,	4,	6,	0|(1ULL<<MCID::Add)|(1ULL<<MCID::Predicable), 0x214808002ULL, nullptr, nullptr, OperandInfo62 },  // Inst #835 = A2_addi
  { 836,	3,	1,	4,	8,	0|(1ULL<<MCID::Add)|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #836 = A2_addp
  { 837,	3,	1,	4,	73,	0|(1ULL<<MCID::Commutable), 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #837 = A2_addpsat
  { 838,	3,	1,	4,	75,	0|(1ULL<<MCID::Commutable), 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #838 = A2_addsat
  { 839,	3,	1,	4,	1,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #839 = A2_addsph
  { 840,	3,	1,	4,	1,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #840 = A2_addspl
  { 841,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #841 = A2_and
  { 842,	3,	1,	4,	6,	0, 0x154808000ULL, nullptr, nullptr, OperandInfo62 },  // Inst #842 = A2_andir
  { 843,	3,	1,	4,	8,	0|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #843 = A2_andp
  { 844,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #844 = A2_aslh
  { 845,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #845 = A2_asrh
  { 846,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #846 = A2_combine_hh
  { 847,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #847 = A2_combine_hl
  { 848,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #848 = A2_combine_lh
  { 849,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #849 = A2_combine_ll
  { 850,	3,	1,	4,	6,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x112800000ULL, nullptr, nullptr, OperandInfo140 },  // Inst #850 = A2_combineii
  { 851,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable), 0x1ULL, nullptr, nullptr, OperandInfo148 },  // Inst #851 = A2_combinew
  { 852,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #852 = A2_max
  { 853,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #853 = A2_maxp
  { 854,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #854 = A2_maxu
  { 855,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #855 = A2_maxup
  { 856,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #856 = A2_min
  { 857,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #857 = A2_minp
  { 858,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #858 = A2_minu
  { 859,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #859 = A2_minup
  { 860,	2,	1,	4,	76,	0, 0x2dULL, nullptr, nullptr, OperandInfo47 },  // Inst #860 = A2_negp
  { 861,	2,	1,	4,	72,	0, 0x20000000000802dULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #861 = A2_negsat
  { 862,	0,	0,	4,	77,	0, 0x0ULL, nullptr, nullptr, nullptr },  // Inst #862 = A2_nop
  { 863,	2,	1,	4,	76,	0, 0x2dULL, nullptr, nullptr, OperandInfo47 },  // Inst #863 = A2_notp
  { 864,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #864 = A2_or
  { 865,	3,	1,	4,	6,	0, 0x154808000ULL, nullptr, nullptr, OperandInfo62 },  // Inst #865 = A2_orir
  { 866,	3,	1,	4,	8,	0|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #866 = A2_orp
  { 867,	4,	1,	4,	4,	0, 0x8c01ULL, nullptr, nullptr, OperandInfo149 },  // Inst #867 = A2_paddf
  { 868,	4,	1,	4,	5,	0, 0x9c01ULL, nullptr, nullptr, OperandInfo149 },  // Inst #868 = A2_paddfnew
  { 869,	4,	1,	4,	4,	0, 0x116808c00ULL, nullptr, nullptr, OperandInfo150 },  // Inst #869 = A2_paddif
  { 870,	4,	1,	4,	5,	0, 0x116809c00ULL, nullptr, nullptr, OperandInfo150 },  // Inst #870 = A2_paddifnew
  { 871,	4,	1,	4,	4,	0, 0x116808400ULL, nullptr, nullptr, OperandInfo150 },  // Inst #871 = A2_paddit
  { 872,	4,	1,	4,	5,	0, 0x116809400ULL, nullptr, nullptr, OperandInfo150 },  // Inst #872 = A2_padditnew
  { 873,	4,	1,	4,	4,	0, 0x8401ULL, nullptr, nullptr, OperandInfo149 },  // Inst #873 = A2_paddt
  { 874,	4,	1,	4,	5,	0, 0x9401ULL, nullptr, nullptr, OperandInfo149 },  // Inst #874 = A2_paddtnew
  { 875,	4,	1,	4,	4,	0, 0x8c01ULL, nullptr, nullptr, OperandInfo149 },  // Inst #875 = A2_pandf
  { 876,	4,	1,	4,	5,	0, 0x9c01ULL, nullptr, nullptr, OperandInfo149 },  // Inst #876 = A2_pandfnew
  { 877,	4,	1,	4,	4,	0, 0x8401ULL, nullptr, nullptr, OperandInfo149 },  // Inst #877 = A2_pandt
  { 878,	4,	1,	4,	5,	0, 0x9401ULL, nullptr, nullptr, OperandInfo149 },  // Inst #878 = A2_pandtnew
  { 879,	4,	1,	4,	4,	0, 0x8c01ULL, nullptr, nullptr, OperandInfo149 },  // Inst #879 = A2_porf
  { 880,	4,	1,	4,	5,	0, 0x9c01ULL, nullptr, nullptr, OperandInfo149 },  // Inst #880 = A2_porfnew
  { 881,	4,	1,	4,	4,	0, 0x8401ULL, nullptr, nullptr, OperandInfo149 },  // Inst #881 = A2_port
  { 882,	4,	1,	4,	5,	0, 0x9401ULL, nullptr, nullptr, OperandInfo149 },  // Inst #882 = A2_portnew
  { 883,	4,	1,	4,	4,	0, 0x8c01ULL, nullptr, nullptr, OperandInfo149 },  // Inst #883 = A2_psubf
  { 884,	4,	1,	4,	5,	0, 0x9c01ULL, nullptr, nullptr, OperandInfo149 },  // Inst #884 = A2_psubfnew
  { 885,	4,	1,	4,	4,	0, 0x8401ULL, nullptr, nullptr, OperandInfo149 },  // Inst #885 = A2_psubt
  { 886,	4,	1,	4,	5,	0, 0x9401ULL, nullptr, nullptr, OperandInfo149 },  // Inst #886 = A2_psubtnew
  { 887,	4,	1,	4,	4,	0, 0x8c01ULL, nullptr, nullptr, OperandInfo149 },  // Inst #887 = A2_pxorf
  { 888,	4,	1,	4,	5,	0, 0x9c01ULL, nullptr, nullptr, OperandInfo149 },  // Inst #888 = A2_pxorfnew
  { 889,	4,	1,	4,	4,	0, 0x8401ULL, nullptr, nullptr, OperandInfo149 },  // Inst #889 = A2_pxort
  { 890,	4,	1,	4,	5,	0, 0x9401ULL, nullptr, nullptr, OperandInfo149 },  // Inst #890 = A2_pxortnew
  { 891,	2,	1,	4,	72,	0, 0x20000000000802dULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #891 = A2_roundsat
  { 892,	2,	1,	4,	76,	0, 0x802dULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #892 = A2_sat
  { 893,	2,	1,	4,	76,	0, 0x802dULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #893 = A2_satb
  { 894,	2,	1,	4,	76,	0, 0x802dULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #894 = A2_sath
  { 895,	2,	1,	4,	76,	0, 0x802dULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #895 = A2_satub
  { 896,	2,	1,	4,	76,	0, 0x802dULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #896 = A2_satuh
  { 897,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #897 = A2_sub
  { 898,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #898 = A2_subh_h16_hh
  { 899,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #899 = A2_subh_h16_hl
  { 900,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #900 = A2_subh_h16_lh
  { 901,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #901 = A2_subh_h16_ll
  { 902,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #902 = A2_subh_h16_sat_hh
  { 903,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #903 = A2_subh_h16_sat_hl
  { 904,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #904 = A2_subh_h16_sat_lh
  { 905,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #905 = A2_subh_h16_sat_ll
  { 906,	3,	1,	4,	74,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #906 = A2_subh_l16_hl
  { 907,	3,	1,	4,	74,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #907 = A2_subh_l16_ll
  { 908,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #908 = A2_subh_l16_sat_hl
  { 909,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #909 = A2_subh_l16_sat_ll
  { 910,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #910 = A2_subp
  { 911,	3,	1,	4,	6,	0, 0x152808000ULL, nullptr, nullptr, OperandInfo145 },  // Inst #911 = A2_subri
  { 912,	3,	1,	4,	75,	0, 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #912 = A2_subsat
  { 913,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #913 = A2_svaddh
  { 914,	3,	1,	4,	75,	0|(1ULL<<MCID::Commutable), 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #914 = A2_svaddhs
  { 915,	3,	1,	4,	75,	0|(1ULL<<MCID::Commutable), 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #915 = A2_svadduhs
  { 916,	3,	1,	4,	78,	0|(1ULL<<MCID::Commutable), 0x200000000008001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #916 = A2_svavgh
  { 917,	3,	1,	4,	79,	0|(1ULL<<MCID::Commutable), 0x200000000008001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #917 = A2_svavghs
  { 918,	3,	1,	4,	78,	0, 0x200000000008001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #918 = A2_svnavgh
  { 919,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #919 = A2_svsubh
  { 920,	3,	1,	4,	75,	0, 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #920 = A2_svsubhs
  { 921,	3,	1,	4,	75,	0, 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #921 = A2_svsubuhs
  { 922,	2,	1,	4,	76,	0, 0x802dULL, nullptr, nullptr, OperandInfo45 },  // Inst #922 = A2_swiz
  { 923,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #923 = A2_sxtb
  { 924,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #924 = A2_sxth
  { 925,	2,	1,	4,	76,	0, 0x2dULL, nullptr, nullptr, OperandInfo58 },  // Inst #925 = A2_sxtw
  { 926,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #926 = A2_tfr
  { 927,	2,	1,	4,	80,	0, 0x8007ULL, nullptr, nullptr, OperandInfo151 },  // Inst #927 = A2_tfrcrr
  { 928,	3,	1,	4,	6,	0, 0x8000ULL, nullptr, nullptr, OperandInfo144 },  // Inst #928 = A2_tfrih
  { 929,	3,	1,	4,	6,	0, 0x8000ULL, nullptr, nullptr, OperandInfo144 },  // Inst #929 = A2_tfril
  { 930,	2,	1,	4,	81,	0, 0x8007ULL, nullptr, nullptr, OperandInfo152 },  // Inst #930 = A2_tfrrcr
  { 931,	2,	1,	4,	3,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x212808000ULL, nullptr, nullptr, OperandInfo44 },  // Inst #931 = A2_tfrsi
  { 932,	2,	1,	4,	72,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo47 },  // Inst #932 = A2_vabsh
  { 933,	2,	1,	4,	72,	0, 0x20000000000002dULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #933 = A2_vabshsat
  { 934,	2,	1,	4,	72,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo47 },  // Inst #934 = A2_vabsw
  { 935,	2,	1,	4,	72,	0, 0x20000000000002dULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #935 = A2_vabswsat
  { 936,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #936 = A2_vaddh
  { 937,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #937 = A2_vaddhs
  { 938,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #938 = A2_vaddub
  { 939,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #939 = A2_vaddubs
  { 940,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #940 = A2_vadduhs
  { 941,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #941 = A2_vaddw
  { 942,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #942 = A2_vaddws
  { 943,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #943 = A2_vavgh
  { 944,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #944 = A2_vavghcr
  { 945,	3,	1,	4,	83,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #945 = A2_vavghr
  { 946,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #946 = A2_vavgub
  { 947,	3,	1,	4,	83,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #947 = A2_vavgubr
  { 948,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #948 = A2_vavguh
  { 949,	3,	1,	4,	83,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #949 = A2_vavguhr
  { 950,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #950 = A2_vavguw
  { 951,	3,	1,	4,	83,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #951 = A2_vavguwr
  { 952,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #952 = A2_vavgw
  { 953,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #953 = A2_vavgwcr
  { 954,	3,	1,	4,	83,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #954 = A2_vavgwr
  { 955,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #955 = A2_vcmpbeq
  { 956,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #956 = A2_vcmpbgtu
  { 957,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #957 = A2_vcmpheq
  { 958,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #958 = A2_vcmphgt
  { 959,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #959 = A2_vcmphgtu
  { 960,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #960 = A2_vcmpweq
  { 961,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #961 = A2_vcmpwgt
  { 962,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #962 = A2_vcmpwgtu
  { 963,	2,	1,	4,	72,	0, 0x20000000000002dULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #963 = A2_vconj
  { 964,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #964 = A2_vmaxb
  { 965,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #965 = A2_vmaxh
  { 966,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #966 = A2_vmaxub
  { 967,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #967 = A2_vmaxuh
  { 968,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #968 = A2_vmaxuw
  { 969,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #969 = A2_vmaxw
  { 970,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #970 = A2_vminb
  { 971,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #971 = A2_vminh
  { 972,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #972 = A2_vminub
  { 973,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #973 = A2_vminuh
  { 974,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #974 = A2_vminuw
  { 975,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #975 = A2_vminw
  { 976,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #976 = A2_vnavgh
  { 977,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #977 = A2_vnavghcr
  { 978,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #978 = A2_vnavghr
  { 979,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #979 = A2_vnavgw
  { 980,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #980 = A2_vnavgwcr
  { 981,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #981 = A2_vnavgwr
  { 982,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #982 = A2_vraddub
  { 983,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #983 = A2_vraddub_acc
  { 984,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #984 = A2_vrsadub
  { 985,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #985 = A2_vrsadub_acc
  { 986,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #986 = A2_vsubh
  { 987,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #987 = A2_vsubhs
  { 988,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #988 = A2_vsubub
  { 989,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #989 = A2_vsububs
  { 990,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #990 = A2_vsubuhs
  { 991,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #991 = A2_vsubw
  { 992,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #992 = A2_vsubws
  { 993,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #993 = A2_xor
  { 994,	3,	1,	4,	8,	0|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #994 = A2_xorp
  { 995,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #995 = A2_zxth
  { 996,	5,	2,	4,	84,	0, 0x202eULL, nullptr, nullptr, OperandInfo154 },  // Inst #996 = A4_addp_c
  { 997,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #997 = A4_andn
  { 998,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #998 = A4_andnp
  { 999,	3,	1,	4,	74,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo148 },  // Inst #999 = A4_bitsplit
  { 1000,	3,	1,	4,	74,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo142 },  // Inst #1000 = A4_bitspliti
  { 1001,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1001 = A4_boundscheck_hi
  { 1002,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1002 = A4_boundscheck_lo
  { 1003,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #1003 = A4_cmpbeq
  { 1004,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1004 = A4_cmpbeqi
  { 1005,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #1005 = A4_cmpbgt
  { 1006,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare), 0x3ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1006 = A4_cmpbgti
  { 1007,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #1007 = A4_cmpbgtu
  { 1008,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare), 0xe4800003ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1008 = A4_cmpbgtui
  { 1009,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #1009 = A4_cmpheq
  { 1010,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x114800003ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1010 = A4_cmpheqi
  { 1011,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #1011 = A4_cmphgt
  { 1012,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare), 0x114800003ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1012 = A4_cmphgti
  { 1013,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #1013 = A4_cmphgtu
  { 1014,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare), 0xe4800003ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1014 = A4_cmphgtui
  { 1015,	3,	1,	4,	6,	0, 0xc4800000ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1015 = A4_combineii
  { 1016,	3,	1,	4,	6,	0, 0x112800000ULL, nullptr, nullptr, OperandInfo141 },  // Inst #1016 = A4_combineir
  { 1017,	3,	1,	4,	6,	0, 0x114800000ULL, nullptr, nullptr, OperandInfo142 },  // Inst #1017 = A4_combineri
  { 1018,	3,	1,	4,	47,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #1018 = A4_cround_ri
  { 1019,	3,	1,	4,	47,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo63 },  // Inst #1019 = A4_cround_rr
  { 1020,	1,	0,	4,	86,	0, 0x24ULL, nullptr, nullptr, OperandInfo2 },  // Inst #1020 = A4_ext
  { 1021,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1021 = A4_modwrapu
  { 1022,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1022 = A4_orn
  { 1023,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1023 = A4_ornp
  { 1024,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1024 = A4_paslhf
  { 1025,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1025 = A4_paslhfnew
  { 1026,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1026 = A4_paslht
  { 1027,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1027 = A4_paslhtnew
  { 1028,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1028 = A4_pasrhf
  { 1029,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1029 = A4_pasrhfnew
  { 1030,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1030 = A4_pasrht
  { 1031,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1031 = A4_pasrhtnew
  { 1032,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1032 = A4_psxtbf
  { 1033,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1033 = A4_psxtbfnew
  { 1034,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1034 = A4_psxtbt
  { 1035,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1035 = A4_psxtbtnew
  { 1036,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1036 = A4_psxthf
  { 1037,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1037 = A4_psxthfnew
  { 1038,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1038 = A4_psxtht
  { 1039,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1039 = A4_psxthtnew
  { 1040,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1040 = A4_pzxtbf
  { 1041,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1041 = A4_pzxtbfnew
  { 1042,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1042 = A4_pzxtbt
  { 1043,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1043 = A4_pzxtbtnew
  { 1044,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1044 = A4_pzxthf
  { 1045,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1045 = A4_pzxthfnew
  { 1046,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1046 = A4_pzxtht
  { 1047,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1047 = A4_pzxthtnew
  { 1048,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1048 = A4_rcmpeq
  { 1049,	3,	1,	4,	6,	0, 0x114808000ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1049 = A4_rcmpeqi
  { 1050,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1050 = A4_rcmpneq
  { 1051,	3,	1,	4,	6,	0, 0x114808000ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1051 = A4_rcmpneqi
  { 1052,	3,	1,	4,	47,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #1052 = A4_round_ri
  { 1053,	3,	1,	4,	47,	0, 0x20000000000802dULL, nullptr, ImplicitList22, OperandInfo62 },  // Inst #1053 = A4_round_ri_sat
  { 1054,	3,	1,	4,	47,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo63 },  // Inst #1054 = A4_round_rr
  { 1055,	3,	1,	4,	47,	0, 0x20000000000802eULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1055 = A4_round_rr_sat
  { 1056,	5,	2,	4,	84,	0, 0x202eULL, nullptr, nullptr, OperandInfo154 },  // Inst #1056 = A4_subp_c
  { 1057,	2,	1,	4,	80,	0, 0x7ULL, nullptr, nullptr, OperandInfo155 },  // Inst #1057 = A4_tfrcpp
  { 1058,	2,	1,	4,	81,	0, 0x7ULL, nullptr, nullptr, OperandInfo156 },  // Inst #1058 = A4_tfrpcp
  { 1059,	3,	1,	4,	87,	0, 0x2003ULL, nullptr, nullptr, OperandInfo157 },  // Inst #1059 = A4_tlbmatch
  { 1060,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1060 = A4_vcmpbeq_any
  { 1061,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1061 = A4_vcmpbeqi
  { 1062,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1062 = A4_vcmpbgt
  { 1063,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1063 = A4_vcmpbgti
  { 1064,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1064 = A4_vcmpbgtui
  { 1065,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1065 = A4_vcmpheqi
  { 1066,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1066 = A4_vcmphgti
  { 1067,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1067 = A4_vcmphgtui
  { 1068,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1068 = A4_vcmpweqi
  { 1069,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1069 = A4_vcmpwgti
  { 1070,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1070 = A4_vcmpwgtui
  { 1071,	4,	1,	4,	88,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #1071 = A4_vrmaxh
  { 1072,	4,	1,	4,	88,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #1072 = A4_vrmaxuh
  { 1073,	4,	1,	4,	88,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #1073 = A4_vrmaxuw
  { 1074,	4,	1,	4,	88,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #1074 = A4_vrmaxw
  { 1075,	4,	1,	4,	88,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #1075 = A4_vrminh
  { 1076,	4,	1,	4,	88,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #1076 = A4_vrminuh
  { 1077,	4,	1,	4,	88,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #1077 = A4_vrminuw
  { 1078,	4,	1,	4,	88,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #1078 = A4_vrminw
  { 1079,	5,	2,	4,	89,	0, 0x200000000002027ULL, nullptr, ImplicitList22, OperandInfo159 },  // Inst #1079 = A5_ACS
  { 1080,	3,	1,	4,	47,	0, 0x20000000000802eULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1080 = A5_vaddhubs
  { 1081,	3,	1,	4,	90,	0, 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1081 = A6_vcmpbeq_notany
  { 1082,	4,	2,	4,	91,	0, 0x200000000002027ULL, nullptr, nullptr, OperandInfo73 },  // Inst #1082 = A6_vminub_RdP
  { 1083,	3,	1,	4,	90,	0, 0x802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #1083 = A7_clip
  { 1084,	3,	1,	4,	92,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo89 },  // Inst #1084 = A7_croundd_ri
  { 1085,	3,	1,	4,	92,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo65 },  // Inst #1085 = A7_croundd_rr
  { 1086,	3,	1,	4,	90,	0, 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #1086 = A7_vclip
  { 1087,	2,	1,	4,	93,	0, 0x7ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1087 = C2_all8
  { 1088,	3,	1,	4,	11,	0, 0x7ULL, nullptr, nullptr, OperandInfo161 },  // Inst #1088 = C2_and
  { 1089,	3,	1,	4,	11,	0, 0x7ULL, nullptr, nullptr, OperandInfo161 },  // Inst #1089 = C2_andn
  { 1090,	2,	1,	4,	93,	0, 0x7ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1090 = C2_any8
  { 1091,	3,	1,	4,	9,	0, 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #1091 = C2_bitsclr
  { 1092,	3,	1,	4,	85,	0, 0x2dULL, nullptr, nullptr, OperandInfo52 },  // Inst #1092 = C2_bitsclri
  { 1093,	3,	1,	4,	9,	0, 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #1093 = C2_bitsset
  { 1094,	4,	1,	4,	4,	0, 0xc01ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1094 = C2_ccombinewf
  { 1095,	4,	1,	4,	5,	0, 0x1c01ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1095 = C2_ccombinewnewf
  { 1096,	4,	1,	4,	5,	0, 0x1401ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1096 = C2_ccombinewnewt
  { 1097,	4,	1,	4,	4,	0, 0x401ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1097 = C2_ccombinewt
  { 1098,	3,	1,	4,	6,	0|(1ULL<<MCID::MoveImm), 0x194808c00ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1098 = C2_cmoveif
  { 1099,	3,	1,	4,	6,	0|(1ULL<<MCID::MoveImm), 0x194808400ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1099 = C2_cmoveit
  { 1100,	3,	1,	4,	7,	0|(1ULL<<MCID::MoveImm), 0x194809c00ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1100 = C2_cmovenewif
  { 1101,	3,	1,	4,	7,	0|(1ULL<<MCID::MoveImm), 0x194809400ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1101 = C2_cmovenewit
  { 1102,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1102 = C2_cmpeq
  { 1103,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x154800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1103 = C2_cmpeqi
  { 1104,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1104 = C2_cmpeqp
  { 1105,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1105 = C2_cmpgt
  { 1106,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x154800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1106 = C2_cmpgti
  { 1107,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1107 = C2_cmpgtp
  { 1108,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1108 = C2_cmpgtu
  { 1109,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x124800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1109 = C2_cmpgtui
  { 1110,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x3ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1110 = C2_cmpgtup
  { 1111,	2,	1,	4,	76,	0, 0x2dULL, nullptr, nullptr, OperandInfo163 },  // Inst #1111 = C2_mask
  { 1112,	4,	1,	4,	4,	0, 0x8001ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1112 = C2_mux
  { 1113,	4,	1,	4,	4,	0, 0x114808000ULL, nullptr, nullptr, OperandInfo164 },  // Inst #1113 = C2_muxii
  { 1114,	4,	1,	4,	4,	0, 0x116808000ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1114 = C2_muxir
  { 1115,	4,	1,	4,	4,	0, 0x114808000ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1115 = C2_muxri
  { 1116,	2,	1,	4,	93,	0, 0x7ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1116 = C2_not
  { 1117,	3,	1,	4,	11,	0, 0x7ULL, nullptr, nullptr, OperandInfo161 },  // Inst #1117 = C2_or
  { 1118,	3,	1,	4,	11,	0, 0x7ULL, nullptr, nullptr, OperandInfo161 },  // Inst #1118 = C2_orn
  { 1119,	2,	1,	4,	76,	0, 0x802dULL, nullptr, nullptr, OperandInfo166 },  // Inst #1119 = C2_tfrpr
  { 1120,	2,	1,	4,	95,	0, 0x2dULL, nullptr, nullptr, OperandInfo56 },  // Inst #1120 = C2_tfrrp
  { 1121,	3,	1,	4,	74,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo167 },  // Inst #1121 = C2_vitpack
  { 1122,	4,	1,	4,	96,	0, 0x3ULL, nullptr, nullptr, OperandInfo73 },  // Inst #1122 = C2_vmux
  { 1123,	3,	1,	4,	11,	0, 0x7ULL, nullptr, nullptr, OperandInfo161 },  // Inst #1123 = C2_xor
  { 1124,	2,	1,	4,	97,	0, 0xc2808007ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1124 = C4_addipc
  { 1125,	4,	1,	4,	98,	0, 0x7ULL, nullptr, nullptr, OperandInfo168 },  // Inst #1125 = C4_and_and
  { 1126,	4,	1,	4,	98,	0, 0x7ULL, nullptr, nullptr, OperandInfo168 },  // Inst #1126 = C4_and_andn
  { 1127,	4,	1,	4,	98,	0, 0x7ULL, nullptr, nullptr, OperandInfo168 },  // Inst #1127 = C4_and_or
  { 1128,	4,	1,	4,	98,	0, 0x7ULL, nullptr, nullptr, OperandInfo168 },  // Inst #1128 = C4_and_orn
  { 1129,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1129 = C4_cmplte
  { 1130,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x154800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1130 = C4_cmpltei
  { 1131,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1131 = C4_cmplteu
  { 1132,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x124800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1132 = C4_cmplteui
  { 1133,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1133 = C4_cmpneq
  { 1134,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x154800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1134 = C4_cmpneqi
  { 1135,	3,	1,	4,	11,	0, 0x7ULL, nullptr, nullptr, OperandInfo161 },  // Inst #1135 = C4_fastcorner9
  { 1136,	3,	1,	4,	11,	0, 0x7ULL, nullptr, nullptr, OperandInfo161 },  // Inst #1136 = C4_fastcorner9_not
  { 1137,	3,	1,	4,	9,	0, 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #1137 = C4_nbitsclr
  { 1138,	3,	1,	4,	85,	0, 0x2dULL, nullptr, nullptr, OperandInfo52 },  // Inst #1138 = C4_nbitsclri
  { 1139,	3,	1,	4,	9,	0, 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #1139 = C4_nbitsset
  { 1140,	4,	1,	4,	98,	0, 0x7ULL, nullptr, nullptr, OperandInfo168 },  // Inst #1140 = C4_or_and
  { 1141,	4,	1,	4,	98,	0, 0x7ULL, nullptr, nullptr, OperandInfo168 },  // Inst #1141 = C4_or_andn
  { 1142,	4,	1,	4,	98,	0, 0x7ULL, nullptr, nullptr, OperandInfo168 },  // Inst #1142 = C4_or_or
  { 1143,	4,	1,	4,	98,	0, 0x7ULL, nullptr, nullptr, OperandInfo168 },  // Inst #1143 = C4_or_orn
  { 1144,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800025ULL, nullptr, ImplicitList23, OperandInfo2 },  // Inst #1144 = CALLProfile
  { 1145,	2,	1,	4,	29,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable), 0x26ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1145 = CONST32
  { 1146,	2,	1,	4,	29,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable), 0x26ULL, nullptr, nullptr, OperandInfo170 },  // Inst #1146 = CONST64
  { 1147,	0,	0,	4,	12,	0, 0x22ULL, nullptr, nullptr, nullptr },  // Inst #1147 = DuplexIClass0
  { 1148,	0,	0,	4,	12,	0, 0x22ULL, nullptr, nullptr, nullptr },  // Inst #1148 = DuplexIClass1
  { 1149,	0,	0,	4,	12,	0, 0x22ULL, nullptr, nullptr, nullptr },  // Inst #1149 = DuplexIClass2
  { 1150,	0,	0,	4,	12,	0, 0x20022ULL, nullptr, nullptr, nullptr },  // Inst #1150 = DuplexIClass3
  { 1151,	0,	0,	4,	12,	0, 0x20022ULL, nullptr, nullptr, nullptr },  // Inst #1151 = DuplexIClass4
  { 1152,	0,	0,	4,	12,	0, 0x20022ULL, nullptr, nullptr, nullptr },  // Inst #1152 = DuplexIClass5
  { 1153,	0,	0,	4,	12,	0, 0x20022ULL, nullptr, nullptr, nullptr },  // Inst #1153 = DuplexIClass6
  { 1154,	0,	0,	4,	12,	0, 0x20022ULL, nullptr, nullptr, nullptr },  // Inst #1154 = DuplexIClass7
  { 1155,	0,	0,	4,	12,	0, 0x22ULL, nullptr, nullptr, nullptr },  // Inst #1155 = DuplexIClass8
  { 1156,	0,	0,	4,	12,	0, 0x22ULL, nullptr, nullptr, nullptr },  // Inst #1156 = DuplexIClass9
  { 1157,	0,	0,	4,	12,	0, 0x22ULL, nullptr, nullptr, nullptr },  // Inst #1157 = DuplexIClassA
  { 1158,	0,	0,	4,	12,	0, 0x22ULL, nullptr, nullptr, nullptr },  // Inst #1158 = DuplexIClassB
  { 1159,	0,	0,	4,	12,	0, 0x22ULL, nullptr, nullptr, nullptr },  // Inst #1159 = DuplexIClassC
  { 1160,	0,	0,	4,	12,	0, 0x22ULL, nullptr, nullptr, nullptr },  // Inst #1160 = DuplexIClassD
  { 1161,	0,	0,	4,	12,	0, 0x22ULL, nullptr, nullptr, nullptr },  // Inst #1161 = DuplexIClassE
  { 1162,	0,	0,	4,	12,	0, 0x22ULL, nullptr, nullptr, nullptr },  // Inst #1162 = DuplexIClassF
  { 1163,	1,	0,	4,	40,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x1000000025ULL, ImplicitList24, ImplicitList19, OperandInfo79 },  // Inst #1163 = EH_RETURN_JMPR
  { 1164,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1164 = F2_conv_d2df
  { 1165,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1165 = F2_conv_d2sf
  { 1166,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1166 = F2_conv_df2d
  { 1167,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1167 = F2_conv_df2d_chop
  { 1168,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1168 = F2_conv_df2sf
  { 1169,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1169 = F2_conv_df2ud
  { 1170,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1170 = F2_conv_df2ud_chop
  { 1171,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1171 = F2_conv_df2uw
  { 1172,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1172 = F2_conv_df2uw_chop
  { 1173,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1173 = F2_conv_df2w
  { 1174,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1174 = F2_conv_df2w_chop
  { 1175,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1175 = F2_conv_sf2d
  { 1176,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1176 = F2_conv_sf2d_chop
  { 1177,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1177 = F2_conv_sf2df
  { 1178,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1178 = F2_conv_sf2ud
  { 1179,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1179 = F2_conv_sf2ud_chop
  { 1180,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1180 = F2_conv_sf2uw
  { 1181,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1181 = F2_conv_sf2uw_chop
  { 1182,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1182 = F2_conv_sf2w
  { 1183,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1183 = F2_conv_sf2w_chop
  { 1184,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1184 = F2_conv_ud2df
  { 1185,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1185 = F2_conv_ud2sf
  { 1186,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1186 = F2_conv_uw2df
  { 1187,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1187 = F2_conv_uw2sf
  { 1188,	2,	1,	4,	99,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1188 = F2_conv_w2df
  { 1189,	2,	1,	4,	99,	0, 0x400000000802dULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1189 = F2_conv_w2sf
  { 1190,	3,	1,	4,	100,	0, 0x4000000000027ULL, ImplicitList25, nullptr, OperandInfo50 },  // Inst #1190 = F2_dfadd
  { 1191,	3,	1,	4,	85,	0, 0x4000000000003ULL, ImplicitList25, nullptr, OperandInfo158 },  // Inst #1191 = F2_dfclass
  { 1192,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x4000000000003ULL, ImplicitList25, nullptr, OperandInfo153 },  // Inst #1192 = F2_dfcmpeq
  { 1193,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x4000000000003ULL, ImplicitList25, nullptr, OperandInfo153 },  // Inst #1193 = F2_dfcmpge
  { 1194,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x4000000000003ULL, ImplicitList25, nullptr, OperandInfo153 },  // Inst #1194 = F2_dfcmpgt
  { 1195,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x4000000000003ULL, ImplicitList25, nullptr, OperandInfo153 },  // Inst #1195 = F2_dfcmpuo
  { 1196,	2,	1,	4,	101,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo49 },  // Inst #1196 = F2_dfimm_n
  { 1197,	2,	1,	4,	101,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo49 },  // Inst #1197 = F2_dfimm_p
  { 1198,	3,	1,	4,	92,	0, 0x204000000000027ULL, ImplicitList25, nullptr, OperandInfo50 },  // Inst #1198 = F2_dfmax
  { 1199,	3,	1,	4,	92,	0, 0x204000000000027ULL, ImplicitList25, nullptr, OperandInfo50 },  // Inst #1199 = F2_dfmin
  { 1200,	3,	1,	4,	100,	0, 0x4000000000027ULL, ImplicitList25, nullptr, OperandInfo50 },  // Inst #1200 = F2_dfmpyfix
  { 1201,	4,	1,	4,	102,	0, 0x4000000000027ULL, ImplicitList25, nullptr, OperandInfo67 },  // Inst #1201 = F2_dfmpyhh
  { 1202,	4,	1,	4,	103,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1202 = F2_dfmpylh
  { 1203,	3,	1,	4,	104,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1203 = F2_dfmpyll
  { 1204,	3,	1,	4,	100,	0, 0x4000000000027ULL, ImplicitList25, nullptr, OperandInfo50 },  // Inst #1204 = F2_dfsub
  { 1205,	3,	1,	4,	105,	0|(1ULL<<MCID::Commutable), 0x4000000008027ULL, ImplicitList25, nullptr, OperandInfo63 },  // Inst #1205 = F2_sfadd
  { 1206,	3,	1,	4,	85,	0, 0x400000000002dULL, ImplicitList25, nullptr, OperandInfo52 },  // Inst #1206 = F2_sfclass
  { 1207,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x400000000002eULL, ImplicitList25, nullptr, OperandInfo53 },  // Inst #1207 = F2_sfcmpeq
  { 1208,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x400000000002eULL, ImplicitList25, nullptr, OperandInfo53 },  // Inst #1208 = F2_sfcmpge
  { 1209,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x400000000002eULL, ImplicitList25, nullptr, OperandInfo53 },  // Inst #1209 = F2_sfcmpgt
  { 1210,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x400000000002eULL, ImplicitList25, nullptr, OperandInfo53 },  // Inst #1210 = F2_sfcmpuo
  { 1211,	3,	1,	4,	105,	0, 0x4000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1211 = F2_sffixupd
  { 1212,	3,	1,	4,	105,	0, 0x4000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1212 = F2_sffixupn
  { 1213,	2,	1,	4,	99,	0, 0x400000000802dULL, nullptr, nullptr, OperandInfo45 },  // Inst #1213 = F2_sffixupr
  { 1214,	4,	1,	4,	106,	0, 0x4000000008027ULL, ImplicitList25, nullptr, OperandInfo171 },  // Inst #1214 = F2_sffma
  { 1215,	4,	1,	4,	106,	0, 0x4000000008027ULL, ImplicitList25, nullptr, OperandInfo171 },  // Inst #1215 = F2_sffma_lib
  { 1216,	5,	1,	4,	107,	0, 0x4000000008027ULL, ImplicitList25, nullptr, OperandInfo172 },  // Inst #1216 = F2_sffma_sc
  { 1217,	4,	1,	4,	106,	0, 0x4000000008027ULL, ImplicitList25, nullptr, OperandInfo171 },  // Inst #1217 = F2_sffms
  { 1218,	4,	1,	4,	106,	0, 0x4000000008027ULL, ImplicitList25, nullptr, OperandInfo171 },  // Inst #1218 = F2_sffms_lib
  { 1219,	2,	1,	4,	101,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1219 = F2_sfimm_n
  { 1220,	2,	1,	4,	101,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1220 = F2_sfimm_p
  { 1221,	3,	2,	4,	108,	0, 0x400000000a02dULL, nullptr, nullptr, OperandInfo46 },  // Inst #1221 = F2_sfinvsqrta
  { 1222,	3,	1,	4,	109,	0, 0x204000000008027ULL, ImplicitList25, nullptr, OperandInfo63 },  // Inst #1222 = F2_sfmax
  { 1223,	3,	1,	4,	109,	0, 0x204000000008027ULL, ImplicitList25, nullptr, OperandInfo63 },  // Inst #1223 = F2_sfmin
  { 1224,	3,	1,	4,	105,	0|(1ULL<<MCID::Commutable), 0x4000000008027ULL, ImplicitList25, nullptr, OperandInfo63 },  // Inst #1224 = F2_sfmpy
  { 1225,	4,	2,	4,	110,	0, 0x400000000a027ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1225 = F2_sfrecipa
  { 1226,	3,	1,	4,	105,	0, 0x4000000008027ULL, ImplicitList25, nullptr, OperandInfo63 },  // Inst #1226 = F2_sfsub
  { 1227,	2,	1,	4,	111,	0, 0x7ULL, nullptr, nullptr, OperandInfo173 },  // Inst #1227 = G4_tfrgcpp
  { 1228,	2,	1,	4,	111,	0, 0x8007ULL, nullptr, nullptr, OperandInfo174 },  // Inst #1228 = G4_tfrgcrr
  { 1229,	2,	1,	4,	112,	0, 0x8007ULL, nullptr, nullptr, OperandInfo175 },  // Inst #1229 = G4_tfrgpcp
  { 1230,	2,	1,	4,	112,	0, 0x8007ULL, nullptr, nullptr, OperandInfo176 },  // Inst #1230 = G4_tfrgrcr
  { 1231,	2,	1,	4,	6,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable), 0x8000ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1231 = HI
  { 1232,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x200005b10800025ULL, ImplicitList3, ImplicitList26, OperandInfo2 },  // Inst #1232 = J2_call
  { 1233,	2,	0,	4,	113,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x200007a32800c25ULL, ImplicitList3, ImplicitList26, OperandInfo55 },  // Inst #1233 = J2_callf
  { 1234,	1,	0,	4,	114,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x200001000000025ULL, ImplicitList3, ImplicitList26, OperandInfo79 },  // Inst #1234 = J2_callr
  { 1235,	2,	0,	4,	115,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x200001000000c25ULL, ImplicitList3, ImplicitList26, OperandInfo56 },  // Inst #1235 = J2_callrf
  { 1236,	2,	0,	4,	115,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x200001000000425ULL, ImplicitList3, ImplicitList26, OperandInfo56 },  // Inst #1236 = J2_callrt
  { 1237,	2,	0,	4,	113,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x200007a32800425ULL, ImplicitList3, ImplicitList26, OperandInfo55 },  // Inst #1237 = J2_callt
  { 1238,	1,	0,	4,	116,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x5b10800025ULL, nullptr, ImplicitList19, OperandInfo2 },  // Inst #1238 = J2_jump
  { 1239,	2,	0,	4,	15,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7a32800c25ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1239 = J2_jumpf
  { 1240,	2,	0,	4,	117,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7a32801c25ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1240 = J2_jumpfnew
  { 1241,	2,	0,	4,	117,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007a32801c25ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1241 = J2_jumpfnewpt
  { 1242,	2,	0,	4,	118,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007a32800c25ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1242 = J2_jumpfpt
  { 1243,	1,	0,	4,	40,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x1000000025ULL, nullptr, ImplicitList19, OperandInfo79 },  // Inst #1243 = J2_jumpr
  { 1244,	2,	0,	4,	16,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000000c25ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1244 = J2_jumprf
  { 1245,	2,	0,	4,	119,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000001c25ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1245 = J2_jumprfnew
  { 1246,	2,	0,	4,	119,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x2001000001c25ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1246 = J2_jumprfnewpt
  { 1247,	2,	0,	4,	120,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x2001000000c25ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1247 = J2_jumprfpt
  { 1248,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7000001407ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1248 = J2_jumprgtez
  { 1249,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007000001407ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1249 = J2_jumprgtezpt
  { 1250,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7000001407ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1250 = J2_jumprltez
  { 1251,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007000001407ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1251 = J2_jumprltezpt
  { 1252,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7000001407ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1252 = J2_jumprnz
  { 1253,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007000001407ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1253 = J2_jumprnzpt
  { 1254,	2,	0,	4,	16,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000000425ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1254 = J2_jumprt
  { 1255,	2,	0,	4,	119,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000001425ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1255 = J2_jumprtnew
  { 1256,	2,	0,	4,	119,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x2001000001425ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1256 = J2_jumprtnewpt
  { 1257,	2,	0,	4,	120,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x2001000000425ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1257 = J2_jumprtpt
  { 1258,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7000001407ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1258 = J2_jumprz
  { 1259,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007000001407ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1259 = J2_jumprzpt
  { 1260,	2,	0,	4,	15,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7a32800425ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1260 = J2_jumpt
  { 1261,	2,	0,	4,	117,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7a32801425ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1261 = J2_jumptnew
  { 1262,	2,	0,	4,	117,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007a32801425ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1262 = J2_jumptnewpt
  { 1263,	2,	0,	4,	118,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007a32800425ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1263 = J2_jumptpt
  { 1264,	2,	0,	4,	122,	0, 0x6930800007ULL, nullptr, ImplicitList27, OperandInfo7 },  // Inst #1264 = J2_loop0i
  { 1265,	2,	0,	4,	122,	0, 0x931800007ULL, nullptr, ImplicitList28, OperandInfo7 },  // Inst #1265 = J2_loop0iext
  { 1266,	2,	0,	4,	123,	0, 0x6930800007ULL, nullptr, ImplicitList27, OperandInfo177 },  // Inst #1266 = J2_loop0r
  { 1267,	2,	0,	4,	123,	0, 0x931800007ULL, nullptr, ImplicitList9, OperandInfo177 },  // Inst #1267 = J2_loop0rext
  { 1268,	2,	0,	4,	122,	0, 0x6930800007ULL, nullptr, ImplicitList15, OperandInfo7 },  // Inst #1268 = J2_loop1i
  { 1269,	2,	0,	4,	122,	0, 0x931800007ULL, nullptr, ImplicitList28, OperandInfo7 },  // Inst #1269 = J2_loop1iext
  { 1270,	2,	0,	4,	123,	0, 0x6930800007ULL, nullptr, ImplicitList15, OperandInfo177 },  // Inst #1270 = J2_loop1r
  { 1271,	2,	0,	4,	123,	0, 0x931800007ULL, nullptr, ImplicitList9, OperandInfo177 },  // Inst #1271 = J2_loop1rext
  { 1272,	1,	0,	4,	124,	0, 0xa5ULL, nullptr, nullptr, OperandInfo2 },  // Inst #1272 = J2_pause
  { 1273,	2,	0,	4,	125,	0, 0x6930802007ULL, nullptr, ImplicitList29, OperandInfo7 },  // Inst #1273 = J2_ploop1si
  { 1274,	2,	0,	4,	126,	0, 0x6930802007ULL, nullptr, ImplicitList29, OperandInfo177 },  // Inst #1274 = J2_ploop1sr
  { 1275,	2,	0,	4,	125,	0, 0x6930802007ULL, nullptr, ImplicitList29, OperandInfo7 },  // Inst #1275 = J2_ploop2si
  { 1276,	2,	0,	4,	126,	0, 0x6930802007ULL, nullptr, ImplicitList29, OperandInfo177 },  // Inst #1276 = J2_ploop2sr
  { 1277,	2,	0,	4,	125,	0, 0x6930802007ULL, nullptr, ImplicitList29, OperandInfo7 },  // Inst #1277 = J2_ploop3si
  { 1278,	2,	0,	4,	126,	0, 0x6930802007ULL, nullptr, ImplicitList29, OperandInfo177 },  // Inst #1278 = J2_ploop3sr
  { 1279,	1,	0,	4,	127,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xa5ULL, nullptr, nullptr, OperandInfo2 },  // Inst #1279 = J2_trap0
  { 1280,	3,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80a5ULL, ImplicitList30, ImplicitList31, OperandInfo144 },  // Inst #1280 = J2_trap1
  { 1281,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c29ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1281 = J4_cmpeq_f_jumpnv_nt
  { 1282,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c29ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1282 = J4_cmpeq_f_jumpnv_t
  { 1283,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1283 = J4_cmpeq_fp0_jump_nt
  { 1284,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1284 = J4_cmpeq_fp0_jump_t
  { 1285,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1285 = J4_cmpeq_fp1_jump_nt
  { 1286,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1286 = J4_cmpeq_fp1_jump_t
  { 1287,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804429ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1287 = J4_cmpeq_t_jumpnv_nt
  { 1288,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804429ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1288 = J4_cmpeq_t_jumpnv_t
  { 1289,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1289 = J4_cmpeq_tp0_jump_nt
  { 1290,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1290 = J4_cmpeq_tp0_jump_t
  { 1291,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1291 = J4_cmpeq_tp1_jump_nt
  { 1292,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1292 = J4_cmpeq_tp1_jump_t
  { 1293,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c29ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1293 = J4_cmpeqi_f_jumpnv_nt
  { 1294,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c29ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1294 = J4_cmpeqi_f_jumpnv_t
  { 1295,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1295 = J4_cmpeqi_fp0_jump_nt
  { 1296,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1296 = J4_cmpeqi_fp0_jump_t
  { 1297,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1297 = J4_cmpeqi_fp1_jump_nt
  { 1298,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1298 = J4_cmpeqi_fp1_jump_t
  { 1299,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804429ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1299 = J4_cmpeqi_t_jumpnv_nt
  { 1300,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804429ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1300 = J4_cmpeqi_t_jumpnv_t
  { 1301,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1301 = J4_cmpeqi_tp0_jump_nt
  { 1302,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1302 = J4_cmpeqi_tp0_jump_t
  { 1303,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1303 = J4_cmpeqi_tp1_jump_nt
  { 1304,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1304 = J4_cmpeqi_tp1_jump_t
  { 1305,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c29ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1305 = J4_cmpeqn1_f_jumpnv_nt
  { 1306,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c29ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1306 = J4_cmpeqn1_f_jumpnv_t
  { 1307,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1307 = J4_cmpeqn1_fp0_jump_nt
  { 1308,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1308 = J4_cmpeqn1_fp0_jump_t
  { 1309,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1309 = J4_cmpeqn1_fp1_jump_nt
  { 1310,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1310 = J4_cmpeqn1_fp1_jump_t
  { 1311,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804429ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1311 = J4_cmpeqn1_t_jumpnv_nt
  { 1312,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804429ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1312 = J4_cmpeqn1_t_jumpnv_t
  { 1313,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1313 = J4_cmpeqn1_tp0_jump_nt
  { 1314,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1314 = J4_cmpeqn1_tp0_jump_t
  { 1315,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1315 = J4_cmpeqn1_tp1_jump_nt
  { 1316,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1316 = J4_cmpeqn1_tp1_jump_t
  { 1317,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c29ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1317 = J4_cmpgt_f_jumpnv_nt
  { 1318,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c29ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1318 = J4_cmpgt_f_jumpnv_t
  { 1319,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1319 = J4_cmpgt_fp0_jump_nt
  { 1320,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1320 = J4_cmpgt_fp0_jump_t
  { 1321,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1321 = J4_cmpgt_fp1_jump_nt
  { 1322,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1322 = J4_cmpgt_fp1_jump_t
  { 1323,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804429ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1323 = J4_cmpgt_t_jumpnv_nt
  { 1324,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804429ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1324 = J4_cmpgt_t_jumpnv_t
  { 1325,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1325 = J4_cmpgt_tp0_jump_nt
  { 1326,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1326 = J4_cmpgt_tp0_jump_t
  { 1327,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1327 = J4_cmpgt_tp1_jump_nt
  { 1328,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1328 = J4_cmpgt_tp1_jump_t
  { 1329,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c29ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1329 = J4_cmpgti_f_jumpnv_nt
  { 1330,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c29ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1330 = J4_cmpgti_f_jumpnv_t
  { 1331,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1331 = J4_cmpgti_fp0_jump_nt
  { 1332,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1332 = J4_cmpgti_fp0_jump_t
  { 1333,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1333 = J4_cmpgti_fp1_jump_nt
  { 1334,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1334 = J4_cmpgti_fp1_jump_t
  { 1335,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804429ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1335 = J4_cmpgti_t_jumpnv_nt
  { 1336,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804429ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1336 = J4_cmpgti_t_jumpnv_t
  { 1337,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1337 = J4_cmpgti_tp0_jump_nt
  { 1338,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1338 = J4_cmpgti_tp0_jump_t
  { 1339,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1339 = J4_cmpgti_tp1_jump_nt
  { 1340,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1340 = J4_cmpgti_tp1_jump_t
  { 1341,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c29ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1341 = J4_cmpgtn1_f_jumpnv_nt
  { 1342,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c29ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1342 = J4_cmpgtn1_f_jumpnv_t
  { 1343,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1343 = J4_cmpgtn1_fp0_jump_nt
  { 1344,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1344 = J4_cmpgtn1_fp0_jump_t
  { 1345,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1345 = J4_cmpgtn1_fp1_jump_nt
  { 1346,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1346 = J4_cmpgtn1_fp1_jump_t
  { 1347,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804429ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1347 = J4_cmpgtn1_t_jumpnv_nt
  { 1348,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804429ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1348 = J4_cmpgtn1_t_jumpnv_t
  { 1349,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1349 = J4_cmpgtn1_tp0_jump_nt
  { 1350,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1350 = J4_cmpgtn1_tp0_jump_t
  { 1351,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1351 = J4_cmpgtn1_tp1_jump_nt
  { 1352,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1352 = J4_cmpgtn1_tp1_jump_t
  { 1353,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c29ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1353 = J4_cmpgtu_f_jumpnv_nt
  { 1354,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c29ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1354 = J4_cmpgtu_f_jumpnv_t
  { 1355,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1355 = J4_cmpgtu_fp0_jump_nt
  { 1356,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1356 = J4_cmpgtu_fp0_jump_t
  { 1357,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1357 = J4_cmpgtu_fp1_jump_nt
  { 1358,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1358 = J4_cmpgtu_fp1_jump_t
  { 1359,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804429ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1359 = J4_cmpgtu_t_jumpnv_nt
  { 1360,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804429ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1360 = J4_cmpgtu_t_jumpnv_t
  { 1361,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1361 = J4_cmpgtu_tp0_jump_nt
  { 1362,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo178 },  // Inst #1362 = J4_cmpgtu_tp0_jump_t
  { 1363,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1363 = J4_cmpgtu_tp1_jump_nt
  { 1364,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo178 },  // Inst #1364 = J4_cmpgtu_tp1_jump_t
  { 1365,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c29ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1365 = J4_cmpgtui_f_jumpnv_nt
  { 1366,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c29ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1366 = J4_cmpgtui_f_jumpnv_t
  { 1367,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1367 = J4_cmpgtui_fp0_jump_nt
  { 1368,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1368 = J4_cmpgtui_fp0_jump_t
  { 1369,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1369 = J4_cmpgtui_fp1_jump_nt
  { 1370,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1370 = J4_cmpgtui_fp1_jump_t
  { 1371,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804429ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1371 = J4_cmpgtui_t_jumpnv_nt
  { 1372,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804429ULL, nullptr, ImplicitList19, OperandInfo147 },  // Inst #1372 = J4_cmpgtui_t_jumpnv_t
  { 1373,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1373 = J4_cmpgtui_tp0_jump_nt
  { 1374,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1374 = J4_cmpgtui_tp0_jump_t
  { 1375,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1375 = J4_cmpgtui_tp1_jump_nt
  { 1376,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1376 = J4_cmpgtui_tp1_jump_t
  { 1377,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974814c29ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1377 = J4_cmplt_f_jumpnv_nt
  { 1378,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974814c29ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1378 = J4_cmplt_f_jumpnv_t
  { 1379,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974814429ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1379 = J4_cmplt_t_jumpnv_nt
  { 1380,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974814429ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1380 = J4_cmplt_t_jumpnv_t
  { 1381,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974814c29ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1381 = J4_cmpltu_f_jumpnv_nt
  { 1382,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974814c29ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1382 = J4_cmpltu_f_jumpnv_t
  { 1383,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974814429ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1383 = J4_cmpltu_t_jumpnv_nt
  { 1384,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974814429ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1384 = J4_cmpltu_t_jumpnv_t
  { 1385,	1,	0,	4,	40,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000000025ULL, nullptr, nullptr, OperandInfo79 },  // Inst #1385 = J4_hintjumpr
  { 1386,	3,	1,	4,	133,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x5974808004ULL, nullptr, ImplicitList19, OperandInfo179 },  // Inst #1386 = J4_jumpseti
  { 1387,	3,	1,	4,	133,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x5974808004ULL, nullptr, ImplicitList19, OperandInfo178 },  // Inst #1387 = J4_jumpsetr
  { 1388,	2,	0,	4,	134,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9972804c29ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1388 = J4_tstbit0_f_jumpnv_nt
  { 1389,	2,	0,	4,	134,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009972804c29ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1389 = J4_tstbit0_f_jumpnv_t
  { 1390,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7972801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1390 = J4_tstbit0_fp0_jump_nt
  { 1391,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007972801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1391 = J4_tstbit0_fp0_jump_t
  { 1392,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7972801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1392 = J4_tstbit0_fp1_jump_nt
  { 1393,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007972801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1393 = J4_tstbit0_fp1_jump_t
  { 1394,	2,	0,	4,	134,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9972804429ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1394 = J4_tstbit0_t_jumpnv_nt
  { 1395,	2,	0,	4,	134,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009972804429ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1395 = J4_tstbit0_t_jumpnv_t
  { 1396,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7972801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1396 = J4_tstbit0_tp0_jump_nt
  { 1397,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007972801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1397 = J4_tstbit0_tp0_jump_t
  { 1398,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7972801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1398 = J4_tstbit0_tp1_jump_nt
  { 1399,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007972801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1399 = J4_tstbit0_tp1_jump_t
  { 1400,	2,	1,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x800000000026ULL, ImplicitList20, ImplicitList3, OperandInfo58 },  // Inst #1400 = L2_deallocframe
  { 1401,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x2c0176800026ULL, nullptr, nullptr, OperandInfo181 },  // Inst #1401 = L2_loadalignb_io
  { 1402,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000000026ULL, nullptr, nullptr, OperandInfo182 },  // Inst #1402 = L2_loadalignb_pbr
  { 1403,	6,	2,	4,	137,	0|(1ULL<<MCID::MayLoad), 0x380000000026ULL, ImplicitList18, nullptr, OperandInfo183 },  // Inst #1403 = L2_loadalignb_pci
  { 1404,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000000026ULL, ImplicitList18, nullptr, OperandInfo182 },  // Inst #1404 = L2_loadalignb_pcr
  { 1405,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000000026ULL, nullptr, nullptr, OperandInfo184 },  // Inst #1405 = L2_loadalignb_pi
  { 1406,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000000026ULL, nullptr, nullptr, OperandInfo182 },  // Inst #1406 = L2_loadalignb_pr
  { 1407,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x4c0596800026ULL, nullptr, nullptr, OperandInfo181 },  // Inst #1407 = L2_loadalignh_io
  { 1408,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000000026ULL, nullptr, nullptr, OperandInfo182 },  // Inst #1408 = L2_loadalignh_pbr
  { 1409,	6,	2,	4,	137,	0|(1ULL<<MCID::MayLoad), 0x580000000026ULL, ImplicitList18, nullptr, OperandInfo183 },  // Inst #1409 = L2_loadalignh_pci
  { 1410,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000000026ULL, ImplicitList18, nullptr, OperandInfo182 },  // Inst #1410 = L2_loadalignh_pcr
  { 1411,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000000026ULL, nullptr, nullptr, OperandInfo184 },  // Inst #1411 = L2_loadalignh_pi
  { 1412,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000000026ULL, nullptr, nullptr, OperandInfo182 },  // Inst #1412 = L2_loadalignh_pr
  { 1413,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x4c0594808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1413 = L2_loadbsw2_io
  { 1414,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1414 = L2_loadbsw2_pbr
  { 1415,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1415 = L2_loadbsw2_pci
  { 1416,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, ImplicitList18, nullptr, OperandInfo185 },  // Inst #1416 = L2_loadbsw2_pcr
  { 1417,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, nullptr, nullptr, OperandInfo187 },  // Inst #1417 = L2_loadbsw2_pi
  { 1418,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1418 = L2_loadbsw2_pr
  { 1419,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x6c09b4800026ULL, nullptr, nullptr, OperandInfo142 },  // Inst #1419 = L2_loadbsw4_io
  { 1420,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000026ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1420 = L2_loadbsw4_pbr
  { 1421,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x780000000026ULL, ImplicitList18, nullptr, OperandInfo189 },  // Inst #1421 = L2_loadbsw4_pci
  { 1422,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000026ULL, ImplicitList18, nullptr, OperandInfo188 },  // Inst #1422 = L2_loadbsw4_pcr
  { 1423,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000026ULL, nullptr, nullptr, OperandInfo190 },  // Inst #1423 = L2_loadbsw4_pi
  { 1424,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000026ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1424 = L2_loadbsw4_pr
  { 1425,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x4c0594808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1425 = L2_loadbzw2_io
  { 1426,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1426 = L2_loadbzw2_pbr
  { 1427,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1427 = L2_loadbzw2_pci
  { 1428,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, ImplicitList18, nullptr, OperandInfo185 },  // Inst #1428 = L2_loadbzw2_pcr
  { 1429,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, nullptr, nullptr, OperandInfo187 },  // Inst #1429 = L2_loadbzw2_pi
  { 1430,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1430 = L2_loadbzw2_pr
  { 1431,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x6c09b4800026ULL, nullptr, nullptr, OperandInfo142 },  // Inst #1431 = L2_loadbzw4_io
  { 1432,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000026ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1432 = L2_loadbzw4_pbr
  { 1433,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x780000000026ULL, ImplicitList18, nullptr, OperandInfo189 },  // Inst #1433 = L2_loadbzw4_pci
  { 1434,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000026ULL, ImplicitList18, nullptr, OperandInfo188 },  // Inst #1434 = L2_loadbzw4_pcr
  { 1435,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000026ULL, nullptr, nullptr, OperandInfo190 },  // Inst #1435 = L2_loadbzw4_pi
  { 1436,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000026ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1436 = L2_loadbzw4_pr
  { 1437,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x2c0174808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1437 = L2_loadrb_io
  { 1438,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1438 = L2_loadrb_pbr
  { 1439,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x380000008026ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1439 = L2_loadrb_pci
  { 1440,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008026ULL, ImplicitList18, nullptr, OperandInfo185 },  // Inst #1440 = L2_loadrb_pcr
  { 1441,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x380000008026ULL, nullptr, nullptr, OperandInfo187 },  // Inst #1441 = L2_loadrb_pi
  { 1442,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1442 = L2_loadrb_pr
  { 1443,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x200202008031ULL, ImplicitList36, nullptr, OperandInfo44 },  // Inst #1443 = L2_loadrbgp
  { 1444,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8c0dd4800026ULL, nullptr, nullptr, OperandInfo142 },  // Inst #1444 = L2_loadrd_io
  { 1445,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x980000000026ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1445 = L2_loadrd_pbr
  { 1446,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x980000000026ULL, ImplicitList18, nullptr, OperandInfo189 },  // Inst #1446 = L2_loadrd_pci
  { 1447,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x980000000026ULL, ImplicitList18, nullptr, OperandInfo188 },  // Inst #1447 = L2_loadrd_pcr
  { 1448,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x980000000026ULL, nullptr, nullptr, OperandInfo190 },  // Inst #1448 = L2_loadrd_pi
  { 1449,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x980000000026ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1449 = L2_loadrd_pr
  { 1450,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x800e62000031ULL, ImplicitList36, nullptr, OperandInfo49 },  // Inst #1450 = L2_loadrdgp
  { 1451,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x4c0594808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1451 = L2_loadrh_io
  { 1452,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1452 = L2_loadrh_pbr
  { 1453,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1453 = L2_loadrh_pci
  { 1454,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, ImplicitList18, nullptr, OperandInfo185 },  // Inst #1454 = L2_loadrh_pcr
  { 1455,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x580000008026ULL, nullptr, nullptr, OperandInfo187 },  // Inst #1455 = L2_loadrh_pi
  { 1456,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1456 = L2_loadrh_pr
  { 1457,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x400622008031ULL, ImplicitList36, nullptr, OperandInfo44 },  // Inst #1457 = L2_loadrhgp
  { 1458,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x6c09b4808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1458 = L2_loadri_io
  { 1459,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1459 = L2_loadri_pbr
  { 1460,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x780000008026ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1460 = L2_loadri_pci
  { 1461,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000008026ULL, ImplicitList18, nullptr, OperandInfo185 },  // Inst #1461 = L2_loadri_pcr
  { 1462,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x780000008026ULL, nullptr, nullptr, OperandInfo187 },  // Inst #1462 = L2_loadri_pi
  { 1463,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1463 = L2_loadri_pr
  { 1464,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x600a42008031ULL, ImplicitList36, nullptr, OperandInfo44 },  // Inst #1464 = L2_loadrigp
  { 1465,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x2c0174808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1465 = L2_loadrub_io
  { 1466,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1466 = L2_loadrub_pbr
  { 1467,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x380000008026ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1467 = L2_loadrub_pci
  { 1468,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008026ULL, ImplicitList18, nullptr, OperandInfo185 },  // Inst #1468 = L2_loadrub_pcr
  { 1469,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x380000008026ULL, nullptr, nullptr, OperandInfo187 },  // Inst #1469 = L2_loadrub_pi
  { 1470,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1470 = L2_loadrub_pr
  { 1471,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x200202008031ULL, ImplicitList36, nullptr, OperandInfo44 },  // Inst #1471 = L2_loadrubgp
  { 1472,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x4c0594808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1472 = L2_loadruh_io
  { 1473,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1473 = L2_loadruh_pbr
  { 1474,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1474 = L2_loadruh_pci
  { 1475,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, ImplicitList18, nullptr, OperandInfo185 },  // Inst #1475 = L2_loadruh_pcr
  { 1476,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x580000008026ULL, nullptr, nullptr, OperandInfo187 },  // Inst #1476 = L2_loadruh_pi
  { 1477,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008026ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1477 = L2_loadruh_pr
  { 1478,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x400622008031ULL, ImplicitList36, nullptr, OperandInfo44 },  // Inst #1478 = L2_loadruhgp
  { 1479,	2,	1,	4,	139,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x600000008126ULL, nullptr, nullptr, OperandInfo45 },  // Inst #1479 = L2_loadw_locked
  { 1480,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x2c00c6808c31ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1480 = L2_ploadrbf_io
  { 1481,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000008c26ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1481 = L2_ploadrbf_pi
  { 1482,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x2c00c6809c31ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1482 = L2_ploadrbfnew_io
  { 1483,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x380000009c26ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1483 = L2_ploadrbfnew_pi
  { 1484,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x2c00c6808431ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1484 = L2_ploadrbt_io
  { 1485,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000008426ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1485 = L2_ploadrbt_pi
  { 1486,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x2c00c6809431ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1486 = L2_ploadrbtnew_io
  { 1487,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x380000009426ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1487 = L2_ploadrbtnew_pi
  { 1488,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x8c0d26800c31ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1488 = L2_ploadrdf_io
  { 1489,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x980000000c26ULL, nullptr, nullptr, OperandInfo193 },  // Inst #1489 = L2_ploadrdf_pi
  { 1490,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x8c0d26801c31ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1490 = L2_ploadrdfnew_io
  { 1491,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x980000001c26ULL, nullptr, nullptr, OperandInfo193 },  // Inst #1491 = L2_ploadrdfnew_pi
  { 1492,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x8c0d26800431ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1492 = L2_ploadrdt_io
  { 1493,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x980000000426ULL, nullptr, nullptr, OperandInfo193 },  // Inst #1493 = L2_ploadrdt_pi
  { 1494,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x8c0d26801431ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1494 = L2_ploadrdtnew_io
  { 1495,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x980000001426ULL, nullptr, nullptr, OperandInfo193 },  // Inst #1495 = L2_ploadrdtnew_pi
  { 1496,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x4c04e6808c31ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1496 = L2_ploadrhf_io
  { 1497,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000008c26ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1497 = L2_ploadrhf_pi
  { 1498,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x4c04e6809c31ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1498 = L2_ploadrhfnew_io
  { 1499,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x580000009c26ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1499 = L2_ploadrhfnew_pi
  { 1500,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x4c04e6808431ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1500 = L2_ploadrht_io
  { 1501,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000008426ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1501 = L2_ploadrht_pi
  { 1502,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x4c04e6809431ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1502 = L2_ploadrhtnew_io
  { 1503,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x580000009426ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1503 = L2_ploadrhtnew_pi
  { 1504,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x6c0906808c31ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1504 = L2_ploadrif_io
  { 1505,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x780000008c26ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1505 = L2_ploadrif_pi
  { 1506,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x6c0906809c31ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1506 = L2_ploadrifnew_io
  { 1507,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x780000009c26ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1507 = L2_ploadrifnew_pi
  { 1508,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x6c0906808431ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1508 = L2_ploadrit_io
  { 1509,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x780000008426ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1509 = L2_ploadrit_pi
  { 1510,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x6c0906809431ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1510 = L2_ploadritnew_io
  { 1511,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x780000009426ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1511 = L2_ploadritnew_pi
  { 1512,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x2c00c6808c31ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1512 = L2_ploadrubf_io
  { 1513,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000008c26ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1513 = L2_ploadrubf_pi
  { 1514,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x2c00c6809c31ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1514 = L2_ploadrubfnew_io
  { 1515,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x380000009c26ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1515 = L2_ploadrubfnew_pi
  { 1516,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x2c00c6808431ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1516 = L2_ploadrubt_io
  { 1517,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000008426ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1517 = L2_ploadrubt_pi
  { 1518,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x2c00c6809431ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1518 = L2_ploadrubtnew_io
  { 1519,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x380000009426ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1519 = L2_ploadrubtnew_pi
  { 1520,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x4c04e6808c31ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1520 = L2_ploadruhf_io
  { 1521,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000008c26ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1521 = L2_ploadruhf_pi
  { 1522,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x4c04e6809c31ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1522 = L2_ploadruhfnew_io
  { 1523,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x580000009c26ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1523 = L2_ploadruhfnew_pi
  { 1524,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x4c04e6808431ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1524 = L2_ploadruht_io
  { 1525,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000008426ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1525 = L2_ploadruht_pi
  { 1526,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x4c04e6809431ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1526 = L2_ploadruhtnew_io
  { 1527,	5,	2,	4,	140,	0|(1ULL<<MCID::MayLoad), 0x580000009426ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1527 = L2_ploadruhtnew_pi
  { 1528,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1528 = L4_add_memopb_io
  { 1529,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1529 = L4_add_memoph_io
  { 1530,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1530 = L4_add_memopw_io
  { 1531,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1531 = L4_and_memopb_io
  { 1532,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1532 = L4_and_memoph_io
  { 1533,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1533 = L4_and_memopw_io
  { 1534,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1534 = L4_iadd_memopb_io
  { 1535,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1535 = L4_iadd_memoph_io
  { 1536,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1536 = L4_iadd_memopw_io
  { 1537,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1537 = L4_iand_memopb_io
  { 1538,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1538 = L4_iand_memoph_io
  { 1539,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1539 = L4_iand_memopw_io
  { 1540,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1540 = L4_ior_memopb_io
  { 1541,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1541 = L4_ior_memoph_io
  { 1542,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1542 = L4_ior_memopw_io
  { 1543,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1543 = L4_isub_memopb_io
  { 1544,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1544 = L4_isub_memoph_io
  { 1545,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800032ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1545 = L4_isub_memopw_io
  { 1546,	4,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x2800c7800026ULL, nullptr, nullptr, OperandInfo194 },  // Inst #1546 = L4_loadalignb_ap
  { 1547,	5,	1,	4,	142,	0|(1ULL<<MCID::MayLoad), 0x3000c9800026ULL, nullptr, nullptr, OperandInfo195 },  // Inst #1547 = L4_loadalignb_ur
  { 1548,	4,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x4800c7800026ULL, nullptr, nullptr, OperandInfo194 },  // Inst #1548 = L4_loadalignh_ap
  { 1549,	5,	1,	4,	142,	0|(1ULL<<MCID::MayLoad), 0x5000c9800026ULL, nullptr, nullptr, OperandInfo195 },  // Inst #1549 = L4_loadalignh_ur
  { 1550,	3,	2,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x4800c5808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1550 = L4_loadbsw2_ap
  { 1551,	4,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x5000c7808026ULL, nullptr, nullptr, OperandInfo196 },  // Inst #1551 = L4_loadbsw2_ur
  { 1552,	3,	2,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x6800c5800026ULL, nullptr, nullptr, OperandInfo142 },  // Inst #1552 = L4_loadbsw4_ap
  { 1553,	4,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x7000c7800026ULL, nullptr, nullptr, OperandInfo197 },  // Inst #1553 = L4_loadbsw4_ur
  { 1554,	3,	2,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x4800c5808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1554 = L4_loadbzw2_ap
  { 1555,	4,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x5000c7808026ULL, nullptr, nullptr, OperandInfo196 },  // Inst #1555 = L4_loadbzw2_ur
  { 1556,	3,	2,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x6800c5800026ULL, nullptr, nullptr, OperandInfo142 },  // Inst #1556 = L4_loadbzw4_ap
  { 1557,	4,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x7000c7800026ULL, nullptr, nullptr, OperandInfo197 },  // Inst #1557 = L4_loadbzw4_ur
  { 1558,	2,	1,	4,	139,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x800000000126ULL, nullptr, nullptr, OperandInfo58 },  // Inst #1558 = L4_loadd_locked
  { 1559,	3,	2,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x2800c5808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1559 = L4_loadrb_ap
  { 1560,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x340000008026ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1560 = L4_loadrb_rr
  { 1561,	4,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x3000c7808026ULL, nullptr, nullptr, OperandInfo196 },  // Inst #1561 = L4_loadrb_ur
  { 1562,	3,	2,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x8800c5800026ULL, nullptr, nullptr, OperandInfo142 },  // Inst #1562 = L4_loadrd_ap
  { 1563,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x940000000026ULL, nullptr, nullptr, OperandInfo198 },  // Inst #1563 = L4_loadrd_rr
  { 1564,	4,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x9000c7800026ULL, nullptr, nullptr, OperandInfo197 },  // Inst #1564 = L4_loadrd_ur
  { 1565,	3,	2,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x4800c5808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1565 = L4_loadrh_ap
  { 1566,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x540000008026ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1566 = L4_loadrh_rr
  { 1567,	4,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x5000c7808026ULL, nullptr, nullptr, OperandInfo196 },  // Inst #1567 = L4_loadrh_ur
  { 1568,	3,	2,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x6800c5808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1568 = L4_loadri_ap
  { 1569,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x740000008026ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1569 = L4_loadri_rr
  { 1570,	4,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x7000c7808026ULL, nullptr, nullptr, OperandInfo196 },  // Inst #1570 = L4_loadri_ur
  { 1571,	3,	2,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x2800c5808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1571 = L4_loadrub_ap
  { 1572,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x340000008026ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1572 = L4_loadrub_rr
  { 1573,	4,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x3000c7808026ULL, nullptr, nullptr, OperandInfo196 },  // Inst #1573 = L4_loadrub_ur
  { 1574,	3,	2,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x4800c5808026ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1574 = L4_loadruh_ap
  { 1575,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x540000008026ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1575 = L4_loadruh_rr
  { 1576,	4,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x5000c7808026ULL, nullptr, nullptr, OperandInfo196 },  // Inst #1576 = L4_loadruh_ur
  { 1577,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1577 = L4_or_memopb_io
  { 1578,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1578 = L4_or_memoph_io
  { 1579,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1579 = L4_or_memopw_io
  { 1580,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x2400c5808c26ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1580 = L4_ploadrbf_abs
  { 1581,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x340000008c26ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1581 = L4_ploadrbf_rr
  { 1582,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x2400c5809c26ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1582 = L4_ploadrbfnew_abs
  { 1583,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x340000009c26ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1583 = L4_ploadrbfnew_rr
  { 1584,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x2400c5808426ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1584 = L4_ploadrbt_abs
  { 1585,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x340000008426ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1585 = L4_ploadrbt_rr
  { 1586,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x2400c5809426ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1586 = L4_ploadrbtnew_abs
  { 1587,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x340000009426ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1587 = L4_ploadrbtnew_rr
  { 1588,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x8400c5800c26ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1588 = L4_ploadrdf_abs
  { 1589,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x940000000c26ULL, nullptr, nullptr, OperandInfo201 },  // Inst #1589 = L4_ploadrdf_rr
  { 1590,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x8400c5801c26ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1590 = L4_ploadrdfnew_abs
  { 1591,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x940000001c26ULL, nullptr, nullptr, OperandInfo201 },  // Inst #1591 = L4_ploadrdfnew_rr
  { 1592,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x8400c5800426ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1592 = L4_ploadrdt_abs
  { 1593,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x940000000426ULL, nullptr, nullptr, OperandInfo201 },  // Inst #1593 = L4_ploadrdt_rr
  { 1594,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x8400c5801426ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1594 = L4_ploadrdtnew_abs
  { 1595,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x940000001426ULL, nullptr, nullptr, OperandInfo201 },  // Inst #1595 = L4_ploadrdtnew_rr
  { 1596,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x4400c5808c26ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1596 = L4_ploadrhf_abs
  { 1597,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x540000008c26ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1597 = L4_ploadrhf_rr
  { 1598,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x4400c5809c26ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1598 = L4_ploadrhfnew_abs
  { 1599,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x540000009c26ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1599 = L4_ploadrhfnew_rr
  { 1600,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x4400c5808426ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1600 = L4_ploadrht_abs
  { 1601,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x540000008426ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1601 = L4_ploadrht_rr
  { 1602,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x4400c5809426ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1602 = L4_ploadrhtnew_abs
  { 1603,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x540000009426ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1603 = L4_ploadrhtnew_rr
  { 1604,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x6400c5808c26ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1604 = L4_ploadrif_abs
  { 1605,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x740000008c26ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1605 = L4_ploadrif_rr
  { 1606,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x6400c5809c26ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1606 = L4_ploadrifnew_abs
  { 1607,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x740000009c26ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1607 = L4_ploadrifnew_rr
  { 1608,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x6400c5808426ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1608 = L4_ploadrit_abs
  { 1609,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x740000008426ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1609 = L4_ploadrit_rr
  { 1610,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x6400c5809426ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1610 = L4_ploadritnew_abs
  { 1611,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x740000009426ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1611 = L4_ploadritnew_rr
  { 1612,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x2400c5808c26ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1612 = L4_ploadrubf_abs
  { 1613,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x340000008c26ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1613 = L4_ploadrubf_rr
  { 1614,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x2400c5809c26ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1614 = L4_ploadrubfnew_abs
  { 1615,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x340000009c26ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1615 = L4_ploadrubfnew_rr
  { 1616,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x2400c5808426ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1616 = L4_ploadrubt_abs
  { 1617,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x340000008426ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1617 = L4_ploadrubt_rr
  { 1618,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x2400c5809426ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1618 = L4_ploadrubtnew_abs
  { 1619,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x340000009426ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1619 = L4_ploadrubtnew_rr
  { 1620,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x4400c5808c26ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1620 = L4_ploadruhf_abs
  { 1621,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x540000008c26ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1621 = L4_ploadruhf_rr
  { 1622,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x4400c5809c26ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1622 = L4_ploadruhfnew_abs
  { 1623,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x540000009c26ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1623 = L4_ploadruhfnew_rr
  { 1624,	3,	1,	4,	146,	0|(1ULL<<MCID::MayLoad), 0x4400c5808426ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1624 = L4_ploadruht_abs
  { 1625,	5,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x540000008426ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1625 = L4_ploadruht_rr
  { 1626,	3,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x4400c5809426ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1626 = L4_ploadruhtnew_abs
  { 1627,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x540000009426ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1627 = L4_ploadruhtnew_rr
  { 1628,	2,	1,	4,	28,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x2809000000026ULL, ImplicitList20, ImplicitList37, OperandInfo58 },  // Inst #1628 = L4_return
  { 1629,	3,	1,	4,	23,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x2809000000c26ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1629 = L4_return_f
  { 1630,	3,	1,	4,	24,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x809000001c26ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1630 = L4_return_fnew_pnt
  { 1631,	3,	1,	4,	24,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x2809000001c26ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1631 = L4_return_fnew_pt
  { 1632,	3,	1,	4,	23,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x2809000000426ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1632 = L4_return_t
  { 1633,	3,	1,	4,	24,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x809000001426ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1633 = L4_return_tnew_pnt
  { 1634,	3,	1,	4,	24,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x2809000001426ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1634 = L4_return_tnew_pt
  { 1635,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1635 = L4_sub_memopb_io
  { 1636,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1636 = L4_sub_memoph_io
  { 1637,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800032ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1637 = L4_sub_memopw_io
  { 1638,	3,	0,	4,	149,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0xa6ULL, nullptr, nullptr, OperandInfo202 },  // Inst #1638 = L6_memcpy
  { 1639,	2,	1,	4,	6,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable), 0x8000ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1639 = LO
  { 1640,	4,	1,	4,	150,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1640 = M2_acci
  { 1641,	4,	1,	4,	150,	0, 0x200000116808027ULL, nullptr, nullptr, OperandInfo203 },  // Inst #1641 = M2_accii
  { 1642,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1642 = M2_cmaci_s0
  { 1643,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1643 = M2_cmacr_s0
  { 1644,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1644 = M2_cmacs_s0
  { 1645,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1645 = M2_cmacs_s1
  { 1646,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1646 = M2_cmacsc_s0
  { 1647,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1647 = M2_cmacsc_s1
  { 1648,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1648 = M2_cmpyi_s0
  { 1649,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1649 = M2_cmpyr_s0
  { 1650,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1650 = M2_cmpyrs_s0
  { 1651,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1651 = M2_cmpyrs_s1
  { 1652,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1652 = M2_cmpyrsc_s0
  { 1653,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1653 = M2_cmpyrsc_s1
  { 1654,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo148 },  // Inst #1654 = M2_cmpys_s0
  { 1655,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo148 },  // Inst #1655 = M2_cmpys_s1
  { 1656,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo148 },  // Inst #1656 = M2_cmpysc_s0
  { 1657,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo148 },  // Inst #1657 = M2_cmpysc_s1
  { 1658,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1658 = M2_cnacs_s0
  { 1659,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1659 = M2_cnacs_s1
  { 1660,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1660 = M2_cnacsc_s0
  { 1661,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1661 = M2_cnacsc_s1
  { 1662,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1662 = M2_dpmpyss_acc_s0
  { 1663,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1663 = M2_dpmpyss_nac_s0
  { 1664,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1664 = M2_dpmpyss_rnd_s0
  { 1665,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1665 = M2_dpmpyss_s0
  { 1666,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1666 = M2_dpmpyuu_acc_s0
  { 1667,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1667 = M2_dpmpyuu_nac_s0
  { 1668,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1668 = M2_dpmpyuu_s0
  { 1669,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1669 = M2_hmmpyh_rs1
  { 1670,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1670 = M2_hmmpyh_s1
  { 1671,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1671 = M2_hmmpyl_rs1
  { 1672,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1672 = M2_hmmpyl_s1
  { 1673,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1673 = M2_maci
  { 1674,	4,	1,	4,	151,	0, 0x200000106808027ULL, nullptr, nullptr, OperandInfo203 },  // Inst #1674 = M2_macsin
  { 1675,	4,	1,	4,	151,	0, 0x200000106808027ULL, nullptr, nullptr, OperandInfo203 },  // Inst #1675 = M2_macsip
  { 1676,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1676 = M2_mmachs_rs0
  { 1677,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1677 = M2_mmachs_rs1
  { 1678,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1678 = M2_mmachs_s0
  { 1679,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1679 = M2_mmachs_s1
  { 1680,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1680 = M2_mmacls_rs0
  { 1681,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1681 = M2_mmacls_rs1
  { 1682,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1682 = M2_mmacls_s0
  { 1683,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1683 = M2_mmacls_s1
  { 1684,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1684 = M2_mmacuhs_rs0
  { 1685,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1685 = M2_mmacuhs_rs1
  { 1686,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1686 = M2_mmacuhs_s0
  { 1687,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1687 = M2_mmacuhs_s1
  { 1688,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1688 = M2_mmaculs_rs0
  { 1689,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1689 = M2_mmaculs_rs1
  { 1690,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1690 = M2_mmaculs_s0
  { 1691,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1691 = M2_mmaculs_s1
  { 1692,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1692 = M2_mmpyh_rs0
  { 1693,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1693 = M2_mmpyh_rs1
  { 1694,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1694 = M2_mmpyh_s0
  { 1695,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1695 = M2_mmpyh_s1
  { 1696,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1696 = M2_mmpyl_rs0
  { 1697,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1697 = M2_mmpyl_rs1
  { 1698,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1698 = M2_mmpyl_s0
  { 1699,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1699 = M2_mmpyl_s1
  { 1700,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1700 = M2_mmpyuh_rs0
  { 1701,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1701 = M2_mmpyuh_rs1
  { 1702,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1702 = M2_mmpyuh_s0
  { 1703,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1703 = M2_mmpyuh_s1
  { 1704,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1704 = M2_mmpyul_rs0
  { 1705,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1705 = M2_mmpyul_rs1
  { 1706,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1706 = M2_mmpyul_s0
  { 1707,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1707 = M2_mmpyul_s1
  { 1708,	4,	1,	4,	103,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1708 = M2_mnaci
  { 1709,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1709 = M2_mpy_acc_hh_s0
  { 1710,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1710 = M2_mpy_acc_hh_s1
  { 1711,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1711 = M2_mpy_acc_hl_s0
  { 1712,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1712 = M2_mpy_acc_hl_s1
  { 1713,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1713 = M2_mpy_acc_lh_s0
  { 1714,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1714 = M2_mpy_acc_lh_s1
  { 1715,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1715 = M2_mpy_acc_ll_s0
  { 1716,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1716 = M2_mpy_acc_ll_s1
  { 1717,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1717 = M2_mpy_acc_sat_hh_s0
  { 1718,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1718 = M2_mpy_acc_sat_hh_s1
  { 1719,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1719 = M2_mpy_acc_sat_hl_s0
  { 1720,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1720 = M2_mpy_acc_sat_hl_s1
  { 1721,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1721 = M2_mpy_acc_sat_lh_s0
  { 1722,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1722 = M2_mpy_acc_sat_lh_s1
  { 1723,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1723 = M2_mpy_acc_sat_ll_s0
  { 1724,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1724 = M2_mpy_acc_sat_ll_s1
  { 1725,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1725 = M2_mpy_hh_s0
  { 1726,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1726 = M2_mpy_hh_s1
  { 1727,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1727 = M2_mpy_hl_s0
  { 1728,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1728 = M2_mpy_hl_s1
  { 1729,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1729 = M2_mpy_lh_s0
  { 1730,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1730 = M2_mpy_lh_s1
  { 1731,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1731 = M2_mpy_ll_s0
  { 1732,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1732 = M2_mpy_ll_s1
  { 1733,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1733 = M2_mpy_nac_hh_s0
  { 1734,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1734 = M2_mpy_nac_hh_s1
  { 1735,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1735 = M2_mpy_nac_hl_s0
  { 1736,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1736 = M2_mpy_nac_hl_s1
  { 1737,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1737 = M2_mpy_nac_lh_s0
  { 1738,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1738 = M2_mpy_nac_lh_s1
  { 1739,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1739 = M2_mpy_nac_ll_s0
  { 1740,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1740 = M2_mpy_nac_ll_s1
  { 1741,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1741 = M2_mpy_nac_sat_hh_s0
  { 1742,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1742 = M2_mpy_nac_sat_hh_s1
  { 1743,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1743 = M2_mpy_nac_sat_hl_s0
  { 1744,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1744 = M2_mpy_nac_sat_hl_s1
  { 1745,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1745 = M2_mpy_nac_sat_lh_s0
  { 1746,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1746 = M2_mpy_nac_sat_lh_s1
  { 1747,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1747 = M2_mpy_nac_sat_ll_s0
  { 1748,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1748 = M2_mpy_nac_sat_ll_s1
  { 1749,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1749 = M2_mpy_rnd_hh_s0
  { 1750,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1750 = M2_mpy_rnd_hh_s1
  { 1751,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1751 = M2_mpy_rnd_hl_s0
  { 1752,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1752 = M2_mpy_rnd_hl_s1
  { 1753,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1753 = M2_mpy_rnd_lh_s0
  { 1754,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1754 = M2_mpy_rnd_lh_s1
  { 1755,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1755 = M2_mpy_rnd_ll_s0
  { 1756,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1756 = M2_mpy_rnd_ll_s1
  { 1757,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1757 = M2_mpy_sat_hh_s0
  { 1758,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1758 = M2_mpy_sat_hh_s1
  { 1759,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1759 = M2_mpy_sat_hl_s0
  { 1760,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1760 = M2_mpy_sat_hl_s1
  { 1761,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1761 = M2_mpy_sat_lh_s0
  { 1762,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1762 = M2_mpy_sat_lh_s1
  { 1763,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1763 = M2_mpy_sat_ll_s0
  { 1764,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1764 = M2_mpy_sat_ll_s1
  { 1765,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1765 = M2_mpy_sat_rnd_hh_s0
  { 1766,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1766 = M2_mpy_sat_rnd_hh_s1
  { 1767,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1767 = M2_mpy_sat_rnd_hl_s0
  { 1768,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1768 = M2_mpy_sat_rnd_hl_s1
  { 1769,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1769 = M2_mpy_sat_rnd_lh_s0
  { 1770,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1770 = M2_mpy_sat_rnd_lh_s1
  { 1771,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1771 = M2_mpy_sat_rnd_ll_s0
  { 1772,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1772 = M2_mpy_sat_rnd_ll_s1
  { 1773,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1773 = M2_mpy_up
  { 1774,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1774 = M2_mpy_up_s1
  { 1775,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1775 = M2_mpy_up_s1_sat
  { 1776,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1776 = M2_mpyd_acc_hh_s0
  { 1777,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1777 = M2_mpyd_acc_hh_s1
  { 1778,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1778 = M2_mpyd_acc_hl_s0
  { 1779,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1779 = M2_mpyd_acc_hl_s1
  { 1780,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1780 = M2_mpyd_acc_lh_s0
  { 1781,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1781 = M2_mpyd_acc_lh_s1
  { 1782,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1782 = M2_mpyd_acc_ll_s0
  { 1783,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1783 = M2_mpyd_acc_ll_s1
  { 1784,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1784 = M2_mpyd_hh_s0
  { 1785,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1785 = M2_mpyd_hh_s1
  { 1786,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1786 = M2_mpyd_hl_s0
  { 1787,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1787 = M2_mpyd_hl_s1
  { 1788,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1788 = M2_mpyd_lh_s0
  { 1789,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1789 = M2_mpyd_lh_s1
  { 1790,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1790 = M2_mpyd_ll_s0
  { 1791,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1791 = M2_mpyd_ll_s1
  { 1792,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1792 = M2_mpyd_nac_hh_s0
  { 1793,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1793 = M2_mpyd_nac_hh_s1
  { 1794,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1794 = M2_mpyd_nac_hl_s0
  { 1795,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1795 = M2_mpyd_nac_hl_s1
  { 1796,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1796 = M2_mpyd_nac_lh_s0
  { 1797,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1797 = M2_mpyd_nac_lh_s1
  { 1798,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1798 = M2_mpyd_nac_ll_s0
  { 1799,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1799 = M2_mpyd_nac_ll_s1
  { 1800,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1800 = M2_mpyd_rnd_hh_s0
  { 1801,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1801 = M2_mpyd_rnd_hh_s1
  { 1802,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1802 = M2_mpyd_rnd_hl_s0
  { 1803,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1803 = M2_mpyd_rnd_hl_s1
  { 1804,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1804 = M2_mpyd_rnd_lh_s0
  { 1805,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1805 = M2_mpyd_rnd_lh_s1
  { 1806,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1806 = M2_mpyd_rnd_ll_s0
  { 1807,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1807 = M2_mpyd_rnd_ll_s1
  { 1808,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1808 = M2_mpyi
  { 1809,	3,	1,	4,	30,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1809 = M2_mpysin
  { 1810,	3,	1,	4,	30,	0, 0x200000104808027ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1810 = M2_mpysip
  { 1811,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1811 = M2_mpysu_up
  { 1812,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1812 = M2_mpyu_acc_hh_s0
  { 1813,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1813 = M2_mpyu_acc_hh_s1
  { 1814,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1814 = M2_mpyu_acc_hl_s0
  { 1815,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1815 = M2_mpyu_acc_hl_s1
  { 1816,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1816 = M2_mpyu_acc_lh_s0
  { 1817,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1817 = M2_mpyu_acc_lh_s1
  { 1818,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1818 = M2_mpyu_acc_ll_s0
  { 1819,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1819 = M2_mpyu_acc_ll_s1
  { 1820,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1820 = M2_mpyu_hh_s0
  { 1821,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1821 = M2_mpyu_hh_s1
  { 1822,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1822 = M2_mpyu_hl_s0
  { 1823,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1823 = M2_mpyu_hl_s1
  { 1824,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1824 = M2_mpyu_lh_s0
  { 1825,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1825 = M2_mpyu_lh_s1
  { 1826,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1826 = M2_mpyu_ll_s0
  { 1827,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1827 = M2_mpyu_ll_s1
  { 1828,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1828 = M2_mpyu_nac_hh_s0
  { 1829,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1829 = M2_mpyu_nac_hh_s1
  { 1830,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1830 = M2_mpyu_nac_hl_s0
  { 1831,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1831 = M2_mpyu_nac_hl_s1
  { 1832,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1832 = M2_mpyu_nac_lh_s0
  { 1833,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1833 = M2_mpyu_nac_lh_s1
  { 1834,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1834 = M2_mpyu_nac_ll_s0
  { 1835,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1835 = M2_mpyu_nac_ll_s1
  { 1836,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1836 = M2_mpyu_up
  { 1837,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1837 = M2_mpyud_acc_hh_s0
  { 1838,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1838 = M2_mpyud_acc_hh_s1
  { 1839,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1839 = M2_mpyud_acc_hl_s0
  { 1840,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1840 = M2_mpyud_acc_hl_s1
  { 1841,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1841 = M2_mpyud_acc_lh_s0
  { 1842,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1842 = M2_mpyud_acc_lh_s1
  { 1843,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1843 = M2_mpyud_acc_ll_s0
  { 1844,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1844 = M2_mpyud_acc_ll_s1
  { 1845,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1845 = M2_mpyud_hh_s0
  { 1846,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1846 = M2_mpyud_hh_s1
  { 1847,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1847 = M2_mpyud_hl_s0
  { 1848,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1848 = M2_mpyud_hl_s1
  { 1849,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1849 = M2_mpyud_lh_s0
  { 1850,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1850 = M2_mpyud_lh_s1
  { 1851,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1851 = M2_mpyud_ll_s0
  { 1852,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1852 = M2_mpyud_ll_s1
  { 1853,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1853 = M2_mpyud_nac_hh_s0
  { 1854,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1854 = M2_mpyud_nac_hh_s1
  { 1855,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1855 = M2_mpyud_nac_hl_s0
  { 1856,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1856 = M2_mpyud_nac_hl_s1
  { 1857,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1857 = M2_mpyud_nac_lh_s0
  { 1858,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1858 = M2_mpyud_nac_lh_s1
  { 1859,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1859 = M2_mpyud_nac_ll_s0
  { 1860,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1860 = M2_mpyud_nac_ll_s1
  { 1861,	4,	1,	4,	150,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1861 = M2_nacci
  { 1862,	4,	1,	4,	150,	0, 0x200000116808027ULL, nullptr, nullptr, OperandInfo203 },  // Inst #1862 = M2_naccii
  { 1863,	4,	1,	4,	150,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1863 = M2_subacc
  { 1864,	3,	1,	4,	47,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1864 = M2_vabsdiffh
  { 1865,	3,	1,	4,	47,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1865 = M2_vabsdiffw
  { 1866,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1866 = M2_vcmac_s0_sat_i
  { 1867,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1867 = M2_vcmac_s0_sat_r
  { 1868,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1868 = M2_vcmpy_s0_sat_i
  { 1869,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1869 = M2_vcmpy_s0_sat_r
  { 1870,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1870 = M2_vcmpy_s1_sat_i
  { 1871,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1871 = M2_vcmpy_s1_sat_r
  { 1872,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1872 = M2_vdmacs_s0
  { 1873,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1873 = M2_vdmacs_s1
  { 1874,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1874 = M2_vdmpyrs_s0
  { 1875,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1875 = M2_vdmpyrs_s1
  { 1876,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1876 = M2_vdmpys_s0
  { 1877,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1877 = M2_vdmpys_s1
  { 1878,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1878 = M2_vmac2
  { 1879,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1879 = M2_vmac2es
  { 1880,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1880 = M2_vmac2es_s0
  { 1881,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1881 = M2_vmac2es_s1
  { 1882,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1882 = M2_vmac2s_s0
  { 1883,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1883 = M2_vmac2s_s1
  { 1884,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1884 = M2_vmac2su_s0
  { 1885,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo204 },  // Inst #1885 = M2_vmac2su_s1
  { 1886,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1886 = M2_vmpy2es_s0
  { 1887,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1887 = M2_vmpy2es_s1
  { 1888,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo148 },  // Inst #1888 = M2_vmpy2s_s0
  { 1889,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1889 = M2_vmpy2s_s0pack
  { 1890,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo148 },  // Inst #1890 = M2_vmpy2s_s1
  { 1891,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1891 = M2_vmpy2s_s1pack
  { 1892,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo148 },  // Inst #1892 = M2_vmpy2su_s0
  { 1893,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo148 },  // Inst #1893 = M2_vmpy2su_s1
  { 1894,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo160 },  // Inst #1894 = M2_vraddh
  { 1895,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo160 },  // Inst #1895 = M2_vradduh
  { 1896,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1896 = M2_vrcmaci_s0
  { 1897,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1897 = M2_vrcmaci_s0c
  { 1898,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1898 = M2_vrcmacr_s0
  { 1899,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1899 = M2_vrcmacr_s0c
  { 1900,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1900 = M2_vrcmpyi_s0
  { 1901,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1901 = M2_vrcmpyi_s0c
  { 1902,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1902 = M2_vrcmpyr_s0
  { 1903,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1903 = M2_vrcmpyr_s0c
  { 1904,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1904 = M2_vrcmpys_acc_s1_h
  { 1905,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1905 = M2_vrcmpys_acc_s1_l
  { 1906,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1906 = M2_vrcmpys_s1_h
  { 1907,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1907 = M2_vrcmpys_s1_l
  { 1908,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1908 = M2_vrcmpys_s1rp_h
  { 1909,	3,	1,	4,	31,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1909 = M2_vrcmpys_s1rp_l
  { 1910,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1910 = M2_vrmac_s0
  { 1911,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1911 = M2_vrmpy_s0
  { 1912,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1912 = M2_xor_xacc
  { 1913,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1913 = M4_and_and
  { 1914,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1914 = M4_and_andn
  { 1915,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1915 = M4_and_or
  { 1916,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1916 = M4_and_xor
  { 1917,	3,	1,	4,	31,	0, 0x20000000000802eULL, nullptr, ImplicitList22, OperandInfo66 },  // Inst #1917 = M4_cmpyi_wh
  { 1918,	3,	1,	4,	31,	0, 0x20000000000802eULL, nullptr, ImplicitList22, OperandInfo66 },  // Inst #1918 = M4_cmpyi_whc
  { 1919,	3,	1,	4,	31,	0, 0x20000000000802eULL, nullptr, ImplicitList22, OperandInfo66 },  // Inst #1919 = M4_cmpyr_wh
  { 1920,	3,	1,	4,	31,	0, 0x20000000000802eULL, nullptr, ImplicitList22, OperandInfo66 },  // Inst #1920 = M4_cmpyr_whc
  { 1921,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1921 = M4_mac_up_s1_sat
  { 1922,	4,	1,	4,	151,	0, 0x2000000c2808003ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1922 = M4_mpyri_addi
  { 1923,	4,	1,	4,	151,	0, 0x2000000c6808003ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1923 = M4_mpyri_addr
  { 1924,	4,	1,	4,	153,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo206 },  // Inst #1924 = M4_mpyri_addr_u2
  { 1925,	4,	1,	4,	32,	0, 0x2000000c2808003ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1925 = M4_mpyrr_addi
  { 1926,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1926 = M4_mpyrr_addr
  { 1927,	4,	1,	4,	32,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo171 },  // Inst #1927 = M4_nac_up_s1_sat
  { 1928,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1928 = M4_or_and
  { 1929,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1929 = M4_or_andn
  { 1930,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1930 = M4_or_or
  { 1931,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1931 = M4_or_xor
  { 1932,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1932 = M4_pmpyw
  { 1933,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1933 = M4_pmpyw_acc
  { 1934,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1934 = M4_vpmpyh
  { 1935,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1935 = M4_vpmpyh_acc
  { 1936,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1936 = M4_vrmpyeh_acc_s0
  { 1937,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1937 = M4_vrmpyeh_acc_s1
  { 1938,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1938 = M4_vrmpyeh_s0
  { 1939,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1939 = M4_vrmpyeh_s1
  { 1940,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1940 = M4_vrmpyoh_acc_s0
  { 1941,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1941 = M4_vrmpyoh_acc_s1
  { 1942,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1942 = M4_vrmpyoh_s0
  { 1943,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1943 = M4_vrmpyoh_s1
  { 1944,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1944 = M4_xor_and
  { 1945,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1945 = M4_xor_andn
  { 1946,	4,	1,	4,	152,	0, 0x200000000008027ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1946 = M4_xor_or
  { 1947,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo67 },  // Inst #1947 = M4_xor_xacc
  { 1948,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1948 = M5_vdmacbsu
  { 1949,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1949 = M5_vdmpybsu
  { 1950,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1950 = M5_vmacbsu
  { 1951,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1951 = M5_vmacbuu
  { 1952,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1952 = M5_vmpybsu
  { 1953,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1953 = M5_vmpybuu
  { 1954,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1954 = M5_vrmacbsu
  { 1955,	4,	1,	4,	32,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1955 = M5_vrmacbuu
  { 1956,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1956 = M5_vrmpybsu
  { 1957,	3,	1,	4,	31,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1957 = M5_vrmpybuu
  { 1958,	3,	1,	4,	92,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1958 = M6_vabsdiffb
  { 1959,	3,	1,	4,	92,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1959 = M6_vabsdiffub
  { 1960,	3,	1,	4,	33,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1960 = M7_dcmpyiw
  { 1961,	4,	1,	4,	34,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1961 = M7_dcmpyiw_acc
  { 1962,	3,	1,	4,	33,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1962 = M7_dcmpyiwc
  { 1963,	4,	1,	4,	34,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1963 = M7_dcmpyiwc_acc
  { 1964,	3,	1,	4,	33,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1964 = M7_dcmpyrw
  { 1965,	4,	1,	4,	34,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1965 = M7_dcmpyrw_acc
  { 1966,	3,	1,	4,	33,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1966 = M7_dcmpyrwc
  { 1967,	4,	1,	4,	34,	0, 0x200000000000027ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1967 = M7_dcmpyrwc_acc
  { 1968,	3,	1,	4,	33,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1968 = M7_wcmpyiw
  { 1969,	3,	1,	4,	33,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1969 = M7_wcmpyiw_rnd
  { 1970,	3,	1,	4,	33,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1970 = M7_wcmpyiwc
  { 1971,	3,	1,	4,	33,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1971 = M7_wcmpyiwc_rnd
  { 1972,	3,	1,	4,	33,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1972 = M7_wcmpyrw
  { 1973,	3,	1,	4,	33,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1973 = M7_wcmpyrw_rnd
  { 1974,	3,	1,	4,	33,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1974 = M7_wcmpyrwc
  { 1975,	3,	1,	4,	33,	0, 0x200000000008027ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1975 = M7_wcmpyrwc_rnd
  { 1976,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800025ULL, nullptr, ImplicitList38, OperandInfo2 },  // Inst #1976 = PS_call_stk
  { 1977,	1,	0,	4,	114,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x1000000825ULL, nullptr, nullptr, OperandInfo79 },  // Inst #1977 = PS_callr_nr
  { 1978,	1,	0,	4,	40,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x1000000025ULL, nullptr, ImplicitList19, OperandInfo79 },  // Inst #1978 = PS_jmpret
  { 1979,	2,	0,	4,	16,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x1000000c25ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1979 = PS_jmpretf
  { 1980,	2,	0,	4,	119,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x1000001c25ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1980 = PS_jmpretfnew
  { 1981,	2,	0,	4,	119,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x2001000001c25ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1981 = PS_jmpretfnewpt
  { 1982,	2,	0,	4,	16,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x1000000425ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1982 = PS_jmprett
  { 1983,	2,	0,	4,	119,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x1000001425ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1983 = PS_jmprettnew
  { 1984,	2,	0,	4,	119,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x2001000001425ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1984 = PS_jmprettnewpt
  { 1985,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x240203008031ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1985 = PS_loadrbabs
  { 1986,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x840e63000031ULL, nullptr, nullptr, OperandInfo49 },  // Inst #1986 = PS_loadrdabs
  { 1987,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x440623008031ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1987 = PS_loadrhabs
  { 1988,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x640a43008031ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1988 = PS_loadriabs
  { 1989,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x240203008031ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1989 = PS_loadrubabs
  { 1990,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x440623008031ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1990 = PS_loadruhabs
  { 1991,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x240201080031ULL, nullptr, nullptr, OperandInfo177 },  // Inst #1991 = PS_storerbabs
  { 1992,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x248201114031ULL, nullptr, nullptr, OperandInfo177 },  // Inst #1992 = PS_storerbnewabs
  { 1993,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x840e61000031ULL, nullptr, nullptr, OperandInfo209 },  // Inst #1993 = PS_storerdabs
  { 1994,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x440621000031ULL, nullptr, nullptr, OperandInfo177 },  // Inst #1994 = PS_storerfabs
  { 1995,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x440621080031ULL, nullptr, nullptr, OperandInfo177 },  // Inst #1995 = PS_storerhabs
  { 1996,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x448621114031ULL, nullptr, nullptr, OperandInfo177 },  // Inst #1996 = PS_storerhnewabs
  { 1997,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x640a41080031ULL, nullptr, nullptr, OperandInfo177 },  // Inst #1997 = PS_storeriabs
  { 1998,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x648a41114031ULL, nullptr, nullptr, OperandInfo177 },  // Inst #1998 = PS_storerinewabs
  { 1999,	1,	0,	4,	17,	0, 0xa5ULL, nullptr, nullptr, OperandInfo2 },  // Inst #1999 = PS_trap1
  { 2000,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800025ULL, nullptr, ImplicitList39, OperandInfo2 },  // Inst #2000 = RESTORE_DEALLOC_BEFORE_TAILCALL_V4
  { 2001,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800025ULL, nullptr, ImplicitList39, OperandInfo2 },  // Inst #2001 = RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT
  { 2002,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800025ULL, nullptr, ImplicitList40, OperandInfo2 },  // Inst #2002 = RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC
  { 2003,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800025ULL, nullptr, ImplicitList40, OperandInfo2 },  // Inst #2003 = RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC
  { 2004,	1,	0,	4,	116,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0xb10800025ULL, nullptr, ImplicitList39, OperandInfo2 },  // Inst #2004 = RESTORE_DEALLOC_RET_JMP_V4
  { 2005,	1,	0,	4,	116,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0xb11800025ULL, nullptr, ImplicitList39, OperandInfo2 },  // Inst #2005 = RESTORE_DEALLOC_RET_JMP_V4_EXT
  { 2006,	1,	0,	4,	116,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0xb11800025ULL, nullptr, ImplicitList40, OperandInfo2 },  // Inst #2006 = RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC
  { 2007,	1,	0,	4,	116,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0xb10800025ULL, nullptr, ImplicitList40, OperandInfo2 },  // Inst #2007 = RESTORE_DEALLOC_RET_JMP_V4_PIC
  { 2008,	4,	1,	4,	150,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo68 },  // Inst #2008 = S2_addasl_rrri
  { 2009,	3,	1,	4,	57,	0|(1ULL<<MCID::MayStore), 0x8c000000802bULL, ImplicitList21, ImplicitList17, OperandInfo144 },  // Inst #2009 = S2_allocframe
  { 2010,	3,	1,	4,	8,	0, 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2010 = S2_asl_i_p
  { 2011,	4,	1,	4,	150,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2011 = S2_asl_i_p_acc
  { 2012,	4,	1,	4,	152,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2012 = S2_asl_i_p_and
  { 2013,	4,	1,	4,	150,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2013 = S2_asl_i_p_nac
  { 2014,	4,	1,	4,	152,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2014 = S2_asl_i_p_or
  { 2015,	4,	1,	4,	152,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2015 = S2_asl_i_p_xacc
  { 2016,	3,	1,	4,	8,	0, 0x802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #2016 = S2_asl_i_r
  { 2017,	4,	1,	4,	150,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2017 = S2_asl_i_r_acc
  { 2018,	4,	1,	4,	152,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2018 = S2_asl_i_r_and
  { 2019,	4,	1,	4,	150,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2019 = S2_asl_i_r_nac
  { 2020,	4,	1,	4,	152,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2020 = S2_asl_i_r_or
  { 2021,	3,	1,	4,	73,	0, 0x20000000000802dULL, nullptr, ImplicitList22, OperandInfo62 },  // Inst #2021 = S2_asl_i_r_sat
  { 2022,	4,	1,	4,	152,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2022 = S2_asl_i_r_xacc
  { 2023,	3,	1,	4,	8,	0, 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2023 = S2_asl_i_vh
  { 2024,	3,	1,	4,	8,	0, 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2024 = S2_asl_i_vw
  { 2025,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2025 = S2_asl_r_p
  { 2026,	4,	1,	4,	150,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2026 = S2_asl_r_p_acc
  { 2027,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2027 = S2_asl_r_p_and
  { 2028,	4,	1,	4,	150,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2028 = S2_asl_r_p_nac
  { 2029,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2029 = S2_asl_r_p_or
  { 2030,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2030 = S2_asl_r_p_xor
  { 2031,	3,	1,	4,	8,	0, 0x802eULL, nullptr, nullptr, OperandInfo63 },  // Inst #2031 = S2_asl_r_r
  { 2032,	4,	1,	4,	150,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2032 = S2_asl_r_r_acc
  { 2033,	4,	1,	4,	152,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2033 = S2_asl_r_r_and
  { 2034,	4,	1,	4,	150,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2034 = S2_asl_r_r_nac
  { 2035,	4,	1,	4,	152,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2035 = S2_asl_r_r_or
  { 2036,	3,	1,	4,	73,	0, 0x20000000000802eULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #2036 = S2_asl_r_r_sat
  { 2037,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2037 = S2_asl_r_vh
  { 2038,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2038 = S2_asl_r_vw
  { 2039,	3,	1,	4,	8,	0, 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2039 = S2_asr_i_p
  { 2040,	4,	1,	4,	150,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2040 = S2_asr_i_p_acc
  { 2041,	4,	1,	4,	152,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2041 = S2_asr_i_p_and
  { 2042,	4,	1,	4,	150,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2042 = S2_asr_i_p_nac
  { 2043,	4,	1,	4,	152,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2043 = S2_asr_i_p_or
  { 2044,	3,	1,	4,	47,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2044 = S2_asr_i_p_rnd
  { 2045,	3,	1,	4,	8,	0, 0x802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #2045 = S2_asr_i_r
  { 2046,	4,	1,	4,	150,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2046 = S2_asr_i_r_acc
  { 2047,	4,	1,	4,	152,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2047 = S2_asr_i_r_and
  { 2048,	4,	1,	4,	150,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2048 = S2_asr_i_r_nac
  { 2049,	4,	1,	4,	152,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2049 = S2_asr_i_r_or
  { 2050,	3,	1,	4,	47,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #2050 = S2_asr_i_r_rnd
  { 2051,	3,	1,	4,	74,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo92 },  // Inst #2051 = S2_asr_i_svw_trun
  { 2052,	3,	1,	4,	8,	0, 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2052 = S2_asr_i_vh
  { 2053,	3,	1,	4,	8,	0, 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2053 = S2_asr_i_vw
  { 2054,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2054 = S2_asr_r_p
  { 2055,	4,	1,	4,	150,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2055 = S2_asr_r_p_acc
  { 2056,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2056 = S2_asr_r_p_and
  { 2057,	4,	1,	4,	150,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2057 = S2_asr_r_p_nac
  { 2058,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2058 = S2_asr_r_p_or
  { 2059,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2059 = S2_asr_r_p_xor
  { 2060,	3,	1,	4,	8,	0, 0x802eULL, nullptr, nullptr, OperandInfo63 },  // Inst #2060 = S2_asr_r_r
  { 2061,	4,	1,	4,	150,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2061 = S2_asr_r_r_acc
  { 2062,	4,	1,	4,	152,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2062 = S2_asr_r_r_and
  { 2063,	4,	1,	4,	150,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2063 = S2_asr_r_r_nac
  { 2064,	4,	1,	4,	152,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2064 = S2_asr_r_r_or
  { 2065,	3,	1,	4,	73,	0, 0x20000000000802eULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #2065 = S2_asr_r_r_sat
  { 2066,	3,	1,	4,	74,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo66 },  // Inst #2066 = S2_asr_r_svw_trun
  { 2067,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2067 = S2_asr_r_vh
  { 2068,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2068 = S2_asr_r_vw
  { 2069,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo45 },  // Inst #2069 = S2_brev
  { 2070,	2,	1,	4,	156,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo47 },  // Inst #2070 = S2_brevp
  { 2071,	3,	1,	4,	157,	0, 0x20000000000202eULL, nullptr, ImplicitList32, OperandInfo50 },  // Inst #2071 = S2_cabacdecbin
  { 2072,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo45 },  // Inst #2072 = S2_cl0
  { 2073,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo90 },  // Inst #2073 = S2_cl0p
  { 2074,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo45 },  // Inst #2074 = S2_cl1
  { 2075,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo90 },  // Inst #2075 = S2_cl1p
  { 2076,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo45 },  // Inst #2076 = S2_clb
  { 2077,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo45 },  // Inst #2077 = S2_clbnorm
  { 2078,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo90 },  // Inst #2078 = S2_clbp
  { 2079,	3,	1,	4,	8,	0, 0x802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #2079 = S2_clrbit_i
  { 2080,	3,	1,	4,	8,	0, 0x802eULL, nullptr, nullptr, OperandInfo63 },  // Inst #2080 = S2_clrbit_r
  { 2081,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo45 },  // Inst #2081 = S2_ct0
  { 2082,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo90 },  // Inst #2082 = S2_ct0p
  { 2083,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo45 },  // Inst #2083 = S2_ct1
  { 2084,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo90 },  // Inst #2084 = S2_ct1p
  { 2085,	2,	1,	4,	156,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo47 },  // Inst #2085 = S2_deinterleave
  { 2086,	4,	1,	4,	150,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo196 },  // Inst #2086 = S2_extractu
  { 2087,	3,	1,	4,	158,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo211 },  // Inst #2087 = S2_extractu_rp
  { 2088,	4,	1,	4,	150,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo212 },  // Inst #2088 = S2_extractup
  { 2089,	3,	1,	4,	158,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo50 },  // Inst #2089 = S2_extractup_rp
  { 2090,	5,	1,	4,	52,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo91 },  // Inst #2090 = S2_insert
  { 2091,	4,	1,	4,	152,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo213 },  // Inst #2091 = S2_insert_rp
  { 2092,	5,	1,	4,	52,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo214 },  // Inst #2092 = S2_insertp
  { 2093,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo67 },  // Inst #2093 = S2_insertp_rp
  { 2094,	2,	1,	4,	156,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo47 },  // Inst #2094 = S2_interleave
  { 2095,	3,	1,	4,	158,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo50 },  // Inst #2095 = S2_lfsp
  { 2096,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2096 = S2_lsl_r_p
  { 2097,	4,	1,	4,	150,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2097 = S2_lsl_r_p_acc
  { 2098,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2098 = S2_lsl_r_p_and
  { 2099,	4,	1,	4,	150,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2099 = S2_lsl_r_p_nac
  { 2100,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2100 = S2_lsl_r_p_or
  { 2101,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2101 = S2_lsl_r_p_xor
  { 2102,	3,	1,	4,	8,	0, 0x802eULL, nullptr, nullptr, OperandInfo63 },  // Inst #2102 = S2_lsl_r_r
  { 2103,	4,	1,	4,	150,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2103 = S2_lsl_r_r_acc
  { 2104,	4,	1,	4,	152,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2104 = S2_lsl_r_r_and
  { 2105,	4,	1,	4,	150,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2105 = S2_lsl_r_r_nac
  { 2106,	4,	1,	4,	152,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2106 = S2_lsl_r_r_or
  { 2107,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2107 = S2_lsl_r_vh
  { 2108,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2108 = S2_lsl_r_vw
  { 2109,	3,	1,	4,	8,	0, 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2109 = S2_lsr_i_p
  { 2110,	4,	1,	4,	150,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2110 = S2_lsr_i_p_acc
  { 2111,	4,	1,	4,	152,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2111 = S2_lsr_i_p_and
  { 2112,	4,	1,	4,	150,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2112 = S2_lsr_i_p_nac
  { 2113,	4,	1,	4,	152,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2113 = S2_lsr_i_p_or
  { 2114,	4,	1,	4,	152,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2114 = S2_lsr_i_p_xacc
  { 2115,	3,	1,	4,	8,	0, 0x802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #2115 = S2_lsr_i_r
  { 2116,	4,	1,	4,	150,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2116 = S2_lsr_i_r_acc
  { 2117,	4,	1,	4,	152,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2117 = S2_lsr_i_r_and
  { 2118,	4,	1,	4,	150,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2118 = S2_lsr_i_r_nac
  { 2119,	4,	1,	4,	152,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2119 = S2_lsr_i_r_or
  { 2120,	4,	1,	4,	152,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2120 = S2_lsr_i_r_xacc
  { 2121,	3,	1,	4,	8,	0, 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2121 = S2_lsr_i_vh
  { 2122,	3,	1,	4,	8,	0, 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2122 = S2_lsr_i_vw
  { 2123,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2123 = S2_lsr_r_p
  { 2124,	4,	1,	4,	150,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2124 = S2_lsr_r_p_acc
  { 2125,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2125 = S2_lsr_r_p_and
  { 2126,	4,	1,	4,	150,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2126 = S2_lsr_r_p_nac
  { 2127,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2127 = S2_lsr_r_p_or
  { 2128,	4,	1,	4,	152,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2128 = S2_lsr_r_p_xor
  { 2129,	3,	1,	4,	8,	0, 0x802eULL, nullptr, nullptr, OperandInfo63 },  // Inst #2129 = S2_lsr_r_r
  { 2130,	4,	1,	4,	150,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2130 = S2_lsr_r_r_acc
  { 2131,	4,	1,	4,	152,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2131 = S2_lsr_r_r_and
  { 2132,	4,	1,	4,	150,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2132 = S2_lsr_r_r_nac
  { 2133,	4,	1,	4,	152,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo171 },  // Inst #2133 = S2_lsr_r_r_or
  { 2134,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2134 = S2_lsr_r_vh
  { 2135,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo65 },  // Inst #2135 = S2_lsr_r_vw
  { 2136,	3,	1,	4,	159,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo147 },  // Inst #2136 = S2_mask
  { 2137,	3,	1,	4,	6,	0, 0x1ULL, nullptr, nullptr, OperandInfo148 },  // Inst #2137 = S2_packhl
  { 2138,	3,	1,	4,	158,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo160 },  // Inst #2138 = S2_parityp
  { 2139,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x2c00c4880c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2139 = S2_pstorerbf_io
  { 2140,	5,	1,	4,	160,	0|(1ULL<<MCID::MayStore), 0x380000080c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2140 = S2_pstorerbf_pi
  { 2141,	5,	1,	4,	161,	0|(1ULL<<MCID::MayStore), 0x380000081c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2141 = S2_pstorerbfnew_pi
  { 2142,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x2c80c4934c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2142 = S2_pstorerbnewf_io
  { 2143,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x388000144c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2143 = S2_pstorerbnewf_pi
  { 2144,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x388000145c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2144 = S2_pstorerbnewfnew_pi
  { 2145,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x2c80c4934431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2145 = S2_pstorerbnewt_io
  { 2146,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x38800014442bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2146 = S2_pstorerbnewt_pi
  { 2147,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x38800014542bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2147 = S2_pstorerbnewtnew_pi
  { 2148,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x2c00c4880431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2148 = S2_pstorerbt_io
  { 2149,	5,	1,	4,	160,	0|(1ULL<<MCID::MayStore), 0x38000008042bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2149 = S2_pstorerbt_pi
  { 2150,	5,	1,	4,	161,	0|(1ULL<<MCID::MayStore), 0x38000008142bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2150 = S2_pstorerbtnew_pi
  { 2151,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x8c0d24800c31ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2151 = S2_pstorerdf_io
  { 2152,	5,	1,	4,	160,	0|(1ULL<<MCID::MayStore), 0x980000000c2bULL, nullptr, nullptr, OperandInfo218 },  // Inst #2152 = S2_pstorerdf_pi
  { 2153,	5,	1,	4,	161,	0|(1ULL<<MCID::MayStore), 0x980000001c2bULL, nullptr, nullptr, OperandInfo218 },  // Inst #2153 = S2_pstorerdfnew_pi
  { 2154,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x8c0d24800431ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2154 = S2_pstorerdt_io
  { 2155,	5,	1,	4,	160,	0|(1ULL<<MCID::MayStore), 0x98000000042bULL, nullptr, nullptr, OperandInfo218 },  // Inst #2155 = S2_pstorerdt_pi
  { 2156,	5,	1,	4,	161,	0|(1ULL<<MCID::MayStore), 0x98000000142bULL, nullptr, nullptr, OperandInfo218 },  // Inst #2156 = S2_pstorerdtnew_pi
  { 2157,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x4c04e4800c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2157 = S2_pstorerff_io
  { 2158,	5,	1,	4,	160,	0|(1ULL<<MCID::MayStore), 0x580000000c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2158 = S2_pstorerff_pi
  { 2159,	5,	1,	4,	161,	0|(1ULL<<MCID::MayStore), 0x580000001c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2159 = S2_pstorerffnew_pi
  { 2160,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x4c04e4800431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2160 = S2_pstorerft_io
  { 2161,	5,	1,	4,	160,	0|(1ULL<<MCID::MayStore), 0x58000000042bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2161 = S2_pstorerft_pi
  { 2162,	5,	1,	4,	161,	0|(1ULL<<MCID::MayStore), 0x58000000142bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2162 = S2_pstorerftnew_pi
  { 2163,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x4c04e4880c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2163 = S2_pstorerhf_io
  { 2164,	5,	1,	4,	160,	0|(1ULL<<MCID::MayStore), 0x580000080c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2164 = S2_pstorerhf_pi
  { 2165,	5,	1,	4,	161,	0|(1ULL<<MCID::MayStore), 0x580000081c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2165 = S2_pstorerhfnew_pi
  { 2166,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x4c84e4934c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2166 = S2_pstorerhnewf_io
  { 2167,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x588000144c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2167 = S2_pstorerhnewf_pi
  { 2168,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x588000145c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2168 = S2_pstorerhnewfnew_pi
  { 2169,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x4c84e4934431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2169 = S2_pstorerhnewt_io
  { 2170,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x58800014442bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2170 = S2_pstorerhnewt_pi
  { 2171,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x58800014542bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2171 = S2_pstorerhnewtnew_pi
  { 2172,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x4c04e4880431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2172 = S2_pstorerht_io
  { 2173,	5,	1,	4,	160,	0|(1ULL<<MCID::MayStore), 0x58000008042bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2173 = S2_pstorerht_pi
  { 2174,	5,	1,	4,	161,	0|(1ULL<<MCID::MayStore), 0x58000008142bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2174 = S2_pstorerhtnew_pi
  { 2175,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x6c0904880c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2175 = S2_pstorerif_io
  { 2176,	5,	1,	4,	160,	0|(1ULL<<MCID::MayStore), 0x780000080c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2176 = S2_pstorerif_pi
  { 2177,	5,	1,	4,	161,	0|(1ULL<<MCID::MayStore), 0x780000081c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2177 = S2_pstorerifnew_pi
  { 2178,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x6c8904934c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2178 = S2_pstorerinewf_io
  { 2179,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x788000144c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2179 = S2_pstorerinewf_pi
  { 2180,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x788000145c2bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2180 = S2_pstorerinewfnew_pi
  { 2181,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x6c8904934431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2181 = S2_pstorerinewt_io
  { 2182,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x78800014442bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2182 = S2_pstorerinewt_pi
  { 2183,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x78800014542bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2183 = S2_pstorerinewtnew_pi
  { 2184,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x6c0904880431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2184 = S2_pstorerit_io
  { 2185,	5,	1,	4,	160,	0|(1ULL<<MCID::MayStore), 0x78000008042bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2185 = S2_pstorerit_pi
  { 2186,	5,	1,	4,	161,	0|(1ULL<<MCID::MayStore), 0x78000008142bULL, nullptr, nullptr, OperandInfo216 },  // Inst #2186 = S2_pstoreritnew_pi
  { 2187,	3,	1,	4,	8,	0, 0x802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #2187 = S2_setbit_i
  { 2188,	3,	1,	4,	8,	0, 0x802eULL, nullptr, nullptr, OperandInfo63 },  // Inst #2188 = S2_setbit_r
  { 2189,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo50 },  // Inst #2189 = S2_shuffeb
  { 2190,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo50 },  // Inst #2190 = S2_shuffeh
  { 2191,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo50 },  // Inst #2191 = S2_shuffob
  { 2192,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo50 },  // Inst #2192 = S2_shuffoh
  { 2193,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x2c017288002bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2193 = S2_storerb_io
  { 2194,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x38000008002bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2194 = S2_storerb_pbr
  { 2195,	5,	1,	4,	38,	0|(1ULL<<MCID::MayStore), 0x38000008002bULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2195 = S2_storerb_pci
  { 2196,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x38000008002bULL, ImplicitList18, nullptr, OperandInfo219 },  // Inst #2196 = S2_storerb_pcr
  { 2197,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x38000008002bULL, nullptr, nullptr, OperandInfo221 },  // Inst #2197 = S2_storerb_pi
  { 2198,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x38000008002bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2198 = S2_storerb_pr
  { 2199,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x200200080031ULL, ImplicitList36, nullptr, OperandInfo177 },  // Inst #2199 = S2_storerbgp
  { 2200,	3,	0,	4,	51,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x2c817292402bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2200 = S2_storerbnew_io
  { 2201,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x38800013402bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2201 = S2_storerbnew_pbr
  { 2202,	5,	1,	4,	164,	0|(1ULL<<MCID::MayStore), 0x38800014402bULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2202 = S2_storerbnew_pci
  { 2203,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x38800013402bULL, ImplicitList18, nullptr, OperandInfo219 },  // Inst #2203 = S2_storerbnew_pcr
  { 2204,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x3880001b402bULL, nullptr, nullptr, OperandInfo221 },  // Inst #2204 = S2_storerbnew_pi
  { 2205,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x38800013402bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2205 = S2_storerbnew_pr
  { 2206,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x208200114031ULL, ImplicitList36, nullptr, OperandInfo177 },  // Inst #2206 = S2_storerbnewgp
  { 2207,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8c0dd280002bULL, nullptr, nullptr, OperandInfo146 },  // Inst #2207 = S2_storerd_io
  { 2208,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x98000000002bULL, nullptr, nullptr, OperandInfo222 },  // Inst #2208 = S2_storerd_pbr
  { 2209,	5,	1,	4,	38,	0|(1ULL<<MCID::MayStore), 0x98000000002bULL, ImplicitList18, nullptr, OperandInfo223 },  // Inst #2209 = S2_storerd_pci
  { 2210,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x98000000002bULL, ImplicitList18, nullptr, OperandInfo222 },  // Inst #2210 = S2_storerd_pcr
  { 2211,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x98000000002bULL, nullptr, nullptr, OperandInfo224 },  // Inst #2211 = S2_storerd_pi
  { 2212,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x98000000002bULL, nullptr, nullptr, OperandInfo222 },  // Inst #2212 = S2_storerd_pr
  { 2213,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x800e60000031ULL, ImplicitList36, nullptr, OperandInfo209 },  // Inst #2213 = S2_storerdgp
  { 2214,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x4c059280002bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2214 = S2_storerf_io
  { 2215,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x58000000002bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2215 = S2_storerf_pbr
  { 2216,	5,	1,	4,	38,	0|(1ULL<<MCID::MayStore), 0x58000000002bULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2216 = S2_storerf_pci
  { 2217,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x58000000002bULL, ImplicitList18, nullptr, OperandInfo219 },  // Inst #2217 = S2_storerf_pcr
  { 2218,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x58000000002bULL, nullptr, nullptr, OperandInfo221 },  // Inst #2218 = S2_storerf_pi
  { 2219,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x58000000002bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2219 = S2_storerf_pr
  { 2220,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x400620000031ULL, ImplicitList36, nullptr, OperandInfo177 },  // Inst #2220 = S2_storerfgp
  { 2221,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x4c059288002bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2221 = S2_storerh_io
  { 2222,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x58000008002bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2222 = S2_storerh_pbr
  { 2223,	5,	1,	4,	38,	0|(1ULL<<MCID::MayStore), 0x58000008002bULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2223 = S2_storerh_pci
  { 2224,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x58000008002bULL, ImplicitList18, nullptr, OperandInfo219 },  // Inst #2224 = S2_storerh_pcr
  { 2225,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x58000008002bULL, nullptr, nullptr, OperandInfo221 },  // Inst #2225 = S2_storerh_pi
  { 2226,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x58000008002bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2226 = S2_storerh_pr
  { 2227,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x400620080031ULL, ImplicitList36, nullptr, OperandInfo177 },  // Inst #2227 = S2_storerhgp
  { 2228,	3,	0,	4,	51,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x4c859292402bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2228 = S2_storerhnew_io
  { 2229,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x58800013402bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2229 = S2_storerhnew_pbr
  { 2230,	5,	1,	4,	164,	0|(1ULL<<MCID::MayStore), 0x58800014402bULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2230 = S2_storerhnew_pci
  { 2231,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x58800013402bULL, ImplicitList18, nullptr, OperandInfo219 },  // Inst #2231 = S2_storerhnew_pcr
  { 2232,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x5880001b402bULL, nullptr, nullptr, OperandInfo221 },  // Inst #2232 = S2_storerhnew_pi
  { 2233,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x58800013402bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2233 = S2_storerhnew_pr
  { 2234,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x408620114031ULL, ImplicitList36, nullptr, OperandInfo177 },  // Inst #2234 = S2_storerhnewgp
  { 2235,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x6c09b288002bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2235 = S2_storeri_io
  { 2236,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x78000008002bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2236 = S2_storeri_pbr
  { 2237,	5,	1,	4,	38,	0|(1ULL<<MCID::MayStore), 0x78000008002bULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2237 = S2_storeri_pci
  { 2238,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x78000008002bULL, ImplicitList18, nullptr, OperandInfo219 },  // Inst #2238 = S2_storeri_pcr
  { 2239,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x78000008002bULL, nullptr, nullptr, OperandInfo221 },  // Inst #2239 = S2_storeri_pi
  { 2240,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x78000008002bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2240 = S2_storeri_pr
  { 2241,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x600a40080031ULL, ImplicitList36, nullptr, OperandInfo177 },  // Inst #2241 = S2_storerigp
  { 2242,	3,	0,	4,	51,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x6c89b292402bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2242 = S2_storerinew_io
  { 2243,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x78800013402bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2243 = S2_storerinew_pbr
  { 2244,	5,	1,	4,	164,	0|(1ULL<<MCID::MayStore), 0x78800014402bULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2244 = S2_storerinew_pci
  { 2245,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x78800013402bULL, ImplicitList18, nullptr, OperandInfo219 },  // Inst #2245 = S2_storerinew_pcr
  { 2246,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x78800013402bULL, nullptr, nullptr, OperandInfo221 },  // Inst #2246 = S2_storerinew_pi
  { 2247,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x78800013402bULL, nullptr, nullptr, OperandInfo219 },  // Inst #2247 = S2_storerinew_pr
  { 2248,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x608a40114031ULL, ImplicitList36, nullptr, OperandInfo177 },  // Inst #2248 = S2_storerinewgp
  { 2249,	3,	1,	4,	165,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x60000000212bULL, nullptr, nullptr, OperandInfo53 },  // Inst #2249 = S2_storew_locked
  { 2250,	2,	1,	4,	76,	0, 0x802dULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #2250 = S2_svsathb
  { 2251,	2,	1,	4,	76,	0, 0x802dULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #2251 = S2_svsathub
  { 2252,	5,	1,	4,	52,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo91 },  // Inst #2252 = S2_tableidxb
  { 2253,	5,	1,	4,	52,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo91 },  // Inst #2253 = S2_tableidxd
  { 2254,	5,	1,	4,	52,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo91 },  // Inst #2254 = S2_tableidxh
  { 2255,	5,	1,	4,	52,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo91 },  // Inst #2255 = S2_tableidxw
  { 2256,	3,	1,	4,	8,	0, 0x802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #2256 = S2_togglebit_i
  { 2257,	3,	1,	4,	8,	0, 0x802eULL, nullptr, nullptr, OperandInfo63 },  // Inst #2257 = S2_togglebit_r
  { 2258,	3,	1,	4,	85,	0, 0x2dULL, nullptr, nullptr, OperandInfo52 },  // Inst #2258 = S2_tstbit_i
  { 2259,	3,	1,	4,	9,	0, 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #2259 = S2_tstbit_r
  { 2260,	4,	1,	4,	96,	0, 0x2eULL, nullptr, nullptr, OperandInfo225 },  // Inst #2260 = S2_valignib
  { 2261,	4,	1,	4,	96,	0, 0x2eULL, nullptr, nullptr, OperandInfo226 },  // Inst #2261 = S2_valignrb
  { 2262,	3,	1,	4,	73,	0, 0x20000000000002eULL, nullptr, ImplicitList22, OperandInfo65 },  // Inst #2262 = S2_vcnegh
  { 2263,	3,	1,	4,	47,	0, 0x20000000000002eULL, nullptr, ImplicitList22, OperandInfo65 },  // Inst #2263 = S2_vcrotate
  { 2264,	4,	1,	4,	32,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo64 },  // Inst #2264 = S2_vrcnegh
  { 2265,	2,	1,	4,	166,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo90 },  // Inst #2265 = S2_vrndpackwh
  { 2266,	2,	1,	4,	72,	0, 0x20000000000802dULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #2266 = S2_vrndpackwhs
  { 2267,	2,	1,	4,	76,	0, 0x802dULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #2267 = S2_vsathb
  { 2268,	2,	1,	4,	76,	0, 0x2dULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #2268 = S2_vsathb_nopack
  { 2269,	2,	1,	4,	76,	0, 0x802dULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #2269 = S2_vsathub
  { 2270,	2,	1,	4,	76,	0, 0x2dULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #2270 = S2_vsathub_nopack
  { 2271,	2,	1,	4,	76,	0, 0x802dULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #2271 = S2_vsatwh
  { 2272,	2,	1,	4,	76,	0, 0x2dULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #2272 = S2_vsatwh_nopack
  { 2273,	2,	1,	4,	76,	0, 0x802dULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #2273 = S2_vsatwuh
  { 2274,	2,	1,	4,	76,	0, 0x2dULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #2274 = S2_vsatwuh_nopack
  { 2275,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x802dULL, nullptr, nullptr, OperandInfo45 },  // Inst #2275 = S2_vsplatrb
  { 2276,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2dULL, nullptr, nullptr, OperandInfo58 },  // Inst #2276 = S2_vsplatrh
  { 2277,	4,	1,	4,	96,	0, 0x2eULL, nullptr, nullptr, OperandInfo225 },  // Inst #2277 = S2_vspliceib
  { 2278,	4,	1,	4,	96,	0, 0x2eULL, nullptr, nullptr, OperandInfo226 },  // Inst #2278 = S2_vsplicerb
  { 2279,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2dULL, nullptr, nullptr, OperandInfo58 },  // Inst #2279 = S2_vsxtbh
  { 2280,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2dULL, nullptr, nullptr, OperandInfo58 },  // Inst #2280 = S2_vsxthw
  { 2281,	2,	1,	4,	76,	0, 0x802dULL, nullptr, nullptr, OperandInfo90 },  // Inst #2281 = S2_vtrunehb
  { 2282,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo50 },  // Inst #2282 = S2_vtrunewh
  { 2283,	2,	1,	4,	76,	0, 0x802dULL, nullptr, nullptr, OperandInfo90 },  // Inst #2283 = S2_vtrunohb
  { 2284,	3,	1,	4,	8,	0, 0x2eULL, nullptr, nullptr, OperandInfo50 },  // Inst #2284 = S2_vtrunowh
  { 2285,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2dULL, nullptr, nullptr, OperandInfo58 },  // Inst #2285 = S2_vzxtbh
  { 2286,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2dULL, nullptr, nullptr, OperandInfo58 },  // Inst #2286 = S2_vzxthw
  { 2287,	4,	1,	4,	150,	0, 0x2000000d6808003ULL, nullptr, nullptr, OperandInfo68 },  // Inst #2287 = S4_addaddi
  { 2288,	4,	1,	4,	150,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo227 },  // Inst #2288 = S4_addi_asl_ri
  { 2289,	4,	1,	4,	150,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo227 },  // Inst #2289 = S4_addi_lsr_ri
  { 2290,	4,	1,	4,	152,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo227 },  // Inst #2290 = S4_andi_asl_ri
  { 2291,	4,	1,	4,	152,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo227 },  // Inst #2291 = S4_andi_lsr_ri
  { 2292,	3,	1,	4,	158,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #2292 = S4_clbaddi
  { 2293,	3,	1,	4,	158,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo92 },  // Inst #2293 = S4_clbpaddi
  { 2294,	2,	1,	4,	156,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo90 },  // Inst #2294 = S4_clbpnorm
  { 2295,	4,	1,	4,	150,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo196 },  // Inst #2295 = S4_extract
  { 2296,	3,	1,	4,	158,	0, 0x20000000000802eULL, nullptr, nullptr, OperandInfo211 },  // Inst #2296 = S4_extract_rp
  { 2297,	4,	1,	4,	150,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo212 },  // Inst #2297 = S4_extractp
  { 2298,	3,	1,	4,	158,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo50 },  // Inst #2298 = S4_extractp_rp
  { 2299,	3,	1,	4,	8,	0, 0x802eULL, nullptr, nullptr, OperandInfo145 },  // Inst #2299 = S4_lsli
  { 2300,	3,	1,	4,	85,	0, 0x2dULL, nullptr, nullptr, OperandInfo52 },  // Inst #2300 = S4_ntstbit_i
  { 2301,	3,	1,	4,	9,	0, 0x2eULL, nullptr, nullptr, OperandInfo53 },  // Inst #2301 = S4_ntstbit_r
  { 2302,	4,	1,	4,	152,	0, 0x200000156808003ULL, nullptr, nullptr, OperandInfo203 },  // Inst #2302 = S4_or_andi
  { 2303,	4,	1,	4,	152,	0, 0x200000156808003ULL, nullptr, nullptr, OperandInfo228 },  // Inst #2303 = S4_or_andix
  { 2304,	4,	1,	4,	152,	0, 0x200000156808003ULL, nullptr, nullptr, OperandInfo203 },  // Inst #2304 = S4_or_ori
  { 2305,	4,	1,	4,	152,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo227 },  // Inst #2305 = S4_ori_asl_ri
  { 2306,	4,	1,	4,	152,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo227 },  // Inst #2306 = S4_ori_lsr_ri
  { 2307,	3,	1,	4,	158,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #2307 = S4_parity
  { 2308,	3,	0,	4,	167,	0|(1ULL<<MCID::MayStore), 0x2400c3880c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2308 = S4_pstorerbf_abs
  { 2309,	5,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x340000080c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2309 = S4_pstorerbf_rr
  { 2310,	3,	0,	4,	169,	0|(1ULL<<MCID::MayStore), 0x2400c3881c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2310 = S4_pstorerbfnew_abs
  { 2311,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x2c00c4881c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2311 = S4_pstorerbfnew_io
  { 2312,	5,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x340000081c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2312 = S4_pstorerbfnew_rr
  { 2313,	3,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x2480c3924c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2313 = S4_pstorerbnewf_abs
  { 2314,	5,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x348000144c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2314 = S4_pstorerbnewf_rr
  { 2315,	3,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x2480c3925c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2315 = S4_pstorerbnewfnew_abs
  { 2316,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x2c80c4935c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2316 = S4_pstorerbnewfnew_io
  { 2317,	5,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x348000145c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2317 = S4_pstorerbnewfnew_rr
  { 2318,	3,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x2480c392442bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2318 = S4_pstorerbnewt_abs
  { 2319,	5,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x34800014442bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2319 = S4_pstorerbnewt_rr
  { 2320,	3,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x2480c392542bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2320 = S4_pstorerbnewtnew_abs
  { 2321,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x2c80c4935431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2321 = S4_pstorerbnewtnew_io
  { 2322,	5,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x34800014542bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2322 = S4_pstorerbnewtnew_rr
  { 2323,	3,	0,	4,	167,	0|(1ULL<<MCID::MayStore), 0x2400c388042bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2323 = S4_pstorerbt_abs
  { 2324,	5,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x34000008042bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2324 = S4_pstorerbt_rr
  { 2325,	3,	0,	4,	169,	0|(1ULL<<MCID::MayStore), 0x2400c388142bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2325 = S4_pstorerbtnew_abs
  { 2326,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x2c00c4881431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2326 = S4_pstorerbtnew_io
  { 2327,	5,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x34000008142bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2327 = S4_pstorerbtnew_rr
  { 2328,	3,	0,	4,	167,	0|(1ULL<<MCID::MayStore), 0x8400c3800c2bULL, nullptr, nullptr, OperandInfo231 },  // Inst #2328 = S4_pstorerdf_abs
  { 2329,	5,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x940000000c2bULL, nullptr, nullptr, OperandInfo232 },  // Inst #2329 = S4_pstorerdf_rr
  { 2330,	3,	0,	4,	169,	0|(1ULL<<MCID::MayStore), 0x8400c3801c2bULL, nullptr, nullptr, OperandInfo231 },  // Inst #2330 = S4_pstorerdfnew_abs
  { 2331,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x8c0d24801c31ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2331 = S4_pstorerdfnew_io
  { 2332,	5,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x940000001c2bULL, nullptr, nullptr, OperandInfo232 },  // Inst #2332 = S4_pstorerdfnew_rr
  { 2333,	3,	0,	4,	167,	0|(1ULL<<MCID::MayStore), 0x8400c380042bULL, nullptr, nullptr, OperandInfo231 },  // Inst #2333 = S4_pstorerdt_abs
  { 2334,	5,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x94000000042bULL, nullptr, nullptr, OperandInfo232 },  // Inst #2334 = S4_pstorerdt_rr
  { 2335,	3,	0,	4,	169,	0|(1ULL<<MCID::MayStore), 0x8400c380142bULL, nullptr, nullptr, OperandInfo231 },  // Inst #2335 = S4_pstorerdtnew_abs
  { 2336,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x8c0d24801431ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2336 = S4_pstorerdtnew_io
  { 2337,	5,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x94000000142bULL, nullptr, nullptr, OperandInfo232 },  // Inst #2337 = S4_pstorerdtnew_rr
  { 2338,	3,	0,	4,	167,	0|(1ULL<<MCID::MayStore), 0x4400c3800c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2338 = S4_pstorerff_abs
  { 2339,	5,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x540000000c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2339 = S4_pstorerff_rr
  { 2340,	3,	0,	4,	169,	0|(1ULL<<MCID::MayStore), 0x4400c3801c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2340 = S4_pstorerffnew_abs
  { 2341,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x4c04e4801c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2341 = S4_pstorerffnew_io
  { 2342,	5,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x540000001c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2342 = S4_pstorerffnew_rr
  { 2343,	3,	0,	4,	167,	0|(1ULL<<MCID::MayStore), 0x4400c380042bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2343 = S4_pstorerft_abs
  { 2344,	5,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x54000000042bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2344 = S4_pstorerft_rr
  { 2345,	3,	0,	4,	169,	0|(1ULL<<MCID::MayStore), 0x4400c380142bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2345 = S4_pstorerftnew_abs
  { 2346,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x4c04e4801431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2346 = S4_pstorerftnew_io
  { 2347,	5,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x54000000142bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2347 = S4_pstorerftnew_rr
  { 2348,	3,	0,	4,	167,	0|(1ULL<<MCID::MayStore), 0x4400c3880c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2348 = S4_pstorerhf_abs
  { 2349,	5,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x540000080c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2349 = S4_pstorerhf_rr
  { 2350,	3,	0,	4,	169,	0|(1ULL<<MCID::MayStore), 0x4400c3881c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2350 = S4_pstorerhfnew_abs
  { 2351,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x4c04e4881c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2351 = S4_pstorerhfnew_io
  { 2352,	5,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x540000081c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2352 = S4_pstorerhfnew_rr
  { 2353,	3,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x4480c3924c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2353 = S4_pstorerhnewf_abs
  { 2354,	5,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x548000144c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2354 = S4_pstorerhnewf_rr
  { 2355,	3,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x4480c3925c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2355 = S4_pstorerhnewfnew_abs
  { 2356,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x4c84e4935c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2356 = S4_pstorerhnewfnew_io
  { 2357,	5,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x548000145c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2357 = S4_pstorerhnewfnew_rr
  { 2358,	3,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x4480c392442bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2358 = S4_pstorerhnewt_abs
  { 2359,	5,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x54800014442bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2359 = S4_pstorerhnewt_rr
  { 2360,	3,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x4480c392542bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2360 = S4_pstorerhnewtnew_abs
  { 2361,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x4c84e4935431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2361 = S4_pstorerhnewtnew_io
  { 2362,	5,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x54800014542bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2362 = S4_pstorerhnewtnew_rr
  { 2363,	3,	0,	4,	167,	0|(1ULL<<MCID::MayStore), 0x4400c388042bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2363 = S4_pstorerht_abs
  { 2364,	5,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x54000008042bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2364 = S4_pstorerht_rr
  { 2365,	3,	0,	4,	169,	0|(1ULL<<MCID::MayStore), 0x4400c388142bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2365 = S4_pstorerhtnew_abs
  { 2366,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x4c04e4881431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2366 = S4_pstorerhtnew_io
  { 2367,	5,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x54000008142bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2367 = S4_pstorerhtnew_rr
  { 2368,	3,	0,	4,	167,	0|(1ULL<<MCID::MayStore), 0x6400c3880c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2368 = S4_pstorerif_abs
  { 2369,	5,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x740000080c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2369 = S4_pstorerif_rr
  { 2370,	3,	0,	4,	169,	0|(1ULL<<MCID::MayStore), 0x6400c3881c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2370 = S4_pstorerifnew_abs
  { 2371,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x6c0904881c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2371 = S4_pstorerifnew_io
  { 2372,	5,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x740000081c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2372 = S4_pstorerifnew_rr
  { 2373,	3,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x6480c3924c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2373 = S4_pstorerinewf_abs
  { 2374,	5,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x748000144c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2374 = S4_pstorerinewf_rr
  { 2375,	3,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x6480c3925c2bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2375 = S4_pstorerinewfnew_abs
  { 2376,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x6c8904935c31ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2376 = S4_pstorerinewfnew_io
  { 2377,	5,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x748000145c2bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2377 = S4_pstorerinewfnew_rr
  { 2378,	3,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x6480c392442bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2378 = S4_pstorerinewt_abs
  { 2379,	5,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x74800014442bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2379 = S4_pstorerinewt_rr
  { 2380,	3,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x6480c392542bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2380 = S4_pstorerinewtnew_abs
  { 2381,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x6c8904935431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2381 = S4_pstorerinewtnew_io
  { 2382,	5,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x74800014542bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2382 = S4_pstorerinewtnew_rr
  { 2383,	3,	0,	4,	167,	0|(1ULL<<MCID::MayStore), 0x6400c388042bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2383 = S4_pstorerit_abs
  { 2384,	5,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x74000008042bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2384 = S4_pstorerit_rr
  { 2385,	3,	0,	4,	169,	0|(1ULL<<MCID::MayStore), 0x6400c388142bULL, nullptr, nullptr, OperandInfo229 },  // Inst #2385 = S4_pstoreritnew_abs
  { 2386,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x6c0904881431ULL, nullptr, nullptr, OperandInfo215 },  // Inst #2386 = S4_pstoreritnew_io
  { 2387,	5,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x74000008142bULL, nullptr, nullptr, OperandInfo230 },  // Inst #2387 = S4_pstoreritnew_rr
  { 2388,	3,	1,	4,	165,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x80000000212bULL, nullptr, nullptr, OperandInfo51 },  // Inst #2388 = S4_stored_locked
  { 2389,	3,	0,	4,	54,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x2c011480002bULL, nullptr, nullptr, OperandInfo147 },  // Inst #2389 = S4_storeirb_io
  { 2390,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x2c00d6800c2bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2390 = S4_storeirbf_io
  { 2391,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x2c00d6801c2bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2391 = S4_storeirbfnew_io
  { 2392,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x2c00d680042bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2392 = S4_storeirbt_io
  { 2393,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x2c00d680142bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2393 = S4_storeirbtnew_io
  { 2394,	3,	0,	4,	54,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x4c011480002bULL, nullptr, nullptr, OperandInfo147 },  // Inst #2394 = S4_storeirh_io
  { 2395,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x4c00d6800c2bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2395 = S4_storeirhf_io
  { 2396,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x4c00d6801c2bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2396 = S4_storeirhfnew_io
  { 2397,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x4c00d680042bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2397 = S4_storeirht_io
  { 2398,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x4c00d680142bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2398 = S4_storeirhtnew_io
  { 2399,	3,	0,	4,	54,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x6c011480002bULL, nullptr, nullptr, OperandInfo147 },  // Inst #2399 = S4_storeiri_io
  { 2400,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x6c00d6800c2bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2400 = S4_storeirif_io
  { 2401,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x6c00d6801c2bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2401 = S4_storeirifnew_io
  { 2402,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x6c00d680042bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2402 = S4_storeirit_io
  { 2403,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x6c00d680142bULL, nullptr, nullptr, OperandInfo233 },  // Inst #2403 = S4_storeiritnew_io
  { 2404,	3,	1,	4,	169,	0|(1ULL<<MCID::MayStore), 0x2800c388002bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2404 = S4_storerb_ap
  { 2405,	4,	0,	4,	175,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x34000008002bULL, nullptr, nullptr, OperandInfo206 },  // Inst #2405 = S4_storerb_rr
  { 2406,	4,	0,	4,	176,	0|(1ULL<<MCID::MayStore), 0x3000c588002bULL, nullptr, nullptr, OperandInfo234 },  // Inst #2406 = S4_storerb_ur
  { 2407,	3,	1,	4,	173,	0|(1ULL<<MCID::MayStore), 0x2880c392402bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2407 = S4_storerbnew_ap
  { 2408,	4,	0,	4,	177,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x34800013402bULL, nullptr, nullptr, OperandInfo206 },  // Inst #2408 = S4_storerbnew_rr
  { 2409,	4,	0,	4,	178,	0|(1ULL<<MCID::MayStore), 0x3080c593402bULL, nullptr, nullptr, OperandInfo234 },  // Inst #2409 = S4_storerbnew_ur
  { 2410,	3,	1,	4,	169,	0|(1ULL<<MCID::MayStore), 0x8800c380002bULL, nullptr, nullptr, OperandInfo146 },  // Inst #2410 = S4_storerd_ap
  { 2411,	4,	0,	4,	175,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x94000000002bULL, nullptr, nullptr, OperandInfo235 },  // Inst #2411 = S4_storerd_rr
  { 2412,	4,	0,	4,	176,	0|(1ULL<<MCID::MayStore), 0x9000c580002bULL, nullptr, nullptr, OperandInfo236 },  // Inst #2412 = S4_storerd_ur
  { 2413,	3,	1,	4,	169,	0|(1ULL<<MCID::MayStore), 0x4800c380002bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2413 = S4_storerf_ap
  { 2414,	4,	0,	4,	175,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x54000000002bULL, nullptr, nullptr, OperandInfo206 },  // Inst #2414 = S4_storerf_rr
  { 2415,	4,	0,	4,	176,	0|(1ULL<<MCID::MayStore), 0x5000c580002bULL, nullptr, nullptr, OperandInfo234 },  // Inst #2415 = S4_storerf_ur
  { 2416,	3,	1,	4,	169,	0|(1ULL<<MCID::MayStore), 0x4800c388002bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2416 = S4_storerh_ap
  { 2417,	4,	0,	4,	175,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x54000008002bULL, nullptr, nullptr, OperandInfo206 },  // Inst #2417 = S4_storerh_rr
  { 2418,	4,	0,	4,	176,	0|(1ULL<<MCID::MayStore), 0x5000c588002bULL, nullptr, nullptr, OperandInfo234 },  // Inst #2418 = S4_storerh_ur
  { 2419,	3,	1,	4,	173,	0|(1ULL<<MCID::MayStore), 0x4880c392402bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2419 = S4_storerhnew_ap
  { 2420,	4,	0,	4,	177,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x54800013402bULL, nullptr, nullptr, OperandInfo206 },  // Inst #2420 = S4_storerhnew_rr
  { 2421,	4,	0,	4,	178,	0|(1ULL<<MCID::MayStore), 0x5080c593402bULL, nullptr, nullptr, OperandInfo234 },  // Inst #2421 = S4_storerhnew_ur
  { 2422,	3,	1,	4,	169,	0|(1ULL<<MCID::MayStore), 0x6800c388002bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2422 = S4_storeri_ap
  { 2423,	4,	0,	4,	175,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x74000008002bULL, nullptr, nullptr, OperandInfo206 },  // Inst #2423 = S4_storeri_rr
  { 2424,	4,	0,	4,	176,	0|(1ULL<<MCID::MayStore), 0x7000c588002bULL, nullptr, nullptr, OperandInfo234 },  // Inst #2424 = S4_storeri_ur
  { 2425,	3,	1,	4,	173,	0|(1ULL<<MCID::MayStore), 0x6880c392402bULL, nullptr, nullptr, OperandInfo145 },  // Inst #2425 = S4_storerinew_ap
  { 2426,	4,	0,	4,	177,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x74800013402bULL, nullptr, nullptr, OperandInfo206 },  // Inst #2426 = S4_storerinew_rr
  { 2427,	4,	0,	4,	178,	0|(1ULL<<MCID::MayStore), 0x7080c593402bULL, nullptr, nullptr, OperandInfo234 },  // Inst #2427 = S4_storerinew_ur
  { 2428,	4,	1,	4,	150,	0, 0x2000000d4808003ULL, nullptr, nullptr, OperandInfo206 },  // Inst #2428 = S4_subaddi
  { 2429,	4,	1,	4,	150,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo227 },  // Inst #2429 = S4_subi_asl_ri
  { 2430,	4,	1,	4,	150,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo227 },  // Inst #2430 = S4_subi_lsr_ri
  { 2431,	4,	1,	4,	179,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo237 },  // Inst #2431 = S4_vrcrotate
  { 2432,	5,	1,	4,	180,	0, 0x20000000000002eULL, nullptr, nullptr, OperandInfo238 },  // Inst #2432 = S4_vrcrotate_acc
  { 2433,	3,	1,	4,	73,	0, 0x20000000000002eULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2433 = S4_vxaddsubh
  { 2434,	3,	1,	4,	47,	0, 0x20000000000002eULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2434 = S4_vxaddsubhr
  { 2435,	3,	1,	4,	73,	0, 0x20000000000002eULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2435 = S4_vxaddsubw
  { 2436,	3,	1,	4,	73,	0, 0x20000000000002eULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2436 = S4_vxsubaddh
  { 2437,	3,	1,	4,	47,	0, 0x20000000000002eULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2437 = S4_vxsubaddhr
  { 2438,	3,	1,	4,	73,	0, 0x20000000000002eULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2438 = S4_vxsubaddw
  { 2439,	3,	1,	4,	47,	0, 0x20000000000802dULL, nullptr, ImplicitList22, OperandInfo92 },  // Inst #2439 = S5_asrhub_rnd_sat
  { 2440,	3,	1,	4,	47,	0, 0x20000000000802dULL, nullptr, ImplicitList22, OperandInfo92 },  // Inst #2440 = S5_asrhub_sat
  { 2441,	2,	1,	4,	181,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo90 },  // Inst #2441 = S5_popcountp
  { 2442,	3,	1,	4,	47,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2442 = S5_vasrhrnd
  { 2443,	3,	1,	4,	90,	0, 0x2dULL, nullptr, nullptr, OperandInfo89 },  // Inst #2443 = S6_rol_i_p
  { 2444,	4,	1,	4,	182,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2444 = S6_rol_i_p_acc
  { 2445,	4,	1,	4,	182,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2445 = S6_rol_i_p_and
  { 2446,	4,	1,	4,	182,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2446 = S6_rol_i_p_nac
  { 2447,	4,	1,	4,	182,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2447 = S6_rol_i_p_or
  { 2448,	4,	1,	4,	182,	0, 0x20000000000002dULL, nullptr, nullptr, OperandInfo210 },  // Inst #2448 = S6_rol_i_p_xacc
  { 2449,	3,	1,	4,	90,	0, 0x802dULL, nullptr, nullptr, OperandInfo62 },  // Inst #2449 = S6_rol_i_r
  { 2450,	4,	1,	4,	182,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2450 = S6_rol_i_r_acc
  { 2451,	4,	1,	4,	182,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2451 = S6_rol_i_r_and
  { 2452,	4,	1,	4,	182,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2452 = S6_rol_i_r_nac
  { 2453,	4,	1,	4,	182,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2453 = S6_rol_i_r_or
  { 2454,	4,	1,	4,	182,	0, 0x20000000000802dULL, nullptr, nullptr, OperandInfo203 },  // Inst #2454 = S6_rol_i_r_xacc
  { 2455,	2,	1,	4,	183,	0, 0x2dULL, nullptr, nullptr, OperandInfo58 },  // Inst #2455 = S6_vsplatrbp
  { 2456,	3,	1,	4,	90,	0, 0x2eULL, nullptr, nullptr, OperandInfo50 },  // Inst #2456 = S6_vtrunehb_ppp
  { 2457,	3,	1,	4,	90,	0, 0x2eULL, nullptr, nullptr, OperandInfo50 },  // Inst #2457 = S6_vtrunohb_ppp
  { 2458,	3,	1,	4,	184,	0, 0xf480802cULL, nullptr, nullptr, OperandInfo239 },  // Inst #2458 = SA1_addi
  { 2459,	3,	1,	4,	184,	0, 0x802cULL, nullptr, nullptr, OperandInfo240 },  // Inst #2459 = SA1_addrx
  { 2460,	2,	1,	4,	185,	0, 0x802cULL, ImplicitList3, nullptr, OperandInfo180 },  // Inst #2460 = SA1_addsp
  { 2461,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo241 },  // Inst #2461 = SA1_and1
  { 2462,	1,	1,	4,	186,	0, 0x8c2cULL, ImplicitList32, nullptr, OperandInfo242 },  // Inst #2462 = SA1_clrf
  { 2463,	1,	1,	4,	187,	0, 0x9c2cULL, ImplicitList32, nullptr, OperandInfo242 },  // Inst #2463 = SA1_clrfnew
  { 2464,	1,	1,	4,	186,	0, 0x842cULL, ImplicitList32, nullptr, OperandInfo242 },  // Inst #2464 = SA1_clrt
  { 2465,	1,	1,	4,	187,	0, 0x942cULL, ImplicitList32, nullptr, OperandInfo242 },  // Inst #2465 = SA1_clrtnew
  { 2466,	2,	0,	4,	188,	0, 0x2cULL, nullptr, ImplicitList32, OperandInfo180 },  // Inst #2466 = SA1_cmpeqi
  { 2467,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo243 },  // Inst #2467 = SA1_combine0i
  { 2468,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo243 },  // Inst #2468 = SA1_combine1i
  { 2469,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo243 },  // Inst #2469 = SA1_combine2i
  { 2470,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo243 },  // Inst #2470 = SA1_combine3i
  { 2471,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo244 },  // Inst #2471 = SA1_combinerz
  { 2472,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo244 },  // Inst #2472 = SA1_combinezr
  { 2473,	3,	1,	4,	184,	0, 0x802cULL, nullptr, nullptr, OperandInfo178 },  // Inst #2473 = SA1_dec
  { 2474,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo241 },  // Inst #2474 = SA1_inc
  { 2475,	2,	1,	4,	185,	0, 0xc280802cULL, nullptr, nullptr, OperandInfo180 },  // Inst #2475 = SA1_seti
  { 2476,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo180 },  // Inst #2476 = SA1_setin1
  { 2477,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo241 },  // Inst #2477 = SA1_sxtb
  { 2478,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo241 },  // Inst #2478 = SA1_sxth
  { 2479,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo241 },  // Inst #2479 = SA1_tfr
  { 2480,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo241 },  // Inst #2480 = SA1_zxtb
  { 2481,	2,	1,	4,	185,	0, 0x802cULL, nullptr, nullptr, OperandInfo241 },  // Inst #2481 = SA1_zxth
  { 2482,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800025ULL, ImplicitList41, nullptr, OperandInfo2 },  // Inst #2482 = SAVE_REGISTERS_CALL_V4
  { 2483,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800025ULL, ImplicitList41, ImplicitList32, OperandInfo2 },  // Inst #2483 = SAVE_REGISTERS_CALL_V4STK
  { 2484,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800025ULL, ImplicitList41, ImplicitList32, OperandInfo2 },  // Inst #2484 = SAVE_REGISTERS_CALL_V4STK_EXT
  { 2485,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800025ULL, ImplicitList41, ImplicitList42, OperandInfo2 },  // Inst #2485 = SAVE_REGISTERS_CALL_V4STK_EXT_PIC
  { 2486,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800025ULL, ImplicitList41, ImplicitList42, OperandInfo2 },  // Inst #2486 = SAVE_REGISTERS_CALL_V4STK_PIC
  { 2487,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800025ULL, ImplicitList41, nullptr, OperandInfo2 },  // Inst #2487 = SAVE_REGISTERS_CALL_V4_EXT
  { 2488,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800025ULL, ImplicitList41, ImplicitList43, OperandInfo2 },  // Inst #2488 = SAVE_REGISTERS_CALL_V4_EXT_PIC
  { 2489,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800025ULL, ImplicitList41, ImplicitList43, OperandInfo2 },  // Inst #2489 = SAVE_REGISTERS_CALL_V4_PIC
  { 2490,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x6c000000802cULL, nullptr, nullptr, OperandInfo178 },  // Inst #2490 = SL1_loadri_io
  { 2491,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x2c000000802cULL, nullptr, nullptr, OperandInfo178 },  // Inst #2491 = SL1_loadrub_io
  { 2492,	0,	0,	4,	189,	0|(1ULL<<MCID::MayLoad), 0x80000000002cULL, ImplicitList44, ImplicitList4, nullptr },  // Inst #2492 = SL2_deallocframe
  { 2493,	0,	0,	4,	190,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x100000002cULL, ImplicitList45, ImplicitList19, nullptr },  // Inst #2493 = SL2_jumpr31
  { 2494,	0,	0,	4,	190,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000000c2cULL, ImplicitList46, ImplicitList19, nullptr },  // Inst #2494 = SL2_jumpr31_f
  { 2495,	0,	0,	4,	190,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000001c2cULL, ImplicitList46, ImplicitList19, nullptr },  // Inst #2495 = SL2_jumpr31_fnew
  { 2496,	0,	0,	4,	190,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x100000042cULL, ImplicitList46, ImplicitList19, nullptr },  // Inst #2496 = SL2_jumpr31_t
  { 2497,	0,	0,	4,	190,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x100000142cULL, ImplicitList46, ImplicitList19, nullptr },  // Inst #2497 = SL2_jumpr31_tnew
  { 2498,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x2c000000802cULL, nullptr, nullptr, OperandInfo178 },  // Inst #2498 = SL2_loadrb_io
  { 2499,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad), 0x8c000000802cULL, ImplicitList3, nullptr, OperandInfo243 },  // Inst #2499 = SL2_loadrd_sp
  { 2500,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x4c000000802cULL, nullptr, nullptr, OperandInfo178 },  // Inst #2500 = SL2_loadrh_io
  { 2501,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad), 0x6c000000802cULL, ImplicitList3, nullptr, OperandInfo180 },  // Inst #2501 = SL2_loadri_sp
  { 2502,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x4c000000802cULL, nullptr, nullptr, OperandInfo178 },  // Inst #2502 = SL2_loadruh_io
  { 2503,	0,	0,	4,	191,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x80900000002cULL, ImplicitList44, ImplicitList47, nullptr },  // Inst #2503 = SL2_return
  { 2504,	0,	0,	4,	191,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x809000000c2cULL, ImplicitList48, ImplicitList47, nullptr },  // Inst #2504 = SL2_return_f
  { 2505,	0,	0,	4,	191,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x809000001c2cULL, ImplicitList48, ImplicitList47, nullptr },  // Inst #2505 = SL2_return_fnew
  { 2506,	0,	0,	4,	191,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x80900000042cULL, ImplicitList48, ImplicitList47, nullptr },  // Inst #2506 = SL2_return_t
  { 2507,	0,	0,	4,	191,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x80900000142cULL, ImplicitList48, ImplicitList47, nullptr },  // Inst #2507 = SL2_return_tnew
  { 2508,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore), 0x2c000000002cULL, nullptr, nullptr, OperandInfo245 },  // Inst #2508 = SS1_storeb_io
  { 2509,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore), 0x6c000000002cULL, nullptr, nullptr, OperandInfo245 },  // Inst #2509 = SS1_storew_io
  { 2510,	1,	0,	4,	192,	0|(1ULL<<MCID::MayStore), 0x8c000000002cULL, ImplicitList49, ImplicitList2, OperandInfo2 },  // Inst #2510 = SS2_allocframe
  { 2511,	2,	0,	4,	193,	0|(1ULL<<MCID::MayStore), 0x2c000000002cULL, nullptr, nullptr, OperandInfo180 },  // Inst #2511 = SS2_storebi0
  { 2512,	2,	0,	4,	193,	0|(1ULL<<MCID::MayStore), 0x2c000000002cULL, nullptr, nullptr, OperandInfo180 },  // Inst #2512 = SS2_storebi1
  { 2513,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore), 0x8c000000002cULL, ImplicitList3, nullptr, OperandInfo246 },  // Inst #2513 = SS2_stored_sp
  { 2514,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore), 0x4c000000002cULL, nullptr, nullptr, OperandInfo245 },  // Inst #2514 = SS2_storeh_io
  { 2515,	2,	0,	4,	154,	0|(1ULL<<MCID::MayStore), 0x6c000000002cULL, ImplicitList3, nullptr, OperandInfo247 },  // Inst #2515 = SS2_storew_sp
  { 2516,	2,	0,	4,	193,	0|(1ULL<<MCID::MayStore), 0x6c000000002cULL, nullptr, nullptr, OperandInfo180 },  // Inst #2516 = SS2_storewi0
  { 2517,	2,	0,	4,	193,	0|(1ULL<<MCID::MayStore), 0x6c000000002cULL, nullptr, nullptr, OperandInfo180 },  // Inst #2517 = SS2_storewi1
  { 2518,	3,	1,	4,	6,	0, 0xc2800000ULL, nullptr, nullptr, OperandInfo140 },  // Inst #2518 = TFRI64_V2_ext
  { 2519,	2,	1,	4,	6,	0, 0xc2800000ULL, nullptr, nullptr, OperandInfo49 },  // Inst #2519 = TFRI64_V4
  { 2520,	3,	1,	4,	194,	0|(1ULL<<MCID::MayLoad), 0x80000000000080a6ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2520 = V6_extractw
  { 2521,	2,	1,	4,	195,	0, 0x8000000000008020ULL, nullptr, nullptr, OperandInfo99 },  // Inst #2521 = V6_lvsplatb
  { 2522,	2,	1,	4,	195,	0, 0x8000000000008020ULL, nullptr, nullptr, OperandInfo99 },  // Inst #2522 = V6_lvsplath
  { 2523,	2,	1,	4,	195,	0, 0x8000000000008020ULL, nullptr, nullptr, OperandInfo99 },  // Inst #2523 = V6_lvsplatw
  { 2524,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo248 },  // Inst #2524 = V6_pred_and
  { 2525,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo248 },  // Inst #2525 = V6_pred_and_n
  { 2526,	2,	1,	4,	60,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo249 },  // Inst #2526 = V6_pred_not
  { 2527,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo248 },  // Inst #2527 = V6_pred_or
  { 2528,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo248 },  // Inst #2528 = V6_pred_or_n
  { 2529,	2,	1,	4,	196,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo250 },  // Inst #2529 = V6_pred_scalar2
  { 2530,	2,	1,	4,	196,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo250 },  // Inst #2530 = V6_pred_scalar2v2
  { 2531,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo248 },  // Inst #2531 = V6_pred_xor
  { 2532,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo248 },  // Inst #2532 = V6_shuffeqh
  { 2533,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo248 },  // Inst #2533 = V6_shuffeqw
  { 2534,	3,	1,	4,	197,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408019ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2534 = V6_vL32Ub_ai
  { 2535,	4,	2,	4,	198,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408019ULL, nullptr, nullptr, OperandInfo251 },  // Inst #2535 = V6_vL32Ub_pi
  { 2536,	4,	2,	4,	198,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408019ULL, nullptr, nullptr, OperandInfo252 },  // Inst #2536 = V6_vL32Ub_ppu
  { 2537,	3,	1,	4,	42,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000ac8000608014ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2537 = V6_vL32b_ai
  { 2538,	3,	1,	4,	42,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000ac8000408014ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2538 = V6_vL32b_cur_ai
  { 2539,	4,	1,	4,	199,	0|(1ULL<<MCID::MayLoad), 0xc000ac8000408c14ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2539 = V6_vL32b_cur_npred_ai
  { 2540,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408c14ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2540 = V6_vL32b_cur_npred_pi
  { 2541,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408c14ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2541 = V6_vL32b_cur_npred_ppu
  { 2542,	4,	2,	4,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000b88000408014ULL, nullptr, nullptr, OperandInfo251 },  // Inst #2542 = V6_vL32b_cur_pi
  { 2543,	4,	2,	4,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000b88000408014ULL, nullptr, nullptr, OperandInfo252 },  // Inst #2543 = V6_vL32b_cur_ppu
  { 2544,	4,	1,	4,	199,	0|(1ULL<<MCID::MayLoad), 0xc000ac8000408414ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2544 = V6_vL32b_cur_pred_ai
  { 2545,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408414ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2545 = V6_vL32b_cur_pred_pi
  { 2546,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408414ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2546 = V6_vL32b_cur_pred_ppu
  { 2547,	4,	1,	4,	199,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408c14ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2547 = V6_vL32b_npred_ai
  { 2548,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c14ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2548 = V6_vL32b_npred_pi
  { 2549,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c14ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2549 = V6_vL32b_npred_ppu
  { 2550,	3,	1,	4,	42,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000ac8000608014ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2550 = V6_vL32b_nt_ai
  { 2551,	3,	1,	4,	42,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000ac8000408014ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2551 = V6_vL32b_nt_cur_ai
  { 2552,	4,	1,	4,	199,	0|(1ULL<<MCID::MayLoad), 0xc000ac8000408c14ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2552 = V6_vL32b_nt_cur_npred_ai
  { 2553,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408c14ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2553 = V6_vL32b_nt_cur_npred_pi
  { 2554,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408c14ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2554 = V6_vL32b_nt_cur_npred_ppu
  { 2555,	4,	2,	4,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000b88000408014ULL, nullptr, nullptr, OperandInfo251 },  // Inst #2555 = V6_vL32b_nt_cur_pi
  { 2556,	4,	2,	4,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000b88000408014ULL, nullptr, nullptr, OperandInfo252 },  // Inst #2556 = V6_vL32b_nt_cur_ppu
  { 2557,	4,	1,	4,	199,	0|(1ULL<<MCID::MayLoad), 0xc000ac8000408414ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2557 = V6_vL32b_nt_cur_pred_ai
  { 2558,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408414ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2558 = V6_vL32b_nt_cur_pred_pi
  { 2559,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408414ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2559 = V6_vL32b_nt_cur_pred_ppu
  { 2560,	4,	1,	4,	199,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408c14ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2560 = V6_vL32b_nt_npred_ai
  { 2561,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c14ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2561 = V6_vL32b_nt_npred_pi
  { 2562,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c14ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2562 = V6_vL32b_nt_npred_ppu
  { 2563,	4,	2,	4,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000608014ULL, nullptr, nullptr, OperandInfo251 },  // Inst #2563 = V6_vL32b_nt_pi
  { 2564,	4,	2,	4,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000608014ULL, nullptr, nullptr, OperandInfo252 },  // Inst #2564 = V6_vL32b_nt_ppu
  { 2565,	4,	1,	4,	199,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408414ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2565 = V6_vL32b_nt_pred_ai
  { 2566,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408414ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2566 = V6_vL32b_nt_pred_pi
  { 2567,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408414ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2567 = V6_vL32b_nt_pred_ppu
  { 2568,	3,	1,	4,	202,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000ac8000408018ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2568 = V6_vL32b_nt_tmp_ai
  { 2569,	4,	1,	4,	203,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408c18ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2569 = V6_vL32b_nt_tmp_npred_ai
  { 2570,	5,	2,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c18ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2570 = V6_vL32b_nt_tmp_npred_pi
  { 2571,	5,	2,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c18ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2571 = V6_vL32b_nt_tmp_npred_ppu
  { 2572,	4,	2,	4,	205,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000408018ULL, nullptr, nullptr, OperandInfo251 },  // Inst #2572 = V6_vL32b_nt_tmp_pi
  { 2573,	4,	2,	4,	205,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000408018ULL, nullptr, nullptr, OperandInfo252 },  // Inst #2573 = V6_vL32b_nt_tmp_ppu
  { 2574,	4,	1,	4,	203,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408418ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2574 = V6_vL32b_nt_tmp_pred_ai
  { 2575,	5,	2,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408418ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2575 = V6_vL32b_nt_tmp_pred_pi
  { 2576,	5,	2,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408418ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2576 = V6_vL32b_nt_tmp_pred_ppu
  { 2577,	4,	2,	4,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000608014ULL, nullptr, nullptr, OperandInfo251 },  // Inst #2577 = V6_vL32b_pi
  { 2578,	4,	2,	4,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000608014ULL, nullptr, nullptr, OperandInfo252 },  // Inst #2578 = V6_vL32b_ppu
  { 2579,	4,	1,	4,	199,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408414ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2579 = V6_vL32b_pred_ai
  { 2580,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408414ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2580 = V6_vL32b_pred_pi
  { 2581,	5,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408414ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2581 = V6_vL32b_pred_ppu
  { 2582,	3,	1,	4,	202,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000ac8000408018ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2582 = V6_vL32b_tmp_ai
  { 2583,	4,	1,	4,	203,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408c18ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2583 = V6_vL32b_tmp_npred_ai
  { 2584,	5,	2,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c18ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2584 = V6_vL32b_tmp_npred_pi
  { 2585,	5,	2,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c18ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2585 = V6_vL32b_tmp_npred_ppu
  { 2586,	4,	2,	4,	205,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000408018ULL, nullptr, nullptr, OperandInfo251 },  // Inst #2586 = V6_vL32b_tmp_pi
  { 2587,	4,	2,	4,	205,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000408018ULL, nullptr, nullptr, OperandInfo252 },  // Inst #2587 = V6_vL32b_tmp_ppu
  { 2588,	4,	1,	4,	203,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408418ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2588 = V6_vL32b_tmp_pred_ai
  { 2589,	5,	2,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408418ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2589 = V6_vL32b_tmp_pred_pi
  { 2590,	5,	2,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408418ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2590 = V6_vL32b_tmp_pred_ppu
  { 2591,	3,	0,	4,	206,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000ac0000000017ULL, nullptr, nullptr, OperandInfo86 },  // Inst #2591 = V6_vS32Ub_ai
  { 2592,	4,	0,	4,	207,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000c17ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2592 = V6_vS32Ub_npred_ai
  { 2593,	5,	1,	4,	208,	0|(1ULL<<MCID::MayStore), 0x8000b80000000c17ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2593 = V6_vS32Ub_npred_pi
  { 2594,	5,	1,	4,	208,	0|(1ULL<<MCID::MayStore), 0x8000b80000000c17ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2594 = V6_vS32Ub_npred_ppu
  { 2595,	4,	1,	4,	209,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000000017ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2595 = V6_vS32Ub_pi
  { 2596,	4,	1,	4,	209,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000000017ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2596 = V6_vS32Ub_ppu
  { 2597,	4,	0,	4,	207,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000417ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2597 = V6_vS32Ub_pred_ai
  { 2598,	5,	1,	4,	208,	0|(1ULL<<MCID::MayStore), 0x8000b80000000417ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2598 = V6_vS32Ub_pred_pi
  { 2599,	5,	1,	4,	208,	0|(1ULL<<MCID::MayStore), 0x8000b80000000417ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2599 = V6_vS32Ub_pred_ppu
  { 2600,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000ac0000080016ULL, nullptr, nullptr, OperandInfo86 },  // Inst #2600 = V6_vS32b_ai
  { 2601,	3,	0,	4,	210,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000ac0000124015ULL, nullptr, nullptr, OperandInfo86 },  // Inst #2601 = V6_vS32b_new_ai
  { 2602,	4,	0,	4,	211,	0|(1ULL<<MCID::MayStore), 0xc000ac0000134c15ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2602 = V6_vS32b_new_npred_ai
  { 2603,	5,	1,	4,	212,	0|(1ULL<<MCID::MayStore), 0xc000b80000144c15ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2603 = V6_vS32b_new_npred_pi
  { 2604,	5,	1,	4,	212,	0|(1ULL<<MCID::MayStore), 0xc000b80000144c15ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2604 = V6_vS32b_new_npred_ppu
  { 2605,	4,	1,	4,	213,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000b80000134015ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2605 = V6_vS32b_new_pi
  { 2606,	4,	1,	4,	213,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000b80000134015ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2606 = V6_vS32b_new_ppu
  { 2607,	4,	0,	4,	211,	0|(1ULL<<MCID::MayStore), 0xc000ac0000134415ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2607 = V6_vS32b_new_pred_ai
  { 2608,	5,	1,	4,	212,	0|(1ULL<<MCID::MayStore), 0xc000b80000144415ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2608 = V6_vS32b_new_pred_pi
  { 2609,	5,	1,	4,	212,	0|(1ULL<<MCID::MayStore), 0xc000b80000144415ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2609 = V6_vS32b_new_pred_ppu
  { 2610,	4,	0,	4,	214,	0|(1ULL<<MCID::MayStore), 0x8000ac0000080c16ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2610 = V6_vS32b_npred_ai
  { 2611,	5,	1,	4,	215,	0|(1ULL<<MCID::MayStore), 0x8000b80000080c16ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2611 = V6_vS32b_npred_pi
  { 2612,	5,	1,	4,	215,	0|(1ULL<<MCID::MayStore), 0x8000b80000080c16ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2612 = V6_vS32b_npred_ppu
  { 2613,	4,	0,	4,	216,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000016ULL, nullptr, nullptr, OperandInfo261 },  // Inst #2613 = V6_vS32b_nqpred_ai
  { 2614,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0x8000b80000000016ULL, nullptr, nullptr, OperandInfo262 },  // Inst #2614 = V6_vS32b_nqpred_pi
  { 2615,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0x8000b80000000016ULL, nullptr, nullptr, OperandInfo263 },  // Inst #2615 = V6_vS32b_nqpred_ppu
  { 2616,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000ac0000080016ULL, nullptr, nullptr, OperandInfo86 },  // Inst #2616 = V6_vS32b_nt_ai
  { 2617,	3,	0,	4,	210,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000ac0000124015ULL, nullptr, nullptr, OperandInfo86 },  // Inst #2617 = V6_vS32b_nt_new_ai
  { 2618,	4,	0,	4,	211,	0|(1ULL<<MCID::MayStore), 0xc000ac0000134c15ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2618 = V6_vS32b_nt_new_npred_ai
  { 2619,	5,	1,	4,	212,	0|(1ULL<<MCID::MayStore), 0xc000b80000144c15ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2619 = V6_vS32b_nt_new_npred_pi
  { 2620,	5,	1,	4,	212,	0|(1ULL<<MCID::MayStore), 0xc000b80000144c15ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2620 = V6_vS32b_nt_new_npred_ppu
  { 2621,	4,	1,	4,	213,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000b80000134015ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2621 = V6_vS32b_nt_new_pi
  { 2622,	4,	1,	4,	213,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000b80000134015ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2622 = V6_vS32b_nt_new_ppu
  { 2623,	4,	0,	4,	211,	0|(1ULL<<MCID::MayStore), 0xc000ac0000134415ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2623 = V6_vS32b_nt_new_pred_ai
  { 2624,	5,	1,	4,	212,	0|(1ULL<<MCID::MayStore), 0xc000b80000144415ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2624 = V6_vS32b_nt_new_pred_pi
  { 2625,	5,	1,	4,	212,	0|(1ULL<<MCID::MayStore), 0xc000b80000144415ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2625 = V6_vS32b_nt_new_pred_ppu
  { 2626,	4,	0,	4,	214,	0|(1ULL<<MCID::MayStore), 0x8000ac0000080c16ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2626 = V6_vS32b_nt_npred_ai
  { 2627,	5,	1,	4,	215,	0|(1ULL<<MCID::MayStore), 0x8000b80000080c16ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2627 = V6_vS32b_nt_npred_pi
  { 2628,	5,	1,	4,	215,	0|(1ULL<<MCID::MayStore), 0x8000b80000080c16ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2628 = V6_vS32b_nt_npred_ppu
  { 2629,	4,	0,	4,	216,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000016ULL, nullptr, nullptr, OperandInfo261 },  // Inst #2629 = V6_vS32b_nt_nqpred_ai
  { 2630,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0x8000b80000000016ULL, nullptr, nullptr, OperandInfo262 },  // Inst #2630 = V6_vS32b_nt_nqpred_pi
  { 2631,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0x8000b80000000016ULL, nullptr, nullptr, OperandInfo263 },  // Inst #2631 = V6_vS32b_nt_nqpred_ppu
  { 2632,	4,	1,	4,	218,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000080016ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2632 = V6_vS32b_nt_pi
  { 2633,	4,	1,	4,	218,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000080016ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2633 = V6_vS32b_nt_ppu
  { 2634,	4,	0,	4,	214,	0|(1ULL<<MCID::MayStore), 0x8000ac0000080416ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2634 = V6_vS32b_nt_pred_ai
  { 2635,	5,	1,	4,	215,	0|(1ULL<<MCID::MayStore), 0x8000b80000080416ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2635 = V6_vS32b_nt_pred_pi
  { 2636,	5,	1,	4,	215,	0|(1ULL<<MCID::MayStore), 0x8000b80000080416ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2636 = V6_vS32b_nt_pred_ppu
  { 2637,	4,	0,	4,	216,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000016ULL, nullptr, nullptr, OperandInfo261 },  // Inst #2637 = V6_vS32b_nt_qpred_ai
  { 2638,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0x8000b80000000016ULL, nullptr, nullptr, OperandInfo262 },  // Inst #2638 = V6_vS32b_nt_qpred_pi
  { 2639,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0x8000b80000000016ULL, nullptr, nullptr, OperandInfo263 },  // Inst #2639 = V6_vS32b_nt_qpred_ppu
  { 2640,	4,	1,	4,	218,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000080016ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2640 = V6_vS32b_pi
  { 2641,	4,	1,	4,	218,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000080016ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2641 = V6_vS32b_ppu
  { 2642,	4,	0,	4,	214,	0|(1ULL<<MCID::MayStore), 0x8000ac0000080416ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2642 = V6_vS32b_pred_ai
  { 2643,	5,	1,	4,	215,	0|(1ULL<<MCID::MayStore), 0x8000b80000080416ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2643 = V6_vS32b_pred_pi
  { 2644,	5,	1,	4,	215,	0|(1ULL<<MCID::MayStore), 0x8000b80000080416ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2644 = V6_vS32b_pred_ppu
  { 2645,	4,	0,	4,	216,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000016ULL, nullptr, nullptr, OperandInfo261 },  // Inst #2645 = V6_vS32b_qpred_ai
  { 2646,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0x8000b80000000016ULL, nullptr, nullptr, OperandInfo262 },  // Inst #2646 = V6_vS32b_qpred_pi
  { 2647,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0x8000b80000000016ULL, nullptr, nullptr, OperandInfo263 },  // Inst #2647 = V6_vS32b_qpred_ppu
  { 2648,	2,	0,	4,	219,	0|(1ULL<<MCID::MayStore), 0xc000ac000000000fULL, nullptr, nullptr, OperandInfo44 },  // Inst #2648 = V6_vS32b_srls_ai
  { 2649,	3,	1,	4,	220,	0|(1ULL<<MCID::MayStore), 0xc000b8000000000fULL, nullptr, nullptr, OperandInfo144 },  // Inst #2649 = V6_vS32b_srls_pi
  { 2650,	3,	1,	4,	220,	0|(1ULL<<MCID::MayStore), 0xc000b8000000000fULL, nullptr, nullptr, OperandInfo264 },  // Inst #2650 = V6_vS32b_srls_ppu
  { 2651,	2,	1,	4,	60,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo104 },  // Inst #2651 = V6_vabsb
  { 2652,	2,	1,	4,	60,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo104 },  // Inst #2652 = V6_vabsb_sat
  { 2653,	3,	1,	4,	221,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo105 },  // Inst #2653 = V6_vabsdiffh
  { 2654,	3,	1,	4,	221,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo105 },  // Inst #2654 = V6_vabsdiffub
  { 2655,	3,	1,	4,	221,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo105 },  // Inst #2655 = V6_vabsdiffuh
  { 2656,	3,	1,	4,	221,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo105 },  // Inst #2656 = V6_vabsdiffw
  { 2657,	2,	1,	4,	60,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo104 },  // Inst #2657 = V6_vabsh
  { 2658,	2,	1,	4,	60,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo104 },  // Inst #2658 = V6_vabsh_sat
  { 2659,	2,	1,	4,	60,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo104 },  // Inst #2659 = V6_vabsw
  { 2660,	2,	1,	4,	60,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo104 },  // Inst #2660 = V6_vabsw_sat
  { 2661,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2661 = V6_vaddb
  { 2662,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2662 = V6_vaddb_dv
  { 2663,	4,	1,	4,	222,	0, 0x8100000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2663 = V6_vaddbnq
  { 2664,	4,	1,	4,	222,	0, 0x8100000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2664 = V6_vaddbq
  { 2665,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2665 = V6_vaddbsat
  { 2666,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2666 = V6_vaddbsat_dv
  { 2667,	5,	2,	4,	223,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo265 },  // Inst #2667 = V6_vaddcarry
  { 2668,	4,	2,	4,	224,	0, 0x8030000000008012ULL, nullptr, nullptr, OperandInfo266 },  // Inst #2668 = V6_vaddcarryo
  { 2669,	4,	1,	4,	222,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo267 },  // Inst #2669 = V6_vaddcarrysat
  { 2670,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2670 = V6_vaddclbh
  { 2671,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2671 = V6_vaddclbw
  { 2672,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2672 = V6_vaddh
  { 2673,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2673 = V6_vaddh_dv
  { 2674,	4,	1,	4,	222,	0, 0x8100000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2674 = V6_vaddhnq
  { 2675,	4,	1,	4,	222,	0, 0x8100000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2675 = V6_vaddhq
  { 2676,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2676 = V6_vaddhsat
  { 2677,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2677 = V6_vaddhsat_dv
  { 2678,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #2678 = V6_vaddhw
  { 2679,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo108 },  // Inst #2679 = V6_vaddhw_acc
  { 2680,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #2680 = V6_vaddubh
  { 2681,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo108 },  // Inst #2681 = V6_vaddubh_acc
  { 2682,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2682 = V6_vaddubsat
  { 2683,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2683 = V6_vaddubsat_dv
  { 2684,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2684 = V6_vaddububb_sat
  { 2685,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2685 = V6_vadduhsat
  { 2686,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2686 = V6_vadduhsat_dv
  { 2687,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #2687 = V6_vadduhw
  { 2688,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo108 },  // Inst #2688 = V6_vadduhw_acc
  { 2689,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2689 = V6_vadduwsat
  { 2690,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2690 = V6_vadduwsat_dv
  { 2691,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2691 = V6_vaddw
  { 2692,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2692 = V6_vaddw_dv
  { 2693,	4,	1,	4,	222,	0, 0x8100000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2693 = V6_vaddwnq
  { 2694,	4,	1,	4,	222,	0, 0x8100000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2694 = V6_vaddwq
  { 2695,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2695 = V6_vaddwsat
  { 2696,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2696 = V6_vaddwsat_dv
  { 2697,	4,	1,	4,	228,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo268 },  // Inst #2697 = V6_valignb
  { 2698,	4,	1,	4,	228,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo269 },  // Inst #2698 = V6_valignbi
  { 2699,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2699 = V6_vand
  { 2700,	3,	1,	4,	229,	0, 0x8000000000008020ULL, nullptr, nullptr, OperandInfo111 },  // Inst #2700 = V6_vandnqrt
  { 2701,	4,	1,	4,	230,	0, 0x8100000000008020ULL, nullptr, nullptr, OperandInfo110 },  // Inst #2701 = V6_vandnqrt_acc
  { 2702,	3,	1,	4,	229,	0, 0x8000000000008020ULL, nullptr, nullptr, OperandInfo111 },  // Inst #2702 = V6_vandqrt
  { 2703,	4,	1,	4,	230,	0, 0x8100000000008020ULL, nullptr, nullptr, OperandInfo110 },  // Inst #2703 = V6_vandqrt_acc
  { 2704,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo270 },  // Inst #2704 = V6_vandvnqv
  { 2705,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo270 },  // Inst #2705 = V6_vandvqv
  { 2706,	3,	1,	4,	229,	0, 0x8000000000008020ULL, nullptr, nullptr, OperandInfo113 },  // Inst #2706 = V6_vandvrt
  { 2707,	4,	1,	4,	230,	0, 0x8100000000000020ULL, nullptr, nullptr, OperandInfo112 },  // Inst #2707 = V6_vandvrt_acc
  { 2708,	3,	1,	4,	231,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2708 = V6_vaslh
  { 2709,	4,	1,	4,	232,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo114 },  // Inst #2709 = V6_vaslh_acc
  { 2710,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2710 = V6_vaslhv
  { 2711,	3,	1,	4,	231,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2711 = V6_vaslw
  { 2712,	4,	1,	4,	232,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo114 },  // Inst #2712 = V6_vaslw_acc
  { 2713,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2713 = V6_vaslwv
  { 2714,	4,	1,	4,	233,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo108 },  // Inst #2714 = V6_vasr_into
  { 2715,	3,	1,	4,	231,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2715 = V6_vasrh
  { 2716,	4,	1,	4,	232,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo114 },  // Inst #2716 = V6_vasrh_acc
  { 2717,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2717 = V6_vasrhbrndsat
  { 2718,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2718 = V6_vasrhbsat
  { 2719,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2719 = V6_vasrhubrndsat
  { 2720,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2720 = V6_vasrhubsat
  { 2721,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2721 = V6_vasrhv
  { 2722,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2722 = V6_vasruhubrndsat
  { 2723,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2723 = V6_vasruhubsat
  { 2724,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2724 = V6_vasruwuhrndsat
  { 2725,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2725 = V6_vasruwuhsat
  { 2726,	3,	1,	4,	231,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2726 = V6_vasrw
  { 2727,	4,	1,	4,	232,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo114 },  // Inst #2727 = V6_vasrw_acc
  { 2728,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2728 = V6_vasrwh
  { 2729,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2729 = V6_vasrwhrndsat
  { 2730,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2730 = V6_vasrwhsat
  { 2731,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2731 = V6_vasrwuhrndsat
  { 2732,	4,	1,	4,	234,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo268 },  // Inst #2732 = V6_vasrwuhsat
  { 2733,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2733 = V6_vasrwv
  { 2734,	2,	1,	4,	60,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo104 },  // Inst #2734 = V6_vassign
  { 2735,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2735 = V6_vavgb
  { 2736,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2736 = V6_vavgbrnd
  { 2737,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2737 = V6_vavgh
  { 2738,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2738 = V6_vavghrnd
  { 2739,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2739 = V6_vavgub
  { 2740,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2740 = V6_vavgubrnd
  { 2741,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2741 = V6_vavguh
  { 2742,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2742 = V6_vavguhrnd
  { 2743,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2743 = V6_vavguw
  { 2744,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2744 = V6_vavguwrnd
  { 2745,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2745 = V6_vavgw
  { 2746,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2746 = V6_vavgwrnd
  { 2747,	4,	1,	4,	46,	0, 0x8000000000008413ULL, nullptr, nullptr, OperandInfo271 },  // Inst #2747 = V6_vccombine
  { 2748,	2,	1,	4,	235,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo104 },  // Inst #2748 = V6_vcl0h
  { 2749,	2,	1,	4,	235,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo104 },  // Inst #2749 = V6_vcl0w
  { 2750,	3,	1,	4,	44,	0, 0x8000000000008412ULL, nullptr, nullptr, OperandInfo272 },  // Inst #2750 = V6_vcmov
  { 2751,	3,	1,	4,	41,	0|(1ULL<<MCID::RegSequence), 0x8000000000008013ULL, nullptr, nullptr, OperandInfo109 },  // Inst #2751 = V6_vcombine
  { 2752,	5,	2,	4,	236,	0, 0x803000000000801bULL, nullptr, nullptr, OperandInfo138 },  // Inst #2752 = V6_vdeal
  { 2753,	2,	1,	4,	237,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo104 },  // Inst #2753 = V6_vdealb
  { 2754,	3,	1,	4,	238,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2754 = V6_vdealb4w
  { 2755,	2,	1,	4,	237,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo104 },  // Inst #2755 = V6_vdealh
  { 2756,	4,	1,	4,	239,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo273 },  // Inst #2756 = V6_vdealvdd
  { 2757,	3,	1,	4,	238,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2757 = V6_vdelta
  { 2758,	3,	1,	4,	240,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo115 },  // Inst #2758 = V6_vdmpybus
  { 2759,	4,	1,	4,	241,	0, 0x810000000000801eULL, nullptr, nullptr, OperandInfo114 },  // Inst #2759 = V6_vdmpybus_acc
  { 2760,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo119 },  // Inst #2760 = V6_vdmpybus_dv
  { 2761,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo118 },  // Inst #2761 = V6_vdmpybus_dv_acc
  { 2762,	3,	1,	4,	240,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo115 },  // Inst #2762 = V6_vdmpyhb
  { 2763,	4,	1,	4,	241,	0, 0x810000000000801eULL, nullptr, nullptr, OperandInfo114 },  // Inst #2763 = V6_vdmpyhb_acc
  { 2764,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo119 },  // Inst #2764 = V6_vdmpyhb_dv
  { 2765,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo118 },  // Inst #2765 = V6_vdmpyhb_dv_acc
  { 2766,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo121 },  // Inst #2766 = V6_vdmpyhisat
  { 2767,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo120 },  // Inst #2767 = V6_vdmpyhisat_acc
  { 2768,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo115 },  // Inst #2768 = V6_vdmpyhsat
  { 2769,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo114 },  // Inst #2769 = V6_vdmpyhsat_acc
  { 2770,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo121 },  // Inst #2770 = V6_vdmpyhsuisat
  { 2771,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo120 },  // Inst #2771 = V6_vdmpyhsuisat_acc
  { 2772,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo115 },  // Inst #2772 = V6_vdmpyhsusat
  { 2773,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo114 },  // Inst #2773 = V6_vdmpyhsusat_acc
  { 2774,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo105 },  // Inst #2774 = V6_vdmpyhvsat
  { 2775,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo122 },  // Inst #2775 = V6_vdmpyhvsat_acc
  { 2776,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo119 },  // Inst #2776 = V6_vdsaduh
  { 2777,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo118 },  // Inst #2777 = V6_vdsaduh_acc
  { 2778,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2778 = V6_veqb
  { 2779,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2779 = V6_veqb_and
  { 2780,	4,	1,	4,	222,	0, 0x8100000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2780 = V6_veqb_or
  { 2781,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2781 = V6_veqb_xor
  { 2782,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2782 = V6_veqh
  { 2783,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2783 = V6_veqh_and
  { 2784,	4,	1,	4,	222,	0, 0x8100000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2784 = V6_veqh_or
  { 2785,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2785 = V6_veqh_xor
  { 2786,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2786 = V6_veqw
  { 2787,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2787 = V6_veqw_and
  { 2788,	4,	1,	4,	222,	0, 0x8100000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2788 = V6_veqw_or
  { 2789,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2789 = V6_veqw_xor
  { 2790,	3,	0,	4,	244,	0|(1ULL<<MCID::MayLoad), 0x9000400000408009ULL, nullptr, ImplicitList50, OperandInfo274 },  // Inst #2790 = V6_vgathermh
  { 2791,	4,	0,	4,	245,	0|(1ULL<<MCID::MayLoad), 0x9000400000408009ULL, nullptr, ImplicitList50, OperandInfo275 },  // Inst #2791 = V6_vgathermhq
  { 2792,	3,	0,	4,	246,	0|(1ULL<<MCID::MayLoad), 0x900040000040800aULL, nullptr, ImplicitList50, OperandInfo276 },  // Inst #2792 = V6_vgathermhw
  { 2793,	4,	0,	4,	247,	0|(1ULL<<MCID::MayLoad), 0x900040000040800aULL, nullptr, ImplicitList50, OperandInfo277 },  // Inst #2793 = V6_vgathermhwq
  { 2794,	3,	0,	4,	244,	0|(1ULL<<MCID::MayLoad), 0x9000600000408009ULL, nullptr, ImplicitList50, OperandInfo274 },  // Inst #2794 = V6_vgathermw
  { 2795,	4,	0,	4,	245,	0|(1ULL<<MCID::MayLoad), 0x9000600000408009ULL, nullptr, ImplicitList50, OperandInfo275 },  // Inst #2795 = V6_vgathermwq
  { 2796,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2796 = V6_vgtb
  { 2797,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2797 = V6_vgtb_and
  { 2798,	4,	1,	4,	222,	0, 0x8100000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2798 = V6_vgtb_or
  { 2799,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2799 = V6_vgtb_xor
  { 2800,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2800 = V6_vgth
  { 2801,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2801 = V6_vgth_and
  { 2802,	4,	1,	4,	222,	0, 0x8100000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2802 = V6_vgth_or
  { 2803,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2803 = V6_vgth_xor
  { 2804,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2804 = V6_vgtub
  { 2805,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2805 = V6_vgtub_and
  { 2806,	4,	1,	4,	222,	0, 0x8100000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2806 = V6_vgtub_or
  { 2807,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2807 = V6_vgtub_xor
  { 2808,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2808 = V6_vgtuh
  { 2809,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2809 = V6_vgtuh_and
  { 2810,	4,	1,	4,	222,	0, 0x8100000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2810 = V6_vgtuh_or
  { 2811,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2811 = V6_vgtuh_xor
  { 2812,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2812 = V6_vgtuw
  { 2813,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2813 = V6_vgtuw_and
  { 2814,	4,	1,	4,	222,	0, 0x8100000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2814 = V6_vgtuw_or
  { 2815,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2815 = V6_vgtuw_xor
  { 2816,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2816 = V6_vgtw
  { 2817,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2817 = V6_vgtw_and
  { 2818,	4,	1,	4,	222,	0, 0x8100000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2818 = V6_vgtw_or
  { 2819,	4,	1,	4,	222,	0, 0x8000000000000012ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2819 = V6_vgtw_xor
  { 2820,	0,	0,	4,	248,	0, 0x800000000000000cULL, nullptr, nullptr, nullptr },  // Inst #2820 = V6_vhist
  { 2821,	1,	0,	4,	249,	0, 0x800000000000000cULL, nullptr, nullptr, OperandInfo74 },  // Inst #2821 = V6_vhistq
  { 2822,	3,	1,	4,	229,	0, 0x8000000000008020ULL, nullptr, nullptr, OperandInfo278 },  // Inst #2822 = V6_vinsertwr
  { 2823,	4,	1,	4,	228,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo268 },  // Inst #2823 = V6_vlalignb
  { 2824,	4,	1,	4,	228,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo269 },  // Inst #2824 = V6_vlalignbi
  { 2825,	3,	1,	4,	231,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2825 = V6_vlsrb
  { 2826,	3,	1,	4,	231,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2826 = V6_vlsrh
  { 2827,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2827 = V6_vlsrhv
  { 2828,	3,	1,	4,	231,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2828 = V6_vlsrw
  { 2829,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2829 = V6_vlsrwv
  { 2830,	3,	1,	4,	250,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo279 },  // Inst #2830 = V6_vlut4
  { 2831,	4,	1,	4,	228,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo268 },  // Inst #2831 = V6_vlutvvb
  { 2832,	4,	1,	4,	228,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo268 },  // Inst #2832 = V6_vlutvvb_nm
  { 2833,	5,	1,	4,	251,	0, 0x810000000000801bULL, nullptr, nullptr, OperandInfo280 },  // Inst #2833 = V6_vlutvvb_oracc
  { 2834,	5,	1,	4,	251,	0, 0x810000000000801bULL, nullptr, nullptr, OperandInfo281 },  // Inst #2834 = V6_vlutvvb_oracci
  { 2835,	4,	1,	4,	228,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo269 },  // Inst #2835 = V6_vlutvvbi
  { 2836,	4,	1,	4,	239,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo273 },  // Inst #2836 = V6_vlutvwh
  { 2837,	4,	1,	4,	239,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo273 },  // Inst #2837 = V6_vlutvwh_nm
  { 2838,	5,	1,	4,	251,	0, 0x810000000000801bULL, nullptr, nullptr, OperandInfo282 },  // Inst #2838 = V6_vlutvwh_oracc
  { 2839,	5,	1,	4,	251,	0, 0x810000000000801bULL, nullptr, nullptr, OperandInfo283 },  // Inst #2839 = V6_vlutvwh_oracci
  { 2840,	4,	1,	4,	239,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo284 },  // Inst #2840 = V6_vlutvwhi
  { 2841,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2841 = V6_vmaxb
  { 2842,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2842 = V6_vmaxh
  { 2843,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2843 = V6_vmaxub
  { 2844,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2844 = V6_vmaxuh
  { 2845,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2845 = V6_vmaxw
  { 2846,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2846 = V6_vminb
  { 2847,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2847 = V6_vminh
  { 2848,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2848 = V6_vminub
  { 2849,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2849 = V6_vminuh
  { 2850,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2850 = V6_vminw
  { 2851,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo119 },  // Inst #2851 = V6_vmpabus
  { 2852,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo118 },  // Inst #2852 = V6_vmpabus_acc
  { 2853,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo106 },  // Inst #2853 = V6_vmpabusv
  { 2854,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo119 },  // Inst #2854 = V6_vmpabuu
  { 2855,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo118 },  // Inst #2855 = V6_vmpabuu_acc
  { 2856,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo106 },  // Inst #2856 = V6_vmpabuuv
  { 2857,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo119 },  // Inst #2857 = V6_vmpahb
  { 2858,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo118 },  // Inst #2858 = V6_vmpahb_acc
  { 2859,	4,	1,	4,	252,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo285 },  // Inst #2859 = V6_vmpahhsat
  { 2860,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo119 },  // Inst #2860 = V6_vmpauhb
  { 2861,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo118 },  // Inst #2861 = V6_vmpauhb_acc
  { 2862,	4,	1,	4,	252,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo285 },  // Inst #2862 = V6_vmpauhuhsat
  { 2863,	4,	1,	4,	252,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo285 },  // Inst #2863 = V6_vmpsuhuhsat
  { 2864,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo128 },  // Inst #2864 = V6_vmpybus
  { 2865,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo127 },  // Inst #2865 = V6_vmpybus_acc
  { 2866,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #2866 = V6_vmpybusv
  { 2867,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo108 },  // Inst #2867 = V6_vmpybusv_acc
  { 2868,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #2868 = V6_vmpybv
  { 2869,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo108 },  // Inst #2869 = V6_vmpybv_acc
  { 2870,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo105 },  // Inst #2870 = V6_vmpyewuh
  { 2871,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #2871 = V6_vmpyewuh_64
  { 2872,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo128 },  // Inst #2872 = V6_vmpyh
  { 2873,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo127 },  // Inst #2873 = V6_vmpyh_acc
  { 2874,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo127 },  // Inst #2874 = V6_vmpyhsat_acc
  { 2875,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo115 },  // Inst #2875 = V6_vmpyhsrs
  { 2876,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo115 },  // Inst #2876 = V6_vmpyhss
  { 2877,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #2877 = V6_vmpyhus
  { 2878,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo108 },  // Inst #2878 = V6_vmpyhus_acc
  { 2879,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #2879 = V6_vmpyhv
  { 2880,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo108 },  // Inst #2880 = V6_vmpyhv_acc
  { 2881,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo105 },  // Inst #2881 = V6_vmpyhvsrs
  { 2882,	3,	1,	4,	221,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo105 },  // Inst #2882 = V6_vmpyieoh
  { 2883,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo122 },  // Inst #2883 = V6_vmpyiewh_acc
  { 2884,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo105 },  // Inst #2884 = V6_vmpyiewuh
  { 2885,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo122 },  // Inst #2885 = V6_vmpyiewuh_acc
  { 2886,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo105 },  // Inst #2886 = V6_vmpyih
  { 2887,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo122 },  // Inst #2887 = V6_vmpyih_acc
  { 2888,	3,	1,	4,	240,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo115 },  // Inst #2888 = V6_vmpyihb
  { 2889,	4,	1,	4,	241,	0, 0x810000000000801eULL, nullptr, nullptr, OperandInfo114 },  // Inst #2889 = V6_vmpyihb_acc
  { 2890,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo105 },  // Inst #2890 = V6_vmpyiowh
  { 2891,	3,	1,	4,	240,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo115 },  // Inst #2891 = V6_vmpyiwb
  { 2892,	4,	1,	4,	241,	0, 0x810000000000801eULL, nullptr, nullptr, OperandInfo114 },  // Inst #2892 = V6_vmpyiwb_acc
  { 2893,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo115 },  // Inst #2893 = V6_vmpyiwh
  { 2894,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo114 },  // Inst #2894 = V6_vmpyiwh_acc
  { 2895,	3,	1,	4,	240,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo115 },  // Inst #2895 = V6_vmpyiwub
  { 2896,	4,	1,	4,	241,	0, 0x810000000000801eULL, nullptr, nullptr, OperandInfo114 },  // Inst #2896 = V6_vmpyiwub_acc
  { 2897,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo105 },  // Inst #2897 = V6_vmpyowh
  { 2898,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo108 },  // Inst #2898 = V6_vmpyowh_64_acc
  { 2899,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo105 },  // Inst #2899 = V6_vmpyowh_rnd
  { 2900,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo122 },  // Inst #2900 = V6_vmpyowh_rnd_sacc
  { 2901,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo122 },  // Inst #2901 = V6_vmpyowh_sacc
  { 2902,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo128 },  // Inst #2902 = V6_vmpyub
  { 2903,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo127 },  // Inst #2903 = V6_vmpyub_acc
  { 2904,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #2904 = V6_vmpyubv
  { 2905,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo108 },  // Inst #2905 = V6_vmpyubv_acc
  { 2906,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo128 },  // Inst #2906 = V6_vmpyuh
  { 2907,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo127 },  // Inst #2907 = V6_vmpyuh_acc
  { 2908,	3,	1,	4,	240,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo115 },  // Inst #2908 = V6_vmpyuhe
  { 2909,	4,	1,	4,	241,	0, 0x810000000000801eULL, nullptr, nullptr, OperandInfo114 },  // Inst #2909 = V6_vmpyuhe_acc
  { 2910,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #2910 = V6_vmpyuhv
  { 2911,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo108 },  // Inst #2911 = V6_vmpyuhv_acc
  { 2912,	4,	1,	4,	222,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo266 },  // Inst #2912 = V6_vmux
  { 2913,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2913 = V6_vnavgb
  { 2914,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2914 = V6_vnavgh
  { 2915,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2915 = V6_vnavgub
  { 2916,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2916 = V6_vnavgw
  { 2917,	4,	1,	4,	46,	0, 0x8000000000008c13ULL, nullptr, nullptr, OperandInfo271 },  // Inst #2917 = V6_vnccombine
  { 2918,	3,	1,	4,	44,	0, 0x8000000000008c12ULL, nullptr, nullptr, OperandInfo272 },  // Inst #2918 = V6_vncmov
  { 2919,	2,	1,	4,	235,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo104 },  // Inst #2919 = V6_vnormamth
  { 2920,	2,	1,	4,	235,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo104 },  // Inst #2920 = V6_vnormamtw
  { 2921,	2,	1,	4,	60,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo104 },  // Inst #2921 = V6_vnot
  { 2922,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2922 = V6_vor
  { 2923,	3,	1,	4,	238,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2923 = V6_vpackeb
  { 2924,	3,	1,	4,	238,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2924 = V6_vpackeh
  { 2925,	3,	1,	4,	238,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2925 = V6_vpackhb_sat
  { 2926,	3,	1,	4,	238,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2926 = V6_vpackhub_sat
  { 2927,	3,	1,	4,	238,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2927 = V6_vpackob
  { 2928,	3,	1,	4,	238,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2928 = V6_vpackoh
  { 2929,	3,	1,	4,	238,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2929 = V6_vpackwh_sat
  { 2930,	3,	1,	4,	238,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2930 = V6_vpackwuh_sat
  { 2931,	2,	1,	4,	235,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo104 },  // Inst #2931 = V6_vpopcounth
  { 2932,	2,	1,	4,	235,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo286 },  // Inst #2932 = V6_vprefixqb
  { 2933,	2,	1,	4,	235,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo286 },  // Inst #2933 = V6_vprefixqh
  { 2934,	2,	1,	4,	235,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo286 },  // Inst #2934 = V6_vprefixqw
  { 2935,	3,	1,	4,	238,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2935 = V6_vrdelta
  { 2936,	3,	1,	4,	253,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo130 },  // Inst #2936 = V6_vrmpybub_rtt
  { 2937,	4,	1,	4,	254,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo129 },  // Inst #2937 = V6_vrmpybub_rtt_acc
  { 2938,	3,	1,	4,	240,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo115 },  // Inst #2938 = V6_vrmpybus
  { 2939,	4,	1,	4,	241,	0, 0x810000000000801eULL, nullptr, nullptr, OperandInfo114 },  // Inst #2939 = V6_vrmpybus_acc
  { 2940,	4,	1,	4,	255,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo132 },  // Inst #2940 = V6_vrmpybusi
  { 2941,	5,	1,	4,	256,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo131 },  // Inst #2941 = V6_vrmpybusi_acc
  { 2942,	3,	1,	4,	221,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo105 },  // Inst #2942 = V6_vrmpybusv
  { 2943,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo122 },  // Inst #2943 = V6_vrmpybusv_acc
  { 2944,	3,	1,	4,	221,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo105 },  // Inst #2944 = V6_vrmpybv
  { 2945,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo122 },  // Inst #2945 = V6_vrmpybv_acc
  { 2946,	3,	1,	4,	240,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo115 },  // Inst #2946 = V6_vrmpyub
  { 2947,	4,	1,	4,	241,	0, 0x810000000000801eULL, nullptr, nullptr, OperandInfo114 },  // Inst #2947 = V6_vrmpyub_acc
  { 2948,	3,	1,	4,	253,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo130 },  // Inst #2948 = V6_vrmpyub_rtt
  { 2949,	4,	1,	4,	254,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo129 },  // Inst #2949 = V6_vrmpyub_rtt_acc
  { 2950,	4,	1,	4,	255,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo132 },  // Inst #2950 = V6_vrmpyubi
  { 2951,	5,	1,	4,	256,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo131 },  // Inst #2951 = V6_vrmpyubi_acc
  { 2952,	3,	1,	4,	221,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo105 },  // Inst #2952 = V6_vrmpyubv
  { 2953,	4,	1,	4,	227,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo122 },  // Inst #2953 = V6_vrmpyubv_acc
  { 2954,	3,	1,	4,	257,	0, 0x8000000000008008ULL, nullptr, nullptr, OperandInfo287 },  // Inst #2954 = V6_vrmpyzbb_rt
  { 2955,	4,	1,	4,	258,	0, 0x8100000000008008ULL, nullptr, nullptr, OperandInfo288 },  // Inst #2955 = V6_vrmpyzbb_rt_acc
  { 2956,	4,	2,	4,	259,	0, 0x8000000000008008ULL, nullptr, nullptr, OperandInfo289 },  // Inst #2956 = V6_vrmpyzbb_rx
  { 2957,	5,	2,	4,	260,	0, 0x8100000000008008ULL, nullptr, nullptr, OperandInfo290 },  // Inst #2957 = V6_vrmpyzbb_rx_acc
  { 2958,	3,	1,	4,	257,	0, 0x8000000000008008ULL, nullptr, nullptr, OperandInfo287 },  // Inst #2958 = V6_vrmpyzbub_rt
  { 2959,	4,	1,	4,	258,	0, 0x8100000000008008ULL, nullptr, nullptr, OperandInfo288 },  // Inst #2959 = V6_vrmpyzbub_rt_acc
  { 2960,	4,	2,	4,	259,	0, 0x8000000000008008ULL, nullptr, nullptr, OperandInfo289 },  // Inst #2960 = V6_vrmpyzbub_rx
  { 2961,	5,	2,	4,	260,	0, 0x8100000000008008ULL, nullptr, nullptr, OperandInfo290 },  // Inst #2961 = V6_vrmpyzbub_rx_acc
  { 2962,	3,	1,	4,	257,	0, 0x8000000000008008ULL, nullptr, nullptr, OperandInfo287 },  // Inst #2962 = V6_vrmpyzcb_rt
  { 2963,	4,	1,	4,	258,	0, 0x8100000000008008ULL, nullptr, nullptr, OperandInfo288 },  // Inst #2963 = V6_vrmpyzcb_rt_acc
  { 2964,	4,	2,	4,	259,	0, 0x8000000000008008ULL, nullptr, nullptr, OperandInfo289 },  // Inst #2964 = V6_vrmpyzcb_rx
  { 2965,	5,	2,	4,	260,	0, 0x8100000000008008ULL, nullptr, nullptr, OperandInfo290 },  // Inst #2965 = V6_vrmpyzcb_rx_acc
  { 2966,	3,	1,	4,	257,	0, 0x8000000000008008ULL, nullptr, nullptr, OperandInfo287 },  // Inst #2966 = V6_vrmpyzcbs_rt
  { 2967,	4,	1,	4,	258,	0, 0x8100000000008008ULL, nullptr, nullptr, OperandInfo288 },  // Inst #2967 = V6_vrmpyzcbs_rt_acc
  { 2968,	4,	2,	4,	259,	0, 0x8000000000008008ULL, nullptr, nullptr, OperandInfo289 },  // Inst #2968 = V6_vrmpyzcbs_rx
  { 2969,	5,	2,	4,	260,	0, 0x8100000000008008ULL, nullptr, nullptr, OperandInfo290 },  // Inst #2969 = V6_vrmpyzcbs_rx_acc
  { 2970,	3,	1,	4,	257,	0, 0x8000000000008008ULL, nullptr, nullptr, OperandInfo287 },  // Inst #2970 = V6_vrmpyznb_rt
  { 2971,	4,	1,	4,	258,	0, 0x8100000000008008ULL, nullptr, nullptr, OperandInfo288 },  // Inst #2971 = V6_vrmpyznb_rt_acc
  { 2972,	4,	2,	4,	259,	0, 0x8000000000008008ULL, nullptr, nullptr, OperandInfo289 },  // Inst #2972 = V6_vrmpyznb_rx
  { 2973,	5,	2,	4,	260,	0, 0x8100000000008008ULL, nullptr, nullptr, OperandInfo290 },  // Inst #2973 = V6_vrmpyznb_rx_acc
  { 2974,	3,	1,	4,	261,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo115 },  // Inst #2974 = V6_vror
  { 2975,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2975 = V6_vrotr
  { 2976,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2976 = V6_vroundhb
  { 2977,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2977 = V6_vroundhub
  { 2978,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2978 = V6_vrounduhub
  { 2979,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2979 = V6_vrounduwuh
  { 2980,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2980 = V6_vroundwh
  { 2981,	3,	1,	4,	225,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo105 },  // Inst #2981 = V6_vroundwuh
  { 2982,	4,	1,	4,	255,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo132 },  // Inst #2982 = V6_vrsadubi
  { 2983,	5,	1,	4,	256,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo131 },  // Inst #2983 = V6_vrsadubi_acc
  { 2984,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2984 = V6_vsatdw
  { 2985,	3,	1,	4,	262,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2985 = V6_vsathub
  { 2986,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2986 = V6_vsatuwuh
  { 2987,	3,	1,	4,	262,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2987 = V6_vsatwh
  { 2988,	2,	1,	4,	263,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo133 },  // Inst #2988 = V6_vsb
  { 2989,	4,	0,	4,	264,	0|(1ULL<<MCID::MayStore), 0x800040000000000dULL, nullptr, nullptr, OperandInfo134 },  // Inst #2989 = V6_vscattermh
  { 2990,	4,	0,	4,	264,	0|(1ULL<<MCID::MayStore), 0x810040000000000dULL, nullptr, nullptr, OperandInfo134 },  // Inst #2990 = V6_vscattermh_add
  { 2991,	5,	0,	4,	265,	0|(1ULL<<MCID::MayStore), 0x800040000000000dULL, nullptr, nullptr, OperandInfo135 },  // Inst #2991 = V6_vscattermhq
  { 2992,	4,	0,	4,	266,	0|(1ULL<<MCID::MayStore), 0x800040000000000eULL, nullptr, nullptr, OperandInfo136 },  // Inst #2992 = V6_vscattermhw
  { 2993,	4,	0,	4,	266,	0|(1ULL<<MCID::MayStore), 0x810040000000000eULL, nullptr, nullptr, OperandInfo136 },  // Inst #2993 = V6_vscattermhw_add
  { 2994,	5,	0,	4,	267,	0|(1ULL<<MCID::MayStore), 0x800040000000000eULL, nullptr, nullptr, OperandInfo137 },  // Inst #2994 = V6_vscattermhwq
  { 2995,	4,	0,	4,	264,	0|(1ULL<<MCID::MayStore), 0x800060000000000dULL, nullptr, nullptr, OperandInfo134 },  // Inst #2995 = V6_vscattermw
  { 2996,	4,	0,	4,	264,	0|(1ULL<<MCID::MayStore), 0x810060000000000dULL, nullptr, nullptr, OperandInfo134 },  // Inst #2996 = V6_vscattermw_add
  { 2997,	5,	0,	4,	265,	0|(1ULL<<MCID::MayStore), 0x800060000000000dULL, nullptr, nullptr, OperandInfo135 },  // Inst #2997 = V6_vscattermwq
  { 2998,	2,	1,	4,	263,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo133 },  // Inst #2998 = V6_vsh
  { 2999,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2999 = V6_vshufeh
  { 3000,	5,	2,	4,	236,	0, 0x803000000000801bULL, nullptr, nullptr, OperandInfo138 },  // Inst #3000 = V6_vshuff
  { 3001,	2,	1,	4,	237,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo104 },  // Inst #3001 = V6_vshuffb
  { 3002,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3002 = V6_vshuffeb
  { 3003,	2,	1,	4,	237,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo104 },  // Inst #3003 = V6_vshuffh
  { 3004,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3004 = V6_vshuffob
  { 3005,	4,	1,	4,	239,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo273 },  // Inst #3005 = V6_vshuffvdd
  { 3006,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo109 },  // Inst #3006 = V6_vshufoeb
  { 3007,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo109 },  // Inst #3007 = V6_vshufoeh
  { 3008,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3008 = V6_vshufoh
  { 3009,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3009 = V6_vsubb
  { 3010,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3010 = V6_vsubb_dv
  { 3011,	4,	1,	4,	222,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3011 = V6_vsubbnq
  { 3012,	4,	1,	4,	222,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3012 = V6_vsubbq
  { 3013,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3013 = V6_vsubbsat
  { 3014,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3014 = V6_vsubbsat_dv
  { 3015,	5,	2,	4,	223,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo265 },  // Inst #3015 = V6_vsubcarry
  { 3016,	4,	2,	4,	224,	0, 0x8030000000008012ULL, nullptr, nullptr, OperandInfo266 },  // Inst #3016 = V6_vsubcarryo
  { 3017,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3017 = V6_vsubh
  { 3018,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3018 = V6_vsubh_dv
  { 3019,	4,	1,	4,	222,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3019 = V6_vsubhnq
  { 3020,	4,	1,	4,	222,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3020 = V6_vsubhq
  { 3021,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3021 = V6_vsubhsat
  { 3022,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3022 = V6_vsubhsat_dv
  { 3023,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #3023 = V6_vsubhw
  { 3024,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #3024 = V6_vsububh
  { 3025,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3025 = V6_vsububsat
  { 3026,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3026 = V6_vsububsat_dv
  { 3027,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3027 = V6_vsubububb_sat
  { 3028,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3028 = V6_vsubuhsat
  { 3029,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3029 = V6_vsubuhsat_dv
  { 3030,	3,	1,	4,	226,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo109 },  // Inst #3030 = V6_vsubuhw
  { 3031,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3031 = V6_vsubuwsat
  { 3032,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3032 = V6_vsubuwsat_dv
  { 3033,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3033 = V6_vsubw
  { 3034,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3034 = V6_vsubw_dv
  { 3035,	4,	1,	4,	222,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3035 = V6_vsubwnq
  { 3036,	4,	1,	4,	222,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3036 = V6_vsubwq
  { 3037,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3037 = V6_vsubwsat
  { 3038,	3,	1,	4,	41,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3038 = V6_vsubwsat_dv
  { 3039,	4,	1,	4,	268,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo291 },  // Inst #3039 = V6_vswap
  { 3040,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo119 },  // Inst #3040 = V6_vtmpyb
  { 3041,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo118 },  // Inst #3041 = V6_vtmpyb_acc
  { 3042,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo119 },  // Inst #3042 = V6_vtmpybus
  { 3043,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo118 },  // Inst #3043 = V6_vtmpybus_acc
  { 3044,	3,	1,	4,	242,	0, 0x800000000000801fULL, nullptr, nullptr, OperandInfo119 },  // Inst #3044 = V6_vtmpyhb
  { 3045,	4,	1,	4,	243,	0, 0x810000000000801fULL, nullptr, nullptr, OperandInfo118 },  // Inst #3045 = V6_vtmpyhb_acc
  { 3046,	2,	1,	4,	269,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo133 },  // Inst #3046 = V6_vunpackb
  { 3047,	2,	1,	4,	269,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo133 },  // Inst #3047 = V6_vunpackh
  { 3048,	3,	1,	4,	270,	0, 0x810000000000801bULL, nullptr, nullptr, OperandInfo139 },  // Inst #3048 = V6_vunpackob
  { 3049,	3,	1,	4,	270,	0, 0x810000000000801bULL, nullptr, nullptr, OperandInfo139 },  // Inst #3049 = V6_vunpackoh
  { 3050,	2,	1,	4,	269,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo133 },  // Inst #3050 = V6_vunpackub
  { 3051,	2,	1,	4,	269,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo133 },  // Inst #3051 = V6_vunpackuh
  { 3052,	0,	0,	4,	248,	0, 0x800000000000000cULL, nullptr, nullptr, nullptr },  // Inst #3052 = V6_vwhist128
  { 3053,	1,	0,	4,	271,	0, 0x800000000000000cULL, nullptr, nullptr, OperandInfo2 },  // Inst #3053 = V6_vwhist128m
  { 3054,	1,	0,	4,	249,	0, 0x800000000000000cULL, nullptr, nullptr, OperandInfo74 },  // Inst #3054 = V6_vwhist128q
  { 3055,	2,	0,	4,	272,	0, 0x800000000000000cULL, nullptr, nullptr, OperandInfo292 },  // Inst #3055 = V6_vwhist128qm
  { 3056,	0,	0,	4,	248,	0, 0x800000000000000cULL, nullptr, nullptr, nullptr },  // Inst #3056 = V6_vwhist256
  { 3057,	0,	0,	4,	248,	0, 0x800000000000000cULL, nullptr, nullptr, nullptr },  // Inst #3057 = V6_vwhist256_sat
  { 3058,	1,	0,	4,	249,	0, 0x800000000000000cULL, nullptr, nullptr, OperandInfo74 },  // Inst #3058 = V6_vwhist256q
  { 3059,	1,	0,	4,	249,	0, 0x800000000000000cULL, nullptr, nullptr, OperandInfo74 },  // Inst #3059 = V6_vwhist256q_sat
  { 3060,	3,	1,	4,	37,	0, 0x8000000000008012ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3060 = V6_vxor
  { 3061,	2,	1,	4,	263,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo133 },  // Inst #3061 = V6_vzb
  { 3062,	2,	1,	4,	263,	0, 0x8000000000008013ULL, nullptr, nullptr, OperandInfo133 },  // Inst #3062 = V6_vzh
  { 3063,	2,	0,	4,	273,	0|(1ULL<<MCID::MayLoad), 0x80000c8000000021ULL, nullptr, nullptr, OperandInfo44 },  // Inst #3063 = V6_zLd_ai
  { 3064,	3,	1,	4,	274,	0|(1ULL<<MCID::MayLoad), 0x8000188000000021ULL, nullptr, nullptr, OperandInfo144 },  // Inst #3064 = V6_zLd_pi
  { 3065,	3,	1,	4,	274,	0|(1ULL<<MCID::MayLoad), 0x8000188000000021ULL, nullptr, nullptr, OperandInfo264 },  // Inst #3065 = V6_zLd_ppu
  { 3066,	3,	0,	4,	275,	0|(1ULL<<MCID::MayLoad), 0x80000c8000000421ULL, nullptr, nullptr, OperandInfo52 },  // Inst #3066 = V6_zLd_pred_ai
  { 3067,	4,	1,	4,	276,	0|(1ULL<<MCID::MayLoad), 0x8000188000000421ULL, nullptr, nullptr, OperandInfo293 },  // Inst #3067 = V6_zLd_pred_pi
  { 3068,	4,	1,	4,	276,	0|(1ULL<<MCID::MayLoad), 0x8000188000000421ULL, nullptr, nullptr, OperandInfo294 },  // Inst #3068 = V6_zLd_pred_ppu
  { 3069,	2,	1,	4,	196,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo99 },  // Inst #3069 = V6_zextract
  { 3070,	0,	0,	4,	277,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12bULL, nullptr, nullptr, nullptr },  // Inst #3070 = Y2_barrier
  { 3071,	0,	0,	4,	278,	0, 0x87ULL, nullptr, nullptr, nullptr },  // Inst #3071 = Y2_break
  { 3072,	1,	0,	4,	279,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x22bULL, nullptr, nullptr, OperandInfo79 },  // Inst #3072 = Y2_dccleana
  { 3073,	1,	0,	4,	279,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x22bULL, nullptr, nullptr, OperandInfo79 },  // Inst #3073 = Y2_dccleaninva
  { 3074,	2,	0,	4,	280,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xc8000000026ULL, nullptr, nullptr, OperandInfo44 },  // Inst #3074 = Y2_dcfetchbo
  { 3075,	1,	0,	4,	279,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x22bULL, nullptr, nullptr, OperandInfo79 },  // Inst #3075 = Y2_dcinva
  { 3076,	1,	0,	4,	279,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x22bULL, nullptr, nullptr, OperandInfo79 },  // Inst #3076 = Y2_dczeroa
  { 3077,	1,	0,	4,	281,	0, 0xa5ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3077 = Y2_icinva
  { 3078,	0,	0,	4,	282,	0, 0xa5ULL, nullptr, nullptr, nullptr },  // Inst #3078 = Y2_isync
  { 3079,	0,	0,	4,	277,	0, 0xabULL, nullptr, nullptr, nullptr },  // Inst #3079 = Y2_syncht
  { 3080,	1,	0,	4,	283,	0, 0x87ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3080 = Y2_wait
  { 3081,	2,	0,	4,	284,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x12bULL, nullptr, nullptr, OperandInfo45 },  // Inst #3081 = Y4_l2fetch
  { 3082,	1,	0,	4,	283,	0, 0x107ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3082 = Y4_trace
  { 3083,	2,	0,	4,	284,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x12bULL, nullptr, nullptr, OperandInfo90 },  // Inst #3083 = Y5_l2fetch
  { 3084,	1,	0,	4,	285,	0, 0x7ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3084 = Y6_diag
  { 3085,	2,	0,	4,	286,	0, 0x7ULL, nullptr, nullptr, OperandInfo47 },  // Inst #3085 = Y6_diag0
  { 3086,	2,	0,	4,	286,	0, 0x7ULL, nullptr, nullptr, OperandInfo47 },  // Inst #3086 = Y6_diag1
  { 3087,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #3087 = dep_A2_addsat
  { 3088,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #3088 = dep_A2_subsat
  { 3089,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo148 },  // Inst #3089 = dep_S2_packhl
  { 3090,	0,	0,	4,	287,	0, 0x0ULL, nullptr, nullptr, nullptr },  // Inst #3090 = invalid_decode
};


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
extern const char HexagonInstrNameData[] = {
  /* 0 */ "G_FLOG10\0"
  /* 9 */ "ENDLOOP0\0"
  /* 18 */ "V6_vdd0\0"
  /* 26 */ "PS_vdd0\0"
  /* 34 */ "V6_ld0\0"
  /* 41 */ "V6_zld0\0"
  /* 49 */ "V6_vd0\0"
  /* 56 */ "Y6_diag0\0"
  /* 65 */ "SS2_storebi0\0"
  /* 78 */ "SS2_storewi0\0"
  /* 91 */ "S2_cl0\0"
  /* 98 */ "V6_stn0\0"
  /* 106 */ "J2_trap0\0"
  /* 115 */ "V6_ldcp0\0"
  /* 124 */ "V6_ldp0\0"
  /* 132 */ "V6_zldp0\0"
  /* 141 */ "V6_ldcnp0\0"
  /* 151 */ "V6_ldnp0\0"
  /* 160 */ "V6_ldtnp0\0"
  /* 170 */ "V6_stnp0\0"
  /* 179 */ "V6_stunp0\0"
  /* 189 */ "J2_endloop0\0"
  /* 201 */ "V6_ldtp0\0"
  /* 210 */ "V6_stp0\0"
  /* 218 */ "V6_stup0\0"
  /* 227 */ "V6_stnq0\0"
  /* 236 */ "V6_stq0\0"
  /* 244 */ "M2_vrmac_s0\0"
  /* 256 */ "M2_dpmpyss_nac_s0\0"
  /* 274 */ "M2_dpmpyuu_nac_s0\0"
  /* 292 */ "M4_vrmpyeh_acc_s0\0"
  /* 310 */ "M4_vrmpyoh_acc_s0\0"
  /* 328 */ "M2_dpmpyss_acc_s0\0"
  /* 346 */ "M2_dpmpyuu_acc_s0\0"
  /* 364 */ "M2_cmacsc_s0\0"
  /* 377 */ "M2_cnacsc_s0\0"
  /* 390 */ "M2_cmpyrsc_s0\0"
  /* 404 */ "M2_cmpysc_s0\0"
  /* 417 */ "M2_dpmpyss_rnd_s0\0"
  /* 435 */ "M4_vrmpyeh_s0\0"
  /* 449 */ "M2_mpyud_nac_hh_s0\0"
  /* 468 */ "M2_mpyd_nac_hh_s0\0"
  /* 486 */ "M2_mpyu_nac_hh_s0\0"
  /* 504 */ "M2_mpy_nac_hh_s0\0"
  /* 521 */ "M2_mpyud_acc_hh_s0\0"
  /* 540 */ "M2_mpyd_acc_hh_s0\0"
  /* 558 */ "M2_mpyu_acc_hh_s0\0"
  /* 576 */ "M2_mpy_acc_hh_s0\0"
  /* 593 */ "M2_mpyd_rnd_hh_s0\0"
  /* 611 */ "M2_mpy_sat_rnd_hh_s0\0"
  /* 632 */ "M2_mpy_rnd_hh_s0\0"
  /* 649 */ "M2_mpyud_hh_s0\0"
  /* 664 */ "M2_mpyd_hh_s0\0"
  /* 678 */ "M2_mpy_nac_sat_hh_s0\0"
  /* 699 */ "M2_mpy_acc_sat_hh_s0\0"
  /* 720 */ "M2_mpy_sat_hh_s0\0"
  /* 737 */ "M2_mpyu_hh_s0\0"
  /* 751 */ "M2_mpy_hh_s0\0"
  /* 764 */ "M2_mpyud_nac_lh_s0\0"
  /* 783 */ "M2_mpyd_nac_lh_s0\0"
  /* 801 */ "M2_mpyu_nac_lh_s0\0"
  /* 819 */ "M2_mpy_nac_lh_s0\0"
  /* 836 */ "M2_mpyud_acc_lh_s0\0"
  /* 855 */ "M2_mpyd_acc_lh_s0\0"
  /* 873 */ "M2_mpyu_acc_lh_s0\0"
  /* 891 */ "M2_mpy_acc_lh_s0\0"
  /* 908 */ "M2_mpyd_rnd_lh_s0\0"
  /* 926 */ "M2_mpy_sat_rnd_lh_s0\0"
  /* 947 */ "M2_mpy_rnd_lh_s0\0"
  /* 964 */ "M2_mpyud_lh_s0\0"
  /* 979 */ "M2_mpyd_lh_s0\0"
  /* 993 */ "M2_mpy_nac_sat_lh_s0\0"
  /* 1014 */ "M2_mpy_acc_sat_lh_s0\0"
  /* 1035 */ "M2_mpy_sat_lh_s0\0"
  /* 1052 */ "M2_mpyu_lh_s0\0"
  /* 1066 */ "M2_mpy_lh_s0\0"
  /* 1079 */ "M4_vrmpyoh_s0\0"
  /* 1093 */ "M2_mmpyuh_s0\0"
  /* 1106 */ "M2_mmpyh_s0\0"
  /* 1118 */ "M2_cmaci_s0\0"
  /* 1130 */ "M2_vrcmaci_s0\0"
  /* 1144 */ "M2_cmpyi_s0\0"
  /* 1156 */ "M2_vrcmpyi_s0\0"
  /* 1170 */ "M2_mpyud_nac_hl_s0\0"
  /* 1189 */ "M2_mpyd_nac_hl_s0\0"
  /* 1207 */ "M2_mpyu_nac_hl_s0\0"
  /* 1225 */ "M2_mpy_nac_hl_s0\0"
  /* 1242 */ "M2_mpyud_acc_hl_s0\0"
  /* 1261 */ "M2_mpyd_acc_hl_s0\0"
  /* 1279 */ "M2_mpyu_acc_hl_s0\0"
  /* 1297 */ "M2_mpy_acc_hl_s0\0"
  /* 1314 */ "M2_mpyd_rnd_hl_s0\0"
  /* 1332 */ "M2_mpy_sat_rnd_hl_s0\0"
  /* 1353 */ "M2_mpy_rnd_hl_s0\0"
  /* 1370 */ "M2_mpyud_hl_s0\0"
  /* 1385 */ "M2_mpyd_hl_s0\0"
  /* 1399 */ "M2_mpy_nac_sat_hl_s0\0"
  /* 1420 */ "M2_mpy_acc_sat_hl_s0\0"
  /* 1441 */ "M2_mpy_sat_hl_s0\0"
  /* 1458 */ "M2_mpyu_hl_s0\0"
  /* 1472 */ "M2_mpy_hl_s0\0"
  /* 1485 */ "M2_mpyud_nac_ll_s0\0"
  /* 1504 */ "M2_mpyd_nac_ll_s0\0"
  /* 1522 */ "M2_mpyu_nac_ll_s0\0"
  /* 1540 */ "M2_mpy_nac_ll_s0\0"
  /* 1557 */ "M2_mpyud_acc_ll_s0\0"
  /* 1576 */ "M2_mpyd_acc_ll_s0\0"
  /* 1594 */ "M2_mpyu_acc_ll_s0\0"
  /* 1612 */ "M2_mpy_acc_ll_s0\0"
  /* 1629 */ "M2_mpyd_rnd_ll_s0\0"
  /* 1647 */ "M2_mpy_sat_rnd_ll_s0\0"
  /* 1668 */ "M2_mpy_rnd_ll_s0\0"
  /* 1685 */ "M2_mpyud_ll_s0\0"
  /* 1700 */ "M2_mpyd_ll_s0\0"
  /* 1714 */ "M2_mpy_nac_sat_ll_s0\0"
  /* 1735 */ "M2_mpy_acc_sat_ll_s0\0"
  /* 1756 */ "M2_mpy_sat_ll_s0\0"
  /* 1773 */ "M2_mpyu_ll_s0\0"
  /* 1787 */ "M2_mpy_ll_s0\0"
  /* 1800 */ "M2_mmpyul_s0\0"
  /* 1813 */ "M2_mmpyl_s0\0"
  /* 1825 */ "M2_cmacr_s0\0"
  /* 1837 */ "M2_vrcmacr_s0\0"
  /* 1851 */ "M2_cmpyr_s0\0"
  /* 1863 */ "M2_vrcmpyr_s0\0"
  /* 1877 */ "M2_vmac2s_s0\0"
  /* 1890 */ "M2_vmpy2s_s0\0"
  /* 1903 */ "M2_cmacs_s0\0"
  /* 1915 */ "M2_vdmacs_s0\0"
  /* 1928 */ "M2_cnacs_s0\0"
  /* 1940 */ "M2_vmac2es_s0\0"
  /* 1954 */ "M2_vmpy2es_s0\0"
  /* 1968 */ "M2_mmachs_s0\0"
  /* 1981 */ "M2_mmacuhs_s0\0"
  /* 1995 */ "M2_mmacls_s0\0"
  /* 2008 */ "M2_mmaculs_s0\0"
  /* 2022 */ "M2_cmpyrs_s0\0"
  /* 2035 */ "M2_vdmpyrs_s0\0"
  /* 2049 */ "M2_dpmpyss_s0\0"
  /* 2063 */ "M2_cmpys_s0\0"
  /* 2075 */ "M2_vdmpys_s0\0"
  /* 2088 */ "M2_vmac2su_s0\0"
  /* 2102 */ "M2_vmpy2su_s0\0"
  /* 2116 */ "M2_dpmpyuu_s0\0"
  /* 2130 */ "M2_vrmpy_s0\0"
  /* 2142 */ "M2_mmpyuh_rs0\0"
  /* 2156 */ "M2_mmpyh_rs0\0"
  /* 2169 */ "M2_mmpyul_rs0\0"
  /* 2183 */ "M2_mmpyl_rs0\0"
  /* 2196 */ "M2_mmachs_rs0\0"
  /* 2210 */ "M2_mmacuhs_rs0\0"
  /* 2225 */ "M2_mmacls_rs0\0"
  /* 2239 */ "M2_mmaculs_rs0\0"
  /* 2254 */ "DuplexIClass0\0"
  /* 2268 */ "S2_ct0\0"
  /* 2275 */ "V6_ldnt0\0"
  /* 2284 */ "V6_stnnt0\0"
  /* 2294 */ "V6_ldcpnt0\0"
  /* 2305 */ "V6_ldpnt0\0"
  /* 2315 */ "V6_ldcnpnt0\0"
  /* 2327 */ "V6_ldnpnt0\0"
  /* 2338 */ "V6_ldtnpnt0\0"
  /* 2350 */ "V6_stnpnt0\0"
  /* 2361 */ "V6_ldtpnt0\0"
  /* 2372 */ "V6_stpnt0\0"
  /* 2382 */ "V6_stnqnt0\0"
  /* 2393 */ "V6_stqnt0\0"
  /* 2403 */ "V6_ldntnt0\0"
  /* 2414 */ "V6_stnt0\0"
  /* 2423 */ "V6_st0\0"
  /* 2430 */ "V6_ldu0\0"
  /* 2438 */ "V6_stu0\0"
  /* 2446 */ "ENDLOOP01\0"
  /* 2456 */ "J2_endloop01\0"
  /* 2469 */ "SL2_jumpr31\0"
  /* 2481 */ "ENDLOOP1\0"
  /* 2490 */ "SA1_and1\0"
  /* 2499 */ "Y6_diag1\0"
  /* 2508 */ "SS2_storebi1\0"
  /* 2521 */ "SS2_storewi1\0"
  /* 2534 */ "S2_cl1\0"
  /* 2541 */ "SA1_setin1\0"
  /* 2552 */ "J2_trap1\0"
  /* 2561 */ "PS_trap1\0"
  /* 2570 */ "J2_endloop1\0"
  /* 2582 */ "M4_vrmpyeh_acc_s1\0"
  /* 2600 */ "M4_vrmpyoh_acc_s1\0"
  /* 2618 */ "M2_vrcmpys_acc_s1\0"
  /* 2636 */ "M2_cmacsc_s1\0"
  /* 2649 */ "M2_cnacsc_s1\0"
  /* 2662 */ "M2_cmpyrsc_s1\0"
  /* 2676 */ "M2_cmpysc_s1\0"
  /* 2689 */ "M4_vrmpyeh_s1\0"
  /* 2703 */ "M2_mpyud_nac_hh_s1\0"
  /* 2722 */ "M2_mpyd_nac_hh_s1\0"
  /* 2740 */ "M2_mpyu_nac_hh_s1\0"
  /* 2758 */ "M2_mpy_nac_hh_s1\0"
  /* 2775 */ "M2_mpyud_acc_hh_s1\0"
  /* 2794 */ "M2_mpyd_acc_hh_s1\0"
  /* 2812 */ "M2_mpyu_acc_hh_s1\0"
  /* 2830 */ "M2_mpy_acc_hh_s1\0"
  /* 2847 */ "M2_mpyd_rnd_hh_s1\0"
  /* 2865 */ "M2_mpy_sat_rnd_hh_s1\0"
  /* 2886 */ "M2_mpy_rnd_hh_s1\0"
  /* 2903 */ "M2_mpyud_hh_s1\0"
  /* 2918 */ "M2_mpyd_hh_s1\0"
  /* 2932 */ "M2_mpy_nac_sat_hh_s1\0"
  /* 2953 */ "M2_mpy_acc_sat_hh_s1\0"
  /* 2974 */ "M2_mpy_sat_hh_s1\0"
  /* 2991 */ "M2_mpyu_hh_s1\0"
  /* 3005 */ "M2_mpy_hh_s1\0"
  /* 3018 */ "M2_mpyud_nac_lh_s1\0"
  /* 3037 */ "M2_mpyd_nac_lh_s1\0"
  /* 3055 */ "M2_mpyu_nac_lh_s1\0"
  /* 3073 */ "M2_mpy_nac_lh_s1\0"
  /* 3090 */ "M2_mpyud_acc_lh_s1\0"
  /* 3109 */ "M2_mpyd_acc_lh_s1\0"
  /* 3127 */ "M2_mpyu_acc_lh_s1\0"
  /* 3145 */ "M2_mpy_acc_lh_s1\0"
  /* 3162 */ "M2_mpyd_rnd_lh_s1\0"
  /* 3180 */ "M2_mpy_sat_rnd_lh_s1\0"
  /* 3201 */ "M2_mpy_rnd_lh_s1\0"
  /* 3218 */ "M2_mpyud_lh_s1\0"
  /* 3233 */ "M2_mpyd_lh_s1\0"
  /* 3247 */ "M2_mpy_nac_sat_lh_s1\0"
  /* 3268 */ "M2_mpy_acc_sat_lh_s1\0"
  /* 3289 */ "M2_mpy_sat_lh_s1\0"
  /* 3306 */ "M2_mpyu_lh_s1\0"
  /* 3320 */ "M2_mpy_lh_s1\0"
  /* 3333 */ "M4_vrmpyoh_s1\0"
  /* 3347 */ "M2_mmpyuh_s1\0"
  /* 3360 */ "M2_mmpyh_s1\0"
  /* 3372 */ "M2_hmmpyh_s1\0"
  /* 3385 */ "M2_mpyud_nac_hl_s1\0"
  /* 3404 */ "M2_mpyd_nac_hl_s1\0"
  /* 3422 */ "M2_mpyu_nac_hl_s1\0"
  /* 3440 */ "M2_mpy_nac_hl_s1\0"
  /* 3457 */ "M2_mpyud_acc_hl_s1\0"
  /* 3476 */ "M2_mpyd_acc_hl_s1\0"
  /* 3494 */ "M2_mpyu_acc_hl_s1\0"
  /* 3512 */ "M2_mpy_acc_hl_s1\0"
  /* 3529 */ "M2_mpyd_rnd_hl_s1\0"
  /* 3547 */ "M2_mpy_sat_rnd_hl_s1\0"
  /* 3568 */ "M2_mpy_rnd_hl_s1\0"
  /* 3585 */ "M2_mpyud_hl_s1\0"
  /* 3600 */ "M2_mpyd_hl_s1\0"
  /* 3614 */ "M2_mpy_nac_sat_hl_s1\0"
  /* 3635 */ "M2_mpy_acc_sat_hl_s1\0"
  /* 3656 */ "M2_mpy_sat_hl_s1\0"
  /* 3673 */ "M2_mpyu_hl_s1\0"
  /* 3687 */ "M2_mpy_hl_s1\0"
  /* 3700 */ "M2_mpyud_nac_ll_s1\0"
  /* 3719 */ "M2_mpyd_nac_ll_s1\0"
  /* 3737 */ "M2_mpyu_nac_ll_s1\0"
  /* 3755 */ "M2_mpy_nac_ll_s1\0"
  /* 3772 */ "M2_mpyud_acc_ll_s1\0"
  /* 3791 */ "M2_mpyd_acc_ll_s1\0"
  /* 3809 */ "M2_mpyu_acc_ll_s1\0"
  /* 3827 */ "M2_mpy_acc_ll_s1\0"
  /* 3844 */ "M2_mpyd_rnd_ll_s1\0"
  /* 3862 */ "M2_mpy_sat_rnd_ll_s1\0"
  /* 3883 */ "M2_mpy_rnd_ll_s1\0"
  /* 3900 */ "M2_mpyud_ll_s1\0"
  /* 3915 */ "M2_mpyd_ll_s1\0"
  /* 3929 */ "M2_mpy_nac_sat_ll_s1\0"
  /* 3950 */ "M2_mpy_acc_sat_ll_s1\0"
  /* 3971 */ "M2_mpy_sat_ll_s1\0"
  /* 3988 */ "M2_mpyu_ll_s1\0"
  /* 4002 */ "M2_mpy_ll_s1\0"
  /* 4015 */ "M2_mmpyul_s1\0"
  /* 4028 */ "M2_mmpyl_s1\0"
  /* 4040 */ "M2_hmmpyl_s1\0"
  /* 4053 */ "M2_mpy_up_s1\0"
  /* 4066 */ "M2_vmac2s_s1\0"
  /* 4079 */ "M2_vmpy2s_s1\0"
  /* 4092 */ "M2_cmacs_s1\0"
  /* 4104 */ "M2_vdmacs_s1\0"
  /* 4117 */ "M2_cnacs_s1\0"
  /* 4129 */ "M2_vmac2es_s1\0"
  /* 4143 */ "M2_vmpy2es_s1\0"
  /* 4157 */ "M2_mmachs_s1\0"
  /* 4170 */ "M2_mmacuhs_s1\0"
  /* 4184 */ "M2_mmacls_s1\0"
  /* 4197 */ "M2_mmaculs_s1\0"
  /* 4211 */ "M2_cmpyrs_s1\0"
  /* 4224 */ "M2_vdmpyrs_s1\0"
  /* 4238 */ "M2_cmpys_s1\0"
  /* 4250 */ "M2_vrcmpys_s1\0"
  /* 4264 */ "M2_vdmpys_s1\0"
  /* 4277 */ "M2_vmac2su_s1\0"
  /* 4291 */ "M2_vmpy2su_s1\0"
  /* 4305 */ "M2_mmpyuh_rs1\0"
  /* 4319 */ "M2_mmpyh_rs1\0"
  /* 4332 */ "M2_hmmpyh_rs1\0"
  /* 4346 */ "M2_mmpyul_rs1\0"
  /* 4360 */ "M2_mmpyl_rs1\0"
  /* 4373 */ "M2_hmmpyl_rs1\0"
  /* 4387 */ "M2_mmachs_rs1\0"
  /* 4401 */ "M2_mmacuhs_rs1\0"
  /* 4416 */ "M2_mmacls_rs1\0"
  /* 4430 */ "M2_mmaculs_rs1\0"
  /* 4445 */ "DuplexIClass1\0"
  /* 4459 */ "S2_ct1\0"
  /* 4466 */ "CONST32\0"
  /* 4474 */ "G_FLOG2\0"
  /* 4482 */ "G_FEXP2\0"
  /* 4490 */ "M2_vmac2\0"
  /* 4499 */ "V6_pred_scalar2\0"
  /* 4515 */ "DuplexIClass2\0"
  /* 4529 */ "M4_mpyri_addr_u2\0"
  /* 4546 */ "V6_pred_scalar2v2\0"
  /* 4564 */ "DuplexIClass3\0"
  /* 4578 */ "CONST64\0"
  /* 4586 */ "V6_vmpyewuh_64\0"
  /* 4601 */ "TFRI64_V4\0"
  /* 4611 */ "RESTORE_DEALLOC_BEFORE_TAILCALL_V4\0"
  /* 4646 */ "SAVE_REGISTERS_CALL_V4\0"
  /* 4669 */ "RESTORE_DEALLOC_RET_JMP_V4\0"
  /* 4696 */ "DuplexIClass4\0"
  /* 4710 */ "V6_vlut4\0"
  /* 4719 */ "DuplexIClass5\0"
  /* 4733 */ "V6_vwhist256\0"
  /* 4746 */ "DuplexIClass6\0"
  /* 4760 */ "DuplexIClass7\0"
  /* 4774 */ "V6_vwhist128\0"
  /* 4787 */ "C2_all8\0"
  /* 4795 */ "DuplexIClass8\0"
  /* 4809 */ "C2_any8\0"
  /* 4817 */ "C4_fastcorner9\0"
  /* 4832 */ "DuplexIClass9\0"
  /* 4846 */ "G_FMA\0"
  /* 4852 */ "G_STRICT_FMA\0"
  /* 4865 */ "DuplexIClassA\0"
  /* 4879 */ "G_FSUB\0"
  /* 4886 */ "G_STRICT_FSUB\0"
  /* 4900 */ "G_ATOMICRMW_FSUB\0"
  /* 4917 */ "G_SUB\0"
  /* 4923 */ "G_ATOMICRMW_SUB\0"
  /* 4939 */ "DuplexIClassB\0"
  /* 4953 */ "RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC\0"
  /* 4992 */ "SAVE_REGISTERS_CALL_V4_PIC\0"
  /* 5019 */ "RESTORE_DEALLOC_RET_JMP_V4_PIC\0"
  /* 5050 */ "SAVE_REGISTERS_CALL_V4STK_PIC\0"
  /* 5080 */ "RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC\0"
  /* 5123 */ "SAVE_REGISTERS_CALL_V4_EXT_PIC\0"
  /* 5154 */ "RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC\0"
  /* 5189 */ "SAVE_REGISTERS_CALL_V4STK_EXT_PIC\0"
  /* 5223 */ "G_INTRINSIC\0"
  /* 5235 */ "G_FPTRUNC\0"
  /* 5245 */ "G_INTRINSIC_TRUNC\0"
  /* 5263 */ "G_TRUNC\0"
  /* 5271 */ "G_BUILD_VECTOR_TRUNC\0"
  /* 5292 */ "G_DYN_STACKALLOC\0"
  /* 5309 */ "DuplexIClassC\0"
  /* 5323 */ "G_FMAD\0"
  /* 5330 */ "G_INDEXED_SEXTLOAD\0"
  /* 5349 */ "G_SEXTLOAD\0"
  /* 5360 */ "G_INDEXED_ZEXTLOAD\0"
  /* 5379 */ "G_ZEXTLOAD\0"
  /* 5390 */ "G_INDEXED_LOAD\0"
  /* 5405 */ "G_LOAD\0"
  /* 5412 */ "G_VECREDUCE_FADD\0"
  /* 5429 */ "G_FADD\0"
  /* 5436 */ "G_VECREDUCE_SEQ_FADD\0"
  /* 5457 */ "G_STRICT_FADD\0"
  /* 5471 */ "G_ATOMICRMW_FADD\0"
  /* 5488 */ "G_VECREDUCE_ADD\0"
  /* 5504 */ "G_ADD\0"
  /* 5510 */ "G_PTR_ADD\0"
  /* 5520 */ "G_ATOMICRMW_ADD\0"
  /* 5536 */ "G_ATOMICRMW_NAND\0"
  /* 5553 */ "G_VECREDUCE_AND\0"
  /* 5569 */ "G_AND\0"
  /* 5575 */ "G_ATOMICRMW_AND\0"
  /* 5591 */ "LIFETIME_END\0"
  /* 5604 */ "G_BRCOND\0"
  /* 5613 */ "G_INTRINSIC_ROUND\0"
  /* 5631 */ "LOAD_STACK_GUARD\0"
  /* 5648 */ "DuplexIClassD\0"
  /* 5662 */ "PSEUDO_PROBE\0"
  /* 5675 */ "G_SSUBE\0"
  /* 5683 */ "G_USUBE\0"
  /* 5691 */ "G_FENCE\0"
  /* 5699 */ "REG_SEQUENCE\0"
  /* 5712 */ "G_SADDE\0"
  /* 5720 */ "G_UADDE\0"
  /* 5728 */ "G_FMINNUM_IEEE\0"
  /* 5743 */ "G_FMAXNUM_IEEE\0"
  /* 5758 */ "G_JUMP_TABLE\0"
  /* 5771 */ "BUNDLE\0"
  /* 5778 */ "LOCAL_ESCAPE\0"
  /* 5791 */ "G_INDEXED_STORE\0"
  /* 5807 */ "G_STORE\0"
  /* 5815 */ "G_BITREVERSE\0"
  /* 5828 */ "DBG_VALUE\0"
  /* 5838 */ "G_GLOBAL_VALUE\0"
  /* 5853 */ "G_MEMMOVE\0"
  /* 5863 */ "G_FREEZE\0"
  /* 5872 */ "G_FCANONICALIZE\0"
  /* 5888 */ "DuplexIClassE\0"
  /* 5902 */ "G_CTLZ_ZERO_UNDEF\0"
  /* 5920 */ "G_CTTZ_ZERO_UNDEF\0"
  /* 5938 */ "G_IMPLICIT_DEF\0"
  /* 5953 */ "DBG_INSTR_REF\0"
  /* 5967 */ "DuplexIClassF\0"
  /* 5981 */ "G_FNEG\0"
  /* 5988 */ "EXTRACT_SUBREG\0"
  /* 6003 */ "INSERT_SUBREG\0"
  /* 6017 */ "G_SEXT_INREG\0"
  /* 6030 */ "SUBREG_TO_REG\0"
  /* 6044 */ "G_ATOMIC_CMPXCHG\0"
  /* 6061 */ "G_ATOMICRMW_XCHG\0"
  /* 6078 */ "G_FLOG\0"
  /* 6085 */ "G_VAARG\0"
  /* 6093 */ "PREALLOCATED_ARG\0"
  /* 6110 */ "G_SMULH\0"
  /* 6118 */ "G_UMULH\0"
  /* 6126 */ "G_PHI\0"
  /* 6132 */ "G_FPTOSI\0"
  /* 6141 */ "G_FPTOUI\0"
  /* 6150 */ "G_FPOWI\0"
  /* 6158 */ "G_PTRMASK\0"
  /* 6168 */ "SAVE_REGISTERS_CALL_V4STK\0"
  /* 6194 */ "GC_LABEL\0"
  /* 6203 */ "DBG_LABEL\0"
  /* 6213 */ "EH_LABEL\0"
  /* 6222 */ "ANNOTATION_LABEL\0"
  /* 6239 */ "ICALL_BRANCH_FUNNEL\0"
  /* 6259 */ "G_FSHL\0"
  /* 6266 */ "G_SHL\0"
  /* 6272 */ "G_FCEIL\0"
  /* 6280 */ "PATCHABLE_TAIL_CALL\0"
  /* 6300 */ "PATCHABLE_TYPED_EVENT_CALL\0"
  /* 6327 */ "PATCHABLE_EVENT_CALL\0"
  /* 6348 */ "FENTRY_CALL\0"
  /* 6360 */ "KILL\0"
  /* 6365 */ "G_VECREDUCE_FMUL\0"
  /* 6382 */ "G_FMUL\0"
  /* 6389 */ "G_VECREDUCE_SEQ_FMUL\0"
  /* 6410 */ "G_STRICT_FMUL\0"
  /* 6424 */ "G_VECREDUCE_MUL\0"
  /* 6440 */ "G_MUL\0"
  /* 6446 */ "G_FREM\0"
  /* 6453 */ "G_STRICT_FREM\0"
  /* 6467 */ "G_SREM\0"
  /* 6474 */ "G_UREM\0"
  /* 6481 */ "INLINEASM\0"
  /* 6491 */ "G_FMINIMUM\0"
  /* 6502 */ "G_FMAXIMUM\0"
  /* 6513 */ "G_FMINNUM\0"
  /* 6523 */ "G_FMAXNUM\0"
  /* 6533 */ "G_INTRINSIC_ROUNDEVEN\0"
  /* 6555 */ "G_FCOPYSIGN\0"
  /* 6567 */ "G_VECREDUCE_FMIN\0"
  /* 6584 */ "G_VECREDUCE_SMIN\0"
  /* 6601 */ "G_SMIN\0"
  /* 6608 */ "G_VECREDUCE_UMIN\0"
  /* 6625 */ "G_UMIN\0"
  /* 6632 */ "G_ATOMICRMW_UMIN\0"
  /* 6649 */ "G_ATOMICRMW_MIN\0"
  /* 6665 */ "G_FSIN\0"
  /* 6672 */ "CFI_INSTRUCTION\0"
  /* 6688 */ "ADJCALLSTACKDOWN\0"
  /* 6705 */ "G_SSUBO\0"
  /* 6713 */ "G_USUBO\0"
  /* 6721 */ "G_SADDO\0"
  /* 6729 */ "G_UADDO\0"
  /* 6737 */ "G_SMULO\0"
  /* 6745 */ "G_UMULO\0"
  /* 6753 */ "STACKMAP\0"
  /* 6762 */ "G_BSWAP\0"
  /* 6770 */ "G_SITOFP\0"
  /* 6779 */ "G_UITOFP\0"
  /* 6788 */ "G_FCMP\0"
  /* 6795 */ "G_ICMP\0"
  /* 6802 */ "G_CTPOP\0"
  /* 6810 */ "PATCHABLE_OP\0"
  /* 6823 */ "FAULTING_OP\0"
  /* 6835 */ "ADJCALLSTACKUP\0"
  /* 6850 */ "PREALLOCATED_SETUP\0"
  /* 6869 */ "G_FEXP\0"
  /* 6876 */ "A6_vminub_RdP\0"
  /* 6890 */ "G_BR\0"
  /* 6895 */ "INLINEASM_BR\0"
  /* 6908 */ "G_BLOCK_ADDR\0"
  /* 6921 */ "PATCHABLE_FUNCTION_ENTER\0"
  /* 6946 */ "G_READCYCLECOUNTER\0"
  /* 6965 */ "G_READ_REGISTER\0"
  /* 6981 */ "G_WRITE_REGISTER\0"
  /* 6998 */ "G_ASHR\0"
  /* 7005 */ "G_FSHR\0"
  /* 7012 */ "G_LSHR\0"
  /* 7019 */ "G_FFLOOR\0"
  /* 7028 */ "G_BUILD_VECTOR\0"
  /* 7043 */ "G_SHUFFLE_VECTOR\0"
  /* 7060 */ "G_VECREDUCE_XOR\0"
  /* 7076 */ "G_XOR\0"
  /* 7082 */ "G_ATOMICRMW_XOR\0"
  /* 7098 */ "G_VECREDUCE_OR\0"
  /* 7113 */ "G_OR\0"
  /* 7118 */ "G_ATOMICRMW_OR\0"
  /* 7133 */ "EH_RETURN_JMPR\0"
  /* 7148 */ "G_INTTOPTR\0"
  /* 7159 */ "G_FABS\0"
  /* 7166 */ "G_ABS\0"
  /* 7172 */ "A5_ACS\0"
  /* 7179 */ "G_UNMERGE_VALUES\0"
  /* 7196 */ "G_MERGE_VALUES\0"
  /* 7211 */ "G_FCOS\0"
  /* 7218 */ "G_CONCAT_VECTORS\0"
  /* 7235 */ "COPY_TO_REGCLASS\0"
  /* 7252 */ "G_ATOMIC_CMPXCHG_WITH_SUCCESS\0"
  /* 7282 */ "G_INTRINSIC_W_SIDE_EFFECTS\0"
  /* 7309 */ "G_SSUBSAT\0"
  /* 7319 */ "G_USUBSAT\0"
  /* 7329 */ "G_SADDSAT\0"
  /* 7339 */ "G_UADDSAT\0"
  /* 7349 */ "G_SSHLSAT\0"
  /* 7359 */ "G_USHLSAT\0"
  /* 7369 */ "G_SMULFIXSAT\0"
  /* 7382 */ "G_UMULFIXSAT\0"
  /* 7395 */ "G_SDIVFIXSAT\0"
  /* 7408 */ "G_UDIVFIXSAT\0"
  /* 7421 */ "G_EXTRACT\0"
  /* 7431 */ "G_SELECT\0"
  /* 7440 */ "G_BRINDIRECT\0"
  /* 7453 */ "PATCHABLE_RET\0"
  /* 7467 */ "G_MEMSET\0"
  /* 7476 */ "PATCHABLE_FUNCTION_EXIT\0"
  /* 7500 */ "G_BRJT\0"
  /* 7507 */ "G_EXTRACT_VECTOR_ELT\0"
  /* 7528 */ "G_INSERT_VECTOR_ELT\0"
  /* 7548 */ "G_FCONSTANT\0"
  /* 7560 */ "G_CONSTANT\0"
  /* 7571 */ "STATEPOINT\0"
  /* 7582 */ "PATCHPOINT\0"
  /* 7593 */ "G_PTRTOINT\0"
  /* 7604 */ "G_FRINT\0"
  /* 7612 */ "G_INTRINSIC_LRINT\0"
  /* 7630 */ "G_FNEARBYINT\0"
  /* 7643 */ "G_VASTART\0"
  /* 7653 */ "LIFETIME_START\0"
  /* 7668 */ "G_INSERT\0"
  /* 7677 */ "G_FSQRT\0"
  /* 7685 */ "G_STRICT_FSQRT\0"
  /* 7700 */ "G_BITCAST\0"
  /* 7710 */ "G_ADDRSPACE_CAST\0"
  /* 7727 */ "G_FPEXT\0"
  /* 7735 */ "G_SEXT\0"
  /* 7742 */ "G_ANYEXT\0"
  /* 7751 */ "G_ZEXT\0"
  /* 7758 */ "RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT\0"
  /* 7797 */ "SAVE_REGISTERS_CALL_V4_EXT\0"
  /* 7824 */ "RESTORE_DEALLOC_RET_JMP_V4_EXT\0"
  /* 7855 */ "SAVE_REGISTERS_CALL_V4STK_EXT\0"
  /* 7885 */ "G_FDIV\0"
  /* 7892 */ "G_STRICT_FDIV\0"
  /* 7906 */ "G_SDIV\0"
  /* 7913 */ "G_UDIV\0"
  /* 7920 */ "G_FPOW\0"
  /* 7927 */ "G_VECREDUCE_FMAX\0"
  /* 7944 */ "G_VECREDUCE_SMAX\0"
  /* 7961 */ "G_SMAX\0"
  /* 7968 */ "G_VECREDUCE_UMAX\0"
  /* 7985 */ "G_UMAX\0"
  /* 7992 */ "G_ATOMICRMW_UMAX\0"
  /* 8009 */ "G_ATOMICRMW_MAX\0"
  /* 8025 */ "G_FRAME_INDEX\0"
  /* 8039 */ "G_SMULFIX\0"
  /* 8049 */ "G_UMULFIX\0"
  /* 8059 */ "G_SDIVFIX\0"
  /* 8069 */ "G_UDIVFIX\0"
  /* 8079 */ "G_MEMCPY\0"
  /* 8088 */ "COPY\0"
  /* 8093 */ "G_CTLZ\0"
  /* 8100 */ "G_CTTZ\0"
  /* 8107 */ "PS_alloca\0"
  /* 8117 */ "PS_fia\0"
  /* 8124 */ "F2_sffma\0"
  /* 8133 */ "Y2_dccleana\0"
  /* 8145 */ "PS_aligna\0"
  /* 8155 */ "Y2_dczeroa\0"
  /* 8166 */ "F2_sfrecipa\0"
  /* 8178 */ "V6_vrdelta\0"
  /* 8189 */ "V6_vdelta\0"
  /* 8199 */ "F2_sfinvsqrta\0"
  /* 8213 */ "Y2_dcinva\0"
  /* 8223 */ "Y2_icinva\0"
  /* 8233 */ "Y2_dccleaninva\0"
  /* 8248 */ "V6_vsubb\0"
  /* 8257 */ "V6_vaddb\0"
  /* 8266 */ "S2_shuffeb\0"
  /* 8277 */ "V6_vshuffeb\0"
  /* 8289 */ "V6_vpackeb\0"
  /* 8300 */ "V6_vshufoeb\0"
  /* 8312 */ "M6_vabsdiffb\0"
  /* 8325 */ "V6_vshuffb\0"
  /* 8336 */ "V6_vnavgb\0"
  /* 8346 */ "V6_vavgb\0"
  /* 8355 */ "V6_vmpahb\0"
  /* 8365 */ "V6_vroundhb\0"
  /* 8377 */ "S2_vtrunehb\0"
  /* 8389 */ "V6_vmpyihb\0"
  /* 8400 */ "S2_vtrunohb\0"
  /* 8412 */ "S2_vsathb\0"
  /* 8422 */ "S2_svsathb\0"
  /* 8433 */ "V6_vmpauhb\0"
  /* 8444 */ "V6_vdmpyhb\0"
  /* 8455 */ "V6_vtmpyhb\0"
  /* 8466 */ "S2_vspliceib\0"
  /* 8479 */ "F2_sffma_lib\0"
  /* 8492 */ "F2_sffms_lib\0"
  /* 8505 */ "S2_valignib\0"
  /* 8517 */ "V6_vunpackb\0"
  /* 8529 */ "V6_vdealb\0"
  /* 8539 */ "S2_clb\0"
  /* 8546 */ "V6_vlalignb\0"
  /* 8558 */ "V6_valignb\0"
  /* 8569 */ "A2_vminb\0"
  /* 8578 */ "V6_vminb\0"
  /* 8587 */ "S2_shuffob\0"
  /* 8598 */ "V6_vshuffob\0"
  /* 8610 */ "V6_vunpackob\0"
  /* 8623 */ "V6_vpackob\0"
  /* 8634 */ "V6_veqb\0"
  /* 8642 */ "V6_vprefixqb\0"
  /* 8655 */ "S2_vsplicerb\0"
  /* 8668 */ "S2_valignrb\0"
  /* 8680 */ "V6_vlsrb\0"
  /* 8689 */ "S2_vsplatrb\0"
  /* 8701 */ "V6_vabsb\0"
  /* 8710 */ "V6_vsb\0"
  /* 8717 */ "V6_lvsplatb\0"
  /* 8729 */ "A2_satb\0"
  /* 8737 */ "V6_vgtb\0"
  /* 8745 */ "SA1_sxtb\0"
  /* 8754 */ "dup_A2_sxtb\0"
  /* 8766 */ "SA1_zxtb\0"
  /* 8775 */ "dup_A2_zxtb\0"
  /* 8787 */ "A2_vsubub\0"
  /* 8797 */ "A2_vrsadub\0"
  /* 8808 */ "A2_vraddub\0"
  /* 8819 */ "A2_vaddub\0"
  /* 8829 */ "M6_vabsdiffub\0"
  /* 8843 */ "V6_vabsdiffub\0"
  /* 8857 */ "V6_vnavgub\0"
  /* 8868 */ "A2_vavgub\0"
  /* 8878 */ "V6_vavgub\0"
  /* 8888 */ "V6_vroundhub\0"
  /* 8901 */ "S2_vsathub\0"
  /* 8912 */ "V6_vsathub\0"
  /* 8923 */ "S2_svsathub\0"
  /* 8935 */ "V6_vrounduhub\0"
  /* 8949 */ "V6_vunpackub\0"
  /* 8962 */ "A2_vminub\0"
  /* 8972 */ "V6_vminub\0"
  /* 8982 */ "V6_MAP_equb\0"
  /* 8994 */ "A2_sub\0"
  /* 9001 */ "F2_dfsub\0"
  /* 9010 */ "F2_sfsub\0"
  /* 9019 */ "A2_satub\0"
  /* 9028 */ "V6_vgtub\0"
  /* 9037 */ "V6_vmpyiwub\0"
  /* 9049 */ "A2_vmaxub\0"
  /* 9059 */ "V6_vmaxub\0"
  /* 9069 */ "V6_vrmpyub\0"
  /* 9080 */ "V6_vmpyub\0"
  /* 9090 */ "V6_vlutvvb\0"
  /* 9101 */ "V6_vmpyiwb\0"
  /* 9112 */ "A2_vmaxb\0"
  /* 9121 */ "V6_vmaxb\0"
  /* 9130 */ "S2_tableidxb\0"
  /* 9143 */ "V6_vtmpyb\0"
  /* 9153 */ "V6_vzb\0"
  /* 9160 */ "M2_vrcmaci_s0c\0"
  /* 9175 */ "M2_vrcmpyi_s0c\0"
  /* 9190 */ "M2_vrcmacr_s0c\0"
  /* 9205 */ "M2_vrcmpyr_s0c\0"
  /* 9220 */ "A4_subp_c\0"
  /* 9230 */ "A4_addp_c\0"
  /* 9240 */ "S6_rol_i_p_nac\0"
  /* 9255 */ "S2_asl_i_p_nac\0"
  /* 9270 */ "S2_asr_i_p_nac\0"
  /* 9285 */ "S2_lsr_i_p_nac\0"
  /* 9300 */ "S2_asl_r_p_nac\0"
  /* 9315 */ "S2_lsl_r_p_nac\0"
  /* 9330 */ "S2_asr_r_p_nac\0"
  /* 9345 */ "S2_lsr_r_p_nac\0"
  /* 9360 */ "S6_rol_i_r_nac\0"
  /* 9375 */ "S2_asl_i_r_nac\0"
  /* 9390 */ "S2_asr_i_r_nac\0"
  /* 9405 */ "S2_lsr_i_r_nac\0"
  /* 9420 */ "S2_asl_r_r_nac\0"
  /* 9435 */ "S2_lsl_r_r_nac\0"
  /* 9450 */ "S2_asr_r_r_nac\0"
  /* 9465 */ "S2_lsr_r_r_nac\0"
  /* 9480 */ "V6_vmpyowh_64_acc\0"
  /* 9498 */ "V6_vmpahb_acc\0"
  /* 9512 */ "V6_vmpyihb_acc\0"
  /* 9527 */ "V6_vmpauhb_acc\0"
  /* 9542 */ "V6_vdmpyhb_acc\0"
  /* 9557 */ "V6_vtmpyhb_acc\0"
  /* 9572 */ "A2_vrsadub_acc\0"
  /* 9587 */ "A2_vraddub_acc\0"
  /* 9602 */ "V6_vmpyiwub_acc\0"
  /* 9618 */ "V6_vrmpyub_acc\0"
  /* 9633 */ "V6_vmpyub_acc\0"
  /* 9647 */ "V6_vmpyiwb_acc\0"
  /* 9662 */ "V6_vtmpyb_acc\0"
  /* 9676 */ "M7_dcmpyiwc_acc\0"
  /* 9692 */ "M7_dcmpyrwc_acc\0"
  /* 9708 */ "V6_vmpyuhe_acc\0"
  /* 9723 */ "S4_vrcrotate_acc\0"
  /* 9740 */ "V6_vaddubh_acc\0"
  /* 9755 */ "V6_vmpyih_acc\0"
  /* 9769 */ "V6_vaslh_acc\0"
  /* 9782 */ "V6_vasrh_acc\0"
  /* 9795 */ "V6_vdsaduh_acc\0"
  /* 9810 */ "V6_vmpyiewuh_acc\0"
  /* 9827 */ "V6_vmpyuh_acc\0"
  /* 9841 */ "V6_vmpyiewh_acc\0"
  /* 9857 */ "V6_vmpyiwh_acc\0"
  /* 9872 */ "M4_vpmpyh_acc\0"
  /* 9886 */ "V6_vmpyh_acc\0"
  /* 9899 */ "V6_vrsadubi_acc\0"
  /* 9915 */ "V6_vrmpyubi_acc\0"
  /* 9931 */ "V6_vrmpybusi_acc\0"
  /* 9948 */ "S6_rol_i_p_acc\0"
  /* 9963 */ "S2_asl_i_p_acc\0"
  /* 9978 */ "S2_asr_i_p_acc\0"
  /* 9993 */ "S2_lsr_i_p_acc\0"
  /* 10008 */ "S2_asl_r_p_acc\0"
  /* 10023 */ "S2_lsl_r_p_acc\0"
  /* 10038 */ "S2_asr_r_p_acc\0"
  /* 10053 */ "S2_lsr_r_p_acc\0"
  /* 10068 */ "S6_rol_i_r_acc\0"
  /* 10083 */ "S2_asl_i_r_acc\0"
  /* 10098 */ "S2_asr_i_r_acc\0"
  /* 10113 */ "S2_lsr_i_r_acc\0"
  /* 10128 */ "S2_asl_r_r_acc\0"
  /* 10143 */ "S2_lsl_r_r_acc\0"
  /* 10158 */ "S2_asr_r_r_acc\0"
  /* 10173 */ "S2_lsr_r_r_acc\0"
  /* 10188 */ "V6_vmpabus_acc\0"
  /* 10203 */ "V6_vdmpybus_acc\0"
  /* 10219 */ "V6_vrmpybus_acc\0"
  /* 10235 */ "V6_vtmpybus_acc\0"
  /* 10251 */ "V6_vmpybus_acc\0"
  /* 10266 */ "V6_vmpyhus_acc\0"
  /* 10281 */ "V6_vdmpyhsat_acc\0"
  /* 10298 */ "V6_vmpyhsat_acc\0"
  /* 10314 */ "V6_vdmpyhisat_acc\0"
  /* 10332 */ "V6_vdmpyhsuisat_acc\0"
  /* 10352 */ "V6_vdmpyhsusat_acc\0"
  /* 10371 */ "V6_vdmpyhvsat_acc\0"
  /* 10389 */ "V6_vrmpyzbb_rt_acc\0"
  /* 10408 */ "V6_vrmpyzcb_rt_acc\0"
  /* 10427 */ "V6_vrmpyznb_rt_acc\0"
  /* 10446 */ "V6_vrmpyzbub_rt_acc\0"
  /* 10466 */ "V6_vrmpyzcbs_rt_acc\0"
  /* 10486 */ "V6_vandqrt_acc\0"
  /* 10501 */ "V6_vandnqrt_acc\0"
  /* 10517 */ "V6_vandvrt_acc\0"
  /* 10532 */ "V6_vrmpybub_rtt_acc\0"
  /* 10552 */ "V6_vrmpyub_rtt_acc\0"
  /* 10571 */ "V6_vmpabuu_acc\0"
  /* 10586 */ "V6_vrmpyubv_acc\0"
  /* 10602 */ "V6_vmpyubv_acc\0"
  /* 10617 */ "V6_vrmpybv_acc\0"
  /* 10632 */ "V6_vmpybv_acc\0"
  /* 10646 */ "V6_vdmpyhb_dv_acc\0"
  /* 10664 */ "V6_vdmpybus_dv_acc\0"
  /* 10683 */ "V6_vmpyuhv_acc\0"
  /* 10698 */ "V6_vmpyhv_acc\0"
  /* 10712 */ "V6_vrmpybusv_acc\0"
  /* 10729 */ "V6_vmpybusv_acc\0"
  /* 10745 */ "V6_vaddhw_acc\0"
  /* 10759 */ "V6_vadduhw_acc\0"
  /* 10774 */ "M7_dcmpyiw_acc\0"
  /* 10789 */ "V6_vaslw_acc\0"
  /* 10802 */ "PS_vmulw_acc\0"
  /* 10815 */ "V6_vasrw_acc\0"
  /* 10828 */ "M7_dcmpyrw_acc\0"
  /* 10843 */ "M4_pmpyw_acc\0"
  /* 10856 */ "V6_vrmpyzbb_rx_acc\0"
  /* 10875 */ "V6_vrmpyzcb_rx_acc\0"
  /* 10894 */ "V6_vrmpyznb_rx_acc\0"
  /* 10913 */ "V6_vrmpyzbub_rx_acc\0"
  /* 10933 */ "V6_vrmpyzcbs_rx_acc\0"
  /* 10953 */ "M7_vdmpy_acc\0"
  /* 10966 */ "M2_subacc\0"
  /* 10976 */ "V6_vlutvvb_oracc\0"
  /* 10993 */ "V6_vlutvwh_oracc\0"
  /* 11010 */ "V6_vmpyowh_rnd_sacc\0"
  /* 11030 */ "V6_vmpyowh_sacc\0"
  /* 11046 */ "S6_rol_i_p_xacc\0"
  /* 11062 */ "S2_asl_i_p_xacc\0"
  /* 11078 */ "S2_lsr_i_p_xacc\0"
  /* 11094 */ "S6_rol_i_r_xacc\0"
  /* 11110 */ "S2_asl_i_r_xacc\0"
  /* 11126 */ "S2_lsr_i_r_xacc\0"
  /* 11142 */ "M2_xor_xacc\0"
  /* 11154 */ "M4_xor_xacc\0"
  /* 11166 */ "SA1_dec\0"
  /* 11174 */ "M4_cmpyi_whc\0"
  /* 11187 */ "M4_cmpyr_whc\0"
  /* 11200 */ "SA1_inc\0"
  /* 11208 */ "Y2_isync\0"
  /* 11217 */ "C4_addipc\0"
  /* 11227 */ "F2_sffma_sc\0"
  /* 11239 */ "M7_dcmpyiwc\0"
  /* 11251 */ "M7_wcmpyiwc\0"
  /* 11263 */ "M7_dcmpyrwc\0"
  /* 11275 */ "M7_wcmpyrwc\0"
  /* 11287 */ "F2_conv_df2d\0"
  /* 11300 */ "F2_conv_sf2d\0"
  /* 11313 */ "dup_A2_add\0"
  /* 11324 */ "V6_vscattermh_add\0"
  /* 11342 */ "V6_vscattermhw_add\0"
  /* 11361 */ "V6_vscattermw_add\0"
  /* 11379 */ "F2_dfadd\0"
  /* 11388 */ "F2_sfadd\0"
  /* 11397 */ "V6_vshuffvdd\0"
  /* 11410 */ "V6_vdealvdd\0"
  /* 11422 */ "L4_loadd_locked\0"
  /* 11438 */ "S4_stored_locked\0"
  /* 11455 */ "L2_loadw_locked\0"
  /* 11471 */ "S2_storew_locked\0"
  /* 11488 */ "LDriw_pred\0"
  /* 11499 */ "STriw_pred\0"
  /* 11510 */ "A2_and\0"
  /* 11517 */ "C2_and\0"
  /* 11524 */ "V6_veqb_and\0"
  /* 11536 */ "V6_vgtb_and\0"
  /* 11548 */ "V6_MAP_equb_and\0"
  /* 11564 */ "V6_vgtub_and\0"
  /* 11577 */ "V6_pred_and\0"
  /* 11589 */ "C4_and_and\0"
  /* 11600 */ "M4_and_and\0"
  /* 11611 */ "V6_veqh_and\0"
  /* 11623 */ "V6_vgth_and\0"
  /* 11635 */ "V6_MAP_equh_and\0"
  /* 11651 */ "V6_vgtuh_and\0"
  /* 11664 */ "S6_rol_i_p_and\0"
  /* 11679 */ "S2_asl_i_p_and\0"
  /* 11694 */ "S2_asr_i_p_and\0"
  /* 11709 */ "S2_lsr_i_p_and\0"
  /* 11724 */ "S2_asl_r_p_and\0"
  /* 11739 */ "S2_lsl_r_p_and\0"
  /* 11754 */ "S2_asr_r_p_and\0"
  /* 11769 */ "S2_lsr_r_p_and\0"
  /* 11784 */ "S6_rol_i_r_and\0"
  /* 11799 */ "S2_asl_i_r_and\0"
  /* 11814 */ "S2_asr_i_r_and\0"
  /* 11829 */ "S2_lsr_i_r_and\0"
  /* 11844 */ "S2_asl_r_r_and\0"
  /* 11859 */ "S2_lsl_r_r_and\0"
  /* 11874 */ "S2_asr_r_r_and\0"
  /* 11889 */ "S2_lsr_r_r_and\0"
  /* 11904 */ "C4_or_and\0"
  /* 11914 */ "M4_or_and\0"
  /* 11924 */ "M4_xor_and\0"
  /* 11935 */ "V6_veqw_and\0"
  /* 11947 */ "V6_vgtw_and\0"
  /* 11959 */ "V6_MAP_equw_and\0"
  /* 11975 */ "V6_vgtuw_and\0"
  /* 11988 */ "V6_vand\0"
  /* 11996 */ "M7_wcmpyiwc_rnd\0"
  /* 12012 */ "M7_wcmpyrwc_rnd\0"
  /* 12028 */ "V6_vmpyowh_rnd\0"
  /* 12043 */ "S2_asr_i_p_rnd\0"
  /* 12058 */ "S2_asr_i_r_rnd\0"
  /* 12073 */ "M7_wcmpyiw_rnd\0"
  /* 12088 */ "M7_wcmpyrw_rnd\0"
  /* 12103 */ "V6_vavgbrnd\0"
  /* 12115 */ "V6_vavgubrnd\0"
  /* 12128 */ "V6_vavghrnd\0"
  /* 12140 */ "S5_vasrhrnd\0"
  /* 12152 */ "V6_vavguhrnd\0"
  /* 12165 */ "V6_vavgwrnd\0"
  /* 12177 */ "V6_vavguwrnd\0"
  /* 12190 */ "F2_sffixupd\0"
  /* 12202 */ "F2_conv_df2ud\0"
  /* 12216 */ "F2_conv_sf2ud\0"
  /* 12230 */ "S2_tableidxd\0"
  /* 12243 */ "Y4_trace\0"
  /* 12252 */ "invalid_decode\0"
  /* 12267 */ "F2_dfcmpge\0"
  /* 12278 */ "F2_sfcmpge\0"
  /* 12289 */ "V6_vmpyuhe\0"
  /* 12300 */ "CALLProfile\0"
  /* 12312 */ "SS2_allocframe\0"
  /* 12327 */ "dup_S2_allocframe\0"
  /* 12345 */ "SL2_deallocframe\0"
  /* 12362 */ "dup_L2_deallocframe\0"
  /* 12382 */ "V6_vnccombine\0"
  /* 12396 */ "V6_vccombine\0"
  /* 12409 */ "V6_vcombine\0"
  /* 12421 */ "PS_false\0"
  /* 12430 */ "PS_qfalse\0"
  /* 12440 */ "J2_pause\0"
  /* 12449 */ "S4_vrcrotate\0"
  /* 12462 */ "S2_vcrotate\0"
  /* 12474 */ "C4_cmplte\0"
  /* 12484 */ "PS_true\0"
  /* 12492 */ "PS_qtrue\0"
  /* 12501 */ "S2_interleave\0"
  /* 12515 */ "S2_deinterleave\0"
  /* 12531 */ "SL2_jumpr31_f\0"
  /* 12545 */ "SL2_return_f\0"
  /* 12558 */ "L4_return_f\0"
  /* 12570 */ "L4_return_map_to_raw_f\0"
  /* 12593 */ "A4_psxtbf\0"
  /* 12603 */ "A4_pzxtbf\0"
  /* 12613 */ "A2_psubf\0"
  /* 12622 */ "F2_conv_d2df\0"
  /* 12635 */ "F2_conv_ud2df\0"
  /* 12649 */ "F2_conv_sf2df\0"
  /* 12663 */ "F2_conv_w2df\0"
  /* 12676 */ "F2_conv_uw2df\0"
  /* 12690 */ "A2_paddf\0"
  /* 12699 */ "A2_pandf\0"
  /* 12708 */ "V6_vshuff\0"
  /* 12718 */ "A4_paslhf\0"
  /* 12728 */ "A4_pasrhf\0"
  /* 12738 */ "A4_psxthf\0"
  /* 12748 */ "A4_pzxthf\0"
  /* 12758 */ "A2_paddif\0"
  /* 12768 */ "dup_C2_cmoveif\0"
  /* 12783 */ "dup_C2_cmovenewif\0"
  /* 12801 */ "J2_callf\0"
  /* 12810 */ "J2_jumpf\0"
  /* 12819 */ "A2_tfrpf\0"
  /* 12828 */ "A2_tfrf\0"
  /* 12836 */ "SA1_clrf\0"
  /* 12845 */ "J2_callrf\0"
  /* 12855 */ "A2_porf\0"
  /* 12863 */ "A2_pxorf\0"
  /* 12872 */ "J2_jumprf\0"
  /* 12882 */ "F2_conv_d2sf\0"
  /* 12895 */ "F2_conv_ud2sf\0"
  /* 12909 */ "F2_conv_df2sf\0"
  /* 12923 */ "F2_conv_w2sf\0"
  /* 12936 */ "F2_conv_uw2sf\0"
  /* 12950 */ "PS_jmpretf\0"
  /* 12961 */ "C2_ccombinewf\0"
  /* 12975 */ "C2_ccombinewnewf\0"
  /* 12992 */ "Y6_diag\0"
  /* 13000 */ "A2_neg\0"
  /* 13007 */ "V6_vcl0h\0"
  /* 13016 */ "M2_vrcmpys_acc_s1_h\0"
  /* 13036 */ "M2_vrcmpys_s1_h\0"
  /* 13052 */ "M2_vrcmpys_s1rp_h\0"
  /* 13070 */ "V6_vaddclbh\0"
  /* 13082 */ "S2_vsxtbh\0"
  /* 13092 */ "S2_vzxtbh\0"
  /* 13102 */ "V6_vsububh\0"
  /* 13113 */ "V6_vaddubh\0"
  /* 13124 */ "S4_vxaddsubh\0"
  /* 13137 */ "A2_vsubh\0"
  /* 13146 */ "V6_vsubh\0"
  /* 13155 */ "A2_svsubh\0"
  /* 13165 */ "A4_tlbmatch\0"
  /* 13177 */ "Y4_l2fetch\0"
  /* 13188 */ "Y5_l2fetch\0"
  /* 13199 */ "Y2_dcfetch\0"
  /* 13210 */ "S4_vxsubaddh\0"
  /* 13223 */ "M2_vraddh\0"
  /* 13233 */ "A2_vaddh\0"
  /* 13242 */ "V6_vaddh\0"
  /* 13251 */ "A2_svaddh\0"
  /* 13261 */ "S2_shuffeh\0"
  /* 13272 */ "V6_vshufeh\0"
  /* 13283 */ "V6_vpackeh\0"
  /* 13294 */ "V6_vshufoeh\0"
  /* 13306 */ "M2_vabsdiffh\0"
  /* 13319 */ "V6_vabsdiffh\0"
  /* 13332 */ "V6_vshuffh\0"
  /* 13343 */ "S2_vrcnegh\0"
  /* 13354 */ "S2_vcnegh\0"
  /* 13364 */ "A2_vnavgh\0"
  /* 13374 */ "V6_vnavgh\0"
  /* 13384 */ "A2_svnavgh\0"
  /* 13395 */ "A2_vavgh\0"
  /* 13404 */ "V6_vavgh\0"
  /* 13413 */ "A2_svavgh\0"
  /* 13423 */ "A2_subh_h16_hh\0"
  /* 13438 */ "A2_addh_h16_hh\0"
  /* 13453 */ "A2_combine_hh\0"
  /* 13467 */ "A2_subh_h16_sat_hh\0"
  /* 13486 */ "A2_addh_h16_sat_hh\0"
  /* 13505 */ "F2_dfmpyhh\0"
  /* 13516 */ "A2_tfrih\0"
  /* 13525 */ "V6_vmpyih\0"
  /* 13535 */ "V6_vunpackh\0"
  /* 13547 */ "A2_subh_h16_lh\0"
  /* 13562 */ "A2_addh_h16_lh\0"
  /* 13577 */ "A2_combine_lh\0"
  /* 13591 */ "A2_subh_h16_sat_lh\0"
  /* 13610 */ "A2_addh_h16_sat_lh\0"
  /* 13629 */ "V6_vdealh\0"
  /* 13639 */ "A2_aslh\0"
  /* 13647 */ "V6_vaslh\0"
  /* 13656 */ "F2_dfmpylh\0"
  /* 13667 */ "V6_vgathermh\0"
  /* 13680 */ "V6_vscattermh\0"
  /* 13694 */ "A4_vrminh\0"
  /* 13704 */ "A2_vminh\0"
  /* 13713 */ "V6_vminh\0"
  /* 13722 */ "V6_vmpyieoh\0"
  /* 13734 */ "S2_shuffoh\0"
  /* 13745 */ "V6_vshufoh\0"
  /* 13756 */ "V6_vunpackoh\0"
  /* 13769 */ "V6_vpackoh\0"
  /* 13780 */ "A2_addsph\0"
  /* 13790 */ "V6_shuffeqh\0"
  /* 13802 */ "V6_veqh\0"
  /* 13810 */ "V6_vprefixqh\0"
  /* 13823 */ "A2_asrh\0"
  /* 13831 */ "V6_vasrh\0"
  /* 13840 */ "V6_vlsrh\0"
  /* 13849 */ "S2_vsplatrh\0"
  /* 13861 */ "PS_crash\0"
  /* 13870 */ "A2_vabsh\0"
  /* 13879 */ "V6_vabsh\0"
  /* 13888 */ "V6_vsh\0"
  /* 13895 */ "V6_lvsplath\0"
  /* 13907 */ "A2_sath\0"
  /* 13915 */ "V6_vgth\0"
  /* 13923 */ "V6_vnormamth\0"
  /* 13936 */ "V6_vpopcounth\0"
  /* 13950 */ "SA1_sxth\0"
  /* 13959 */ "dup_A2_sxth\0"
  /* 13971 */ "SA1_zxth\0"
  /* 13980 */ "dup_A2_zxth\0"
  /* 13992 */ "V6_vdsaduh\0"
  /* 14003 */ "M2_vradduh\0"
  /* 14014 */ "V6_vabsdiffuh\0"
  /* 14028 */ "A2_vavguh\0"
  /* 14038 */ "V6_vavguh\0"
  /* 14048 */ "V6_vunpackuh\0"
  /* 14061 */ "A4_vrminuh\0"
  /* 14072 */ "A2_vminuh\0"
  /* 14082 */ "V6_vminuh\0"
  /* 14092 */ "V6_MAP_equh\0"
  /* 14104 */ "A2_satuh\0"
  /* 14113 */ "V6_vgtuh\0"
  /* 14122 */ "V6_vroundwuh\0"
  /* 14135 */ "V6_vmpyiewuh\0"
  /* 14148 */ "V6_vmpyewuh\0"
  /* 14160 */ "S2_vsatwuh\0"
  /* 14171 */ "V6_vrounduwuh\0"
  /* 14185 */ "V6_vsatuwuh\0"
  /* 14197 */ "A4_vrmaxuh\0"
  /* 14208 */ "A2_vmaxuh\0"
  /* 14218 */ "V6_vmaxuh\0"
  /* 14228 */ "V6_vmpyuh\0"
  /* 14238 */ "S2_asl_i_vh\0"
  /* 14250 */ "S2_asr_i_vh\0"
  /* 14262 */ "S2_lsr_i_vh\0"
  /* 14274 */ "S2_asl_r_vh\0"
  /* 14286 */ "S2_lsl_r_vh\0"
  /* 14298 */ "S2_asr_r_vh\0"
  /* 14310 */ "S2_lsr_r_vh\0"
  /* 14322 */ "M4_cmpyi_wh\0"
  /* 14334 */ "M4_cmpyr_wh\0"
  /* 14346 */ "V6_vroundwh\0"
  /* 14358 */ "S2_vtrunewh\0"
  /* 14370 */ "V6_vmpyiwh\0"
  /* 14381 */ "S2_vrndpackwh\0"
  /* 14395 */ "V6_vmpyiowh\0"
  /* 14407 */ "S2_vtrunowh\0"
  /* 14419 */ "V6_vmpyowh\0"
  /* 14430 */ "V6_vasrwh\0"
  /* 14440 */ "S2_vsatwh\0"
  /* 14450 */ "V6_vsatwh\0"
  /* 14460 */ "V6_vlutvwh\0"
  /* 14471 */ "A4_vrmaxh\0"
  /* 14481 */ "A2_vmaxh\0"
  /* 14490 */ "V6_vmaxh\0"
  /* 14499 */ "S2_tableidxh\0"
  /* 14512 */ "M4_vpmpyh\0"
  /* 14522 */ "V6_vmpyh\0"
  /* 14531 */ "V6_vzh\0"
  /* 14538 */ "SA1_combine0i\0"
  /* 14552 */ "J2_loop0i\0"
  /* 14562 */ "SA1_combine1i\0"
  /* 14576 */ "J2_loop1i\0"
  /* 14586 */ "SA1_combine2i\0"
  /* 14600 */ "SA1_combine3i\0"
  /* 14614 */ "PS_tailcall_i\0"
  /* 14628 */ "M2_vcmac_s0_sat_i\0"
  /* 14646 */ "M2_vcmpy_s0_sat_i\0"
  /* 14664 */ "M2_vcmpy_s1_sat_i\0"
  /* 14682 */ "S2_togglebit_i\0"
  /* 14697 */ "S2_clrbit_i\0"
  /* 14709 */ "S2_setbit_i\0"
  /* 14721 */ "S2_tstbit_i\0"
  /* 14733 */ "S4_ntstbit_i\0"
  /* 14746 */ "V6_vL32b_ai\0"
  /* 14758 */ "V6_vS32b_ai\0"
  /* 14770 */ "V6_vL32Ub_ai\0"
  /* 14783 */ "V6_vS32Ub_ai\0"
  /* 14796 */ "V6_zLd_ai\0"
  /* 14806 */ "V6_vL32b_pred_ai\0"
  /* 14823 */ "V6_vS32b_pred_ai\0"
  /* 14840 */ "V6_vS32Ub_pred_ai\0"
  /* 14858 */ "V6_zLd_pred_ai\0"
  /* 14873 */ "V6_vL32b_tmp_pred_ai\0"
  /* 14894 */ "V6_vL32b_nt_tmp_pred_ai\0"
  /* 14918 */ "V6_vL32b_cur_pred_ai\0"
  /* 14939 */ "V6_vL32b_nt_cur_pred_ai\0"
  /* 14963 */ "V6_vL32b_nt_pred_ai\0"
  /* 14983 */ "V6_vS32b_nt_pred_ai\0"
  /* 15003 */ "V6_vS32b_new_pred_ai\0"
  /* 15024 */ "V6_vS32b_nt_new_pred_ai\0"
  /* 15048 */ "V6_vL32b_npred_ai\0"
  /* 15066 */ "V6_vS32b_npred_ai\0"
  /* 15084 */ "V6_vS32Ub_npred_ai\0"
  /* 15103 */ "V6_vL32b_tmp_npred_ai\0"
  /* 15125 */ "V6_vL32b_nt_tmp_npred_ai\0"
  /* 15150 */ "V6_vL32b_cur_npred_ai\0"
  /* 15172 */ "V6_vL32b_nt_cur_npred_ai\0"
  /* 15197 */ "V6_vL32b_nt_npred_ai\0"
  /* 15218 */ "V6_vS32b_nt_npred_ai\0"
  /* 15239 */ "V6_vS32b_new_npred_ai\0"
  /* 15261 */ "V6_vS32b_nt_new_npred_ai\0"
  /* 15286 */ "V6_vS32b_qpred_ai\0"
  /* 15304 */ "V6_vS32b_nt_qpred_ai\0"
  /* 15325 */ "V6_vS32b_nqpred_ai\0"
  /* 15344 */ "V6_vS32b_nt_nqpred_ai\0"
  /* 15366 */ "V6_vL32b_tmp_ai\0"
  /* 15382 */ "V6_vL32b_nt_tmp_ai\0"
  /* 15401 */ "PS_vloadrq_ai\0"
  /* 15415 */ "PS_vstorerq_ai\0"
  /* 15430 */ "V6_vL32b_cur_ai\0"
  /* 15446 */ "V6_vL32b_nt_cur_ai\0"
  /* 15465 */ "V6_vS32b_srls_ai\0"
  /* 15482 */ "V6_vL32b_nt_ai\0"
  /* 15497 */ "V6_vS32b_nt_ai\0"
  /* 15512 */ "PS_vloadrv_nt_ai\0"
  /* 15529 */ "PS_vstorerv_nt_ai\0"
  /* 15547 */ "PS_vloadrw_nt_ai\0"
  /* 15564 */ "PS_vstorerw_nt_ai\0"
  /* 15582 */ "PS_vloadrv_ai\0"
  /* 15596 */ "PS_vstorerv_ai\0"
  /* 15611 */ "V6_vS32b_new_ai\0"
  /* 15627 */ "V6_vS32b_nt_new_ai\0"
  /* 15646 */ "PS_vloadrw_ai\0"
  /* 15660 */ "PS_vstorerw_ai\0"
  /* 15675 */ "V6_vlalignbi\0"
  /* 15688 */ "V6_valignbi\0"
  /* 15700 */ "V6_vrsadubi\0"
  /* 15712 */ "V6_vrmpyubi\0"
  /* 15724 */ "V6_vlutvvbi\0"
  /* 15736 */ "M2_maci\0"
  /* 15744 */ "M2_mnaci\0"
  /* 15753 */ "M2_acci\0"
  /* 15761 */ "M2_nacci\0"
  /* 15770 */ "V6_vlutvvb_oracci\0"
  /* 15788 */ "V6_vlutvwh_oracci\0"
  /* 15806 */ "L2_loadbsw2_pci\0"
  /* 15822 */ "L2_loadbzw2_pci\0"
  /* 15838 */ "L2_loadbsw4_pci\0"
  /* 15854 */ "L2_loadbzw4_pci\0"
  /* 15870 */ "L2_loadalignb_pci\0"
  /* 15888 */ "L2_loadrb_pci\0"
  /* 15902 */ "PS_loadrb_pci\0"
  /* 15916 */ "S2_storerb_pci\0"
  /* 15931 */ "PS_storerb_pci\0"
  /* 15946 */ "L2_loadrub_pci\0"
  /* 15961 */ "PS_loadrub_pci\0"
  /* 15976 */ "L2_loadrd_pci\0"
  /* 15990 */ "PS_loadrd_pci\0"
  /* 16004 */ "S2_storerd_pci\0"
  /* 16019 */ "PS_storerd_pci\0"
  /* 16034 */ "S2_storerf_pci\0"
  /* 16049 */ "PS_storerf_pci\0"
  /* 16064 */ "L2_loadalignh_pci\0"
  /* 16082 */ "L2_loadrh_pci\0"
  /* 16096 */ "PS_loadrh_pci\0"
  /* 16110 */ "S2_storerh_pci\0"
  /* 16125 */ "PS_storerh_pci\0"
  /* 16140 */ "L2_loadruh_pci\0"
  /* 16155 */ "PS_loadruh_pci\0"
  /* 16170 */ "L2_loadri_pci\0"
  /* 16184 */ "PS_loadri_pci\0"
  /* 16198 */ "S2_storeri_pci\0"
  /* 16213 */ "PS_storeri_pci\0"
  /* 16228 */ "S2_storerbnew_pci\0"
  /* 16246 */ "S2_storerhnew_pci\0"
  /* 16264 */ "S2_storerinew_pci\0"
  /* 16282 */ "SA1_addi\0"
  /* 16291 */ "dup_A2_addi\0"
  /* 16303 */ "M4_mpyri_addi\0"
  /* 16317 */ "M4_mpyrr_addi\0"
  /* 16331 */ "S4_clbaddi\0"
  /* 16342 */ "S4_subaddi\0"
  /* 16353 */ "S4_addaddi\0"
  /* 16364 */ "S4_clbpaddi\0"
  /* 16376 */ "S4_or_andi\0"
  /* 16387 */ "C2_cmpgei\0"
  /* 16397 */ "C4_cmpltei\0"
  /* 16408 */ "PS_fi\0"
  /* 16414 */ "V6_hi\0"
  /* 16420 */ "A4_boundscheck_hi\0"
  /* 16438 */ "V6_vlutvwhi\0"
  /* 16450 */ "M2_accii\0"
  /* 16459 */ "M2_naccii\0"
  /* 16469 */ "dup_A2_combineii\0"
  /* 16486 */ "dup_A4_combineii\0"
  /* 16503 */ "C2_muxii\0"
  /* 16512 */ "S4_lsli\0"
  /* 16520 */ "M2_mpysmi\0"
  /* 16530 */ "L2_loadbsw2_pi\0"
  /* 16545 */ "L2_loadbzw2_pi\0"
  /* 16560 */ "L2_loadbsw4_pi\0"
  /* 16575 */ "L2_loadbzw4_pi\0"
  /* 16590 */ "V6_vL32b_pi\0"
  /* 16602 */ "V6_vS32b_pi\0"
  /* 16614 */ "V6_vL32Ub_pi\0"
  /* 16627 */ "V6_vS32Ub_pi\0"
  /* 16640 */ "L2_loadalignb_pi\0"
  /* 16657 */ "L2_loadrb_pi\0"
  /* 16670 */ "S2_storerb_pi\0"
  /* 16684 */ "L2_loadrub_pi\0"
  /* 16698 */ "V6_zLd_pi\0"
  /* 16708 */ "V6_vL32b_pred_pi\0"
  /* 16725 */ "V6_vS32b_pred_pi\0"
  /* 16742 */ "V6_vS32Ub_pred_pi\0"
  /* 16760 */ "V6_zLd_pred_pi\0"
  /* 16775 */ "V6_vL32b_tmp_pred_pi\0"
  /* 16796 */ "V6_vL32b_nt_tmp_pred_pi\0"
  /* 16820 */ "V6_vL32b_cur_pred_pi\0"
  /* 16841 */ "V6_vL32b_nt_cur_pred_pi\0"
  /* 16865 */ "V6_vL32b_nt_pred_pi\0"
  /* 16885 */ "V6_vS32b_nt_pred_pi\0"
  /* 16905 */ "V6_vS32b_new_pred_pi\0"
  /* 16926 */ "V6_vS32b_nt_new_pred_pi\0"
  /* 16950 */ "V6_vL32b_npred_pi\0"
  /* 16968 */ "V6_vS32b_npred_pi\0"
  /* 16986 */ "V6_vS32Ub_npred_pi\0"
  /* 17005 */ "V6_vL32b_tmp_npred_pi\0"
  /* 17027 */ "V6_vL32b_nt_tmp_npred_pi\0"
  /* 17052 */ "V6_vL32b_cur_npred_pi\0"
  /* 17074 */ "V6_vL32b_nt_cur_npred_pi\0"
  /* 17099 */ "V6_vL32b_nt_npred_pi\0"
  /* 17120 */ "V6_vS32b_nt_npred_pi\0"
  /* 17141 */ "V6_vS32b_new_npred_pi\0"
  /* 17163 */ "V6_vS32b_nt_new_npred_pi\0"
  /* 17188 */ "V6_vS32b_qpred_pi\0"
  /* 17206 */ "V6_vS32b_nt_qpred_pi\0"
  /* 17227 */ "V6_vS32b_nqpred_pi\0"
  /* 17246 */ "V6_vS32b_nt_nqpred_pi\0"
  /* 17268 */ "L2_loadrd_pi\0"
  /* 17281 */ "S2_storerd_pi\0"
  /* 17295 */ "L2_ploadrbf_pi\0"
  /* 17310 */ "S2_pstorerbf_pi\0"
  /* 17326 */ "L2_ploadrubf_pi\0"
  /* 17342 */ "L2_ploadrdf_pi\0"
  /* 17357 */ "S2_pstorerdf_pi\0"
  /* 17373 */ "S2_pstorerff_pi\0"
  /* 17389 */ "L2_ploadrhf_pi\0"
  /* 17404 */ "S2_pstorerhf_pi\0"
  /* 17420 */ "L2_ploadruhf_pi\0"
  /* 17436 */ "L2_ploadrif_pi\0"
  /* 17451 */ "S2_pstorerif_pi\0"
  /* 17467 */ "S2_storerf_pi\0"
  /* 17481 */ "S2_pstorerbnewf_pi\0"
  /* 17500 */ "S2_pstorerhnewf_pi\0"
  /* 17519 */ "S2_pstorerinewf_pi\0"
  /* 17538 */ "L2_loadalignh_pi\0"
  /* 17555 */ "L2_loadrh_pi\0"
  /* 17568 */ "S2_storerh_pi\0"
  /* 17582 */ "L2_loadruh_pi\0"
  /* 17596 */ "L2_loadri_pi\0"
  /* 17609 */ "S2_storeri_pi\0"
  /* 17623 */ "V6_vL32b_tmp_pi\0"
  /* 17639 */ "V6_vL32b_nt_tmp_pi\0"
  /* 17658 */ "V6_vL32b_cur_pi\0"
  /* 17674 */ "V6_vL32b_nt_cur_pi\0"
  /* 17693 */ "V6_vS32b_srls_pi\0"
  /* 17710 */ "L2_ploadrbt_pi\0"
  /* 17725 */ "S2_pstorerbt_pi\0"
  /* 17741 */ "L2_ploadrubt_pi\0"
  /* 17757 */ "L2_ploadrdt_pi\0"
  /* 17772 */ "S2_pstorerdt_pi\0"
  /* 17788 */ "S2_pstorerft_pi\0"
  /* 17804 */ "L2_ploadrht_pi\0"
  /* 17819 */ "S2_pstorerht_pi\0"
  /* 17835 */ "L2_ploadruht_pi\0"
  /* 17851 */ "L2_ploadrit_pi\0"
  /* 17866 */ "S2_pstorerit_pi\0"
  /* 17882 */ "V6_vL32b_nt_pi\0"
  /* 17897 */ "V6_vS32b_nt_pi\0"
  /* 17912 */ "S2_pstorerbnewt_pi\0"
  /* 17931 */ "S2_pstorerhnewt_pi\0"
  /* 17950 */ "S2_pstorerinewt_pi\0"
  /* 17969 */ "V6_vS32b_new_pi\0"
  /* 17985 */ "V6_vS32b_nt_new_pi\0"
  /* 18004 */ "S2_storerbnew_pi\0"
  /* 18021 */ "L2_ploadrbfnew_pi\0"
  /* 18039 */ "S2_pstorerbfnew_pi\0"
  /* 18058 */ "L2_ploadrubfnew_pi\0"
  /* 18077 */ "L2_ploadrdfnew_pi\0"
  /* 18095 */ "S2_pstorerdfnew_pi\0"
  /* 18114 */ "S2_pstorerffnew_pi\0"
  /* 18133 */ "L2_ploadrhfnew_pi\0"
  /* 18151 */ "S2_pstorerhfnew_pi\0"
  /* 18170 */ "L2_ploadruhfnew_pi\0"
  /* 18189 */ "L2_ploadrifnew_pi\0"
  /* 18207 */ "S2_pstorerifnew_pi\0"
  /* 18226 */ "S2_pstorerbnewfnew_pi\0"
  /* 18248 */ "S2_pstorerhnewfnew_pi\0"
  /* 18270 */ "S2_pstorerinewfnew_pi\0"
  /* 18292 */ "S2_storerhnew_pi\0"
  /* 18309 */ "S2_storerinew_pi\0"
  /* 18326 */ "L2_ploadrbtnew_pi\0"
  /* 18344 */ "S2_pstorerbtnew_pi\0"
  /* 18363 */ "L2_ploadrubtnew_pi\0"
  /* 18382 */ "L2_ploadrdtnew_pi\0"
  /* 18400 */ "S2_pstorerdtnew_pi\0"
  /* 18419 */ "S2_pstorerftnew_pi\0"
  /* 18438 */ "L2_ploadrhtnew_pi\0"
  /* 18456 */ "S2_pstorerhtnew_pi\0"
  /* 18475 */ "L2_ploadruhtnew_pi\0"
  /* 18494 */ "L2_ploadritnew_pi\0"
  /* 18512 */ "S2_pstoreritnew_pi\0"
  /* 18531 */ "S2_pstorerbnewtnew_pi\0"
  /* 18553 */ "S2_pstorerhnewtnew_pi\0"
  /* 18575 */ "S2_pstorerinewtnew_pi\0"
  /* 18597 */ "A2_tfrpi\0"
  /* 18606 */ "A4_cmpbeqi\0"
  /* 18617 */ "A4_vcmpbeqi\0"
  /* 18629 */ "A4_cmpheqi\0"
  /* 18640 */ "A4_vcmpheqi\0"
  /* 18652 */ "C4_cmpneqi\0"
  /* 18663 */ "A4_rcmpneqi\0"
  /* 18675 */ "SA1_cmpeqi\0"
  /* 18686 */ "dup_C2_cmpeqi\0"
  /* 18700 */ "A4_rcmpeqi\0"
  /* 18711 */ "A4_vcmpweqi\0"
  /* 18723 */ "A7_croundd_ri\0"
  /* 18737 */ "A4_round_ri\0"
  /* 18749 */ "A4_cround_ri\0"
  /* 18762 */ "S4_subi_asl_ri\0"
  /* 18777 */ "S4_addi_asl_ri\0"
  /* 18792 */ "S4_andi_asl_ri\0"
  /* 18807 */ "S4_ori_asl_ri\0"
  /* 18821 */ "S4_subi_lsr_ri\0"
  /* 18836 */ "S4_addi_lsr_ri\0"
  /* 18851 */ "S4_andi_lsr_ri\0"
  /* 18866 */ "S4_ori_lsr_ri\0"
  /* 18880 */ "A2_subri\0"
  /* 18889 */ "dup_A4_combineri\0"
  /* 18906 */ "C2_bitsclri\0"
  /* 18918 */ "C4_nbitsclri\0"
  /* 18931 */ "S4_or_ori\0"
  /* 18941 */ "S2_addasl_rrri\0"
  /* 18956 */ "C2_muxri\0"
  /* 18965 */ "J2_ploop1si\0"
  /* 18977 */ "J2_ploop2si\0"
  /* 18989 */ "J2_ploop3si\0"
  /* 19001 */ "dup_A2_tfrsi\0"
  /* 19014 */ "V6_vrmpybusi\0"
  /* 19027 */ "SA1_seti\0"
  /* 19036 */ "J4_jumpseti\0"
  /* 19048 */ "A4_cmpbgti\0"
  /* 19059 */ "A4_vcmpbgti\0"
  /* 19071 */ "A4_cmphgti\0"
  /* 19082 */ "A4_vcmphgti\0"
  /* 19094 */ "C2_cmpgti\0"
  /* 19104 */ "A4_vcmpwgti\0"
  /* 19116 */ "A4_bitspliti\0"
  /* 19129 */ "C2_cmpgeui\0"
  /* 19140 */ "C4_cmplteui\0"
  /* 19152 */ "A4_cmpbgtui\0"
  /* 19164 */ "A4_vcmpbgtui\0"
  /* 19177 */ "A4_cmphgtui\0"
  /* 19189 */ "A4_vcmphgtui\0"
  /* 19202 */ "C2_cmpgtui\0"
  /* 19213 */ "A4_vcmpwgtui\0"
  /* 19226 */ "M2_mpyui\0"
  /* 19235 */ "M2_mpyi\0"
  /* 19243 */ "A2_vconj\0"
  /* 19252 */ "Y2_break\0"
  /* 19261 */ "M2_vmpy2s_s0pack\0"
  /* 19278 */ "M2_vmpy2s_s1pack\0"
  /* 19295 */ "S2_vsathb_nopack\0"
  /* 19312 */ "S2_vsathub_nopack\0"
  /* 19330 */ "S2_vsatwuh_nopack\0"
  /* 19348 */ "S2_vsatwh_nopack\0"
  /* 19365 */ "C2_vitpack\0"
  /* 19376 */ "A4_boundscheck\0"
  /* 19391 */ "C2_mask\0"
  /* 19399 */ "S2_mask\0"
  /* 19407 */ "PS_call_stk\0"
  /* 19419 */ "M2_vrcmpys_acc_s1_l\0"
  /* 19439 */ "M2_vrcmpys_s1_l\0"
  /* 19455 */ "M2_vrcmpys_s1rp_l\0"
  /* 19473 */ "V6_vdeal\0"
  /* 19482 */ "A2_subh_h16_hl\0"
  /* 19497 */ "A2_addh_h16_hl\0"
  /* 19512 */ "A2_subh_l16_hl\0"
  /* 19527 */ "A2_addh_l16_hl\0"
  /* 19542 */ "A2_combine_hl\0"
  /* 19556 */ "A2_subh_h16_sat_hl\0"
  /* 19575 */ "A2_addh_h16_sat_hl\0"
  /* 19594 */ "A2_subh_l16_sat_hl\0"
  /* 19613 */ "A2_addh_l16_sat_hl\0"
  /* 19632 */ "dep_S2_packhl\0"
  /* 19646 */ "A2_tfril\0"
  /* 19655 */ "A2_subh_h16_ll\0"
  /* 19670 */ "A2_addh_h16_ll\0"
  /* 19685 */ "A2_subh_l16_ll\0"
  /* 19700 */ "A2_addh_l16_ll\0"
  /* 19715 */ "A2_combine_ll\0"
  /* 19729 */ "A2_subh_h16_sat_ll\0"
  /* 19748 */ "A2_addh_h16_sat_ll\0"
  /* 19767 */ "A2_subh_l16_sat_ll\0"
  /* 19786 */ "A2_addh_l16_sat_ll\0"
  /* 19805 */ "J2_call\0"
  /* 19813 */ "F2_dfmpyll\0"
  /* 19824 */ "A2_addspl\0"
  /* 19834 */ "V6_vwhist128m\0"
  /* 19848 */ "V6_vlutvvb_nm\0"
  /* 19862 */ "V6_vlutvwh_nm\0"
  /* 19876 */ "V6_vwhist128qm\0"
  /* 19891 */ "S2_clbnorm\0"
  /* 19902 */ "S4_clbpnorm\0"
  /* 19914 */ "V6_pred_and_n\0"
  /* 19928 */ "F2_dfimm_n\0"
  /* 19939 */ "F2_sfimm_n\0"
  /* 19950 */ "V6_pred_or_n\0"
  /* 19963 */ "C2_andn\0"
  /* 19971 */ "A4_andn\0"
  /* 19979 */ "C4_and_andn\0"
  /* 19991 */ "M4_and_andn\0"
  /* 20003 */ "C4_or_andn\0"
  /* 20014 */ "M4_or_andn\0"
  /* 20025 */ "M4_xor_andn\0"
  /* 20037 */ "V6_vassign\0"
  /* 20048 */ "S2_cabacdecbin\0"
  /* 20063 */ "A2_min\0"
  /* 20070 */ "F2_dfmin\0"
  /* 20079 */ "F2_sfmin\0"
  /* 20088 */ "M2_macsin\0"
  /* 20098 */ "M2_mpysin\0"
  /* 20108 */ "F2_sffixupn\0"
  /* 20120 */ "C2_orn\0"
  /* 20127 */ "A4_orn\0"
  /* 20134 */ "C4_and_orn\0"
  /* 20145 */ "C4_or_orn\0"
  /* 20155 */ "SL2_return\0"
  /* 20166 */ "L4_return\0"
  /* 20176 */ "S2_asr_i_svw_trun\0"
  /* 20194 */ "S2_asr_r_svw_trun\0"
  /* 20212 */ "Y2_dcfetchbo\0"
  /* 20225 */ "DUPLEX_Pseudo\0"
  /* 20239 */ "V6_vgathermh_pseudo\0"
  /* 20259 */ "V6_vgathermhq_pseudo\0"
  /* 20280 */ "V6_vgathermhwq_pseudo\0"
  /* 20302 */ "V6_vgathermwq_pseudo\0"
  /* 20323 */ "V6_vgathermhw_pseudo\0"
  /* 20344 */ "V6_vgathermw_pseudo\0"
  /* 20364 */ "L2_loadbsw2_io\0"
  /* 20379 */ "L2_loadbzw2_io\0"
  /* 20394 */ "L2_loadbsw4_io\0"
  /* 20409 */ "L2_loadbzw4_io\0"
  /* 20424 */ "SS1_storeb_io\0"
  /* 20438 */ "L2_loadalignb_io\0"
  /* 20455 */ "L4_sub_memopb_io\0"
  /* 20472 */ "L4_isub_memopb_io\0"
  /* 20490 */ "L4_add_memopb_io\0"
  /* 20507 */ "L4_iadd_memopb_io\0"
  /* 20525 */ "L4_and_memopb_io\0"
  /* 20542 */ "L4_iand_memopb_io\0"
  /* 20560 */ "L4_or_memopb_io\0"
  /* 20576 */ "L4_ior_memopb_io\0"
  /* 20593 */ "SL2_loadrb_io\0"
  /* 20607 */ "dup_L2_loadrb_io\0"
  /* 20624 */ "dup_S2_storerb_io\0"
  /* 20642 */ "dup_S4_storeirb_io\0"
  /* 20661 */ "SL1_loadrub_io\0"
  /* 20676 */ "dup_L2_loadrub_io\0"
  /* 20694 */ "dup_L2_loadrd_io\0"
  /* 20711 */ "dup_S2_storerd_io\0"
  /* 20729 */ "L2_ploadrbf_io\0"
  /* 20744 */ "S2_pstorerbf_io\0"
  /* 20760 */ "S4_storeirbf_io\0"
  /* 20776 */ "L2_ploadrubf_io\0"
  /* 20792 */ "L2_ploadrdf_io\0"
  /* 20807 */ "S2_pstorerdf_io\0"
  /* 20823 */ "S2_pstorerff_io\0"
  /* 20839 */ "L2_ploadrhf_io\0"
  /* 20854 */ "S2_pstorerhf_io\0"
  /* 20870 */ "S4_storeirhf_io\0"
  /* 20886 */ "L2_ploadruhf_io\0"
  /* 20902 */ "L2_ploadrif_io\0"
  /* 20917 */ "S2_pstorerif_io\0"
  /* 20933 */ "S4_storeirif_io\0"
  /* 20949 */ "S2_storerf_io\0"
  /* 20963 */ "S2_pstorerbnewf_io\0"
  /* 20982 */ "S2_pstorerhnewf_io\0"
  /* 21001 */ "S2_pstorerinewf_io\0"
  /* 21020 */ "SS2_storeh_io\0"
  /* 21034 */ "L2_loadalignh_io\0"
  /* 21051 */ "L4_sub_memoph_io\0"
  /* 21068 */ "L4_isub_memoph_io\0"
  /* 21086 */ "L4_add_memoph_io\0"
  /* 21103 */ "L4_iadd_memoph_io\0"
  /* 21121 */ "L4_and_memoph_io\0"
  /* 21138 */ "L4_iand_memoph_io\0"
  /* 21156 */ "L4_or_memoph_io\0"
  /* 21172 */ "L4_ior_memoph_io\0"
  /* 21189 */ "SL2_loadrh_io\0"
  /* 21203 */ "dup_L2_loadrh_io\0"
  /* 21220 */ "dup_S2_storerh_io\0"
  /* 21238 */ "S4_storeirh_io\0"
  /* 21253 */ "SL2_loadruh_io\0"
  /* 21268 */ "dup_L2_loadruh_io\0"
  /* 21286 */ "SL1_loadri_io\0"
  /* 21300 */ "dup_L2_loadri_io\0"
  /* 21317 */ "dup_S2_storeri_io\0"
  /* 21335 */ "dup_S4_storeiri_io\0"
  /* 21354 */ "L2_ploadrbt_io\0"
  /* 21369 */ "S2_pstorerbt_io\0"
  /* 21385 */ "S4_storeirbt_io\0"
  /* 21401 */ "L2_ploadrubt_io\0"
  /* 21417 */ "L2_ploadrdt_io\0"
  /* 21432 */ "S2_pstorerdt_io\0"
  /* 21448 */ "S2_pstorerft_io\0"
  /* 21464 */ "L2_ploadrht_io\0"
  /* 21479 */ "S2_pstorerht_io\0"
  /* 21495 */ "S4_storeirht_io\0"
  /* 21511 */ "L2_ploadruht_io\0"
  /* 21527 */ "L2_ploadrit_io\0"
  /* 21542 */ "S2_pstorerit_io\0"
  /* 21558 */ "S4_storeirit_io\0"
  /* 21574 */ "S2_pstorerbnewt_io\0"
  /* 21593 */ "S2_pstorerhnewt_io\0"
  /* 21612 */ "S2_pstorerinewt_io\0"
  /* 21631 */ "S2_storerbnew_io\0"
  /* 21648 */ "L2_ploadrbfnew_io\0"
  /* 21666 */ "S4_pstorerbfnew_io\0"
  /* 21685 */ "S4_storeirbfnew_io\0"
  /* 21704 */ "L2_ploadrubfnew_io\0"
  /* 21723 */ "L2_ploadrdfnew_io\0"
  /* 21741 */ "S4_pstorerdfnew_io\0"
  /* 21760 */ "S4_pstorerffnew_io\0"
  /* 21779 */ "L2_ploadrhfnew_io\0"
  /* 21797 */ "S4_pstorerhfnew_io\0"
  /* 21816 */ "S4_storeirhfnew_io\0"
  /* 21835 */ "L2_ploadruhfnew_io\0"
  /* 21854 */ "L2_ploadrifnew_io\0"
  /* 21872 */ "S4_pstorerifnew_io\0"
  /* 21891 */ "S4_storeirifnew_io\0"
  /* 21910 */ "S4_pstorerbnewfnew_io\0"
  /* 21932 */ "S4_pstorerhnewfnew_io\0"
  /* 21954 */ "S4_pstorerinewfnew_io\0"
  /* 21976 */ "S2_storerhnew_io\0"
  /* 21993 */ "S2_storerinew_io\0"
  /* 22010 */ "L2_ploadrbtnew_io\0"
  /* 22028 */ "S4_pstorerbtnew_io\0"
  /* 22047 */ "S4_storeirbtnew_io\0"
  /* 22066 */ "L2_ploadrubtnew_io\0"
  /* 22085 */ "L2_ploadrdtnew_io\0"
  /* 22103 */ "S4_pstorerdtnew_io\0"
  /* 22122 */ "S4_pstorerftnew_io\0"
  /* 22141 */ "L2_ploadrhtnew_io\0"
  /* 22159 */ "S4_pstorerhtnew_io\0"
  /* 22178 */ "S4_storeirhtnew_io\0"
  /* 22197 */ "L2_ploadruhtnew_io\0"
  /* 22216 */ "L2_ploadritnew_io\0"
  /* 22234 */ "S4_pstoreritnew_io\0"
  /* 22253 */ "S4_storeiritnew_io\0"
  /* 22272 */ "S4_pstorerbnewtnew_io\0"
  /* 22294 */ "S4_pstorerhnewtnew_io\0"
  /* 22316 */ "S4_pstorerinewtnew_io\0"
  /* 22338 */ "SS1_storew_io\0"
  /* 22352 */ "L4_sub_memopw_io\0"
  /* 22369 */ "L4_isub_memopw_io\0"
  /* 22387 */ "L4_add_memopw_io\0"
  /* 22404 */ "L4_iadd_memopw_io\0"
  /* 22422 */ "L4_and_memopw_io\0"
  /* 22439 */ "L4_iand_memopw_io\0"
  /* 22457 */ "L4_or_memopw_io\0"
  /* 22473 */ "L4_ior_memopw_io\0"
  /* 22490 */ "V6_lo\0"
  /* 22496 */ "A4_boundscheck_lo\0"
  /* 22514 */ "V6_vasr_into\0"
  /* 22527 */ "F2_dfcmpuo\0"
  /* 22538 */ "F2_sfcmpuo\0"
  /* 22549 */ "V6_vsubcarryo\0"
  /* 22563 */ "V6_vaddcarryo\0"
  /* 22577 */ "S2_cl0p\0"
  /* 22585 */ "S2_ct0p\0"
  /* 22593 */ "S2_cl1p\0"
  /* 22601 */ "S2_ct1p\0"
  /* 22609 */ "S6_rol_i_p\0"
  /* 22620 */ "S2_asl_i_p\0"
  /* 22631 */ "S2_asr_i_p\0"
  /* 22642 */ "S2_lsr_i_p\0"
  /* 22653 */ "F2_dfimm_p\0"
  /* 22664 */ "F2_sfimm_p\0"
  /* 22675 */ "S2_asl_r_p\0"
  /* 22686 */ "S2_lsl_r_p\0"
  /* 22697 */ "S2_asr_r_p\0"
  /* 22708 */ "S2_lsr_r_p\0"
  /* 22719 */ "L4_loadbsw2_ap\0"
  /* 22734 */ "L4_loadbzw2_ap\0"
  /* 22749 */ "L4_loadbsw4_ap\0"
  /* 22764 */ "L4_loadbzw4_ap\0"
  /* 22779 */ "L4_loadalignb_ap\0"
  /* 22796 */ "L4_loadrb_ap\0"
  /* 22809 */ "S4_storerb_ap\0"
  /* 22823 */ "L4_loadrub_ap\0"
  /* 22837 */ "L4_loadrd_ap\0"
  /* 22850 */ "S4_storerd_ap\0"
  /* 22864 */ "S4_storerf_ap\0"
  /* 22878 */ "L4_loadalignh_ap\0"
  /* 22895 */ "L4_loadrh_ap\0"
  /* 22908 */ "S4_storerh_ap\0"
  /* 22922 */ "L4_loadruh_ap\0"
  /* 22936 */ "L4_loadri_ap\0"
  /* 22949 */ "S4_storeri_ap\0"
  /* 22963 */ "S4_storerbnew_ap\0"
  /* 22980 */ "S4_storerhnew_ap\0"
  /* 22997 */ "S4_storerinew_ap\0"
  /* 23014 */ "V6_vtran2x2_map\0"
  /* 23030 */ "A2_vsubb_map\0"
  /* 23043 */ "A2_vaddb_map\0"
  /* 23056 */ "J2_jumpf_nopred_map\0"
  /* 23076 */ "J2_jumprf_nopred_map\0"
  /* 23097 */ "J2_jumpt_nopred_map\0"
  /* 23117 */ "J2_jumprt_nopred_map\0"
  /* 23138 */ "C2_pxfer_map\0"
  /* 23151 */ "J2_trap1_noregmap\0"
  /* 23169 */ "L2_loadbsw2_zomap\0"
  /* 23187 */ "L2_loadbzw2_zomap\0"
  /* 23205 */ "L2_loadbsw4_zomap\0"
  /* 23223 */ "L2_loadbzw4_zomap\0"
  /* 23241 */ "L2_loadalignb_zomap\0"
  /* 23261 */ "L4_sub_memopb_zomap\0"
  /* 23281 */ "L4_isub_memopb_zomap\0"
  /* 23302 */ "L4_add_memopb_zomap\0"
  /* 23322 */ "L4_iadd_memopb_zomap\0"
  /* 23343 */ "L4_and_memopb_zomap\0"
  /* 23363 */ "L4_iand_memopb_zomap\0"
  /* 23384 */ "L4_or_memopb_zomap\0"
  /* 23403 */ "L4_ior_memopb_zomap\0"
  /* 23423 */ "L2_loadrb_zomap\0"
  /* 23439 */ "S2_storerb_zomap\0"
  /* 23456 */ "S4_storeirb_zomap\0"
  /* 23474 */ "L2_loadrub_zomap\0"
  /* 23491 */ "L2_loadrd_zomap\0"
  /* 23507 */ "S2_storerd_zomap\0"
  /* 23524 */ "L2_ploadrbf_zomap\0"
  /* 23542 */ "S2_pstorerbf_zomap\0"
  /* 23561 */ "S4_storeirbf_zomap\0"
  /* 23580 */ "L2_ploadrubf_zomap\0"
  /* 23599 */ "L2_ploadrdf_zomap\0"
  /* 23617 */ "S2_pstorerdf_zomap\0"
  /* 23636 */ "S2_pstorerff_zomap\0"
  /* 23655 */ "L2_ploadrhf_zomap\0"
  /* 23673 */ "S2_pstorerhf_zomap\0"
  /* 23692 */ "S4_storeirhf_zomap\0"
  /* 23711 */ "L2_ploadruhf_zomap\0"
  /* 23730 */ "L2_ploadrif_zomap\0"
  /* 23748 */ "S2_pstorerif_zomap\0"
  /* 23767 */ "S4_storeirif_zomap\0"
  /* 23786 */ "S2_storerf_zomap\0"
  /* 23803 */ "S2_pstorerbnewf_zomap\0"
  /* 23825 */ "S2_pstorerhnewf_zomap\0"
  /* 23847 */ "S2_pstorerinewf_zomap\0"
  /* 23869 */ "L2_loadalignh_zomap\0"
  /* 23889 */ "L4_sub_memoph_zomap\0"
  /* 23909 */ "L4_isub_memoph_zomap\0"
  /* 23930 */ "L4_add_memoph_zomap\0"
  /* 23950 */ "L4_iadd_memoph_zomap\0"
  /* 23971 */ "L4_and_memoph_zomap\0"
  /* 23991 */ "L4_iand_memoph_zomap\0"
  /* 24012 */ "L4_or_memoph_zomap\0"
  /* 24031 */ "L4_ior_memoph_zomap\0"
  /* 24051 */ "L2_loadrh_zomap\0"
  /* 24067 */ "S2_storerh_zomap\0"
  /* 24084 */ "S4_storeirh_zomap\0"
  /* 24102 */ "L2_loadruh_zomap\0"
  /* 24119 */ "L2_loadri_zomap\0"
  /* 24135 */ "S2_storeri_zomap\0"
  /* 24152 */ "S4_storeiri_zomap\0"
  /* 24170 */ "L2_ploadrbt_zomap\0"
  /* 24188 */ "S2_pstorerbt_zomap\0"
  /* 24207 */ "S4_storeirbt_zomap\0"
  /* 24226 */ "L2_ploadrubt_zomap\0"
  /* 24245 */ "L2_ploadrdt_zomap\0"
  /* 24263 */ "S2_pstorerdt_zomap\0"
  /* 24282 */ "S2_pstorerft_zomap\0"
  /* 24301 */ "L2_ploadrht_zomap\0"
  /* 24319 */ "S2_pstorerht_zomap\0"
  /* 24338 */ "S4_storeirht_zomap\0"
  /* 24357 */ "L2_ploadruht_zomap\0"
  /* 24376 */ "L2_ploadrit_zomap\0"
  /* 24394 */ "S2_pstorerit_zomap\0"
  /* 24413 */ "S4_storeirit_zomap\0"
  /* 24432 */ "S2_pstorerbnewt_zomap\0"
  /* 24454 */ "S2_pstorerhnewt_zomap\0"
  /* 24476 */ "S2_pstorerinewt_zomap\0"
  /* 24498 */ "S2_storerbnew_zomap\0"
  /* 24518 */ "L2_ploadrbfnew_zomap\0"
  /* 24539 */ "S4_pstorerbfnew_zomap\0"
  /* 24561 */ "S4_storeirbfnew_zomap\0"
  /* 24583 */ "L2_ploadrubfnew_zomap\0"
  /* 24605 */ "L2_ploadrdfnew_zomap\0"
  /* 24626 */ "S4_pstorerdfnew_zomap\0"
  /* 24648 */ "S4_pstorerffnew_zomap\0"
  /* 24670 */ "L2_ploadrhfnew_zomap\0"
  /* 24691 */ "S4_pstorerhfnew_zomap\0"
  /* 24713 */ "S4_storeirhfnew_zomap\0"
  /* 24735 */ "L2_ploadruhfnew_zomap\0"
  /* 24757 */ "L2_ploadrifnew_zomap\0"
  /* 24778 */ "S4_pstorerifnew_zomap\0"
  /* 24800 */ "S4_storeirifnew_zomap\0"
  /* 24822 */ "S4_pstorerbnewfnew_zomap\0"
  /* 24847 */ "S4_pstorerhnewfnew_zomap\0"
  /* 24872 */ "S4_pstorerinewfnew_zomap\0"
  /* 24897 */ "S2_storerhnew_zomap\0"
  /* 24917 */ "S2_storerinew_zomap\0"
  /* 24937 */ "L2_ploadrbtnew_zomap\0"
  /* 24958 */ "S4_pstorerbtnew_zomap\0"
  /* 24980 */ "S4_storeirbtnew_zomap\0"
  /* 25002 */ "L2_ploadrubtnew_zomap\0"
  /* 25024 */ "L2_ploadrdtnew_zomap\0"
  /* 25045 */ "S4_pstorerdtnew_zomap\0"
  /* 25067 */ "S4_pstorerftnew_zomap\0"
  /* 25089 */ "L2_ploadrhtnew_zomap\0"
  /* 25110 */ "S4_pstorerhtnew_zomap\0"
  /* 25132 */ "S4_storeirhtnew_zomap\0"
  /* 25154 */ "L2_ploadruhtnew_zomap\0"
  /* 25176 */ "L2_ploadritnew_zomap\0"
  /* 25197 */ "S4_pstoreritnew_zomap\0"
  /* 25219 */ "S4_storeiritnew_zomap\0"
  /* 25241 */ "S4_pstorerbnewtnew_zomap\0"
  /* 25266 */ "S4_pstorerhnewtnew_zomap\0"
  /* 25291 */ "S4_pstorerinewtnew_zomap\0"
  /* 25316 */ "L4_sub_memopw_zomap\0"
  /* 25336 */ "L4_isub_memopw_zomap\0"
  /* 25357 */ "L4_add_memopw_zomap\0"
  /* 25377 */ "L4_iadd_memopw_zomap\0"
  /* 25398 */ "L4_and_memopw_zomap\0"
  /* 25418 */ "L4_iand_memopw_zomap\0"
  /* 25439 */ "L4_or_memopw_zomap\0"
  /* 25458 */ "L4_ior_memopw_zomap\0"
  /* 25478 */ "V6_vswap\0"
  /* 25487 */ "S2_clbp\0"
  /* 25495 */ "S6_vsplatrbp\0"
  /* 25508 */ "A2_subp\0"
  /* 25516 */ "G4_tfrgpcp\0"
  /* 25527 */ "A4_tfrpcp\0"
  /* 25537 */ "A2_addp\0"
  /* 25545 */ "A2_andp\0"
  /* 25553 */ "L2_loadrbgp\0"
  /* 25565 */ "S2_storerbgp\0"
  /* 25578 */ "L2_loadrubgp\0"
  /* 25591 */ "L2_loadrdgp\0"
  /* 25603 */ "S2_storerdgp\0"
  /* 25616 */ "A2_negp\0"
  /* 25624 */ "S2_storerfgp\0"
  /* 25637 */ "L2_loadrhgp\0"
  /* 25649 */ "S2_storerhgp\0"
  /* 25662 */ "L2_loadruhgp\0"
  /* 25675 */ "L2_loadrigp\0"
  /* 25687 */ "S2_storerigp\0"
  /* 25700 */ "S2_storerbnewgp\0"
  /* 25716 */ "S2_storerhnewgp\0"
  /* 25732 */ "S2_storerinewgp\0"
  /* 25748 */ "A7_clip\0"
  /* 25756 */ "A7_vclip\0"
  /* 25765 */ "M2_macsip\0"
  /* 25775 */ "M2_mpysip\0"
  /* 25785 */ "J2_jump\0"
  /* 25793 */ "A4_andnp\0"
  /* 25802 */ "V6_vassignp\0"
  /* 25814 */ "A2_minp\0"
  /* 25822 */ "A4_ornp\0"
  /* 25830 */ "F2_conv_df2d_chop\0"
  /* 25848 */ "F2_conv_sf2d_chop\0"
  /* 25866 */ "F2_conv_df2ud_chop\0"
  /* 25885 */ "F2_conv_sf2ud_chop\0"
  /* 25904 */ "F2_conv_df2w_chop\0"
  /* 25922 */ "F2_conv_sf2w_chop\0"
  /* 25940 */ "F2_conv_df2uw_chop\0"
  /* 25959 */ "F2_conv_sf2uw_chop\0"
  /* 25978 */ "A2_nop\0"
  /* 25985 */ "G4_tfrgcpp\0"
  /* 25996 */ "A4_tfrcpp\0"
  /* 26006 */ "S6_vtrunehb_ppp\0"
  /* 26022 */ "S6_vtrunohb_ppp\0"
  /* 26038 */ "C2_cmpeqp\0"
  /* 26048 */ "M2_vrcmpys_s1rp\0"
  /* 26064 */ "S4_extractp_rp\0"
  /* 26079 */ "S2_insertp_rp\0"
  /* 26093 */ "S2_extractup_rp\0"
  /* 26109 */ "S4_extract_rp\0"
  /* 26123 */ "S2_insert_rp\0"
  /* 26136 */ "S2_extractu_rp\0"
  /* 26151 */ "A2_tfrp\0"
  /* 26159 */ "A2_orp\0"
  /* 26166 */ "A2_xorp\0"
  /* 26174 */ "C2_tfrrp\0"
  /* 26183 */ "SS2_stored_sp\0"
  /* 26197 */ "SL2_loadrd_sp\0"
  /* 26211 */ "SL2_loadri_sp\0"
  /* 26225 */ "SS2_storew_sp\0"
  /* 26239 */ "A2_absp\0"
  /* 26247 */ "SA1_addsp\0"
  /* 26257 */ "A2_addsp\0"
  /* 26266 */ "S2_lfsp\0"
  /* 26274 */ "S4_extractp\0"
  /* 26286 */ "C2_cmpgtp\0"
  /* 26296 */ "S5_popcountp\0"
  /* 26309 */ "A2_notp\0"
  /* 26317 */ "S2_insertp\0"
  /* 26328 */ "M2_mpysu_up\0"
  /* 26340 */ "M2_mpyu_up\0"
  /* 26351 */ "M2_mpy_up\0"
  /* 26361 */ "A2_minup\0"
  /* 26370 */ "S2_extractup\0"
  /* 26383 */ "C2_cmpgtup\0"
  /* 26394 */ "A2_maxup\0"
  /* 26403 */ "S2_brevp\0"
  /* 26412 */ "A2_maxp\0"
  /* 26420 */ "S2_parityp\0"
  /* 26431 */ "V6_vwhist256q\0"
  /* 26445 */ "V6_vwhist128q\0"
  /* 26459 */ "V6_vsubbq\0"
  /* 26469 */ "V6_vaddbq\0"
  /* 26479 */ "A4_cmpbeq\0"
  /* 26489 */ "A2_vcmpbeq\0"
  /* 26500 */ "A4_cmpheq\0"
  /* 26510 */ "A2_vcmpheq\0"
  /* 26521 */ "C4_cmpneq\0"
  /* 26531 */ "A4_rcmpneq\0"
  /* 26542 */ "C2_cmpeq\0"
  /* 26551 */ "F2_dfcmpeq\0"
  /* 26562 */ "F2_sfcmpeq\0"
  /* 26573 */ "A4_rcmpeq\0"
  /* 26583 */ "A2_vcmpweq\0"
  /* 26594 */ "V6_vsubhq\0"
  /* 26604 */ "V6_vaddhq\0"
  /* 26614 */ "V6_vgathermhq\0"
  /* 26628 */ "V6_vscattermhq\0"
  /* 26643 */ "V6_vsubbnq\0"
  /* 26654 */ "V6_vaddbnq\0"
  /* 26665 */ "V6_vsubhnq\0"
  /* 26676 */ "V6_vaddhnq\0"
  /* 26687 */ "V6_vsubwnq\0"
  /* 26698 */ "V6_vaddwnq\0"
  /* 26709 */ "V6_vhistq\0"
  /* 26719 */ "V6_vsubwq\0"
  /* 26729 */ "V6_vaddwq\0"
  /* 26739 */ "V6_vgathermhwq\0"
  /* 26754 */ "V6_vscattermhwq\0"
  /* 26770 */ "V6_vgathermwq\0"
  /* 26784 */ "V6_vscattermwq\0"
  /* 26799 */ "J2_loop0r\0"
  /* 26809 */ "J2_loop1r\0"
  /* 26819 */ "S6_rol_i_r\0"
  /* 26830 */ "S2_asl_i_r\0"
  /* 26841 */ "S2_asr_i_r\0"
  /* 26852 */ "S2_lsr_i_r\0"
  /* 26863 */ "PS_tailcall_r\0"
  /* 26877 */ "S2_asl_r_r\0"
  /* 26888 */ "S2_lsl_r_r\0"
  /* 26899 */ "S2_asr_r_r\0"
  /* 26910 */ "S2_lsr_r_r\0"
  /* 26921 */ "M2_vcmac_s0_sat_r\0"
  /* 26939 */ "M2_vcmpy_s0_sat_r\0"
  /* 26957 */ "M2_vcmpy_s1_sat_r\0"
  /* 26975 */ "S2_togglebit_r\0"
  /* 26990 */ "S2_clrbit_r\0"
  /* 27002 */ "S2_setbit_r\0"
  /* 27014 */ "S2_tstbit_r\0"
  /* 27026 */ "S4_ntstbit_r\0"
  /* 27039 */ "L2_loadbsw2_pbr\0"
  /* 27055 */ "L2_loadbzw2_pbr\0"
  /* 27071 */ "L2_loadbsw4_pbr\0"
  /* 27087 */ "L2_loadbzw4_pbr\0"
  /* 27103 */ "L2_loadalignb_pbr\0"
  /* 27121 */ "L2_loadrb_pbr\0"
  /* 27135 */ "S2_storerb_pbr\0"
  /* 27150 */ "L2_loadrub_pbr\0"
  /* 27165 */ "L2_loadrd_pbr\0"
  /* 27179 */ "S2_storerd_pbr\0"
  /* 27194 */ "S2_storerf_pbr\0"
  /* 27209 */ "L2_loadalignh_pbr\0"
  /* 27227 */ "L2_loadrh_pbr\0"
  /* 27241 */ "S2_storerh_pbr\0"
  /* 27256 */ "L2_loadruh_pbr\0"
  /* 27271 */ "L2_loadri_pbr\0"
  /* 27285 */ "S2_storeri_pbr\0"
  /* 27300 */ "S2_storerbnew_pbr\0"
  /* 27318 */ "S2_storerhnew_pbr\0"
  /* 27336 */ "S2_storerinew_pbr\0"
  /* 27354 */ "A2_vavgubr\0"
  /* 27365 */ "A2_vnavghcr\0"
  /* 27377 */ "A2_vavghcr\0"
  /* 27388 */ "L2_loadbsw2_pcr\0"
  /* 27404 */ "L2_loadbzw2_pcr\0"
  /* 27420 */ "L2_loadbsw4_pcr\0"
  /* 27436 */ "L2_loadbzw4_pcr\0"
  /* 27452 */ "L2_loadalignb_pcr\0"
  /* 27470 */ "L2_loadrb_pcr\0"
  /* 27484 */ "PS_loadrb_pcr\0"
  /* 27498 */ "S2_storerb_pcr\0"
  /* 27513 */ "PS_storerb_pcr\0"
  /* 27528 */ "L2_loadrub_pcr\0"
  /* 27543 */ "PS_loadrub_pcr\0"
  /* 27558 */ "L2_loadrd_pcr\0"
  /* 27572 */ "PS_loadrd_pcr\0"
  /* 27586 */ "S2_storerd_pcr\0"
  /* 27601 */ "PS_storerd_pcr\0"
  /* 27616 */ "S2_storerf_pcr\0"
  /* 27631 */ "PS_storerf_pcr\0"
  /* 27646 */ "L2_loadalignh_pcr\0"
  /* 27664 */ "L2_loadrh_pcr\0"
  /* 27678 */ "PS_loadrh_pcr\0"
  /* 27692 */ "S2_storerh_pcr\0"
  /* 27707 */ "PS_storerh_pcr\0"
  /* 27722 */ "L2_loadruh_pcr\0"
  /* 27737 */ "PS_loadruh_pcr\0"
  /* 27752 */ "L2_loadri_pcr\0"
  /* 27766 */ "PS_loadri_pcr\0"
  /* 27780 */ "S2_storeri_pcr\0"
  /* 27795 */ "PS_storeri_pcr\0"
  /* 27810 */ "S2_storerbnew_pcr\0"
  /* 27828 */ "S2_storerhnew_pcr\0"
  /* 27846 */ "S2_storerinew_pcr\0"
  /* 27864 */ "G4_tfrgrcr\0"
  /* 27875 */ "A2_tfrrcr\0"
  /* 27885 */ "A2_vnavgwcr\0"
  /* 27897 */ "A2_vavgwcr\0"
  /* 27908 */ "M4_mpyri_addr\0"
  /* 27922 */ "M4_mpyrr_addr\0"
  /* 27936 */ "Y2_barrier\0"
  /* 27947 */ "SA1_tfr\0"
  /* 27955 */ "dup_A2_tfr\0"
  /* 27966 */ "S4_vxaddsubhr\0"
  /* 27980 */ "S4_vxsubaddhr\0"
  /* 27994 */ "A2_vnavghr\0"
  /* 28005 */ "A2_vavghr\0"
  /* 28015 */ "A2_vavguhr\0"
  /* 28026 */ "dup_A2_andir\0"
  /* 28039 */ "dup_A4_combineir\0"
  /* 28056 */ "A2_orir\0"
  /* 28064 */ "C2_muxir\0"
  /* 28073 */ "C2_bitsclr\0"
  /* 28084 */ "C4_nbitsclr\0"
  /* 28096 */ "J2_callr\0"
  /* 28105 */ "PS_call_nr\0"
  /* 28116 */ "PS_callr_nr\0"
  /* 28128 */ "A2_or\0"
  /* 28134 */ "C2_or\0"
  /* 28140 */ "V6_veqb_or\0"
  /* 28151 */ "V6_vgtb_or\0"
  /* 28162 */ "V6_vgtub_or\0"
  /* 28174 */ "V6_pred_or\0"
  /* 28185 */ "C4_and_or\0"
  /* 28195 */ "M4_and_or\0"
  /* 28205 */ "V6_veqh_or\0"
  /* 28216 */ "V6_vgth_or\0"
  /* 28227 */ "V6_vgtuh_or\0"
  /* 28239 */ "S6_rol_i_p_or\0"
  /* 28253 */ "S2_asl_i_p_or\0"
  /* 28267 */ "S2_asr_i_p_or\0"
  /* 28281 */ "S2_lsr_i_p_or\0"
  /* 28295 */ "S2_asl_r_p_or\0"
  /* 28309 */ "S2_lsl_r_p_or\0"
  /* 28323 */ "S2_asr_r_p_or\0"
  /* 28337 */ "S2_lsr_r_p_or\0"
  /* 28351 */ "S6_rol_i_r_or\0"
  /* 28365 */ "S2_asl_i_r_or\0"
  /* 28379 */ "S2_asr_i_r_or\0"
  /* 28393 */ "S2_lsr_i_r_or\0"
  /* 28407 */ "S2_asl_r_r_or\0"
  /* 28421 */ "S2_lsl_r_r_or\0"
  /* 28435 */ "S2_asr_r_r_or\0"
  /* 28449 */ "S2_lsr_r_r_or\0"
  /* 28463 */ "C4_or_or\0"
  /* 28472 */ "M4_or_or\0"
  /* 28481 */ "M4_xor_or\0"
  /* 28491 */ "V6_veqw_or\0"
  /* 28502 */ "V6_vgtw_or\0"
  /* 28513 */ "V6_vgtuw_or\0"
  /* 28525 */ "V6_MAP_equb_ior\0"
  /* 28541 */ "V6_MAP_equh_ior\0"
  /* 28557 */ "V6_MAP_equw_ior\0"
  /* 28573 */ "V6_vror\0"
  /* 28581 */ "V6_vor\0"
  /* 28588 */ "A2_xor\0"
  /* 28595 */ "C2_xor\0"
  /* 28602 */ "V6_veqb_xor\0"
  /* 28614 */ "V6_vgtb_xor\0"
  /* 28626 */ "V6_MAP_equb_xor\0"
  /* 28642 */ "V6_vgtub_xor\0"
  /* 28655 */ "V6_pred_xor\0"
  /* 28667 */ "M4_and_xor\0"
  /* 28678 */ "V6_veqh_xor\0"
  /* 28690 */ "V6_vgth_xor\0"
  /* 28702 */ "V6_MAP_equh_xor\0"
  /* 28718 */ "V6_vgtuh_xor\0"
  /* 28731 */ "S2_asl_r_p_xor\0"
  /* 28746 */ "S2_lsl_r_p_xor\0"
  /* 28761 */ "S2_asr_r_p_xor\0"
  /* 28776 */ "S2_lsr_r_p_xor\0"
  /* 28791 */ "M4_or_xor\0"
  /* 28801 */ "V6_veqw_xor\0"
  /* 28813 */ "V6_vgtw_xor\0"
  /* 28825 */ "V6_MAP_equw_xor\0"
  /* 28841 */ "V6_vgtuw_xor\0"
  /* 28854 */ "V6_vxor\0"
  /* 28862 */ "L2_loadbsw2_pr\0"
  /* 28877 */ "L2_loadbzw2_pr\0"
  /* 28892 */ "L2_loadbsw4_pr\0"
  /* 28907 */ "L2_loadbzw4_pr\0"
  /* 28922 */ "L2_loadalignb_pr\0"
  /* 28939 */ "L2_loadrb_pr\0"
  /* 28952 */ "S2_storerb_pr\0"
  /* 28966 */ "L2_loadrub_pr\0"
  /* 28980 */ "L2_loadrd_pr\0"
  /* 28993 */ "S2_storerd_pr\0"
  /* 29007 */ "S2_storerf_pr\0"
  /* 29021 */ "L2_loadalignh_pr\0"
  /* 29038 */ "L2_loadrh_pr\0"
  /* 29051 */ "S2_storerh_pr\0"
  /* 29065 */ "L2_loadruh_pr\0"
  /* 29079 */ "L2_loadri_pr\0"
  /* 29092 */ "S2_storeri_pr\0"
  /* 29106 */ "S2_storerbnew_pr\0"
  /* 29123 */ "S2_storerhnew_pr\0"
  /* 29140 */ "S2_storerinew_pr\0"
  /* 29157 */ "J2_jumpr\0"
  /* 29166 */ "J4_hintjumpr\0"
  /* 29179 */ "C2_tfrpr\0"
  /* 29188 */ "F2_sffixupr\0"
  /* 29200 */ "L4_loadrb_rr\0"
  /* 29213 */ "S4_storerb_rr\0"
  /* 29227 */ "L4_loadrub_rr\0"
  /* 29241 */ "A7_croundd_rr\0"
  /* 29255 */ "A4_round_rr\0"
  /* 29267 */ "A4_cround_rr\0"
  /* 29280 */ "L4_loadrd_rr\0"
  /* 29293 */ "S4_storerd_rr\0"
  /* 29307 */ "L4_ploadrbf_rr\0"
  /* 29322 */ "S4_pstorerbf_rr\0"
  /* 29338 */ "L4_ploadrubf_rr\0"
  /* 29354 */ "L4_ploadrdf_rr\0"
  /* 29369 */ "S4_pstorerdf_rr\0"
  /* 29385 */ "S4_pstorerff_rr\0"
  /* 29401 */ "L4_ploadrhf_rr\0"
  /* 29416 */ "S4_pstorerhf_rr\0"
  /* 29432 */ "L4_ploadruhf_rr\0"
  /* 29448 */ "L4_ploadrif_rr\0"
  /* 29463 */ "S4_pstorerif_rr\0"
  /* 29479 */ "S4_storerf_rr\0"
  /* 29493 */ "S4_pstorerbnewf_rr\0"
  /* 29512 */ "S4_pstorerhnewf_rr\0"
  /* 29531 */ "S4_pstorerinewf_rr\0"
  /* 29550 */ "L4_loadrh_rr\0"
  /* 29563 */ "S4_storerh_rr\0"
  /* 29577 */ "L4_loadruh_rr\0"
  /* 29591 */ "L4_loadri_rr\0"
  /* 29604 */ "S4_storeri_rr\0"
  /* 29618 */ "L4_ploadrbt_rr\0"
  /* 29633 */ "S4_pstorerbt_rr\0"
  /* 29649 */ "L4_ploadrubt_rr\0"
  /* 29665 */ "L4_ploadrdt_rr\0"
  /* 29680 */ "S4_pstorerdt_rr\0"
  /* 29696 */ "S4_pstorerft_rr\0"
  /* 29712 */ "L4_ploadrht_rr\0"
  /* 29727 */ "S4_pstorerht_rr\0"
  /* 29743 */ "L4_ploadruht_rr\0"
  /* 29759 */ "L4_ploadrit_rr\0"
  /* 29774 */ "S4_pstorerit_rr\0"
  /* 29790 */ "S4_pstorerbnewt_rr\0"
  /* 29809 */ "S4_pstorerhnewt_rr\0"
  /* 29828 */ "S4_pstorerinewt_rr\0"
  /* 29847 */ "S4_storerbnew_rr\0"
  /* 29864 */ "L4_ploadrbfnew_rr\0"
  /* 29882 */ "S4_pstorerbfnew_rr\0"
  /* 29901 */ "L4_ploadrubfnew_rr\0"
  /* 29920 */ "L4_ploadrdfnew_rr\0"
  /* 29938 */ "S4_pstorerdfnew_rr\0"
  /* 29957 */ "S4_pstorerffnew_rr\0"
  /* 29976 */ "L4_ploadrhfnew_rr\0"
  /* 29994 */ "S4_pstorerhfnew_rr\0"
  /* 30013 */ "L4_ploadruhfnew_rr\0"
  /* 30032 */ "L4_ploadrifnew_rr\0"
  /* 30050 */ "S4_pstorerifnew_rr\0"
  /* 30069 */ "S4_pstorerbnewfnew_rr\0"
  /* 30091 */ "S4_pstorerhnewfnew_rr\0"
  /* 30113 */ "S4_pstorerinewfnew_rr\0"
  /* 30135 */ "S4_storerhnew_rr\0"
  /* 30152 */ "S4_storerinew_rr\0"
  /* 30169 */ "L4_ploadrbtnew_rr\0"
  /* 30187 */ "S4_pstorerbtnew_rr\0"
  /* 30206 */ "L4_ploadrubtnew_rr\0"
  /* 30225 */ "L4_ploadrdtnew_rr\0"
  /* 30243 */ "S4_pstorerdtnew_rr\0"
  /* 30262 */ "S4_pstorerftnew_rr\0"
  /* 30281 */ "L4_ploadrhtnew_rr\0"
  /* 30299 */ "S4_pstorerhtnew_rr\0"
  /* 30318 */ "L4_ploadruhtnew_rr\0"
  /* 30337 */ "L4_ploadritnew_rr\0"
  /* 30355 */ "S4_pstoreritnew_rr\0"
  /* 30374 */ "S4_pstorerbnewtnew_rr\0"
  /* 30396 */ "S4_pstorerhnewtnew_rr\0"
  /* 30418 */ "S4_pstorerinewtnew_rr\0"
  /* 30440 */ "G4_tfrgcrr\0"
  /* 30451 */ "A2_tfrcrr\0"
  /* 30461 */ "J2_ploop1sr\0"
  /* 30473 */ "J2_ploop2sr\0"
  /* 30485 */ "J2_ploop3sr\0"
  /* 30497 */ "LDriw_ctr\0"
  /* 30507 */ "STriw_ctr\0"
  /* 30517 */ "J4_jumpsetr\0"
  /* 30529 */ "V6_vrotr\0"
  /* 30538 */ "L4_loadbsw2_ur\0"
  /* 30553 */ "L4_loadbzw2_ur\0"
  /* 30568 */ "L4_loadbsw4_ur\0"
  /* 30583 */ "L4_loadbzw4_ur\0"
  /* 30598 */ "L4_loadalignb_ur\0"
  /* 30615 */ "L4_loadrb_ur\0"
  /* 30628 */ "S4_storerb_ur\0"
  /* 30642 */ "L4_loadrub_ur\0"
  /* 30656 */ "L4_loadrd_ur\0"
  /* 30669 */ "S4_storerd_ur\0"
  /* 30683 */ "S4_storerf_ur\0"
  /* 30697 */ "L4_loadalignh_ur\0"
  /* 30714 */ "L4_loadrh_ur\0"
  /* 30727 */ "S4_storerh_ur\0"
  /* 30741 */ "L4_loadruh_ur\0"
  /* 30755 */ "L4_loadri_ur\0"
  /* 30768 */ "S4_storeri_ur\0"
  /* 30782 */ "S4_storerbnew_ur\0"
  /* 30799 */ "S4_storerhnew_ur\0"
  /* 30816 */ "S4_storerinew_ur\0"
  /* 30833 */ "A2_vnavgwr\0"
  /* 30844 */ "A2_vavgwr\0"
  /* 30854 */ "V6_vinsertwr\0"
  /* 30867 */ "A2_vavguwr\0"
  /* 30878 */ "SA1_combinezr\0"
  /* 30892 */ "A2_abs\0"
  /* 30899 */ "L4_ploadrbf_abs\0"
  /* 30915 */ "S4_pstorerbf_abs\0"
  /* 30932 */ "L4_ploadrubf_abs\0"
  /* 30949 */ "L4_ploadrdf_abs\0"
  /* 30965 */ "S4_pstorerdf_abs\0"
  /* 30982 */ "S4_pstorerff_abs\0"
  /* 30999 */ "L4_ploadrhf_abs\0"
  /* 31015 */ "S4_pstorerhf_abs\0"
  /* 31032 */ "L4_ploadruhf_abs\0"
  /* 31049 */ "L4_ploadrif_abs\0"
  /* 31065 */ "S4_pstorerif_abs\0"
  /* 31082 */ "S4_pstorerbnewf_abs\0"
  /* 31102 */ "S4_pstorerhnewf_abs\0"
  /* 31122 */ "S4_pstorerinewf_abs\0"
  /* 31142 */ "L4_ploadrbt_abs\0"
  /* 31158 */ "S4_pstorerbt_abs\0"
  /* 31175 */ "L4_ploadrubt_abs\0"
  /* 31192 */ "L4_ploadrdt_abs\0"
  /* 31208 */ "S4_pstorerdt_abs\0"
  /* 31225 */ "S4_pstorerft_abs\0"
  /* 31242 */ "L4_ploadrht_abs\0"
  /* 31258 */ "S4_pstorerht_abs\0"
  /* 31275 */ "L4_ploadruht_abs\0"
  /* 31292 */ "L4_ploadrit_abs\0"
  /* 31308 */ "S4_pstorerit_abs\0"
  /* 31325 */ "S4_pstorerbnewt_abs\0"
  /* 31345 */ "S4_pstorerhnewt_abs\0"
  /* 31365 */ "S4_pstorerinewt_abs\0"
  /* 31385 */ "L4_ploadrbfnew_abs\0"
  /* 31404 */ "S4_pstorerbfnew_abs\0"
  /* 31424 */ "L4_ploadrubfnew_abs\0"
  /* 31444 */ "L4_ploadrdfnew_abs\0"
  /* 31463 */ "S4_pstorerdfnew_abs\0"
  /* 31483 */ "S4_pstorerffnew_abs\0"
  /* 31503 */ "L4_ploadrhfnew_abs\0"
  /* 31522 */ "S4_pstorerhfnew_abs\0"
  /* 31542 */ "L4_ploadruhfnew_abs\0"
  /* 31562 */ "L4_ploadrifnew_abs\0"
  /* 31581 */ "S4_pstorerifnew_abs\0"
  /* 31601 */ "S4_pstorerbnewfnew_abs\0"
  /* 31624 */ "S4_pstorerhnewfnew_abs\0"
  /* 31647 */ "S4_pstorerinewfnew_abs\0"
  /* 31670 */ "L4_ploadrbtnew_abs\0"
  /* 31689 */ "S4_pstorerbtnew_abs\0"
  /* 31709 */ "L4_ploadrubtnew_abs\0"
  /* 31729 */ "L4_ploadrdtnew_abs\0"
  /* 31748 */ "S4_pstorerdtnew_abs\0"
  /* 31768 */ "S4_pstorerftnew_abs\0"
  /* 31788 */ "L4_ploadrhtnew_abs\0"
  /* 31807 */ "S4_pstorerhtnew_abs\0"
  /* 31827 */ "L4_ploadruhtnew_abs\0"
  /* 31847 */ "L4_ploadritnew_abs\0"
  /* 31866 */ "S4_pstoreritnew_abs\0"
  /* 31886 */ "S4_pstorerbnewtnew_abs\0"
  /* 31909 */ "S4_pstorerhnewtnew_abs\0"
  /* 31932 */ "S4_pstorerinewtnew_abs\0"
  /* 31955 */ "PS_loadrbabs\0"
  /* 31968 */ "PS_storerbabs\0"
  /* 31982 */ "PS_loadrubabs\0"
  /* 31996 */ "PS_loadrdabs\0"
  /* 32009 */ "PS_storerdabs\0"
  /* 32023 */ "PS_storerfabs\0"
  /* 32037 */ "PS_loadrhabs\0"
  /* 32050 */ "PS_storerhabs\0"
  /* 32064 */ "PS_loadruhabs\0"
  /* 32078 */ "PS_loadriabs\0"
  /* 32091 */ "PS_storeriabs\0"
  /* 32105 */ "PS_storerbnewabs\0"
  /* 32122 */ "PS_storerhnewabs\0"
  /* 32139 */ "PS_storerinewabs\0"
  /* 32156 */ "A2_vsububs\0"
  /* 32167 */ "A2_vaddubs\0"
  /* 32178 */ "A5_vaddhubs\0"
  /* 32190 */ "M2_vmac2es\0"
  /* 32201 */ "A2_vsubhs\0"
  /* 32211 */ "A2_svsubhs\0"
  /* 32222 */ "A2_vaddhs\0"
  /* 32232 */ "A2_svaddhs\0"
  /* 32243 */ "A2_svavghs\0"
  /* 32254 */ "A2_vsubuhs\0"
  /* 32265 */ "A2_svsubuhs\0"
  /* 32277 */ "A2_vadduhs\0"
  /* 32288 */ "A2_svadduhs\0"
  /* 32300 */ "S2_vrndpackwhs\0"
  /* 32315 */ "F2_sffms\0"
  /* 32324 */ "V6_vmpyhsrs\0"
  /* 32336 */ "V6_vmpyhvsrs\0"
  /* 32349 */ "F2_dfclass\0"
  /* 32360 */ "F2_sfclass\0"
  /* 32371 */ "V6_vmpyhss\0"
  /* 32382 */ "V6_vmpabus\0"
  /* 32393 */ "V6_vdmpybus\0"
  /* 32405 */ "V6_vrmpybus\0"
  /* 32417 */ "V6_vtmpybus\0"
  /* 32429 */ "V6_vmpybus\0"
  /* 32440 */ "V6_vmpyhus\0"
  /* 32451 */ "A2_vsubws\0"
  /* 32461 */ "A2_vaddws\0"
  /* 32471 */ "SL2_jumpr31_t\0"
  /* 32485 */ "SL2_return_t\0"
  /* 32498 */ "L4_return_t\0"
  /* 32510 */ "J4_tstbit0_fp0_jump_t\0"
  /* 32532 */ "J4_cmpeqn1_fp0_jump_t\0"
  /* 32554 */ "J4_cmpgtn1_fp0_jump_t\0"
  /* 32576 */ "J4_cmpeqi_fp0_jump_t\0"
  /* 32597 */ "J4_cmpgti_fp0_jump_t\0"
  /* 32618 */ "J4_cmpgtui_fp0_jump_t\0"
  /* 32640 */ "J4_cmpeq_fp0_jump_t\0"
  /* 32660 */ "J4_cmpgt_fp0_jump_t\0"
  /* 32680 */ "J4_cmpgtu_fp0_jump_t\0"
  /* 32701 */ "J4_tstbit0_tp0_jump_t\0"
  /* 32723 */ "J4_cmpeqn1_tp0_jump_t\0"
  /* 32745 */ "J4_cmpgtn1_tp0_jump_t\0"
  /* 32767 */ "J4_cmpeqi_tp0_jump_t\0"
  /* 32788 */ "J4_cmpgti_tp0_jump_t\0"
  /* 32809 */ "J4_cmpgtui_tp0_jump_t\0"
  /* 32831 */ "J4_cmpeq_tp0_jump_t\0"
  /* 32851 */ "J4_cmpgt_tp0_jump_t\0"
  /* 32871 */ "J4_cmpgtu_tp0_jump_t\0"
  /* 32892 */ "J4_tstbit0_fp1_jump_t\0"
  /* 32914 */ "J4_cmpeqn1_fp1_jump_t\0"
  /* 32936 */ "J4_cmpgtn1_fp1_jump_t\0"
  /* 32958 */ "J4_cmpeqi_fp1_jump_t\0"
  /* 32979 */ "J4_cmpgti_fp1_jump_t\0"
  /* 33000 */ "J4_cmpgtui_fp1_jump_t\0"
  /* 33022 */ "J4_cmpeq_fp1_jump_t\0"
  /* 33042 */ "J4_cmpgt_fp1_jump_t\0"
  /* 33062 */ "J4_cmpgtu_fp1_jump_t\0"
  /* 33083 */ "J4_tstbit0_tp1_jump_t\0"
  /* 33105 */ "J4_cmpeqn1_tp1_jump_t\0"
  /* 33127 */ "J4_cmpgtn1_tp1_jump_t\0"
  /* 33149 */ "J4_cmpeqi_tp1_jump_t\0"
  /* 33170 */ "J4_cmpgti_tp1_jump_t\0"
  /* 33191 */ "J4_cmpgtui_tp1_jump_t\0"
  /* 33213 */ "J4_cmpeq_tp1_jump_t\0"
  /* 33233 */ "J4_cmpgt_tp1_jump_t\0"
  /* 33253 */ "J4_cmpgtu_tp1_jump_t\0"
  /* 33274 */ "J4_tstbit0_f_jumpnv_t\0"
  /* 33296 */ "J4_cmpeqn1_f_jumpnv_t\0"
  /* 33318 */ "J4_cmpgtn1_f_jumpnv_t\0"
  /* 33340 */ "J4_cmpeqi_f_jumpnv_t\0"
  /* 33361 */ "J4_cmpgti_f_jumpnv_t\0"
  /* 33382 */ "J4_cmpgtui_f_jumpnv_t\0"
  /* 33404 */ "J4_cmpeq_f_jumpnv_t\0"
  /* 33424 */ "J4_cmpgt_f_jumpnv_t\0"
  /* 33444 */ "J4_cmplt_f_jumpnv_t\0"
  /* 33464 */ "J4_cmpgtu_f_jumpnv_t\0"
  /* 33485 */ "J4_cmpltu_f_jumpnv_t\0"
  /* 33506 */ "J4_tstbit0_t_jumpnv_t\0"
  /* 33528 */ "J4_cmpeqn1_t_jumpnv_t\0"
  /* 33550 */ "J4_cmpgtn1_t_jumpnv_t\0"
  /* 33572 */ "J4_cmpeqi_t_jumpnv_t\0"
  /* 33593 */ "J4_cmpgti_t_jumpnv_t\0"
  /* 33614 */ "J4_cmpgtui_t_jumpnv_t\0"
  /* 33636 */ "J4_cmpeq_t_jumpnv_t\0"
  /* 33656 */ "J4_cmpgt_t_jumpnv_t\0"
  /* 33676 */ "J4_cmplt_t_jumpnv_t\0"
  /* 33696 */ "J4_cmpgtu_t_jumpnv_t\0"
  /* 33717 */ "J4_cmpltu_t_jumpnv_t\0"
  /* 33738 */ "L4_return_map_to_raw_t\0"
  /* 33761 */ "M4_mac_up_s1_sat\0"
  /* 33778 */ "M4_nac_up_s1_sat\0"
  /* 33795 */ "M2_mpy_up_s1_sat\0"
  /* 33812 */ "A2_sat\0"
  /* 33819 */ "V6_vwhist256_sat\0"
  /* 33836 */ "V6_vsubububb_sat\0"
  /* 33853 */ "V6_vaddububb_sat\0"
  /* 33870 */ "V6_vpackhb_sat\0"
  /* 33885 */ "V6_vabsb_sat\0"
  /* 33898 */ "V6_vpackhub_sat\0"
  /* 33914 */ "S5_asrhub_sat\0"
  /* 33928 */ "S5_asrhub_rnd_sat\0"
  /* 33946 */ "V6_vabsh_sat\0"
  /* 33959 */ "V6_vpackwuh_sat\0"
  /* 33975 */ "V6_vpackwh_sat\0"
  /* 33990 */ "A4_round_ri_sat\0"
  /* 34006 */ "V6_vwhist256q_sat\0"
  /* 34024 */ "S2_asl_i_r_sat\0"
  /* 34039 */ "S2_asl_r_r_sat\0"
  /* 34054 */ "S2_asr_r_r_sat\0"
  /* 34069 */ "A4_round_rr_sat\0"
  /* 34085 */ "V6_vabsw_sat\0"
  /* 34098 */ "V6_vsubbsat\0"
  /* 34110 */ "V6_vaddbsat\0"
  /* 34122 */ "V6_vasrhbsat\0"
  /* 34135 */ "V6_vsububsat\0"
  /* 34148 */ "V6_vaddubsat\0"
  /* 34161 */ "V6_vasrhubsat\0"
  /* 34175 */ "V6_vasruhubsat\0"
  /* 34190 */ "dep_A2_subsat\0"
  /* 34204 */ "dep_A2_addsat\0"
  /* 34218 */ "V6_vasrhbrndsat\0"
  /* 34234 */ "V6_vasrhubrndsat\0"
  /* 34251 */ "V6_vasruhubrndsat\0"
  /* 34269 */ "V6_vasrwuhrndsat\0"
  /* 34286 */ "V6_vasruwuhrndsat\0"
  /* 34304 */ "V6_vasrwhrndsat\0"
  /* 34320 */ "A2_roundsat\0"
  /* 34332 */ "A2_negsat\0"
  /* 34342 */ "V6_vsubhsat\0"
  /* 34354 */ "V6_vaddhsat\0"
  /* 34366 */ "V6_vmpahhsat\0"
  /* 34379 */ "A2_vabshsat\0"
  /* 34391 */ "V6_vsubuhsat\0"
  /* 34404 */ "V6_vadduhsat\0"
  /* 34417 */ "V6_vmpauhuhsat\0"
  /* 34432 */ "V6_vmpsuhuhsat\0"
  /* 34447 */ "V6_vasrwuhsat\0"
  /* 34461 */ "V6_vasruwuhsat\0"
  /* 34476 */ "V6_vasrwhsat\0"
  /* 34489 */ "V6_vdmpyhsat\0"
  /* 34502 */ "V6_vdmpyhisat\0"
  /* 34516 */ "V6_vdmpyhsuisat\0"
  /* 34532 */ "A2_addpsat\0"
  /* 34543 */ "A2_abssat\0"
  /* 34553 */ "V6_vdmpyhsusat\0"
  /* 34568 */ "V6_vdmpyhvsat\0"
  /* 34582 */ "V6_vsubwsat\0"
  /* 34594 */ "V6_vaddwsat\0"
  /* 34606 */ "A2_vabswsat\0"
  /* 34618 */ "V6_vsubuwsat\0"
  /* 34631 */ "V6_vadduwsat\0"
  /* 34644 */ "V6_vaddcarrysat\0"
  /* 34660 */ "A4_psxtbt\0"
  /* 34670 */ "A4_pzxtbt\0"
  /* 34680 */ "A2_psubt\0"
  /* 34689 */ "S4_extract\0"
  /* 34700 */ "V6_zextract\0"
  /* 34712 */ "PS_pselect\0"
  /* 34723 */ "PS_vselect\0"
  /* 34734 */ "PS_wselect\0"
  /* 34745 */ "A2_paddt\0"
  /* 34754 */ "A2_pandt\0"
  /* 34763 */ "PS_jmpret\0"
  /* 34773 */ "C2_bitsset\0"
  /* 34784 */ "C4_nbitsset\0"
  /* 34796 */ "A4_cmpbgt\0"
  /* 34806 */ "A4_vcmpbgt\0"
  /* 34817 */ "A4_cmphgt\0"
  /* 34827 */ "A2_vcmphgt\0"
  /* 34838 */ "C2_cmpgt\0"
  /* 34847 */ "F2_dfcmpgt\0"
  /* 34858 */ "F2_sfcmpgt\0"
  /* 34869 */ "A2_vcmpwgt\0"
  /* 34880 */ "Y2_syncht\0"
  /* 34890 */ "A4_paslht\0"
  /* 34900 */ "A4_pasrht\0"
  /* 34910 */ "A4_psxtht\0"
  /* 34920 */ "A4_pzxtht\0"
  /* 34930 */ "Y2_wait\0"
  /* 34938 */ "A2_paddit\0"
  /* 34948 */ "dup_C2_cmoveit\0"
  /* 34963 */ "A4_bitsplit\0"
  /* 34975 */ "dup_C2_cmovenewit\0"
  /* 34993 */ "V6_vsubb_alt\0"
  /* 35006 */ "V6_vaddb_alt\0"
  /* 35019 */ "V6_vshuffeb_alt\0"
  /* 35035 */ "V6_vpackeb_alt\0"
  /* 35050 */ "V6_vshufoeb_alt\0"
  /* 35066 */ "V6_vshuffb_alt\0"
  /* 35081 */ "V6_vnavgb_alt\0"
  /* 35095 */ "V6_vavgb_alt\0"
  /* 35108 */ "V6_vmpahb_alt\0"
  /* 35122 */ "V6_vroundhb_alt\0"
  /* 35138 */ "V6_vmpyihb_alt\0"
  /* 35153 */ "V6_vmpauhb_alt\0"
  /* 35168 */ "V6_vdmpyhb_alt\0"
  /* 35183 */ "V6_vtmpyhb_alt\0"
  /* 35198 */ "V6_vunpackb_alt\0"
  /* 35214 */ "V6_vdealb_alt\0"
  /* 35228 */ "V6_vminb_alt\0"
  /* 35241 */ "V6_vshuffob_alt\0"
  /* 35257 */ "V6_vunpackob_alt\0"
  /* 35274 */ "V6_vpackob_alt\0"
  /* 35289 */ "V6_vabsb_alt\0"
  /* 35302 */ "V6_vsb_alt\0"
  /* 35313 */ "V6_vabsdiffub_alt\0"
  /* 35331 */ "V6_vnavgub_alt\0"
  /* 35346 */ "V6_vavgub_alt\0"
  /* 35360 */ "V6_vroundhub_alt\0"
  /* 35377 */ "V6_vsathub_alt\0"
  /* 35392 */ "V6_vrounduhub_alt\0"
  /* 35410 */ "V6_vunpackub_alt\0"
  /* 35427 */ "V6_vminub_alt\0"
  /* 35441 */ "V6_vabsub_alt\0"
  /* 35455 */ "V6_vmpyiwub_alt\0"
  /* 35471 */ "V6_vmaxub_alt\0"
  /* 35485 */ "V6_vrmpyub_alt\0"
  /* 35500 */ "V6_vmpyub_alt\0"
  /* 35514 */ "V6_vmpyiwb_alt\0"
  /* 35529 */ "V6_vmaxb_alt\0"
  /* 35542 */ "V6_vtmpyb_alt\0"
  /* 35556 */ "V6_vzb_alt\0"
  /* 35567 */ "V6_vmpahb_acc_alt\0"
  /* 35585 */ "V6_vmpyihb_acc_alt\0"
  /* 35604 */ "V6_vmpauhb_acc_alt\0"
  /* 35623 */ "V6_vdmpyhb_acc_alt\0"
  /* 35642 */ "V6_vtmpyhb_acc_alt\0"
  /* 35661 */ "V6_vmpyiwub_acc_alt\0"
  /* 35681 */ "V6_vrmpyub_acc_alt\0"
  /* 35700 */ "V6_vmpyub_acc_alt\0"
  /* 35718 */ "V6_vmpyiwb_acc_alt\0"
  /* 35737 */ "V6_vtmpyb_acc_alt\0"
  /* 35755 */ "V6_vaddubh_acc_alt\0"
  /* 35774 */ "V6_vmpyih_acc_alt\0"
  /* 35792 */ "V6_vaslh_acc_alt\0"
  /* 35809 */ "V6_vasrh_acc_alt\0"
  /* 35826 */ "V6_vdsaduh_acc_alt\0"
  /* 35845 */ "V6_vmpyiewuh_acc_alt\0"
  /* 35866 */ "V6_vmpyuh_acc_alt\0"
  /* 35884 */ "V6_vmpyiewh_acc_alt\0"
  /* 35904 */ "V6_vmpyiwh_acc_alt\0"
  /* 35923 */ "V6_vmpyh_acc_alt\0"
  /* 35940 */ "V6_vrsadubi_acc_alt\0"
  /* 35960 */ "V6_vrmpyubi_acc_alt\0"
  /* 35980 */ "V6_vrmpybusi_acc_alt\0"
  /* 36001 */ "V6_vmpabus_acc_alt\0"
  /* 36020 */ "V6_vdmpybus_acc_alt\0"
  /* 36040 */ "V6_vrmpybus_acc_alt\0"
  /* 36060 */ "V6_vtmpybus_acc_alt\0"
  /* 36080 */ "V6_vmpybus_acc_alt\0"
  /* 36099 */ "V6_vmpyhus_acc_alt\0"
  /* 36118 */ "V6_vdmpyhsat_acc_alt\0"
  /* 36139 */ "V6_vmpyhsat_acc_alt\0"
  /* 36159 */ "V6_vdmpyhisat_acc_alt\0"
  /* 36181 */ "V6_vdmpyhsuisat_acc_alt\0"
  /* 36205 */ "V6_vdmpyhsusat_acc_alt\0"
  /* 36228 */ "V6_vdmpyhvsat_acc_alt\0"
  /* 36250 */ "V6_vandqrt_acc_alt\0"
  /* 36269 */ "V6_vandnqrt_acc_alt\0"
  /* 36289 */ "V6_vandvrt_acc_alt\0"
  /* 36308 */ "V6_vrmpybub_rtt_acc_alt\0"
  /* 36332 */ "V6_vrmpyub_rtt_acc_alt\0"
  /* 36355 */ "V6_vmpabuu_acc_alt\0"
  /* 36374 */ "V6_vrmpyubv_acc_alt\0"
  /* 36394 */ "V6_vmpyubv_acc_alt\0"
  /* 36413 */ "V6_vrmpybv_acc_alt\0"
  /* 36432 */ "V6_vmpybv_acc_alt\0"
  /* 36450 */ "V6_vdmpyhb_dv_acc_alt\0"
  /* 36472 */ "V6_vdmpybus_dv_acc_alt\0"
  /* 36495 */ "V6_vmpyuhv_acc_alt\0"
  /* 36514 */ "V6_vmpyhv_acc_alt\0"
  /* 36532 */ "V6_vrmpybusv_acc_alt\0"
  /* 36553 */ "V6_vmpybusv_acc_alt\0"
  /* 36573 */ "V6_vaddhw_acc_alt\0"
  /* 36591 */ "V6_vadduhw_acc_alt\0"
  /* 36610 */ "V6_vaslw_acc_alt\0"
  /* 36627 */ "V6_vasrw_acc_alt\0"
  /* 36644 */ "V6_vmpyowh_rnd_sacc_alt\0"
  /* 36668 */ "V6_vmpyowh_sacc_alt\0"
  /* 36688 */ "V6_vscattermh_add_alt\0"
  /* 36710 */ "V6_vscattermwh_add_alt\0"
  /* 36733 */ "V6_vscattermw_add_alt\0"
  /* 36755 */ "V6_vmpyowh_rnd_alt\0"
  /* 36774 */ "V6_vavgbrnd_alt\0"
  /* 36790 */ "V6_vavgubrnd_alt\0"
  /* 36807 */ "V6_vavghrnd_alt\0"
  /* 36823 */ "V6_vavguhrnd_alt\0"
  /* 36840 */ "V6_vavgwrnd_alt\0"
  /* 36856 */ "V6_vavguwrnd_alt\0"
  /* 36873 */ "V6_vcl0h_alt\0"
  /* 36886 */ "V6_vsububh_alt\0"
  /* 36901 */ "V6_vaddubh_alt\0"
  /* 36916 */ "V6_vsubh_alt\0"
  /* 36929 */ "V6_vaddh_alt\0"
  /* 36942 */ "V6_vshufeh_alt\0"
  /* 36957 */ "V6_vpackeh_alt\0"
  /* 36972 */ "V6_vshufoeh_alt\0"
  /* 36988 */ "V6_vabsdiffh_alt\0"
  /* 37005 */ "V6_vshuffh_alt\0"
  /* 37020 */ "V6_vnavgh_alt\0"
  /* 37034 */ "V6_vavgh_alt\0"
  /* 37047 */ "V6_vmpyih_alt\0"
  /* 37061 */ "V6_vunpackh_alt\0"
  /* 37077 */ "V6_vdealh_alt\0"
  /* 37091 */ "V6_vaslh_alt\0"
  /* 37104 */ "V6_vscattermh_alt\0"
  /* 37122 */ "V6_vminh_alt\0"
  /* 37135 */ "V6_vshufoh_alt\0"
  /* 37150 */ "V6_vunpackoh_alt\0"
  /* 37167 */ "V6_vpackoh_alt\0"
  /* 37182 */ "V6_vasrh_alt\0"
  /* 37195 */ "V6_vlsrh_alt\0"
  /* 37208 */ "V6_vabsh_alt\0"
  /* 37221 */ "V6_vsh_alt\0"
  /* 37232 */ "V6_vnormamth_alt\0"
  /* 37249 */ "V6_vpopcounth_alt\0"
  /* 37267 */ "V6_vdsaduh_alt\0"
  /* 37282 */ "V6_vabsdiffuh_alt\0"
  /* 37300 */ "V6_vavguh_alt\0"
  /* 37314 */ "V6_vunpackuh_alt\0"
  /* 37331 */ "V6_vminuh_alt\0"
  /* 37345 */ "V6_vabsuh_alt\0"
  /* 37359 */ "V6_vroundwuh_alt\0"
  /* 37376 */ "V6_vmpyiewuh_alt\0"
  /* 37393 */ "V6_vmpyewuh_alt\0"
  /* 37409 */ "V6_vrounduwuh_alt\0"
  /* 37427 */ "V6_vsatuwuh_alt\0"
  /* 37443 */ "V6_vmaxuh_alt\0"
  /* 37457 */ "V6_vmpyuh_alt\0"
  /* 37471 */ "V6_vroundwh_alt\0"
  /* 37487 */ "V6_vmpyiwh_alt\0"
  /* 37502 */ "V6_vscattermwh_alt\0"
  /* 37521 */ "V6_vmpyiowh_alt\0"
  /* 37537 */ "V6_vmpyowh_alt\0"
  /* 37552 */ "V6_vsatwh_alt\0"
  /* 37566 */ "V6_vmaxh_alt\0"
  /* 37579 */ "V6_vmpyh_alt\0"
  /* 37592 */ "V6_vzh_alt\0"
  /* 37603 */ "V6_vrsadubi_alt\0"
  /* 37619 */ "V6_vrmpyubi_alt\0"
  /* 37635 */ "V6_vrmpybusi_alt\0"
  /* 37652 */ "V6_vasr_into_alt\0"
  /* 37669 */ "V6_vsubbq_alt\0"
  /* 37683 */ "V6_vaddbq_alt\0"
  /* 37697 */ "V6_vsubhq_alt\0"
  /* 37711 */ "V6_vaddhq_alt\0"
  /* 37725 */ "V6_vscattermhq_alt\0"
  /* 37744 */ "V6_vscattermwhq_alt\0"
  /* 37764 */ "V6_vsubbnq_alt\0"
  /* 37779 */ "V6_vaddbnq_alt\0"
  /* 37794 */ "V6_vsubhnq_alt\0"
  /* 37809 */ "V6_vaddhnq_alt\0"
  /* 37824 */ "V6_vsubwnq_alt\0"
  /* 37839 */ "V6_vaddwnq_alt\0"
  /* 37854 */ "V6_vsubwq_alt\0"
  /* 37868 */ "V6_vaddwq_alt\0"
  /* 37882 */ "V6_vscattermwq_alt\0"
  /* 37901 */ "V6_vrotr_alt\0"
  /* 37914 */ "V6_vmpyhsrs_alt\0"
  /* 37930 */ "V6_vmpyhvsrs_alt\0"
  /* 37947 */ "V6_vmpyhss_alt\0"
  /* 37962 */ "V6_vmpabus_alt\0"
  /* 37977 */ "V6_vdmpybus_alt\0"
  /* 37993 */ "V6_vrmpybus_alt\0"
  /* 38009 */ "V6_vtmpybus_alt\0"
  /* 38025 */ "V6_vmpybus_alt\0"
  /* 38040 */ "V6_vmpyhus_alt\0"
  /* 38055 */ "V6_vpackhb_sat_alt\0"
  /* 38074 */ "V6_vabsb_sat_alt\0"
  /* 38091 */ "V6_vpackhub_sat_alt\0"
  /* 38111 */ "V6_vabsh_sat_alt\0"
  /* 38128 */ "V6_vpackwuh_sat_alt\0"
  /* 38148 */ "V6_vpackwh_sat_alt\0"
  /* 38167 */ "V6_vabsw_sat_alt\0"
  /* 38184 */ "V6_vsubbsat_alt\0"
  /* 38200 */ "V6_vaddbsat_alt\0"
  /* 38216 */ "V6_vsububsat_alt\0"
  /* 38233 */ "V6_vaddubsat_alt\0"
  /* 38250 */ "V6_vsubhsat_alt\0"
  /* 38266 */ "V6_vaddhsat_alt\0"
  /* 38282 */ "V6_vsubuhsat_alt\0"
  /* 38299 */ "V6_vadduhsat_alt\0"
  /* 38316 */ "V6_vdmpyhsat_alt\0"
  /* 38333 */ "V6_vdmpyhisat_alt\0"
  /* 38351 */ "V6_vdmpyhsuisat_alt\0"
  /* 38371 */ "V6_vdmpyhsusat_alt\0"
  /* 38390 */ "V6_vdmpyhvsat_alt\0"
  /* 38408 */ "V6_vsubwsat_alt\0"
  /* 38424 */ "V6_vaddwsat_alt\0"
  /* 38440 */ "V6_vsubuwsat_alt\0"
  /* 38457 */ "V6_vadduwsat_alt\0"
  /* 38474 */ "V6_vandqrt_alt\0"
  /* 38489 */ "V6_vandnqrt_alt\0"
  /* 38505 */ "V6_vandvrt_alt\0"
  /* 38520 */ "V6_vrmpybub_rtt_alt\0"
  /* 38540 */ "V6_vrmpyub_rtt_alt\0"
  /* 38559 */ "V6_vmpabuu_alt\0"
  /* 38574 */ "V6_vrmpyubv_alt\0"
  /* 38590 */ "V6_vmpyubv_alt\0"
  /* 38605 */ "V6_vrmpybv_alt\0"
  /* 38620 */ "V6_vmpybv_alt\0"
  /* 38634 */ "V6_vsubb_dv_alt\0"
  /* 38650 */ "V6_vaddb_dv_alt\0"
  /* 38666 */ "V6_vdmpyhb_dv_alt\0"
  /* 38684 */ "V6_vsubh_dv_alt\0"
  /* 38700 */ "V6_vaddh_dv_alt\0"
  /* 38716 */ "V6_vdmpybus_dv_alt\0"
  /* 38735 */ "V6_vsubbsat_dv_alt\0"
  /* 38754 */ "V6_vaddbsat_dv_alt\0"
  /* 38773 */ "V6_vsububsat_dv_alt\0"
  /* 38793 */ "V6_vaddubsat_dv_alt\0"
  /* 38813 */ "V6_vsubhsat_dv_alt\0"
  /* 38832 */ "V6_vaddhsat_dv_alt\0"
  /* 38851 */ "V6_vsubuhsat_dv_alt\0"
  /* 38871 */ "V6_vadduhsat_dv_alt\0"
  /* 38891 */ "V6_vsubwsat_dv_alt\0"
  /* 38910 */ "V6_vaddwsat_dv_alt\0"
  /* 38929 */ "V6_vsubuwsat_dv_alt\0"
  /* 38949 */ "V6_vadduwsat_dv_alt\0"
  /* 38969 */ "V6_vsubw_dv_alt\0"
  /* 38985 */ "V6_vaddw_dv_alt\0"
  /* 39001 */ "V6_vaslhv_alt\0"
  /* 39015 */ "V6_vasrhv_alt\0"
  /* 39029 */ "V6_vlsrhv_alt\0"
  /* 39043 */ "V6_vmpyuhv_alt\0"
  /* 39058 */ "V6_vmpyhv_alt\0"
  /* 39072 */ "V6_vmpabusv_alt\0"
  /* 39088 */ "V6_vrmpybusv_alt\0"
  /* 39105 */ "V6_vmpybusv_alt\0"
  /* 39121 */ "V6_vmpabuuv_alt\0"
  /* 39137 */ "V6_vaslwv_alt\0"
  /* 39151 */ "V6_vasrwv_alt\0"
  /* 39165 */ "V6_vlsrwv_alt\0"
  /* 39179 */ "V6_vcl0w_alt\0"
  /* 39192 */ "V6_vdealb4w_alt\0"
  /* 39208 */ "V6_vsubw_alt\0"
  /* 39221 */ "V6_vaddw_alt\0"
  /* 39234 */ "V6_vabsdiffw_alt\0"
  /* 39251 */ "V6_vnavgw_alt\0"
  /* 39265 */ "V6_vavgw_alt\0"
  /* 39278 */ "V6_vsubhw_alt\0"
  /* 39292 */ "V6_vaddhw_alt\0"
  /* 39306 */ "V6_vsubuhw_alt\0"
  /* 39321 */ "V6_vadduhw_alt\0"
  /* 39336 */ "V6_vaslw_alt\0"
  /* 39349 */ "V6_vscattermw_alt\0"
  /* 39367 */ "V6_vminw_alt\0"
  /* 39380 */ "V6_vasrw_alt\0"
  /* 39393 */ "V6_vlsrw_alt\0"
  /* 39406 */ "V6_vabsw_alt\0"
  /* 39419 */ "V6_extractw_alt\0"
  /* 39435 */ "V6_vnormamtw_alt\0"
  /* 39452 */ "V6_vavguw_alt\0"
  /* 39466 */ "V6_vabsuw_alt\0"
  /* 39480 */ "V6_vmaxw_alt\0"
  /* 39493 */ "J2_callt\0"
  /* 39502 */ "C2_cmplt\0"
  /* 39511 */ "J4_tstbit0_fp0_jump_nt\0"
  /* 39534 */ "J4_cmpeqn1_fp0_jump_nt\0"
  /* 39557 */ "J4_cmpgtn1_fp0_jump_nt\0"
  /* 39580 */ "J4_cmpeqi_fp0_jump_nt\0"
  /* 39602 */ "J4_cmpgti_fp0_jump_nt\0"
  /* 39624 */ "J4_cmpgtui_fp0_jump_nt\0"
  /* 39647 */ "J4_cmpeq_fp0_jump_nt\0"
  /* 39668 */ "J4_cmpgt_fp0_jump_nt\0"
  /* 39689 */ "J4_cmpgtu_fp0_jump_nt\0"
  /* 39711 */ "J4_tstbit0_tp0_jump_nt\0"
  /* 39734 */ "J4_cmpeqn1_tp0_jump_nt\0"
  /* 39757 */ "J4_cmpgtn1_tp0_jump_nt\0"
  /* 39780 */ "J4_cmpeqi_tp0_jump_nt\0"
  /* 39802 */ "J4_cmpgti_tp0_jump_nt\0"
  /* 39824 */ "J4_cmpgtui_tp0_jump_nt\0"
  /* 39847 */ "J4_cmpeq_tp0_jump_nt\0"
  /* 39868 */ "J4_cmpgt_tp0_jump_nt\0"
  /* 39889 */ "J4_cmpgtu_tp0_jump_nt\0"
  /* 39911 */ "J4_tstbit0_fp1_jump_nt\0"
  /* 39934 */ "J4_cmpeqn1_fp1_jump_nt\0"
  /* 39957 */ "J4_cmpgtn1_fp1_jump_nt\0"
  /* 39980 */ "J4_cmpeqi_fp1_jump_nt\0"
  /* 40002 */ "J4_cmpgti_fp1_jump_nt\0"
  /* 40024 */ "J4_cmpgtui_fp1_jump_nt\0"
  /* 40047 */ "J4_cmpeq_fp1_jump_nt\0"
  /* 40068 */ "J4_cmpgt_fp1_jump_nt\0"
  /* 40089 */ "J4_cmpgtu_fp1_jump_nt\0"
  /* 40111 */ "J4_tstbit0_tp1_jump_nt\0"
  /* 40134 */ "J4_cmpeqn1_tp1_jump_nt\0"
  /* 40157 */ "J4_cmpgtn1_tp1_jump_nt\0"
  /* 40180 */ "J4_cmpeqi_tp1_jump_nt\0"
  /* 40202 */ "J4_cmpgti_tp1_jump_nt\0"
  /* 40224 */ "J4_cmpgtui_tp1_jump_nt\0"
  /* 40247 */ "J4_cmpeq_tp1_jump_nt\0"
  /* 40268 */ "J4_cmpgt_tp1_jump_nt\0"
  /* 40289 */ "J4_cmpgtu_tp1_jump_nt\0"
  /* 40311 */ "J4_tstbit0_f_jumpnv_nt\0"
  /* 40334 */ "J4_cmpeqn1_f_jumpnv_nt\0"
  /* 40357 */ "J4_cmpgtn1_f_jumpnv_nt\0"
  /* 40380 */ "J4_cmpeqi_f_jumpnv_nt\0"
  /* 40402 */ "J4_cmpgti_f_jumpnv_nt\0"
  /* 40424 */ "J4_cmpgtui_f_jumpnv_nt\0"
  /* 40447 */ "J4_cmpeq_f_jumpnv_nt\0"
  /* 40468 */ "J4_cmpgt_f_jumpnv_nt\0"
  /* 40489 */ "J4_cmplt_f_jumpnv_nt\0"
  /* 40510 */ "J4_cmpgtu_f_jumpnv_nt\0"
  /* 40532 */ "J4_cmpltu_f_jumpnv_nt\0"
  /* 40554 */ "J4_tstbit0_t_jumpnv_nt\0"
  /* 40577 */ "J4_cmpeqn1_t_jumpnv_nt\0"
  /* 40600 */ "J4_cmpgtn1_t_jumpnv_nt\0"
  /* 40623 */ "J4_cmpeqi_t_jumpnv_nt\0"
  /* 40645 */ "J4_cmpgti_t_jumpnv_nt\0"
  /* 40667 */ "J4_cmpgtui_t_jumpnv_nt\0"
  /* 40690 */ "J4_cmpeq_t_jumpnv_nt\0"
  /* 40711 */ "J4_cmpgt_t_jumpnv_nt\0"
  /* 40732 */ "J4_cmplt_t_jumpnv_nt\0"
  /* 40753 */ "J4_cmpgtu_t_jumpnv_nt\0"
  /* 40775 */ "J4_cmpltu_t_jumpnv_nt\0"
  /* 40797 */ "L4_return_fnew_pnt\0"
  /* 40816 */ "L4_return_map_to_raw_fnew_pnt\0"
  /* 40846 */ "L4_return_tnew_pnt\0"
  /* 40865 */ "L4_return_map_to_raw_tnew_pnt\0"
  /* 40895 */ "A2_not\0"
  /* 40902 */ "C2_not\0"
  /* 40909 */ "C4_fastcorner9_not\0"
  /* 40928 */ "V6_pred_not\0"
  /* 40940 */ "V6_vnot\0"
  /* 40948 */ "L4_return_fnew_pt\0"
  /* 40966 */ "L4_return_map_to_raw_fnew_pt\0"
  /* 40995 */ "L4_return_tnew_pt\0"
  /* 41013 */ "L4_return_map_to_raw_tnew_pt\0"
  /* 41042 */ "J2_jumpfpt\0"
  /* 41053 */ "J2_jumprfpt\0"
  /* 41065 */ "J2_jumpt\0"
  /* 41074 */ "A2_tfrpt\0"
  /* 41083 */ "J2_jumptpt\0"
  /* 41094 */ "J2_jumprtpt\0"
  /* 41106 */ "J2_jumpfnewpt\0"
  /* 41120 */ "J2_jumprfnewpt\0"
  /* 41135 */ "PS_jmpretfnewpt\0"
  /* 41151 */ "J2_jumptnewpt\0"
  /* 41165 */ "J2_jumprtnewpt\0"
  /* 41180 */ "PS_jmprettnewpt\0"
  /* 41196 */ "J2_jumprgtezpt\0"
  /* 41211 */ "J2_jumprltezpt\0"
  /* 41226 */ "J2_jumprnzpt\0"
  /* 41239 */ "J2_jumprzpt\0"
  /* 41251 */ "V6_vrmpyzbb_rt\0"
  /* 41266 */ "V6_vrmpyzcb_rt\0"
  /* 41281 */ "V6_vrmpyznb_rt\0"
  /* 41296 */ "V6_vrmpyzbub_rt\0"
  /* 41312 */ "V6_vrmpyzcbs_rt\0"
  /* 41328 */ "S2_insert\0"
  /* 41338 */ "A2_tfrt\0"
  /* 41346 */ "SA1_clrt\0"
  /* 41355 */ "J2_callrt\0"
  /* 41365 */ "A2_port\0"
  /* 41373 */ "A2_pxort\0"
  /* 41382 */ "J2_jumprt\0"
  /* 41392 */ "V6_vandqrt\0"
  /* 41403 */ "V6_vandnqrt\0"
  /* 41415 */ "V6_vandvrt\0"
  /* 41426 */ "V6_vhist\0"
  /* 41435 */ "A2_iconst\0"
  /* 41445 */ "PS_jmprett\0"
  /* 41456 */ "V6_vrmpybub_rtt\0"
  /* 41472 */ "V6_vrmpyub_rtt\0"
  /* 41487 */ "C2_ccombinewt\0"
  /* 41501 */ "C2_ccombinewnewt\0"
  /* 41518 */ "TFRI64_V2_ext\0"
  /* 41532 */ "A4_ext\0"
  /* 41539 */ "J2_loop0iext\0"
  /* 41552 */ "J2_loop1iext\0"
  /* 41565 */ "J2_loop0rext\0"
  /* 41578 */ "J2_loop1rext\0"
  /* 41591 */ "C4_cmplteu\0"
  /* 41602 */ "A2_minu\0"
  /* 41610 */ "A4_modwrapu\0"
  /* 41622 */ "V6_vL32b_ppu\0"
  /* 41635 */ "V6_vS32b_ppu\0"
  /* 41648 */ "V6_vL32Ub_ppu\0"
  /* 41662 */ "V6_vS32Ub_ppu\0"
  /* 41676 */ "V6_zLd_ppu\0"
  /* 41687 */ "V6_vL32b_pred_ppu\0"
  /* 41705 */ "V6_vS32b_pred_ppu\0"
  /* 41723 */ "V6_vS32Ub_pred_ppu\0"
  /* 41742 */ "V6_zLd_pred_ppu\0"
  /* 41758 */ "V6_vL32b_tmp_pred_ppu\0"
  /* 41780 */ "V6_vL32b_nt_tmp_pred_ppu\0"
  /* 41805 */ "V6_vL32b_cur_pred_ppu\0"
  /* 41827 */ "V6_vL32b_nt_cur_pred_ppu\0"
  /* 41852 */ "V6_vL32b_nt_pred_ppu\0"
  /* 41873 */ "V6_vS32b_nt_pred_ppu\0"
  /* 41894 */ "V6_vS32b_new_pred_ppu\0"
  /* 41916 */ "V6_vS32b_nt_new_pred_ppu\0"
  /* 41941 */ "V6_vL32b_npred_ppu\0"
  /* 41960 */ "V6_vS32b_npred_ppu\0"
  /* 41979 */ "V6_vS32Ub_npred_ppu\0"
  /* 41999 */ "V6_vL32b_tmp_npred_ppu\0"
  /* 42022 */ "V6_vL32b_nt_tmp_npred_ppu\0"
  /* 42048 */ "V6_vL32b_cur_npred_ppu\0"
  /* 42071 */ "V6_vL32b_nt_cur_npred_ppu\0"
  /* 42097 */ "V6_vL32b_nt_npred_ppu\0"
  /* 42119 */ "V6_vS32b_nt_npred_ppu\0"
  /* 42141 */ "V6_vS32b_new_npred_ppu\0"
  /* 42164 */ "V6_vS32b_nt_new_npred_ppu\0"
  /* 42190 */ "V6_vS32b_qpred_ppu\0"
  /* 42209 */ "V6_vS32b_nt_qpred_ppu\0"
  /* 42231 */ "V6_vS32b_nqpred_ppu\0"
  /* 42251 */ "V6_vS32b_nt_nqpred_ppu\0"
  /* 42274 */ "V6_vL32b_tmp_ppu\0"
  /* 42291 */ "V6_vL32b_nt_tmp_ppu\0"
  /* 42311 */ "V6_vL32b_cur_ppu\0"
  /* 42328 */ "V6_vL32b_nt_cur_ppu\0"
  /* 42348 */ "V6_vS32b_srls_ppu\0"
  /* 42366 */ "V6_vL32b_nt_ppu\0"
  /* 42382 */ "V6_vS32b_nt_ppu\0"
  /* 42398 */ "V6_vS32b_new_ppu\0"
  /* 42415 */ "V6_vS32b_nt_new_ppu\0"
  /* 42435 */ "M5_vdmacbsu\0"
  /* 42447 */ "M5_vrmacbsu\0"
  /* 42459 */ "M5_vmacbsu\0"
  /* 42470 */ "M5_vdmpybsu\0"
  /* 42482 */ "M5_vrmpybsu\0"
  /* 42494 */ "M5_vmpybsu\0"
  /* 42505 */ "S2_extractu\0"
  /* 42517 */ "A4_cmpbgtu\0"
  /* 42528 */ "A2_vcmpbgtu\0"
  /* 42540 */ "A4_cmphgtu\0"
  /* 42551 */ "A2_vcmphgtu\0"
  /* 42563 */ "C2_cmpgtu\0"
  /* 42573 */ "A2_vcmpwgtu\0"
  /* 42585 */ "C2_cmpltu\0"
  /* 42595 */ "V6_vmpabuu\0"
  /* 42606 */ "M5_vrmacbuu\0"
  /* 42618 */ "M5_vmacbuu\0"
  /* 42629 */ "M5_vrmpybuu\0"
  /* 42641 */ "M5_vmpybuu\0"
  /* 42652 */ "A2_maxu\0"
  /* 42660 */ "V6_vrmpyubv\0"
  /* 42672 */ "V6_vmpyubv\0"
  /* 42683 */ "V6_vrmpybv\0"
  /* 42694 */ "V6_vmpybv\0"
  /* 42704 */ "V6_vsubb_dv\0"
  /* 42716 */ "V6_vaddb_dv\0"
  /* 42728 */ "V6_vdmpyhb_dv\0"
  /* 42742 */ "V6_vsubh_dv\0"
  /* 42754 */ "V6_vaddh_dv\0"
  /* 42766 */ "V6_vdmpybus_dv\0"
  /* 42781 */ "V6_vsubbsat_dv\0"
  /* 42796 */ "V6_vaddbsat_dv\0"
  /* 42811 */ "V6_vsububsat_dv\0"
  /* 42827 */ "V6_vaddubsat_dv\0"
  /* 42843 */ "V6_vsubhsat_dv\0"
  /* 42858 */ "V6_vaddhsat_dv\0"
  /* 42873 */ "V6_vsubuhsat_dv\0"
  /* 42889 */ "V6_vadduhsat_dv\0"
  /* 42905 */ "V6_vsubwsat_dv\0"
  /* 42920 */ "V6_vaddwsat_dv\0"
  /* 42935 */ "V6_vsubuwsat_dv\0"
  /* 42951 */ "V6_vadduwsat_dv\0"
  /* 42967 */ "V6_vsubw_dv\0"
  /* 42979 */ "V6_vaddw_dv\0"
  /* 42991 */ "S2_brev\0"
  /* 42999 */ "V6_vaslhv\0"
  /* 43009 */ "V6_vasrhv\0"
  /* 43019 */ "V6_vlsrhv\0"
  /* 43029 */ "V6_vmpyuhv\0"
  /* 43040 */ "V6_vmpyhv\0"
  /* 43050 */ "V6_vncmov\0"
  /* 43060 */ "V6_vcmov\0"
  /* 43069 */ "V6_vandvnqv\0"
  /* 43081 */ "V6_vandvqv\0"
  /* 43092 */ "V6_vmpabusv\0"
  /* 43104 */ "V6_vrmpybusv\0"
  /* 43117 */ "V6_vmpybusv\0"
  /* 43129 */ "V6_vmpabuuv\0"
  /* 43141 */ "V6_vaslwv\0"
  /* 43151 */ "V6_vasrwv\0"
  /* 43161 */ "V6_vlsrwv\0"
  /* 43171 */ "V6_vcl0w\0"
  /* 43180 */ "F2_conv_df2w\0"
  /* 43193 */ "F2_conv_sf2w\0"
  /* 43206 */ "V6_vdealb4w\0"
  /* 43218 */ "S6_allocframe_to_raw\0"
  /* 43239 */ "L6_deallocframe_map_to_raw\0"
  /* 43266 */ "L6_return_map_to_raw\0"
  /* 43287 */ "V6_vaddclbw\0"
  /* 43299 */ "S4_vxaddsubw\0"
  /* 43312 */ "A2_vsubw\0"
  /* 43321 */ "V6_vsubw\0"
  /* 43330 */ "S4_vxsubaddw\0"
  /* 43343 */ "A2_vaddw\0"
  /* 43352 */ "V6_vaddw\0"
  /* 43361 */ "V6_vsatdw\0"
  /* 43371 */ "SL2_jumpr31_fnew\0"
  /* 43388 */ "SL2_return_fnew\0"
  /* 43404 */ "A4_psxtbfnew\0"
  /* 43417 */ "A4_pzxtbfnew\0"
  /* 43430 */ "A2_psubfnew\0"
  /* 43442 */ "A2_paddfnew\0"
  /* 43454 */ "A2_pandfnew\0"
  /* 43466 */ "A4_paslhfnew\0"
  /* 43479 */ "A4_pasrhfnew\0"
  /* 43492 */ "A4_psxthfnew\0"
  /* 43505 */ "A4_pzxthfnew\0"
  /* 43518 */ "A2_paddifnew\0"
  /* 43531 */ "J2_jumpfnew\0"
  /* 43543 */ "A2_tfrpfnew\0"
  /* 43555 */ "A2_tfrfnew\0"
  /* 43566 */ "SA1_clrfnew\0"
  /* 43578 */ "A2_porfnew\0"
  /* 43589 */ "A2_pxorfnew\0"
  /* 43601 */ "J2_jumprfnew\0"
  /* 43614 */ "PS_jmpretfnew\0"
  /* 43628 */ "A2_combinew\0"
  /* 43640 */ "SL2_jumpr31_tnew\0"
  /* 43657 */ "SL2_return_tnew\0"
  /* 43673 */ "A4_psxtbtnew\0"
  /* 43686 */ "A4_pzxtbtnew\0"
  /* 43699 */ "A2_psubtnew\0"
  /* 43711 */ "A2_paddtnew\0"
  /* 43723 */ "A2_pandtnew\0"
  /* 43735 */ "A4_paslhtnew\0"
  /* 43748 */ "A4_pasrhtnew\0"
  /* 43761 */ "A4_psxthtnew\0"
  /* 43774 */ "A4_pzxthtnew\0"
  /* 43787 */ "A2_padditnew\0"
  /* 43800 */ "J2_jumptnew\0"
  /* 43812 */ "A2_tfrptnew\0"
  /* 43824 */ "A2_tfrtnew\0"
  /* 43835 */ "SA1_clrtnew\0"
  /* 43847 */ "A2_portnew\0"
  /* 43858 */ "A2_pxortnew\0"
  /* 43870 */ "J2_jumprtnew\0"
  /* 43883 */ "PS_jmprettnew\0"
  /* 43897 */ "M2_vabsdiffw\0"
  /* 43910 */ "V6_vabsdiffw\0"
  /* 43923 */ "A2_vnavgw\0"
  /* 43933 */ "V6_vnavgw\0"
  /* 43943 */ "A2_vavgw\0"
  /* 43952 */ "V6_vavgw\0"
  /* 43961 */ "V6_vsubhw\0"
  /* 43971 */ "V6_vaddhw\0"
  /* 43981 */ "V6_vgathermhw\0"
  /* 43995 */ "V6_vscattermhw\0"
  /* 44010 */ "S2_vsxthw\0"
  /* 44020 */ "S2_vzxthw\0"
  /* 44030 */ "V6_vsubuhw\0"
  /* 44041 */ "V6_vadduhw\0"
  /* 44052 */ "M7_dcmpyiw\0"
  /* 44063 */ "M7_wcmpyiw\0"
  /* 44074 */ "V6_vaslw\0"
  /* 44083 */ "PS_vmulw\0"
  /* 44092 */ "V6_vgathermw\0"
  /* 44105 */ "V6_vscattermw\0"
  /* 44119 */ "A4_vrminw\0"
  /* 44129 */ "A2_vminw\0"
  /* 44138 */ "V6_vminw\0"
  /* 44147 */ "V6_shuffeqw\0"
  /* 44159 */ "V6_veqw\0"
  /* 44167 */ "V6_vprefixqw\0"
  /* 44180 */ "V6_vasrw\0"
  /* 44189 */ "V6_vlsrw\0"
  /* 44198 */ "M7_dcmpyrw\0"
  /* 44209 */ "M7_wcmpyrw\0"
  /* 44220 */ "A2_vabsw\0"
  /* 44229 */ "V6_vabsw\0"
  /* 44238 */ "V6_lvsplatw\0"
  /* 44250 */ "V6_extractw\0"
  /* 44262 */ "V6_vgtw\0"
  /* 44270 */ "V6_vnormamtw\0"
  /* 44283 */ "A2_sxtw\0"
  /* 44291 */ "F2_conv_df2uw\0"
  /* 44305 */ "F2_conv_sf2uw\0"
  /* 44319 */ "A2_vavguw\0"
  /* 44329 */ "V6_vavguw\0"
  /* 44339 */ "A4_vrminuw\0"
  /* 44350 */ "A2_vminuw\0"
  /* 44360 */ "V6_MAP_equw\0"
  /* 44372 */ "V6_vgtuw\0"
  /* 44381 */ "A4_vrmaxuw\0"
  /* 44392 */ "A2_vmaxuw\0"
  /* 44402 */ "S2_asl_i_vw\0"
  /* 44414 */ "S2_asr_i_vw\0"
  /* 44426 */ "S2_lsr_i_vw\0"
  /* 44438 */ "S2_asl_r_vw\0"
  /* 44450 */ "S2_lsl_r_vw\0"
  /* 44462 */ "S2_asr_r_vw\0"
  /* 44474 */ "S2_lsr_r_vw\0"
  /* 44486 */ "A4_vrmaxw\0"
  /* 44496 */ "A2_vmaxw\0"
  /* 44505 */ "V6_vmaxw\0"
  /* 44514 */ "S2_tableidxw\0"
  /* 44527 */ "M4_pmpyw\0"
  /* 44536 */ "A2_max\0"
  /* 44543 */ "F2_dfmax\0"
  /* 44552 */ "F2_sfmax\0"
  /* 44561 */ "S2_tableidxb_goodsyntax\0"
  /* 44585 */ "S2_asr_i_p_rnd_goodsyntax\0"
  /* 44611 */ "S2_asr_i_r_rnd_goodsyntax\0"
  /* 44637 */ "S5_vasrhrnd_goodsyntax\0"
  /* 44660 */ "S2_tableidxd_goodsyntax\0"
  /* 44684 */ "S2_tableidxh_goodsyntax\0"
  /* 44708 */ "S5_asrhub_rnd_sat_goodsyntax\0"
  /* 44737 */ "S2_tableidxw_goodsyntax\0"
  /* 44761 */ "S4_or_andix\0"
  /* 44773 */ "F2_dfmpyfix\0"
  /* 44785 */ "V6_vrmpyzbb_rx\0"
  /* 44800 */ "V6_vrmpyzcb_rx\0"
  /* 44815 */ "V6_vrmpyznb_rx\0"
  /* 44830 */ "V6_vrmpyzbub_rx\0"
  /* 44846 */ "V6_vrmpyzcbs_rx\0"
  /* 44862 */ "SA1_addrx\0"
  /* 44872 */ "C2_mux\0"
  /* 44879 */ "C2_vmux\0"
  /* 44887 */ "V6_vmux\0"
  /* 44895 */ "A4_vcmpbeq_any\0"
  /* 44910 */ "A6_vcmpbeq_notany\0"
  /* 44928 */ "L6_memcpy\0"
  /* 44938 */ "M7_vdmpy\0"
  /* 44947 */ "F2_sfmpy\0"
  /* 44956 */ "V6_vsubcarry\0"
  /* 44969 */ "V6_vaddcarry\0"
  /* 44982 */ "S4_parity\0"
  /* 44992 */ "J2_jumprgtez\0"
  /* 45005 */ "J2_jumprltez\0"
  /* 45018 */ "A2_swiz\0"
  /* 45026 */ "J2_jumprnz\0"
  /* 45037 */ "SA1_combinerz\0"
  /* 45051 */ "J2_jumprz\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

extern const unsigned HexagonInstrNameIndices[] = {
    6128U, 6481U, 6895U, 6672U, 6213U, 6194U, 6222U, 6360U, 
    5988U, 6003U, 5940U, 6030U, 7235U, 5828U, 5953U, 6203U, 
    5699U, 8088U, 5771U, 7653U, 5591U, 5662U, 6753U, 6348U, 
    7582U, 5631U, 6850U, 6093U, 7571U, 5778U, 6823U, 6810U, 
    6921U, 7453U, 7476U, 6280U, 6327U, 6300U, 6239U, 5504U, 
    4917U, 6440U, 7906U, 7913U, 6467U, 6474U, 5569U, 7113U, 
    7076U, 5938U, 6126U, 8025U, 5838U, 7421U, 7179U, 7668U, 
    7196U, 7028U, 5271U, 7218U, 7593U, 7148U, 7700U, 5863U, 
    5245U, 5613U, 7612U, 6533U, 6946U, 5405U, 5349U, 5379U, 
    5390U, 5330U, 5360U, 5807U, 5791U, 7252U, 6044U, 6061U, 
    5520U, 4923U, 5575U, 5536U, 7118U, 7082U, 8009U, 6649U, 
    7992U, 6632U, 5471U, 4900U, 5691U, 5604U, 7440U, 5223U, 
    7282U, 7742U, 5263U, 7560U, 7548U, 7643U, 6085U, 7735U, 
    6017U, 7751U, 6266U, 7012U, 6998U, 6259U, 7005U, 6795U, 
    6788U, 7431U, 6729U, 5720U, 6713U, 5683U, 6721U, 5712U, 
    6705U, 5675U, 6745U, 6737U, 6118U, 6110U, 7339U, 7329U, 
    7319U, 7309U, 7359U, 7349U, 8039U, 8049U, 7369U, 7382U, 
    8059U, 8069U, 7395U, 7408U, 5429U, 4879U, 6382U, 4846U, 
    5323U, 7885U, 6446U, 7920U, 6150U, 6869U, 4482U, 6078U, 
    4474U, 0U, 5981U, 7727U, 5235U, 6132U, 6141U, 6770U, 
    6779U, 7159U, 6555U, 5872U, 6513U, 6523U, 5728U, 5743U, 
    6491U, 6502U, 5510U, 6158U, 6601U, 7961U, 6625U, 7985U, 
    7166U, 6890U, 7500U, 7528U, 7507U, 7043U, 8100U, 5920U, 
    8093U, 5902U, 6802U, 6762U, 5815U, 6272U, 7211U, 6665U, 
    7677U, 7019U, 7604U, 7630U, 7710U, 6908U, 5758U, 5292U, 
    5457U, 4886U, 6410U, 7892U, 6453U, 4852U, 7685U, 6965U, 
    6981U, 8079U, 5853U, 7467U, 5436U, 6389U, 5412U, 6365U, 
    7927U, 6567U, 5488U, 6424U, 5553U, 7098U, 7060U, 7944U, 
    6584U, 7968U, 6608U, 26257U, 41435U, 13000U, 40895U, 12828U, 
    43555U, 26151U, 12819U, 43543U, 18597U, 41074U, 43812U, 41338U, 
    43824U, 23043U, 23030U, 8779U, 19376U, 6688U, 6835U, 16387U, 
    19129U, 39502U, 42585U, 23138U, 20225U, 9U, 2446U, 2481U, 
    189U, 2456U, 2570U, 23056U, 23076U, 23117U, 23097U, 23151U, 
    23241U, 23869U, 23169U, 23205U, 23187U, 23223U, 23423U, 23491U, 
    24051U, 24119U, 23474U, 24102U, 23524U, 24518U, 24170U, 24937U, 
    23599U, 24605U, 24245U, 25024U, 23655U, 24670U, 24301U, 25089U, 
    23730U, 24757U, 24376U, 25176U, 23580U, 24583U, 24226U, 25002U, 
    23711U, 24735U, 24357U, 25154U, 23302U, 23930U, 25357U, 23343U, 
    23971U, 25398U, 23322U, 23950U, 25377U, 23363U, 23991U, 25418U, 
    23403U, 24031U, 25458U, 23281U, 23909U, 25336U, 23384U, 24012U, 
    25439U, 12570U, 40816U, 40966U, 33738U, 40865U, 41013U, 23261U, 
    23889U, 25316U, 43239U, 43266U, 30497U, 11488U, 16520U, 19226U, 
    2618U, 4250U, 26048U, 44938U, 10953U, 8145U, 8107U, 28105U, 
    13861U, 12421U, 16408U, 8117U, 15902U, 27484U, 15990U, 27572U, 
    16096U, 27678U, 16184U, 27766U, 15961U, 27543U, 16155U, 27737U, 
    34712U, 12430U, 12492U, 15931U, 27513U, 16019U, 27601U, 16049U, 
    27631U, 16125U, 27707U, 16213U, 27795U, 14614U, 26863U, 12484U, 
    26U, 15401U, 15582U, 15512U, 15646U, 15547U, 44083U, 10802U, 
    34723U, 15415U, 15596U, 15529U, 15660U, 15564U, 34734U, 44585U, 
    44611U, 23542U, 23803U, 24432U, 24188U, 23617U, 24263U, 23636U, 
    24282U, 23673U, 23825U, 24454U, 24319U, 23748U, 23847U, 24476U, 
    24394U, 23439U, 24498U, 23507U, 23786U, 24067U, 24897U, 24135U, 
    24917U, 44561U, 44660U, 44684U, 44737U, 24539U, 24822U, 25241U, 
    24958U, 24626U, 25045U, 24648U, 25067U, 24691U, 24847U, 25266U, 
    25110U, 24778U, 24872U, 25291U, 25197U, 23456U, 23561U, 24561U, 
    24207U, 24980U, 24084U, 23692U, 24713U, 24338U, 25132U, 24152U, 
    23767U, 24800U, 24413U, 25219U, 44708U, 44637U, 43218U, 30507U, 
    11499U, 8982U, 11548U, 28525U, 28626U, 14092U, 11635U, 28541U, 
    28702U, 44360U, 11959U, 28557U, 28825U, 39419U, 16414U, 34U, 
    141U, 2315U, 115U, 2294U, 151U, 2327U, 2275U, 2403U, 
    124U, 2305U, 160U, 2338U, 201U, 2361U, 2430U, 22490U, 
    2423U, 98U, 2284U, 170U, 2350U, 227U, 2382U, 2414U, 
    210U, 2372U, 236U, 2393U, 2438U, 179U, 218U, 35289U, 
    38074U, 36988U, 35313U, 37282U, 39234U, 37208U, 38111U, 35441U, 
    37345U, 39466U, 39406U, 38167U, 35006U, 38650U, 37779U, 37683U, 
    38200U, 38754U, 36929U, 38700U, 37809U, 37711U, 38266U, 38832U, 
    36573U, 39292U, 35755U, 36901U, 38233U, 38793U, 38299U, 38871U, 
    36591U, 39321U, 38457U, 38949U, 39221U, 38985U, 37839U, 37868U, 
    38424U, 38910U, 36269U, 38489U, 36250U, 38474U, 36289U, 38505U, 
    35792U, 37091U, 39001U, 36610U, 39336U, 39137U, 37652U, 35809U, 
    37182U, 39015U, 36627U, 39380U, 39151U, 25802U, 35095U, 36774U, 
    37034U, 36807U, 35346U, 36790U, 37300U, 36823U, 39452U, 36856U, 
    39265U, 36840U, 36873U, 39179U, 49U, 18U, 39192U, 35214U, 
    37077U, 36020U, 37977U, 36472U, 38716U, 35623U, 35168U, 36450U, 
    38666U, 36159U, 38333U, 36118U, 38316U, 36181U, 38351U, 36205U, 
    38371U, 36228U, 38390U, 35826U, 37267U, 20239U, 20259U, 20323U, 
    20280U, 20344U, 20302U, 37195U, 39029U, 39393U, 39165U, 35529U, 
    37566U, 35471U, 37443U, 39480U, 35228U, 37122U, 35427U, 37331U, 
    39367U, 36001U, 37962U, 39072U, 36355U, 38559U, 39121U, 35567U, 
    35108U, 35604U, 35153U, 36080U, 38025U, 36553U, 39105U, 36432U, 
    38620U, 37393U, 35923U, 37579U, 36139U, 37914U, 37947U, 36099U, 
    38040U, 36514U, 39058U, 37930U, 35884U, 35845U, 37376U, 35774U, 
    37047U, 35585U, 35138U, 37521U, 35718U, 35514U, 35904U, 37487U, 
    35661U, 35455U, 37537U, 36755U, 36644U, 36668U, 35700U, 35500U, 
    36394U, 38590U, 35866U, 37457U, 36495U, 39043U, 35081U, 37020U, 
    35331U, 39251U, 37232U, 39435U, 35035U, 36957U, 38055U, 38091U, 
    35274U, 37167U, 38148U, 38128U, 37249U, 36308U, 38520U, 36040U, 
    37993U, 35980U, 37635U, 36532U, 39088U, 36413U, 38605U, 35681U, 
    35485U, 36332U, 38540U, 35960U, 37619U, 36374U, 38574U, 37901U, 
    35122U, 35360U, 35392U, 37409U, 37471U, 37359U, 35940U, 37603U, 
    35377U, 37427U, 37552U, 35302U, 36688U, 37104U, 37725U, 36733U, 
    39349U, 36710U, 37502U, 37744U, 37882U, 37221U, 36942U, 35066U, 
    35019U, 37005U, 35241U, 35050U, 36972U, 37135U, 34993U, 38634U, 
    37764U, 37669U, 38184U, 38735U, 36916U, 38684U, 37794U, 37697U, 
    38250U, 38813U, 39278U, 36886U, 38216U, 38773U, 38282U, 38851U, 
    39306U, 38440U, 38929U, 39208U, 38969U, 37824U, 37854U, 38408U, 
    38891U, 35737U, 35542U, 36060U, 38009U, 35642U, 35183U, 23014U, 
    35198U, 37061U, 35257U, 37150U, 35410U, 37314U, 35556U, 37592U, 
    41U, 132U, 13199U, 11313U, 16291U, 28026U, 16469U, 8754U, 
    13959U, 27955U, 19001U, 8775U, 13980U, 16486U, 28039U, 18889U, 
    12768U, 34948U, 12783U, 34975U, 18686U, 12362U, 20607U, 20694U, 
    21203U, 21300U, 20676U, 21268U, 12327U, 20624U, 20711U, 21220U, 
    21317U, 20642U, 21335U, 30892U, 26239U, 34543U, 11317U, 13438U, 
    19497U, 13562U, 19670U, 13486U, 19575U, 13610U, 19748U, 19527U, 
    19700U, 19613U, 19786U, 16295U, 25537U, 34532U, 34208U, 13780U, 
    19824U, 11510U, 28030U, 25545U, 13639U, 13823U, 13453U, 19542U, 
    13577U, 19715U, 16473U, 43628U, 44536U, 26412U, 42652U, 26394U, 
    20063U, 25814U, 41602U, 26361U, 25616U, 34332U, 25978U, 26309U, 
    28128U, 28056U, 26159U, 12690U, 43442U, 12758U, 43518U, 34938U, 
    43787U, 34745U, 43711U, 12699U, 43454U, 34754U, 43723U, 12855U, 
    43578U, 41365U, 43847U, 12613U, 43430U, 34680U, 43699U, 12863U, 
    43589U, 41373U, 43858U, 34320U, 33812U, 8729U, 13907U, 9019U, 
    14104U, 8994U, 13423U, 19482U, 13547U, 19655U, 13467U, 19556U, 
    13591U, 19729U, 19512U, 19685U, 19594U, 19767U, 25508U, 18880U, 
    34194U, 13251U, 32232U, 32288U, 13413U, 32243U, 13384U, 13155U, 
    32211U, 32265U, 45018U, 8758U, 13963U, 44283U, 27959U, 30451U, 
    13516U, 19646U, 27875U, 19005U, 13870U, 34379U, 44220U, 34606U, 
    13233U, 32222U, 8819U, 32167U, 32277U, 43343U, 32461U, 13395U, 
    27377U, 28005U, 8868U, 27354U, 14028U, 28015U, 44319U, 30867U, 
    43943U, 27897U, 30844U, 26489U, 42528U, 26510U, 34827U, 42551U, 
    26583U, 34869U, 42573U, 19243U, 9112U, 14481U, 9049U, 14208U, 
    44392U, 44496U, 8569U, 13704U, 8962U, 14072U, 44350U, 44129U, 
    13364U, 27365U, 27994U, 43923U, 27885U, 30833U, 8808U, 9587U, 
    8797U, 9572U, 13137U, 32201U, 8787U, 32156U, 32254U, 43312U, 
    32451U, 28588U, 26166U, 13984U, 9230U, 19971U, 25793U, 34963U, 
    19116U, 16420U, 22496U, 26479U, 18606U, 34796U, 19048U, 42517U, 
    19152U, 26500U, 18629U, 34817U, 19071U, 42540U, 19177U, 16490U, 
    28043U, 18893U, 18749U, 29267U, 41532U, 41610U, 20127U, 25822U, 
    12718U, 43466U, 34890U, 43735U, 12728U, 43479U, 34900U, 43748U, 
    12593U, 43404U, 34660U, 43673U, 12738U, 43492U, 34910U, 43761U, 
    12603U, 43417U, 34670U, 43686U, 12748U, 43505U, 34920U, 43774U, 
    26573U, 18700U, 26531U, 18663U, 18737U, 33990U, 29255U, 34069U, 
    9220U, 25996U, 25527U, 13165U, 44895U, 18617U, 34806U, 19059U, 
    19164U, 18640U, 19082U, 19189U, 18711U, 19104U, 19213U, 14471U, 
    14197U, 44381U, 44486U, 13694U, 14061U, 44339U, 44119U, 7172U, 
    32178U, 44910U, 6876U, 25748U, 18723U, 29241U, 25756U, 4787U, 
    11517U, 19963U, 4809U, 28073U, 18906U, 34773U, 12961U, 12975U, 
    41501U, 41487U, 12772U, 34952U, 12787U, 34979U, 26542U, 18690U, 
    26038U, 34838U, 19094U, 26286U, 42563U, 19202U, 26383U, 19391U, 
    44872U, 16503U, 28064U, 18956U, 40902U, 28134U, 20120U, 29179U, 
    26174U, 19365U, 44879U, 28595U, 11217U, 11589U, 19979U, 28185U, 
    20134U, 12474U, 16397U, 41591U, 19140U, 26521U, 18652U, 4817U, 
    40909U, 28084U, 18918U, 34784U, 11904U, 20003U, 28463U, 20145U, 
    12300U, 4466U, 4578U, 2254U, 4445U, 4515U, 4564U, 4696U, 
    4719U, 4746U, 4760U, 4795U, 4832U, 4865U, 4939U, 5309U, 
    5648U, 5888U, 5967U, 7133U, 12622U, 12882U, 11287U, 25830U, 
    12909U, 12202U, 25866U, 44291U, 25940U, 43180U, 25904U, 11300U, 
    25848U, 12649U, 12216U, 25885U, 44305U, 25959U, 43193U, 25922U, 
    12635U, 12895U, 12676U, 12936U, 12663U, 12923U, 11379U, 32349U, 
    26551U, 12267U, 34847U, 22527U, 19928U, 22653U, 44543U, 20070U, 
    44773U, 13505U, 13656U, 19813U, 9001U, 11388U, 32360U, 26562U, 
    12278U, 34858U, 22538U, 12190U, 20108U, 29188U, 8124U, 8479U, 
    11227U, 32315U, 8492U, 19939U, 22664U, 8199U, 44552U, 20079U, 
    44947U, 8166U, 9010U, 25985U, 30440U, 25516U, 27864U, 6129U, 
    19805U, 12801U, 28096U, 12845U, 41355U, 39493U, 25785U, 12810U, 
    43531U, 41106U, 41042U, 29157U, 12872U, 43601U, 41120U, 41053U, 
    44992U, 41196U, 45005U, 41211U, 45026U, 41226U, 41382U, 43870U, 
    41165U, 41094U, 45051U, 41239U, 41065U, 43800U, 41151U, 41083U, 
    14552U, 41539U, 26799U, 41565U, 14576U, 41552U, 26809U, 41578U, 
    12440U, 18965U, 30461U, 18977U, 30473U, 18989U, 30485U, 106U, 
    2552U, 40447U, 33404U, 39647U, 32640U, 40047U, 33022U, 40690U, 
    33636U, 39847U, 32831U, 40247U, 33213U, 40380U, 33340U, 39580U, 
    32576U, 39980U, 32958U, 40623U, 33572U, 39780U, 32767U, 40180U, 
    33149U, 40334U, 33296U, 39534U, 32532U, 39934U, 32914U, 40577U, 
    33528U, 39734U, 32723U, 40134U, 33105U, 40468U, 33424U, 39668U, 
    32660U, 40068U, 33042U, 40711U, 33656U, 39868U, 32851U, 40268U, 
    33233U, 40402U, 33361U, 39602U, 32597U, 40002U, 32979U, 40645U, 
    33593U, 39802U, 32788U, 40202U, 33170U, 40357U, 33318U, 39557U, 
    32554U, 39957U, 32936U, 40600U, 33550U, 39757U, 32745U, 40157U, 
    33127U, 40510U, 33464U, 39689U, 32680U, 40089U, 33062U, 40753U, 
    33696U, 39889U, 32871U, 40289U, 33253U, 40424U, 33382U, 39624U, 
    32618U, 40024U, 33000U, 40667U, 33614U, 39824U, 32809U, 40224U, 
    33191U, 40489U, 33444U, 40732U, 33676U, 40532U, 33485U, 40775U, 
    33717U, 29166U, 19036U, 30517U, 40311U, 33274U, 39511U, 32510U, 
    39911U, 32892U, 40554U, 33506U, 39711U, 32701U, 40111U, 33083U, 
    12346U, 20438U, 27103U, 15870U, 27452U, 16640U, 28922U, 21034U, 
    27209U, 16064U, 27646U, 17538U, 29021U, 20364U, 27039U, 15806U, 
    27388U, 16530U, 28862U, 20394U, 27071U, 15838U, 27420U, 16560U, 
    28892U, 20379U, 27055U, 15822U, 27404U, 16545U, 28877U, 20409U, 
    27087U, 15854U, 27436U, 16575U, 28907U, 20594U, 27121U, 15888U, 
    27470U, 16657U, 28939U, 25553U, 20698U, 27165U, 15976U, 27558U, 
    17268U, 28980U, 25591U, 21190U, 27227U, 16082U, 27664U, 17555U, 
    29038U, 25637U, 21304U, 27271U, 16170U, 27752U, 17596U, 29079U, 
    25675U, 20680U, 27150U, 15946U, 27528U, 16684U, 28966U, 25578U, 
    21254U, 27256U, 16140U, 27722U, 17582U, 29065U, 25662U, 11455U, 
    20729U, 17295U, 21648U, 18021U, 21354U, 17710U, 22010U, 18326U, 
    20792U, 17342U, 21723U, 18077U, 21417U, 17757U, 22085U, 18382U, 
    20839U, 17389U, 21779U, 18133U, 21464U, 17804U, 22141U, 18438U, 
    20902U, 17436U, 21854U, 18189U, 21527U, 17851U, 22216U, 18494U, 
    20776U, 17326U, 21704U, 18058U, 21401U, 17741U, 22066U, 18363U, 
    20886U, 17420U, 21835U, 18170U, 21511U, 17835U, 22197U, 18475U, 
    20490U, 21086U, 22387U, 20525U, 21121U, 22422U, 20507U, 21103U, 
    22404U, 20542U, 21138U, 22439U, 20576U, 21172U, 22473U, 20472U, 
    21068U, 22369U, 22779U, 30598U, 22878U, 30697U, 22719U, 30538U, 
    22749U, 30568U, 22734U, 30553U, 22764U, 30583U, 11422U, 22796U, 
    29200U, 30615U, 22837U, 29280U, 30656U, 22895U, 29550U, 30714U, 
    22936U, 29591U, 30755U, 22823U, 29227U, 30642U, 22922U, 29577U, 
    30741U, 20560U, 21156U, 22457U, 30899U, 29307U, 31385U, 29864U, 
    31142U, 29618U, 31670U, 30169U, 30949U, 29354U, 31444U, 29920U, 
    31192U, 29665U, 31729U, 30225U, 30999U, 29401U, 31503U, 29976U, 
    31242U, 29712U, 31788U, 30281U, 31049U, 29448U, 31562U, 30032U, 
    31292U, 29759U, 31847U, 30337U, 30932U, 29338U, 31424U, 29901U, 
    31175U, 29649U, 31709U, 30206U, 31032U, 29432U, 31542U, 30013U, 
    31275U, 29743U, 31827U, 30318U, 20166U, 12558U, 40797U, 40948U, 
    32498U, 40846U, 40995U, 20455U, 21051U, 22352U, 44928U, 6742U, 
    15753U, 16450U, 1118U, 1825U, 1903U, 4092U, 364U, 2636U, 
    1144U, 1851U, 2022U, 4211U, 390U, 2662U, 2063U, 4238U, 
    404U, 2676U, 1928U, 4117U, 377U, 2649U, 328U, 256U, 
    417U, 2049U, 346U, 274U, 2116U, 4332U, 3372U, 4373U, 
    4040U, 15736U, 20088U, 25765U, 2196U, 4387U, 1968U, 4157U, 
    2225U, 4416U, 1995U, 4184U, 2210U, 4401U, 1981U, 4170U, 
    2239U, 4430U, 2008U, 4197U, 2156U, 4319U, 1106U, 3360U, 
    2183U, 4360U, 1813U, 4028U, 2142U, 4305U, 1093U, 3347U, 
    2169U, 4346U, 1800U, 4015U, 15744U, 576U, 2830U, 1297U, 
    3512U, 891U, 3145U, 1612U, 3827U, 699U, 2953U, 1420U, 
    3635U, 1014U, 3268U, 1735U, 3950U, 751U, 3005U, 1472U, 
    3687U, 1066U, 3320U, 1787U, 4002U, 504U, 2758U, 1225U, 
    3440U, 819U, 3073U, 1540U, 3755U, 678U, 2932U, 1399U, 
    3614U, 993U, 3247U, 1714U, 3929U, 632U, 2886U, 1353U, 
    3568U, 947U, 3201U, 1668U, 3883U, 720U, 2974U, 1441U, 
    3656U, 1035U, 3289U, 1756U, 3971U, 611U, 2865U, 1332U, 
    3547U, 926U, 3180U, 1647U, 3862U, 26351U, 4053U, 33795U, 
    540U, 2794U, 1261U, 3476U, 855U, 3109U, 1576U, 3791U, 
    664U, 2918U, 1385U, 3600U, 979U, 3233U, 1700U, 3915U, 
    468U, 2722U, 1189U, 3404U, 783U, 3037U, 1504U, 3719U, 
    593U, 2847U, 1314U, 3529U, 908U, 3162U, 1629U, 3844U, 
    19235U, 20098U, 25775U, 26328U, 558U, 2812U, 1279U, 3494U, 
    873U, 3127U, 1594U, 3809U, 737U, 2991U, 1458U, 3673U, 
    1052U, 3306U, 1773U, 3988U, 486U, 2740U, 1207U, 3422U, 
    801U, 3055U, 1522U, 3737U, 26340U, 521U, 2775U, 1242U, 
    3457U, 836U, 3090U, 1557U, 3772U, 649U, 2903U, 1370U, 
    3585U, 964U, 3218U, 1685U, 3900U, 449U, 2703U, 1170U, 
    3385U, 764U, 3018U, 1485U, 3700U, 15761U, 16459U, 10966U, 
    13306U, 43897U, 14628U, 26921U, 14646U, 26939U, 14664U, 26957U, 
    1915U, 4104U, 2035U, 4224U, 2075U, 4264U, 4490U, 32190U, 
    1940U, 4129U, 1877U, 4066U, 2088U, 4277U, 1954U, 4143U, 
    1890U, 19261U, 4079U, 19278U, 2102U, 4291U, 13223U, 14003U, 
    1130U, 9160U, 1837U, 9190U, 1156U, 9175U, 1863U, 9205U, 
    13016U, 19419U, 13036U, 19439U, 13052U, 19455U, 244U, 2130U, 
    11142U, 11600U, 19991U, 28195U, 28667U, 14322U, 11174U, 14334U, 
    11187U, 33761U, 16303U, 27908U, 4529U, 16317U, 27922U, 33778U, 
    11914U, 20014U, 28472U, 28791U, 44527U, 10843U, 14512U, 9872U, 
    292U, 2582U, 435U, 2689U, 310U, 2600U, 1079U, 3333U, 
    11924U, 20025U, 28481U, 11154U, 42435U, 42470U, 42459U, 42618U, 
    42494U, 42641U, 42447U, 42606U, 42482U, 42629U, 8312U, 8829U, 
    44052U, 10774U, 11239U, 9676U, 44198U, 10828U, 11263U, 9692U, 
    44063U, 12073U, 11251U, 11996U, 44209U, 12088U, 11275U, 12012U, 
    19407U, 28116U, 34763U, 12950U, 43614U, 41135U, 41445U, 43883U, 
    41180U, 31955U, 31996U, 32037U, 32078U, 31982U, 32064U, 31968U, 
    32105U, 32009U, 32023U, 32050U, 32122U, 32091U, 32139U, 2561U, 
    4611U, 7758U, 5080U, 4953U, 4669U, 7824U, 5154U, 5019U, 
    18941U, 12313U, 22620U, 9963U, 11679U, 9255U, 28253U, 11062U, 
    26830U, 10083U, 11799U, 9375U, 28365U, 34024U, 11110U, 14238U, 
    44402U, 22675U, 10008U, 11724U, 9300U, 28295U, 28731U, 26877U, 
    10128U, 11844U, 9420U, 28407U, 34039U, 14274U, 44438U, 22631U, 
    9978U, 11694U, 9270U, 28267U, 12043U, 26841U, 10098U, 11814U, 
    9390U, 28379U, 12058U, 20176U, 14250U, 44414U, 22697U, 10038U, 
    11754U, 9330U, 28323U, 28761U, 26899U, 10158U, 11874U, 9450U, 
    28435U, 34054U, 20194U, 14298U, 44462U, 42991U, 26403U, 20048U, 
    91U, 22577U, 2534U, 22593U, 8539U, 19891U, 25487U, 14697U, 
    26990U, 2268U, 22585U, 4459U, 22601U, 12515U, 42505U, 26136U, 
    26370U, 26093U, 41328U, 26123U, 26317U, 26079U, 12501U, 26266U, 
    22686U, 10023U, 11739U, 9315U, 28309U, 28746U, 26888U, 10143U, 
    11859U, 9435U, 28421U, 14286U, 44450U, 22642U, 9993U, 11709U, 
    9285U, 28281U, 11078U, 26852U, 10113U, 11829U, 9405U, 28393U, 
    11126U, 14262U, 44426U, 22708U, 10053U, 11769U, 9345U, 28337U, 
    28776U, 26910U, 10173U, 11889U, 9465U, 28449U, 14310U, 44474U, 
    19399U, 19636U, 26420U, 20744U, 17310U, 18039U, 20963U, 17481U, 
    18226U, 21574U, 17912U, 18531U, 21369U, 17725U, 18344U, 20807U, 
    17357U, 18095U, 21432U, 17772U, 18400U, 20823U, 17373U, 18114U, 
    21448U, 17788U, 18419U, 20854U, 17404U, 18151U, 20982U, 17500U, 
    18248U, 21593U, 17931U, 18553U, 21479U, 17819U, 18456U, 20917U, 
    17451U, 18207U, 21001U, 17519U, 18270U, 21612U, 17950U, 18575U, 
    21542U, 17866U, 18512U, 14709U, 27002U, 8266U, 13261U, 8587U, 
    13734U, 20628U, 27135U, 15916U, 27498U, 16670U, 28952U, 25565U, 
    21631U, 27300U, 16228U, 27810U, 18004U, 29106U, 25700U, 20715U, 
    27179U, 16004U, 27586U, 17281U, 28993U, 25603U, 20949U, 27194U, 
    16034U, 27616U, 17467U, 29007U, 25624U, 21224U, 27241U, 16110U, 
    27692U, 17568U, 29051U, 25649U, 21976U, 27318U, 16246U, 27828U, 
    18292U, 29123U, 25716U, 21321U, 27285U, 16198U, 27780U, 17609U, 
    29092U, 25687U, 21993U, 27336U, 16264U, 27846U, 18309U, 29140U, 
    25732U, 11471U, 8422U, 8923U, 9130U, 12230U, 14499U, 44514U, 
    14682U, 26975U, 14721U, 27014U, 8505U, 8668U, 13354U, 12462U, 
    13343U, 14381U, 32300U, 8412U, 19295U, 8901U, 19312U, 14440U, 
    19348U, 14160U, 19330U, 8689U, 13849U, 8466U, 8655U, 13082U, 
    44010U, 8377U, 14358U, 8400U, 14407U, 13092U, 44020U, 16353U, 
    18777U, 18836U, 18792U, 18851U, 16331U, 16364U, 19902U, 34689U, 
    26109U, 26274U, 26064U, 16512U, 14733U, 27026U, 16376U, 44761U, 
    18931U, 18807U, 18866U, 44982U, 30915U, 29322U, 31404U, 21666U, 
    29882U, 31082U, 29493U, 31601U, 21910U, 30069U, 31325U, 29790U, 
    31886U, 22272U, 30374U, 31158U, 29633U, 31689U, 22028U, 30187U, 
    30965U, 29369U, 31463U, 21741U, 29938U, 31208U, 29680U, 31748U, 
    22103U, 30243U, 30982U, 29385U, 31483U, 21760U, 29957U, 31225U, 
    29696U, 31768U, 22122U, 30262U, 31015U, 29416U, 31522U, 21797U, 
    29994U, 31102U, 29512U, 31624U, 21932U, 30091U, 31345U, 29809U, 
    31909U, 22294U, 30396U, 31258U, 29727U, 31807U, 22159U, 30299U, 
    31065U, 29463U, 31581U, 21872U, 30050U, 31122U, 29531U, 31647U, 
    21954U, 30113U, 31365U, 29828U, 31932U, 22316U, 30418U, 31308U, 
    29774U, 31866U, 22234U, 30355U, 11438U, 20646U, 20760U, 21685U, 
    21385U, 22047U, 21238U, 20870U, 21816U, 21495U, 22178U, 21339U, 
    20933U, 21891U, 21558U, 22253U, 22809U, 29213U, 30628U, 22963U, 
    29847U, 30782U, 22850U, 29293U, 30669U, 22864U, 29479U, 30683U, 
    22908U, 29563U, 30727U, 22980U, 30135U, 30799U, 22949U, 29604U, 
    30768U, 22997U, 30152U, 30816U, 16342U, 18762U, 18821U, 12449U, 
    9723U, 13124U, 27966U, 43299U, 13210U, 27980U, 43330U, 33928U, 
    33914U, 26296U, 12140U, 22609U, 9948U, 11664U, 9240U, 28239U, 
    11046U, 26819U, 10068U, 11784U, 9360U, 28351U, 11094U, 25495U, 
    26006U, 26022U, 16282U, 44862U, 26247U, 2490U, 12836U, 43566U, 
    41346U, 43835U, 18675U, 14538U, 14562U, 14586U, 14600U, 45037U, 
    30878U, 11166U, 11200U, 19027U, 2541U, 8745U, 13950U, 27947U, 
    8766U, 13971U, 4646U, 6168U, 7855U, 5189U, 5050U, 7797U, 
    5123U, 4992U, 21286U, 20661U, 12345U, 2469U, 12531U, 43371U, 
    32471U, 43640U, 20593U, 26197U, 21189U, 26211U, 21253U, 20155U, 
    12545U, 43388U, 32485U, 43657U, 20424U, 22338U, 12312U, 65U, 
    2508U, 26183U, 21020U, 26225U, 78U, 2521U, 41518U, 4601U, 
    44250U, 8717U, 13895U, 44238U, 11577U, 19914U, 40928U, 28174U, 
    19950U, 4499U, 4546U, 28655U, 13790U, 44147U, 14770U, 16614U, 
    41648U, 14746U, 15430U, 15150U, 17052U, 42048U, 17658U, 42311U, 
    14918U, 16820U, 41805U, 15048U, 16950U, 41941U, 15482U, 15446U, 
    15172U, 17074U, 42071U, 17674U, 42328U, 14939U, 16841U, 41827U, 
    15197U, 17099U, 42097U, 17882U, 42366U, 14963U, 16865U, 41852U, 
    15382U, 15125U, 17027U, 42022U, 17639U, 42291U, 14894U, 16796U, 
    41780U, 16590U, 41622U, 14806U, 16708U, 41687U, 15366U, 15103U, 
    17005U, 41999U, 17623U, 42274U, 14873U, 16775U, 41758U, 14783U, 
    15084U, 16986U, 41979U, 16627U, 41662U, 14840U, 16742U, 41723U, 
    14758U, 15611U, 15239U, 17141U, 42141U, 17969U, 42398U, 15003U, 
    16905U, 41894U, 15066U, 16968U, 41960U, 15325U, 17227U, 42231U, 
    15497U, 15627U, 15261U, 17163U, 42164U, 17985U, 42415U, 15024U, 
    16926U, 41916U, 15218U, 17120U, 42119U, 15344U, 17246U, 42251U, 
    17897U, 42382U, 14983U, 16885U, 41873U, 15304U, 17206U, 42209U, 
    16602U, 41635U, 14823U, 16725U, 41705U, 15286U, 17188U, 42190U, 
    15465U, 17693U, 42348U, 8701U, 33885U, 13319U, 8843U, 14014U, 
    43910U, 13879U, 33946U, 44229U, 34085U, 8257U, 42716U, 26654U, 
    26469U, 34110U, 42796U, 44969U, 22563U, 34644U, 13070U, 43287U, 
    13242U, 42754U, 26676U, 26604U, 34354U, 42858U, 43971U, 10745U, 
    13113U, 9740U, 34148U, 42827U, 33853U, 34404U, 42889U, 44041U, 
    10759U, 34631U, 42951U, 43352U, 42979U, 26698U, 26729U, 34594U, 
    42920U, 8558U, 15688U, 11988U, 41403U, 10501U, 41392U, 10486U, 
    43069U, 43081U, 41415U, 10517U, 13647U, 9769U, 42999U, 44074U, 
    10789U, 43141U, 22514U, 13831U, 9782U, 34218U, 34122U, 34234U, 
    34161U, 43009U, 34251U, 34175U, 34286U, 34461U, 44180U, 10815U, 
    14430U, 34304U, 34476U, 34269U, 34447U, 43151U, 20037U, 8346U, 
    12103U, 13404U, 12128U, 8878U, 12115U, 14038U, 12152U, 44329U, 
    12177U, 43952U, 12165U, 12396U, 13007U, 43171U, 43060U, 12409U, 
    19473U, 8529U, 43206U, 13629U, 11410U, 8189U, 32393U, 10203U, 
    42766U, 10664U, 8444U, 9542U, 42728U, 10646U, 34502U, 10314U, 
    34489U, 10281U, 34516U, 10332U, 34553U, 10352U, 34568U, 10371U, 
    13992U, 9795U, 8634U, 11524U, 28140U, 28602U, 13802U, 11611U, 
    28205U, 28678U, 44159U, 11935U, 28491U, 28801U, 13667U, 26614U, 
    43981U, 26739U, 44092U, 26770U, 8737U, 11536U, 28151U, 28614U, 
    13915U, 11623U, 28216U, 28690U, 9028U, 11564U, 28162U, 28642U, 
    14113U, 11651U, 28227U, 28718U, 44372U, 11975U, 28513U, 28841U, 
    44262U, 11947U, 28502U, 28813U, 41426U, 26709U, 30854U, 8546U, 
    15675U, 8680U, 13840U, 43019U, 44189U, 43161U, 4710U, 9090U, 
    19848U, 10976U, 15770U, 15724U, 14460U, 19862U, 10993U, 15788U, 
    16438U, 9121U, 14490U, 9059U, 14218U, 44505U, 8578U, 13713U, 
    8972U, 14082U, 44138U, 32382U, 10188U, 43092U, 42595U, 10571U, 
    43129U, 8355U, 9498U, 34366U, 8433U, 9527U, 34417U, 34432U, 
    32429U, 10251U, 43117U, 10729U, 42694U, 10632U, 14148U, 4586U, 
    14522U, 9886U, 10298U, 32324U, 32371U, 32440U, 10266U, 43040U, 
    10698U, 32336U, 13722U, 9841U, 14135U, 9810U, 13525U, 9755U, 
    8389U, 9512U, 14395U, 9101U, 9647U, 14370U, 9857U, 9037U, 
    9602U, 14419U, 9480U, 12028U, 11010U, 11030U, 9080U, 9633U, 
    42672U, 10602U, 14228U, 9827U, 12289U, 9708U, 43029U, 10683U, 
    44887U, 8336U, 13374U, 8857U, 43933U, 12382U, 43050U, 13923U, 
    44270U, 40940U, 28581U, 8289U, 13283U, 33870U, 33898U, 8623U, 
    13769U, 33975U, 33959U, 13936U, 8642U, 13810U, 44167U, 8178U, 
    41456U, 10532U, 32405U, 10219U, 19014U, 9931U, 43104U, 10712U, 
    42683U, 10617U, 9069U, 9618U, 41472U, 10552U, 15712U, 9915U, 
    42660U, 10586U, 41251U, 10389U, 44785U, 10856U, 41296U, 10446U, 
    44830U, 10913U, 41266U, 10408U, 44800U, 10875U, 41312U, 10466U, 
    44846U, 10933U, 41281U, 10427U, 44815U, 10894U, 28573U, 30529U, 
    8365U, 8888U, 8935U, 14171U, 14346U, 14122U, 15700U, 9899U, 
    43361U, 8912U, 14185U, 14450U, 8710U, 13680U, 11324U, 26628U, 
    43995U, 11342U, 26754U, 44105U, 11361U, 26784U, 13888U, 13272U, 
    12708U, 8325U, 8277U, 13332U, 8598U, 11397U, 8300U, 13294U, 
    13745U, 8248U, 42704U, 26643U, 26459U, 34098U, 42781U, 44956U, 
    22549U, 13146U, 42742U, 26665U, 26594U, 34342U, 42843U, 43961U, 
    13102U, 34135U, 42811U, 33836U, 34391U, 42873U, 44030U, 34618U, 
    42935U, 43321U, 42967U, 26687U, 26719U, 34582U, 42905U, 25478U, 
    9143U, 9662U, 32417U, 10235U, 8455U, 9557U, 8517U, 13535U, 
    8610U, 13756U, 8949U, 14048U, 4774U, 19834U, 26445U, 19876U, 
    4733U, 33819U, 26431U, 34006U, 28854U, 9153U, 14531U, 14796U, 
    16698U, 41676U, 14858U, 16760U, 41742U, 34700U, 27936U, 19252U, 
    8133U, 8233U, 20212U, 8213U, 8155U, 8223U, 11208U, 34880U, 
    34930U, 13177U, 12243U, 13188U, 12992U, 56U, 2499U, 34204U, 
    34190U, 19632U, 12252U, 
};

static inline void InitHexagonMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(HexagonInsts, HexagonInstrNameIndices, HexagonInstrNameData, nullptr, nullptr, 3091);
}

} // end namespace llvm
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct HexagonGenInstrInfo : public TargetInstrInfo {
  explicit HexagonGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~HexagonGenInstrInfo() override = default;

};
} // end namespace llvm
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_HELPER_DECLS
#undef GET_INSTRINFO_HELPER_DECLS


#endif // GET_INSTRINFO_HELPER_DECLS

#ifdef GET_INSTRINFO_HELPERS
#undef GET_INSTRINFO_HELPERS

#endif // GET_INSTRINFO_HELPERS

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc HexagonInsts[];
extern const unsigned HexagonInstrNameIndices[];
extern const char HexagonInstrNameData[];
HexagonGenInstrInfo::HexagonGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(HexagonInsts, HexagonInstrNameIndices, HexagonInstrNameData, nullptr, nullptr, 3091);
}
} // end namespace llvm
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace Hexagon {
namespace OpName {
enum {
  OPERAND_LAST
};
} // end namespace OpName
} // end namespace Hexagon
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace Hexagon {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace Hexagon
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace Hexagon {
namespace OpTypes {
enum OperandType {
  a30_2Imm = 0,
  b13_2Imm = 1,
  b15_2Imm = 2,
  b30_2Imm = 3,
  bblabel = 4,
  f32Imm = 5,
  f32imm = 6,
  f64Imm = 7,
  f64imm = 8,
  globaladdress = 9,
  globaladdressExt = 10,
  i16imm = 11,
  i1imm = 12,
  i32imm = 13,
  i64imm = 14,
  i8imm = 15,
  m32_0Imm = 16,
  n1Const = 17,
  ptype0 = 18,
  ptype1 = 19,
  ptype2 = 20,
  ptype3 = 21,
  ptype4 = 22,
  ptype5 = 23,
  s27_2Imm = 24,
  s29_3Imm = 25,
  s30_2Imm = 26,
  s31_1Imm = 27,
  s32_0Imm = 28,
  s3_0Imm = 29,
  s4_0Imm = 30,
  s4_1Imm = 31,
  s4_2Imm = 32,
  s4_3Imm = 33,
  s6_0Imm = 34,
  s6_3Imm = 35,
  s8_0Imm = 36,
  s9_0Imm = 37,
  type0 = 38,
  type1 = 39,
  type2 = 40,
  type3 = 41,
  type4 = 42,
  type5 = 43,
  u10_0Imm = 44,
  u11_3Imm = 45,
  u16_0Imm = 46,
  u1_0Imm = 47,
  u26_6Imm = 48,
  u29_3Imm = 49,
  u2_0Imm = 50,
  u30_2Imm = 51,
  u31_1Imm = 52,
  u32_0Imm = 53,
  u3_0Imm = 54,
  u3_1Imm = 55,
  u4_0Imm = 56,
  u4_2Imm = 57,
  u5_0Imm = 58,
  u5_2Imm = 59,
  u5_3Imm = 60,
  u64_0Imm = 61,
  u6_0Imm = 62,
  u6_1Imm = 63,
  u6_2Imm = 64,
  u7_0Imm = 65,
  u8_0Imm = 66,
  untyped_imm_0 = 67,
  CtrRegs = 68,
  CtrRegs64 = 69,
  DoubleRegs = 70,
  GeneralDoubleLow8Regs = 71,
  GeneralSubRegs = 72,
  GuestRegs = 73,
  GuestRegs64 = 74,
  HvxQR = 75,
  HvxVQR = 76,
  HvxVR = 77,
  HvxWR = 78,
  IntRegs = 79,
  IntRegsLow8 = 80,
  ModRegs = 81,
  PredRegs = 82,
  UsrBits = 83,
  V62Regs = 84,
  V65Regs = 85,
  VectRegRev = 86,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace Hexagon
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRINFO_OPERAND_TYPE
#undef GET_INSTRINFO_OPERAND_TYPE
namespace llvm {
namespace Hexagon {
LLVM_READONLY
static int getOperandType(uint16_t Opcode, uint16_t OpIdx) {
  const uint16_t Offsets[] = {
    0,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    5,
    8,
    12,
    13,
    17,
    20,
    20,
    20,
    21,
    23,
    25,
    25,
    26,
    27,
    31,
    33,
    33,
    39,
    40,
    41,
    44,
    44,
    46,
    47,
    47,
    47,
    47,
    47,
    47,
    49,
    52,
    52,
    55,
    58,
    61,
    64,
    67,
    70,
    73,
    76,
    79,
    82,
    83,
    84,
    86,
    88,
    91,
    93,
    97,
    99,
    101,
    103,
    105,
    107,
    109,
    111,
    113,
    115,
    117,
    119,
    121,
    122,
    124,
    126,
    128,
    133,
    138,
    143,
    145,
    150,
    155,
    159,
    162,
    165,
    168,
    171,
    174,
    177,
    180,
    183,
    186,
    189,
    192,
    195,
    198,
    200,
    202,
    203,
    204,
    205,
    207,
    209,
    211,
    213,
    214,
    217,
    219,
    222,
    224,
    227,
    230,
    233,
    237,
    241,
    245,
    249,
    253,
    257,
    262,
    266,
    271,
    275,
    280,
    284,
    289,
    293,
    297,
    300,
    303,
    306,
    309,
    312,
    315,
    318,
    321,
    325,
    329,
    333,
    337,
    341,
    345,
    349,
    353,
    356,
    359,
    362,
    366,
    370,
    373,
    376,
    379,
    382,
    384,
    386,
    388,
    390,
    392,
    394,
    396,
    398,
    400,
    402,
    404,
    406,
    408,
    411,
    413,
    416,
    419,
    422,
    425,
    428,
    431,
    434,
    437,
    440,
    443,
    446,
    449,
    451,
    452,
    455,
    459,
    462,
    466,
    468,
    470,
    472,
    474,
    476,
    478,
    480,
    482,
    484,
    486,
    488,
    490,
    492,
    494,
    496,
    498,
    500,
    503,
    506,
    509,
    512,
    515,
    518,
    522,
    524,
    526,
    528,
    532,
    536,
    540,
    543,
    546,
    548,
    550,
    552,
    554,
    556,
    558,
    560,
    562,
    564,
    566,
    568,
    570,
    572,
    575,
    577,
    579,
    581,
    584,
    587,
    589,
    592,
    595,
    597,
    600,
    603,
    606,
    609,
    612,
    615,
    617,
    620,
    622,
    624,
    627,
    630,
    633,
    636,
    638,
    639,
    640,
    641,
    642,
    642,
    642,
    642,
    644,
    646,
    648,
    650,
    651,
    654,
    657,
    659,
    661,
    663,
    665,
    667,
    669,
    671,
    673,
    675,
    677,
    680,
    683,
    686,
    689,
    692,
    695,
    698,
    701,
    704,
    707,
    710,
    713,
    716,
    719,
    722,
    725,
    728,
    731,
    734,
    737,
    740,
    743,
    746,
    749,
    751,
    753,
    755,
    757,
    759,
    761,
    763,
    765,
    767,
    769,
    771,
    773,
    775,
    777,
    779,
    781,
    783,
    785,
    787,
    789,
    791,
    792,
    793,
    794,
    795,
    796,
    797,
    799,
    801,
    803,
    803,
    803,
    806,
    809,
    812,
    815,
    819,
    822,
    825,
    828,
    832,
    834,
    837,
    838,
    838,
    839,
    842,
    846,
    852,
    857,
    863,
    868,
    874,
    879,
    885,
    890,
    896,
    901,
    907,
    912,
    916,
    917,
    918,
    924,
    929,
    935,
    940,
    946,
    951,
    957,
    962,
    968,
    973,
    974,
    975,
    976,
    977,
    980,
    983,
    986,
    989,
    992,
    995,
    999,
    1003,
    1006,
    1009,
    1012,
    1015,
    1018,
    1022,
    1025,
    1028,
    1031,
    1034,
    1037,
    1040,
    1043,
    1046,
    1049,
    1052,
    1055,
    1058,
    1061,
    1064,
    1067,
    1070,
    1073,
    1076,
    1078,
    1080,
    1082,
    1084,
    1086,
    1088,
    1090,
    1092,
    1097,
    1102,
    1107,
    1112,
    1115,
    1118,
    1121,
    1124,
    1127,
    1130,
    1133,
    1136,
    1139,
    1142,
    1145,
    1148,
    1151,
    1154,
    1157,
    1160,
    1162,
    1165,
    1168,
    1171,
    1174,
    1176,
    1179,
    1182,
    1185,
    1188,
    1190,
    1193,
    1196,
    1199,
    1202,
    1205,
    1208,
    1209,
    1212,
    1215,
    1218,
    1222,
    1226,
    1230,
    1233,
    1237,
    1241,
    1245,
    1248,
    1252,
    1256,
    1260,
    1263,
    1265,
    1267,
    1270,
    1273,
    1276,
    1279,
    1282,
    1285,
    1287,
    1289,
    1292,
    1295,
    1298,
    1301,
    1304,
    1307,
    1309,
    1311,
    1313,
    1315,
    1317,
    1320,
    1323,
    1326,
    1329,
    1331,
    1334,
    1337,
    1340,
    1343,
    1345,
    1348,
    1351,
    1353,
    1355,
    1358,
    1361,
    1364,
    1367,
    1369,
    1371,
    1373,
    1375,
    1377,
    1379,
    1381,
    1384,
    1387,
    1391,
    1395,
    1398,
    1401,
    1404,
    1407,
    1411,
    1415,
    1418,
    1421,
    1425,
    1428,
    1432,
    1435,
    1438,
    1441,
    1444,
    1447,
    1451,
    1454,
    1457,
    1460,
    1463,
    1466,
    1470,
    1474,
    1477,
    1480,
    1484,
    1487,
    1491,
    1494,
    1498,
    1501,
    1505,
    1508,
    1511,
    1515,
    1518,
    1521,
    1525,
    1529,
    1532,
    1535,
    1539,
    1542,
    1545,
    1547,
    1550,
    1553,
    1556,
    1559,
    1562,
    1565,
    1568,
    1571,
    1574,
    1577,
    1580,
    1583,
    1585,
    1587,
    1588,
    1589,
    1592,
    1594,
    1596,
    1600,
    1603,
    1607,
    1610,
    1614,
    1617,
    1621,
    1624,
    1628,
    1631,
    1635,
    1638,
    1642,
    1645,
    1649,
    1652,
    1656,
    1659,
    1663,
    1666,
    1670,
    1675,
    1679,
    1684,
    1688,
    1693,
    1696,
    1699,
    1702,
    1705,
    1708,
    1711,
    1714,
    1717,
    1720,
    1723,
    1726,
    1729,
    1732,
    1735,
    1739,
    1742,
    1745,
    1749,
    1752,
    1755,
    1759,
    1762,
    1766,
    1769,
    1773,
    1776,
    1780,
    1783,
    1787,
    1790,
    1793,
    1797,
    1800,
    1804,
    1807,
    1810,
    1814,
    1817,
    1821,
    1824,
    1827,
    1831,
    1835,
    1838,
    1842,
    1845,
    1849,
    1852,
    1855,
    1859,
    1862,
    1866,
    1869,
    1873,
    1876,
    1879,
    1882,
    1886,
    1890,
    1894,
    1897,
    1901,
    1904,
    1908,
    1911,
    1915,
    1918,
    1921,
    1924,
    1927,
    1930,
    1932,
    1934,
    1937,
    1940,
    1943,
    1946,
    1949,
    1952,
    1955,
    1958,
    1960,
    1964,
    1967,
    1971,
    1974,
    1979,
    1983,
    1987,
    1990,
    1994,
    1997,
    2001,
    2004,
    2008,
    2011,
    2016,
    2020,
    2024,
    2027,
    2030,
    2033,
    2036,
    2039,
    2042,
    2045,
    2048,
    2053,
    2057,
    2060,
    2063,
    2066,
    2068,
    2072,
    2076,
    2081,
    2085,
    2089,
    2093,
    2097,
    2102,
    2107,
    2109,
    2112,
    2114,
    2117,
    2119,
    2122,
    2125,
    2128,
    2131,
    2134,
    2137,
    2141,
    2145,
    2148,
    2151,
    2154,
    2157,
    2161,
    2165,
    2168,
    2171,
    2174,
    2177,
    2180,
    2183,
    2186,
    2189,
    2192,
    2195,
    2198,
    2201,
    2204,
    2208,
    2212,
    2215,
    2218,
    2222,
    2225,
    2229,
    2232,
    2236,
    2239,
    2244,
    2246,
    2248,
    2251,
    2254,
    2256,
    2258,
    2260,
    2262,
    2263,
    2265,
    2266,
    2269,
    2272,
    2275,
    2278,
    2280,
    2282,
    2284,
    2286,
    2288,
    2290,
    2293,
    2296,
    2299,
    2302,
    2305,
    2308,
    2311,
    2314,
    2316,
    2319,
    2322,
    2325,
    2328,
    2331,
    2334,
    2337,
    2340,
    2343,
    2346,
    2349,
    2352,
    2355,
    2357,
    2359,
    2361,
    2364,
    2367,
    2370,
    2373,
    2376,
    2379,
    2382,
    2385,
    2388,
    2391,
    2394,
    2397,
    2400,
    2403,
    2406,
    2409,
    2412,
    2415,
    2418,
    2421,
    2424,
    2427,
    2429,
    2431,
    2434,
    2437,
    2440,
    2443,
    2446,
    2449,
    2452,
    2455,
    2458,
    2461,
    2464,
    2467,
    2470,
    2473,
    2475,
    2477,
    2477,
    2479,
    2482,
    2485,
    2488,
    2492,
    2496,
    2500,
    2504,
    2508,
    2512,
    2516,
    2520,
    2524,
    2528,
    2532,
    2536,
    2540,
    2544,
    2548,
    2552,
    2556,
    2560,
    2564,
    2568,
    2572,
    2576,
    2580,
    2584,
    2586,
    2588,
    2590,
    2592,
    2594,
    2596,
    2599,
    2602,
    2605,
    2608,
    2611,
    2614,
    2617,
    2620,
    2623,
    2626,
    2629,
    2632,
    2635,
    2638,
    2641,
    2644,
    2647,
    2650,
    2653,
    2656,
    2659,
    2662,
    2665,
    2668,
    2671,
    2673,
    2675,
    2677,
    2679,
    2681,
    2683,
    2686,
    2689,
    2691,
    2693,
    2695,
    2697,
    2699,
    2701,
    2704,
    2707,
    2710,
    2713,
    2716,
    2719,
    2722,
    2725,
    2728,
    2731,
    2734,
    2737,
    2740,
    2743,
    2746,
    2749,
    2752,
    2755,
    2758,
    2761,
    2764,
    2767,
    2770,
    2773,
    2776,
    2779,
    2782,
    2784,
    2787,
    2790,
    2793,
    2796,
    2799,
    2802,
    2805,
    2808,
    2811,
    2814,
    2817,
    2820,
    2823,
    2826,
    2829,
    2832,
    2835,
    2838,
    2841,
    2845,
    2848,
    2852,
    2855,
    2858,
    2861,
    2864,
    2867,
    2870,
    2873,
    2876,
    2879,
    2881,
    2886,
    2889,
    2892,
    2895,
    2898,
    2901,
    2904,
    2907,
    2910,
    2913,
    2916,
    2919,
    2922,
    2925,
    2928,
    2931,
    2934,
    2937,
    2940,
    2943,
    2946,
    2949,
    2952,
    2955,
    2956,
    2959,
    2962,
    2965,
    2968,
    2971,
    2974,
    2977,
    2980,
    2983,
    2986,
    2989,
    2992,
    2995,
    2998,
    3001,
    3004,
    3007,
    3010,
    3013,
    3016,
    3019,
    3022,
    3025,
    3028,
    3031,
    3034,
    3037,
    3040,
    3043,
    3046,
    3049,
    3052,
    3055,
    3058,
    3061,
    3066,
    3068,
    3070,
    3073,
    3076,
    3079,
    3082,
    3085,
    3088,
    3091,
    3094,
    3097,
    3100,
    3103,
    3106,
    3110,
    3114,
    3118,
    3122,
    3126,
    3130,
    3134,
    3138,
    3143,
    3146,
    3149,
    3153,
    3156,
    3159,
    3162,
    3165,
    3167,
    3170,
    3173,
    3175,
    3178,
    3181,
    3184,
    3188,
    3192,
    3196,
    3200,
    3203,
    3206,
    3209,
    3212,
    3215,
    3218,
    3221,
    3224,
    3227,
    3230,
    3233,
    3236,
    3239,
    3241,
    3245,
    3249,
    3253,
    3257,
    3259,
    3262,
    3265,
    3267,
    3269,
    3272,
    3276,
    3279,
    3281,
    3285,
    3289,
    3293,
    3297,
    3300,
    3303,
    3306,
    3309,
    3312,
    3315,
    3318,
    3321,
    3324,
    3327,
    3330,
    3334,
    3338,
    3342,
    3346,
    3347,
    3349,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3351,
    3352,
    3354,
    3356,
    3358,
    3360,
    3362,
    3364,
    3366,
    3368,
    3370,
    3372,
    3374,
    3376,
    3378,
    3380,
    3382,
    3384,
    3386,
    3388,
    3390,
    3392,
    3394,
    3396,
    3398,
    3400,
    3402,
    3404,
    3407,
    3410,
    3413,
    3416,
    3419,
    3422,
    3424,
    3426,
    3429,
    3432,
    3435,
    3439,
    3443,
    3446,
    3449,
    3452,
    3455,
    3458,
    3461,
    3464,
    3467,
    3470,
    3473,
    3475,
    3479,
    3483,
    3488,
    3492,
    3496,
    3498,
    3500,
    3503,
    3506,
    3509,
    3512,
    3516,
    3519,
    3521,
    3523,
    3525,
    3527,
    3529,
    3530,
    3532,
    3533,
    3535,
    3537,
    3539,
    3540,
    3542,
    3544,
    3546,
    3548,
    3549,
    3551,
    3553,
    3555,
    3557,
    3559,
    3561,
    3563,
    3565,
    3567,
    3569,
    3571,
    3573,
    3575,
    3577,
    3579,
    3581,
    3583,
    3585,
    3587,
    3589,
    3591,
    3593,
    3595,
    3597,
    3599,
    3601,
    3603,
    3605,
    3606,
    3608,
    3610,
    3612,
    3614,
    3616,
    3618,
    3619,
    3622,
    3625,
    3628,
    3631,
    3634,
    3637,
    3640,
    3643,
    3646,
    3649,
    3652,
    3655,
    3658,
    3661,
    3664,
    3667,
    3670,
    3673,
    3676,
    3679,
    3682,
    3685,
    3688,
    3691,
    3694,
    3697,
    3700,
    3703,
    3706,
    3709,
    3712,
    3715,
    3718,
    3721,
    3724,
    3727,
    3730,
    3733,
    3736,
    3739,
    3742,
    3745,
    3748,
    3751,
    3754,
    3757,
    3760,
    3763,
    3766,
    3769,
    3772,
    3775,
    3778,
    3781,
    3784,
    3787,
    3790,
    3793,
    3796,
    3799,
    3802,
    3805,
    3808,
    3811,
    3814,
    3817,
    3820,
    3823,
    3826,
    3829,
    3832,
    3835,
    3838,
    3841,
    3844,
    3847,
    3850,
    3853,
    3856,
    3859,
    3862,
    3865,
    3868,
    3871,
    3874,
    3877,
    3880,
    3883,
    3886,
    3889,
    3892,
    3895,
    3898,
    3901,
    3904,
    3907,
    3910,
    3913,
    3916,
    3919,
    3922,
    3925,
    3928,
    3931,
    3934,
    3935,
    3938,
    3941,
    3943,
    3945,
    3947,
    3949,
    3951,
    3953,
    3955,
    3957,
    3959,
    3961,
    3963,
    3965,
    3967,
    3971,
    3976,
    3982,
    3987,
    3992,
    3997,
    4001,
    4006,
    4012,
    4017,
    4022,
    4027,
    4030,
    4034,
    4039,
    4043,
    4047,
    4051,
    4054,
    4058,
    4063,
    4067,
    4071,
    4075,
    4078,
    4082,
    4087,
    4091,
    4095,
    4099,
    4102,
    4106,
    4111,
    4115,
    4119,
    4123,
    4126,
    4130,
    4135,
    4139,
    4143,
    4147,
    4149,
    4152,
    4156,
    4161,
    4165,
    4169,
    4173,
    4175,
    4178,
    4182,
    4187,
    4191,
    4195,
    4199,
    4201,
    4204,
    4208,
    4213,
    4217,
    4221,
    4225,
    4227,
    4230,
    4234,
    4239,
    4243,
    4247,
    4251,
    4253,
    4256,
    4260,
    4265,
    4269,
    4273,
    4277,
    4279,
    4281,
    4285,
    4290,
    4294,
    4299,
    4303,
    4308,
    4312,
    4317,
    4321,
    4326,
    4330,
    4335,
    4339,
    4344,
    4348,
    4353,
    4357,
    4362,
    4366,
    4371,
    4375,
    4380,
    4384,
    4389,
    4393,
    4398,
    4402,
    4407,
    4411,
    4416,
    4420,
    4425,
    4429,
    4434,
    4438,
    4443,
    4447,
    4452,
    4456,
    4461,
    4465,
    4470,
    4474,
    4479,
    4483,
    4488,
    4492,
    4497,
    4500,
    4503,
    4506,
    4509,
    4512,
    4515,
    4518,
    4521,
    4524,
    4527,
    4530,
    4533,
    4536,
    4539,
    4542,
    4545,
    4548,
    4551,
    4555,
    4560,
    4564,
    4569,
    4572,
    4576,
    4579,
    4583,
    4586,
    4590,
    4593,
    4597,
    4599,
    4602,
    4606,
    4610,
    4613,
    4617,
    4621,
    4624,
    4628,
    4632,
    4635,
    4639,
    4643,
    4646,
    4650,
    4654,
    4657,
    4661,
    4665,
    4668,
    4671,
    4674,
    4677,
    4682,
    4685,
    4690,
    4693,
    4698,
    4701,
    4706,
    4709,
    4714,
    4717,
    4722,
    4725,
    4730,
    4733,
    4738,
    4741,
    4746,
    4749,
    4754,
    4757,
    4762,
    4765,
    4770,
    4773,
    4778,
    4781,
    4786,
    4789,
    4794,
    4797,
    4802,
    4805,
    4810,
    4813,
    4818,
    4821,
    4826,
    4829,
    4834,
    4837,
    4842,
    4845,
    4850,
    4853,
    4858,
    4861,
    4866,
    4868,
    4871,
    4874,
    4877,
    4880,
    4883,
    4886,
    4889,
    4892,
    4895,
    4898,
    4900,
    4904,
    4908,
    4912,
    4916,
    4920,
    4924,
    4928,
    4932,
    4935,
    4938,
    4941,
    4944,
    4947,
    4950,
    4953,
    4956,
    4959,
    4962,
    4966,
    4970,
    4974,
    4978,
    4982,
    4986,
    4989,
    4992,
    4996,
    5000,
    5003,
    5006,
    5009,
    5012,
    5015,
    5019,
    5023,
    5027,
    5031,
    5035,
    5039,
    5043,
    5047,
    5051,
    5055,
    5059,
    5063,
    5067,
    5071,
    5075,
    5079,
    5083,
    5087,
    5091,
    5094,
    5097,
    5100,
    5103,
    5106,
    5109,
    5112,
    5115,
    5118,
    5121,
    5124,
    5127,
    5130,
    5133,
    5136,
    5139,
    5143,
    5147,
    5151,
    5155,
    5159,
    5163,
    5167,
    5171,
    5175,
    5179,
    5183,
    5187,
    5191,
    5195,
    5199,
    5203,
    5207,
    5210,
    5213,
    5216,
    5219,
    5222,
    5225,
    5228,
    5231,
    5235,
    5239,
    5243,
    5247,
    5251,
    5255,
    5259,
    5263,
    5267,
    5271,
    5275,
    5279,
    5283,
    5287,
    5291,
    5295,
    5298,
    5301,
    5304,
    5307,
    5310,
    5313,
    5316,
    5319,
    5322,
    5325,
    5328,
    5331,
    5334,
    5337,
    5340,
    5343,
    5346,
    5349,
    5352,
    5355,
    5358,
    5361,
    5364,
    5367,
    5370,
    5373,
    5376,
    5380,
    5384,
    5388,
    5392,
    5396,
    5400,
    5404,
    5408,
    5411,
    5414,
    5417,
    5420,
    5423,
    5426,
    5429,
    5432,
    5436,
    5440,
    5444,
    5448,
    5452,
    5456,
    5460,
    5464,
    5467,
    5470,
    5473,
    5476,
    5479,
    5482,
    5485,
    5488,
    5491,
    5494,
    5497,
    5500,
    5504,
    5508,
    5512,
    5516,
    5520,
    5524,
    5528,
    5532,
    5535,
    5538,
    5541,
    5544,
    5547,
    5550,
    5553,
    5556,
    5560,
    5564,
    5568,
    5572,
    5576,
    5580,
    5584,
    5588,
    5591,
    5595,
    5599,
    5603,
    5607,
    5611,
    5615,
    5619,
    5623,
    5626,
    5629,
    5632,
    5635,
    5638,
    5641,
    5644,
    5647,
    5651,
    5655,
    5659,
    5663,
    5667,
    5671,
    5675,
    5679,
    5683,
    5687,
    5691,
    5694,
    5697,
    5701,
    5705,
    5708,
    5711,
    5714,
    5717,
    5721,
    5725,
    5728,
    5731,
    5734,
    5737,
    5741,
    5745,
    5749,
    5753,
    5757,
    5761,
    5765,
    5769,
    5772,
    5775,
    5778,
    5781,
    5784,
    5787,
    5790,
    5793,
    5796,
    5799,
    5803,
    5807,
    5811,
    5815,
    5818,
    5821,
    5824,
    5827,
    5831,
    5835,
    5838,
    5841,
    5844,
    5847,
    5851,
    5854,
    5858,
    5862,
    5866,
    5870,
    5874,
    5877,
    5880,
    5883,
    5886,
    5890,
    5894,
    5898,
    5902,
    5906,
    5910,
    5914,
    5918,
    5922,
    5926,
    5930,
    5933,
    5937,
    5940,
    5944,
    5948,
    5952,
    5955,
    5958,
    5962,
    5966,
    5969,
    5972,
    5976,
    5980,
    5984,
    5988,
    5992,
    5995,
    5999,
    6003,
    6006,
    6009,
    6013,
    6017,
    6020,
    6023,
    6026,
    6029,
    6032,
    6036,
    6039,
    6043,
    6046,
    6050,
    6053,
    6057,
    6060,
    6063,
    6066,
    6069,
    6072,
    6075,
    6078,
    6081,
    6082,
    6083,
    6084,
    6086,
    6088,
    6090,
    6092,
    6094,
    6096,
    6098,
    6100,
    6102,
    6104,
    6106,
    6108,
    6110,
    6112,
    6114,
    6116,
    6118,
    6120,
    6122,
    6124,
    6125,
    6126,
    6127,
    6128,
    6129,
    6130,
    6131,
    6132,
    6133,
    6137,
    6140,
    6143,
    6147,
    6151,
    6155,
    6159,
    6163,
    6166,
    6170,
    6174,
    6178,
    6182,
    6185,
    6189,
    6192,
    6195,
    6198,
    6202,
    6206,
    6210,
    6214,
    6218,
    6221,
    6225,
    6229,
    6233,
    6237,
    6240,
    6243,
    6246,
    6249,
    6253,
    6257,
    6261,
    6265,
    6268,
    6271,
    6275,
    6279,
    6283,
    6287,
    6290,
    6293,
    6296,
    6299,
    6302,
    6306,
    6310,
    6314,
    6318,
    6322,
    6325,
    6329,
    6333,
    6337,
    6341,
    6344,
    6347,
    6350,
    6353,
    6355,
    6357,
    6360,
    6362,
    6364,
    6366,
    6368,
    6370,
    6372,
    6374,
    6377,
    6380,
    6382,
    6384,
    6386,
    6388,
    6390,
    6394,
    6397,
    6401,
    6404,
    6409,
    6413,
    6418,
    6422,
    6424,
    6427,
    6430,
    6434,
    6438,
    6442,
    6446,
    6450,
    6453,
    6457,
    6461,
    6465,
    6469,
    6472,
    6475,
    6478,
    6482,
    6486,
    6490,
    6494,
    6498,
    6501,
    6505,
    6509,
    6513,
    6517,
    6521,
    6524,
    6527,
    6530,
    6534,
    6538,
    6542,
    6546,
    6550,
    6553,
    6557,
    6561,
    6565,
    6569,
    6572,
    6575,
    6578,
    6581,
    6584,
    6588,
    6593,
    6598,
    6602,
    6607,
    6612,
    6616,
    6621,
    6626,
    6630,
    6635,
    6640,
    6644,
    6649,
    6654,
    6658,
    6663,
    6668,
    6672,
    6677,
    6682,
    6686,
    6691,
    6696,
    6700,
    6705,
    6710,
    6714,
    6719,
    6724,
    6728,
    6733,
    6738,
    6742,
    6747,
    6752,
    6756,
    6761,
    6766,
    6770,
    6775,
    6780,
    6784,
    6789,
    6794,
    6798,
    6803,
    6808,
    6811,
    6814,
    6817,
    6820,
    6823,
    6826,
    6829,
    6833,
    6838,
    6842,
    6846,
    6850,
    6852,
    6855,
    6859,
    6864,
    6868,
    6872,
    6876,
    6878,
    6881,
    6885,
    6890,
    6894,
    6898,
    6902,
    6904,
    6907,
    6911,
    6916,
    6920,
    6924,
    6928,
    6930,
    6933,
    6937,
    6942,
    6946,
    6950,
    6954,
    6956,
    6959,
    6963,
    6968,
    6972,
    6976,
    6980,
    6982,
    6985,
    6989,
    6994,
    6998,
    7002,
    7006,
    7008,
    7011,
    7015,
    7020,
    7024,
    7028,
    7032,
    7034,
    7037,
    7039,
    7041,
    7046,
    7051,
    7056,
    7061,
    7064,
    7067,
    7070,
    7073,
    7077,
    7081,
    7084,
    7087,
    7091,
    7093,
    7095,
    7097,
    7099,
    7101,
    7103,
    7105,
    7107,
    7109,
    7111,
    7113,
    7115,
    7119,
    7123,
    7125,
    7127,
    7129,
    7132,
    7134,
    7137,
    7139,
    7141,
    7145,
    7149,
    7153,
    7157,
    7161,
    7164,
    7167,
    7169,
    7173,
    7176,
    7180,
    7183,
    7186,
    7189,
    7192,
    7196,
    7200,
    7204,
    7208,
    7212,
    7215,
    7218,
    7223,
    7226,
    7230,
    7235,
    7238,
    7243,
    7246,
    7250,
    7255,
    7258,
    7263,
    7266,
    7270,
    7275,
    7278,
    7283,
    7286,
    7290,
    7295,
    7298,
    7303,
    7306,
    7310,
    7315,
    7318,
    7323,
    7326,
    7330,
    7335,
    7338,
    7343,
    7346,
    7350,
    7355,
    7358,
    7363,
    7366,
    7370,
    7375,
    7378,
    7383,
    7386,
    7390,
    7395,
    7398,
    7403,
    7406,
    7410,
    7415,
    7418,
    7423,
    7426,
    7430,
    7435,
    7438,
    7443,
    7446,
    7450,
    7455,
    7458,
    7463,
    7466,
    7470,
    7475,
    7478,
    7483,
    7486,
    7490,
    7495,
    7498,
    7503,
    7506,
    7510,
    7515,
    7518,
    7523,
    7526,
    7530,
    7535,
    7538,
    7541,
    7545,
    7549,
    7553,
    7557,
    7560,
    7564,
    7568,
    7572,
    7576,
    7579,
    7583,
    7587,
    7591,
    7595,
    7598,
    7602,
    7606,
    7609,
    7613,
    7617,
    7620,
    7624,
    7628,
    7631,
    7635,
    7639,
    7642,
    7646,
    7650,
    7653,
    7657,
    7661,
    7664,
    7668,
    7672,
    7675,
    7679,
    7683,
    7687,
    7691,
    7695,
    7699,
    7704,
    7707,
    7710,
    7713,
    7716,
    7719,
    7722,
    7725,
    7728,
    7730,
    7733,
    7736,
    7740,
    7744,
    7748,
    7752,
    7756,
    7759,
    7763,
    7767,
    7771,
    7775,
    7779,
    7781,
    7784,
    7787,
    7790,
    7793,
    7795,
    7797,
    7798,
    7799,
    7800,
    7801,
    7803,
    7805,
    7807,
    7809,
    7811,
    7813,
    7815,
    7818,
    7820,
    7822,
    7824,
    7826,
    7828,
    7830,
    7832,
    7834,
    7835,
    7836,
    7837,
    7838,
    7839,
    7840,
    7841,
    7842,
    7845,
    7848,
    7848,
    7848,
    7848,
    7848,
    7848,
    7848,
    7851,
    7853,
    7856,
    7858,
    7861,
    7861,
    7861,
    7861,
    7861,
    7861,
    7864,
    7867,
    7868,
    7870,
    7872,
    7874,
    7877,
    7879,
    7881,
    7883,
    7886,
    7888,
    7891,
    7893,
    7895,
    7897,
    7900,
    7903,
    7905,
    7908,
    7911,
    7913,
    7915,
    7918,
    7921,
    7924,
    7927,
    7931,
    7935,
    7938,
    7941,
    7945,
    7950,
    7955,
    7959,
    7963,
    7967,
    7972,
    7977,
    7981,
    7986,
    7991,
    7994,
    7997,
    8001,
    8006,
    8011,
    8015,
    8019,
    8023,
    8028,
    8033,
    8037,
    8042,
    8047,
    8051,
    8055,
    8059,
    8064,
    8069,
    8072,
    8076,
    8081,
    8086,
    8090,
    8094,
    8098,
    8103,
    8108,
    8112,
    8116,
    8120,
    8125,
    8130,
    8133,
    8137,
    8142,
    8147,
    8151,
    8155,
    8159,
    8164,
    8169,
    8172,
    8176,
    8181,
    8186,
    8190,
    8194,
    8198,
    8203,
    8208,
    8211,
    8214,
    8218,
    8223,
    8228,
    8232,
    8236,
    8240,
    8245,
    8250,
    8254,
    8259,
    8264,
    8268,
    8273,
    8278,
    8281,
    8284,
    8288,
    8293,
    8298,
    8302,
    8306,
    8310,
    8315,
    8320,
    8324,
    8329,
    8334,
    8338,
    8343,
    8348,
    8352,
    8356,
    8360,
    8365,
    8370,
    8374,
    8379,
    8384,
    8388,
    8392,
    8396,
    8401,
    8406,
    8410,
    8415,
    8420,
    8422,
    8425,
    8428,
    8430,
    8432,
    8435,
    8438,
    8441,
    8444,
    8446,
    8448,
    8450,
    8452,
    8455,
    8458,
    8462,
    8466,
    8469,
    8472,
    8477,
    8481,
    8485,
    8488,
    8491,
    8494,
    8497,
    8501,
    8505,
    8508,
    8511,
    8514,
    8518,
    8521,
    8525,
    8528,
    8531,
    8534,
    8537,
    8540,
    8543,
    8547,
    8550,
    8553,
    8556,
    8559,
    8563,
    8567,
    8570,
    8573,
    8577,
    8581,
    8584,
    8587,
    8591,
    8594,
    8598,
    8601,
    8604,
    8607,
    8611,
    8614,
    8618,
    8621,
    8624,
    8628,
    8631,
    8635,
    8638,
    8642,
    8646,
    8650,
    8654,
    8658,
    8661,
    8665,
    8669,
    8673,
    8677,
    8680,
    8684,
    8688,
    8692,
    8696,
    8700,
    8704,
    8707,
    8709,
    8712,
    8715,
    8718,
    8721,
    8724,
    8727,
    8730,
    8733,
    8736,
    8739,
    8742,
    8745,
    8749,
    8751,
    8753,
    8756,
    8759,
    8764,
    8766,
    8769,
    8771,
    8775,
    8778,
    8781,
    8785,
    8788,
    8792,
    8795,
    8799,
    8802,
    8806,
    8809,
    8813,
    8816,
    8820,
    8823,
    8827,
    8830,
    8834,
    8837,
    8841,
    8844,
    8848,
    8851,
    8855,
    8859,
    8863,
    8866,
    8870,
    8874,
    8878,
    8881,
    8885,
    8889,
    8893,
    8896,
    8900,
    8903,
    8907,
    8910,
    8914,
    8917,
    8921,
    8925,
    8929,
    8932,
    8936,
    8940,
    8944,
    8947,
    8951,
    8955,
    8959,
    8962,
    8966,
    8970,
    8974,
    8977,
    8981,
    8985,
    8989,
    8992,
    8996,
    9000,
    9004,
    9004,
    9005,
    9008,
    9012,
    9016,
    9019,
    9022,
    9025,
    9028,
    9031,
    9034,
    9038,
    9042,
    9047,
    9052,
    9056,
    9060,
    9064,
    9069,
    9074,
    9078,
    9081,
    9084,
    9087,
    9090,
    9093,
    9096,
    9099,
    9102,
    9105,
    9108,
    9111,
    9115,
    9118,
    9121,
    9125,
    9128,
    9131,
    9135,
    9139,
    9142,
    9146,
    9150,
    9154,
    9157,
    9161,
    9164,
    9168,
    9171,
    9175,
    9178,
    9181,
    9184,
    9188,
    9192,
    9195,
    9198,
    9201,
    9205,
    9208,
    9212,
    9215,
    9218,
    9222,
    9225,
    9229,
    9232,
    9236,
    9239,
    9243,
    9246,
    9249,
    9253,
    9256,
    9260,
    9263,
    9267,
    9270,
    9274,
    9277,
    9281,
    9285,
    9288,
    9292,
    9295,
    9299,
    9302,
    9306,
    9309,
    9313,
    9316,
    9320,
    9324,
    9327,
    9330,
    9333,
    9336,
    9340,
    9343,
    9345,
    9347,
    9349,
    9352,
    9355,
    9358,
    9361,
    9364,
    9367,
    9370,
    9373,
    9376,
    9378,
    9380,
    9382,
    9384,
    9387,
    9390,
    9394,
    9397,
    9401,
    9405,
    9410,
    9413,
    9417,
    9420,
    9424,
    9427,
    9431,
    9434,
    9438,
    9442,
    9447,
    9450,
    9454,
    9457,
    9461,
    9465,
    9470,
    9473,
    9477,
    9481,
    9486,
    9489,
    9493,
    9497,
    9502,
    9505,
    9509,
    9513,
    9518,
    9521,
    9525,
    9529,
    9534,
    9537,
    9540,
    9543,
    9546,
    9549,
    9552,
    9555,
    9558,
    9562,
    9567,
    9570,
    9573,
    9576,
    9579,
    9581,
    9585,
    9589,
    9594,
    9598,
    9602,
    9607,
    9611,
    9615,
    9620,
    9622,
    9625,
    9630,
    9632,
    9635,
    9637,
    9640,
    9644,
    9647,
    9650,
    9653,
    9656,
    9659,
    9663,
    9667,
    9670,
    9673,
    9678,
    9682,
    9685,
    9688,
    9692,
    9696,
    9699,
    9702,
    9705,
    9708,
    9711,
    9714,
    9717,
    9720,
    9723,
    9726,
    9729,
    9732,
    9735,
    9738,
    9742,
    9746,
    9749,
    9752,
    9756,
    9759,
    9763,
    9766,
    9770,
    9773,
    9777,
    9779,
    9781,
    9784,
    9787,
    9789,
    9791,
    9791,
    9792,
    9793,
    9795,
    9795,
    9795,
    9796,
    9797,
    9800,
    9802,
    9804,
    9806,
    9809,
    9812,
    9815,
    9819,
    9823,
    9825,
    9825,
    9825,
    9826,
    9827,
    9829,
    9830,
    9831,
    9832,
    9832,
    9832,
    9833,
    9835,
    9836,
    9838,
    9839,
    9841,
    9843,
    9846,
    9849,
    9852,
  };
  const int8_t OpcodeOperandTypes[] = {
    -1, 
    /**/
    /**/
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    /**/
    -1, -1, OpTypes::i32imm, 
    -1, -1, -1, OpTypes::i32imm, 
    -1, 
    -1, -1, -1, OpTypes::i32imm, 
    -1, -1, OpTypes::i32imm, 
    /**/
    /**/
    -1, 
    -1, -1, 
    -1, -1, 
    /**/
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i64imm, OpTypes::i64imm, OpTypes::i8imm, OpTypes::i32imm, 
    OpTypes::i64imm, OpTypes::i32imm, 
    /**/
    -1, OpTypes::i64imm, OpTypes::i32imm, -1, OpTypes::i32imm, OpTypes::i32imm, 
    -1, 
    OpTypes::i32imm, 
    -1, OpTypes::i32imm, OpTypes::i32imm, 
    /**/
    -1, OpTypes::i32imm, 
    -1, 
    /**/
    /**/
    /**/
    /**/
    /**/
    -1, -1, 
    -1, -1, -1, 
    /**/
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::type0, OpTypes::type1, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::ptype0, OpTypes::type1, OpTypes::ptype0, OpTypes::ptype2, -1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::type0, -1, 
    OpTypes::type0, 
    -1, 
    -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, OpTypes::type1, OpTypes::type1, 
    OpTypes::type0, -1, OpTypes::type1, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::ptype0, OpTypes::ptype0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    -1, 
    OpTypes::ptype0, -1, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, OpTypes::type1, -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::ptype0, OpTypes::type1, OpTypes::i32imm, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, -1, 
    -1, OpTypes::type0, 
    OpTypes::ptype0, OpTypes::ptype1, OpTypes::type2, OpTypes::untyped_imm_0, 
    OpTypes::ptype0, OpTypes::ptype1, OpTypes::type2, OpTypes::untyped_imm_0, 
    OpTypes::ptype0, OpTypes::type1, OpTypes::type2, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s27_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::s32_0Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, 
    /**/
    /**/
    /**/
    OpTypes::PredRegs, OpTypes::b15_2Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::b15_2Imm, 
    OpTypes::u8_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, 
    OpTypes::PredRegs, 
    OpTypes::PredRegs, 
    OpTypes::PredRegs, 
    OpTypes::PredRegs, 
    OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    /**/
    /**/
    OpTypes::CtrRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::m32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::s32_0Imm, 
    /**/
    OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::HvxQR, 
    OpTypes::HvxQR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::a30_2Imm, 
    OpTypes::IntRegs, 
    OpTypes::PredRegs, 
    OpTypes::HvxWR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::HvxQR, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::HvxWR, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::PredRegs, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::u11_3Imm, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::CtrRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::PredRegs, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, 
    OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, 
    OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::s32_0Imm, OpTypes::s8_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::s8_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s29_3Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u11_3Imm, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::s32_0Imm, OpTypes::s8_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    /**/
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::CtrRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u16_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u16_0Imm, 
    OpTypes::CtrRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::s8_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::u26_6Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::PredRegs, 
    OpTypes::DoubleRegs, OpTypes::CtrRegs64, 
    OpTypes::CtrRegs64, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::u8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::u7_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::u7_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::u7_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, OpTypes::s8_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::a30_2Imm, 
    OpTypes::IntRegs, OpTypes::i32imm, 
    OpTypes::DoubleRegs, OpTypes::i64imm, 
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::u10_0Imm, 
    OpTypes::DoubleRegs, OpTypes::u10_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u10_0Imm, 
    OpTypes::IntRegs, OpTypes::u10_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::GuestRegs64, 
    OpTypes::IntRegs, OpTypes::GuestRegs, 
    OpTypes::GuestRegs64, OpTypes::DoubleRegs, 
    OpTypes::GuestRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u16_0Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::PredRegs, OpTypes::a30_2Imm, 
    OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::a30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::u8_0Imm, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::u8_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u8_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u6_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s30_2Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s30_2Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s29_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::u29_3Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u16_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u8_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::a30_2Imm, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::u29_3Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::u8_0Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u3_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u11_3Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::ModRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::DoubleRegs, 
    OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u3_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::PredRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u3_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::PredRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s6_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u6_1Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_1Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_1Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_1Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_1Imm, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::GeneralSubRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::GeneralSubRegs, OpTypes::IntRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u6_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u2_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::u2_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::u2_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::u2_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::u2_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::n1Const, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u32_0Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::u4_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::u4_0Imm, 
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::u3_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::u5_3Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::u3_1Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::u3_1Imm, 
    /**/
    /**/
    /**/
    /**/
    /**/
    OpTypes::GeneralSubRegs, OpTypes::u4_0Imm, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u4_2Imm, OpTypes::GeneralSubRegs, 
    OpTypes::u5_3Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u4_0Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u4_0Imm, 
    OpTypes::s6_3Imm, OpTypes::GeneralDoubleLow8Regs, 
    OpTypes::GeneralSubRegs, OpTypes::u3_1Imm, OpTypes::GeneralSubRegs, 
    OpTypes::u5_2Imm, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u4_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u4_2Imm, 
    OpTypes::DoubleRegs, OpTypes::s32_0Imm, OpTypes::s8_0Imm, 
    OpTypes::DoubleRegs, OpTypes::u64_0Imm, 
    OpTypes::IntRegs, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::PredRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    /**/
    OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::PredRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    /**/
    OpTypes::u1_0Imm, 
    OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::u1_0Imm, 
    /**/
    /**/
    OpTypes::HvxQR, 
    OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    /**/
    /**/
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u11_3Imm, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    /**/
    /**/
    OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
  };
  return OpcodeOperandTypes[Offsets[Opcode] + OpIdx];
}
} // end namespace Hexagon
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPE

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace Hexagon {

enum InputType {
	InputType_reg
};

enum InstrType {
	InstrType_Pseudo,
	InstrType_Real
};

enum NValueST {
	NValueST_true,
	NValueST_false
};

enum PNewValue {
	PNewValue_new,
	PNewValue_
};

enum PredSense {
	PredSense_false,
	PredSense_true
};

enum addrMode {
	addrMode_BaseImmOffset,
	addrMode_Absolute,
	addrMode_PostInc,
	addrMode_BaseRegOffset,
	addrMode_BaseLongOffset
};

enum isBrTaken {
	isBrTaken_false,
	isBrTaken_true
};

// changeAddrMode_abs_io
LLVM_READONLY
int changeAddrMode_abs_io(uint16_t Opcode) {
static const uint16_t changeAddrMode_abs_ioTable[][2] = {
  { Hexagon::L4_ploadrbf_abs, Hexagon::L2_ploadrbf_io },
  { Hexagon::L4_ploadrbfnew_abs, Hexagon::L2_ploadrbfnew_io },
  { Hexagon::L4_ploadrbt_abs, Hexagon::L2_ploadrbt_io },
  { Hexagon::L4_ploadrbtnew_abs, Hexagon::L2_ploadrbtnew_io },
  { Hexagon::L4_ploadrdf_abs, Hexagon::L2_ploadrdf_io },
  { Hexagon::L4_ploadrdfnew_abs, Hexagon::L2_ploadrdfnew_io },
  { Hexagon::L4_ploadrdt_abs, Hexagon::L2_ploadrdt_io },
  { Hexagon::L4_ploadrdtnew_abs, Hexagon::L2_ploadrdtnew_io },
  { Hexagon::L4_ploadrhf_abs, Hexagon::L2_ploadrhf_io },
  { Hexagon::L4_ploadrhfnew_abs, Hexagon::L2_ploadrhfnew_io },
  { Hexagon::L4_ploadrht_abs, Hexagon::L2_ploadrht_io },
  { Hexagon::L4_ploadrhtnew_abs, Hexagon::L2_ploadrhtnew_io },
  { Hexagon::L4_ploadrif_abs, Hexagon::L2_ploadrif_io },
  { Hexagon::L4_ploadrifnew_abs, Hexagon::L2_ploadrifnew_io },
  { Hexagon::L4_ploadrit_abs, Hexagon::L2_ploadrit_io },
  { Hexagon::L4_ploadritnew_abs, Hexagon::L2_ploadritnew_io },
  { Hexagon::L4_ploadrubf_abs, Hexagon::L2_ploadrubf_io },
  { Hexagon::L4_ploadrubfnew_abs, Hexagon::L2_ploadrubfnew_io },
  { Hexagon::L4_ploadrubt_abs, Hexagon::L2_ploadrubt_io },
  { Hexagon::L4_ploadrubtnew_abs, Hexagon::L2_ploadrubtnew_io },
  { Hexagon::L4_ploadruhf_abs, Hexagon::L2_ploadruhf_io },
  { Hexagon::L4_ploadruhfnew_abs, Hexagon::L2_ploadruhfnew_io },
  { Hexagon::L4_ploadruht_abs, Hexagon::L2_ploadruht_io },
  { Hexagon::L4_ploadruhtnew_abs, Hexagon::L2_ploadruhtnew_io },
  { Hexagon::PS_loadrbabs, Hexagon::L2_loadrb_io },
  { Hexagon::PS_loadrdabs, Hexagon::L2_loadrd_io },
  { Hexagon::PS_loadrhabs, Hexagon::L2_loadrh_io },
  { Hexagon::PS_loadriabs, Hexagon::L2_loadri_io },
  { Hexagon::PS_loadrubabs, Hexagon::L2_loadrub_io },
  { Hexagon::PS_loadruhabs, Hexagon::L2_loadruh_io },
  { Hexagon::PS_storerbabs, Hexagon::S2_storerb_io },
  { Hexagon::PS_storerbnewabs, Hexagon::S2_storerbnew_io },
  { Hexagon::PS_storerdabs, Hexagon::S2_storerd_io },
  { Hexagon::PS_storerfabs, Hexagon::S2_storerf_io },
  { Hexagon::PS_storerhabs, Hexagon::S2_storerh_io },
  { Hexagon::PS_storerhnewabs, Hexagon::S2_storerhnew_io },
  { Hexagon::PS_storeriabs, Hexagon::S2_storeri_io },
  { Hexagon::PS_storerinewabs, Hexagon::S2_storerinew_io },
  { Hexagon::S4_pstorerbf_abs, Hexagon::S2_pstorerbf_io },
  { Hexagon::S4_pstorerbfnew_abs, Hexagon::S4_pstorerbfnew_io },
  { Hexagon::S4_pstorerbnewf_abs, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S4_pstorerbnewfnew_abs, Hexagon::S4_pstorerbnewfnew_io },
  { Hexagon::S4_pstorerbnewt_abs, Hexagon::S2_pstorerbnewt_io },
  { Hexagon::S4_pstorerbnewtnew_abs, Hexagon::S4_pstorerbnewtnew_io },
  { Hexagon::S4_pstorerbt_abs, Hexagon::S2_pstorerbt_io },
  { Hexagon::S4_pstorerbtnew_abs, Hexagon::S4_pstorerbtnew_io },
  { Hexagon::S4_pstorerdf_abs, Hexagon::S2_pstorerdf_io },
  { Hexagon::S4_pstorerdfnew_abs, Hexagon::S4_pstorerdfnew_io },
  { Hexagon::S4_pstorerdt_abs, Hexagon::S2_pstorerdt_io },
  { Hexagon::S4_pstorerdtnew_abs, Hexagon::S4_pstorerdtnew_io },
  { Hexagon::S4_pstorerff_abs, Hexagon::S2_pstorerff_io },
  { Hexagon::S4_pstorerffnew_abs, Hexagon::S4_pstorerffnew_io },
  { Hexagon::S4_pstorerft_abs, Hexagon::S2_pstorerft_io },
  { Hexagon::S4_pstorerftnew_abs, Hexagon::S4_pstorerftnew_io },
  { Hexagon::S4_pstorerhf_abs, Hexagon::S2_pstorerhf_io },
  { Hexagon::S4_pstorerhfnew_abs, Hexagon::S4_pstorerhfnew_io },
  { Hexagon::S4_pstorerhnewf_abs, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S4_pstorerhnewfnew_abs, Hexagon::S4_pstorerhnewfnew_io },
  { Hexagon::S4_pstorerhnewt_abs, Hexagon::S2_pstorerhnewt_io },
  { Hexagon::S4_pstorerhnewtnew_abs, Hexagon::S4_pstorerhnewtnew_io },
  { Hexagon::S4_pstorerht_abs, Hexagon::S2_pstorerht_io },
  { Hexagon::S4_pstorerhtnew_abs, Hexagon::S4_pstorerhtnew_io },
  { Hexagon::S4_pstorerif_abs, Hexagon::S2_pstorerif_io },
  { Hexagon::S4_pstorerifnew_abs, Hexagon::S4_pstorerifnew_io },
  { Hexagon::S4_pstorerinewf_abs, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S4_pstorerinewfnew_abs, Hexagon::S4_pstorerinewfnew_io },
  { Hexagon::S4_pstorerinewt_abs, Hexagon::S2_pstorerinewt_io },
  { Hexagon::S4_pstorerinewtnew_abs, Hexagon::S4_pstorerinewtnew_io },
  { Hexagon::S4_pstorerit_abs, Hexagon::S2_pstorerit_io },
  { Hexagon::S4_pstoreritnew_abs, Hexagon::S4_pstoreritnew_io },
}; // End of changeAddrMode_abs_ioTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 70;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_abs_ioTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_abs_ioTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_abs_ioTable[mid][1];
}

// changeAddrMode_io_abs
LLVM_READONLY
int changeAddrMode_io_abs(uint16_t Opcode) {
static const uint16_t changeAddrMode_io_absTable[][2] = {
  { Hexagon::L2_loadrb_io, Hexagon::PS_loadrbabs },
  { Hexagon::L2_loadrd_io, Hexagon::PS_loadrdabs },
  { Hexagon::L2_loadrh_io, Hexagon::PS_loadrhabs },
  { Hexagon::L2_loadri_io, Hexagon::PS_loadriabs },
  { Hexagon::L2_loadrub_io, Hexagon::PS_loadrubabs },
  { Hexagon::L2_loadruh_io, Hexagon::PS_loadruhabs },
  { Hexagon::L2_ploadrbf_io, Hexagon::L4_ploadrbf_abs },
  { Hexagon::L2_ploadrbfnew_io, Hexagon::L4_ploadrbfnew_abs },
  { Hexagon::L2_ploadrbt_io, Hexagon::L4_ploadrbt_abs },
  { Hexagon::L2_ploadrbtnew_io, Hexagon::L4_ploadrbtnew_abs },
  { Hexagon::L2_ploadrdf_io, Hexagon::L4_ploadrdf_abs },
  { Hexagon::L2_ploadrdfnew_io, Hexagon::L4_ploadrdfnew_abs },
  { Hexagon::L2_ploadrdt_io, Hexagon::L4_ploadrdt_abs },
  { Hexagon::L2_ploadrdtnew_io, Hexagon::L4_ploadrdtnew_abs },
  { Hexagon::L2_ploadrhf_io, Hexagon::L4_ploadrhf_abs },
  { Hexagon::L2_ploadrhfnew_io, Hexagon::L4_ploadrhfnew_abs },
  { Hexagon::L2_ploadrht_io, Hexagon::L4_ploadrht_abs },
  { Hexagon::L2_ploadrhtnew_io, Hexagon::L4_ploadrhtnew_abs },
  { Hexagon::L2_ploadrif_io, Hexagon::L4_ploadrif_abs },
  { Hexagon::L2_ploadrifnew_io, Hexagon::L4_ploadrifnew_abs },
  { Hexagon::L2_ploadrit_io, Hexagon::L4_ploadrit_abs },
  { Hexagon::L2_ploadritnew_io, Hexagon::L4_ploadritnew_abs },
  { Hexagon::L2_ploadrubf_io, Hexagon::L4_ploadrubf_abs },
  { Hexagon::L2_ploadrubfnew_io, Hexagon::L4_ploadrubfnew_abs },
  { Hexagon::L2_ploadrubt_io, Hexagon::L4_ploadrubt_abs },
  { Hexagon::L2_ploadrubtnew_io, Hexagon::L4_ploadrubtnew_abs },
  { Hexagon::L2_ploadruhf_io, Hexagon::L4_ploadruhf_abs },
  { Hexagon::L2_ploadruhfnew_io, Hexagon::L4_ploadruhfnew_abs },
  { Hexagon::L2_ploadruht_io, Hexagon::L4_ploadruht_abs },
  { Hexagon::L2_ploadruhtnew_io, Hexagon::L4_ploadruhtnew_abs },
  { Hexagon::S2_pstorerbf_io, Hexagon::S4_pstorerbf_abs },
  { Hexagon::S2_pstorerbnewf_io, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::S2_pstorerbnewt_io, Hexagon::S4_pstorerbnewt_abs },
  { Hexagon::S2_pstorerbt_io, Hexagon::S4_pstorerbt_abs },
  { Hexagon::S2_pstorerdf_io, Hexagon::S4_pstorerdf_abs },
  { Hexagon::S2_pstorerdt_io, Hexagon::S4_pstorerdt_abs },
  { Hexagon::S2_pstorerff_io, Hexagon::S4_pstorerff_abs },
  { Hexagon::S2_pstorerft_io, Hexagon::S4_pstorerft_abs },
  { Hexagon::S2_pstorerhf_io, Hexagon::S4_pstorerhf_abs },
  { Hexagon::S2_pstorerhnewf_io, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::S2_pstorerhnewt_io, Hexagon::S4_pstorerhnewt_abs },
  { Hexagon::S2_pstorerht_io, Hexagon::S4_pstorerht_abs },
  { Hexagon::S2_pstorerif_io, Hexagon::S4_pstorerif_abs },
  { Hexagon::S2_pstorerinewf_io, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S2_pstorerinewt_io, Hexagon::S4_pstorerinewt_abs },
  { Hexagon::S2_pstorerit_io, Hexagon::S4_pstorerit_abs },
  { Hexagon::S2_storerb_io, Hexagon::PS_storerbabs },
  { Hexagon::S2_storerbnew_io, Hexagon::PS_storerbnewabs },
  { Hexagon::S2_storerd_io, Hexagon::PS_storerdabs },
  { Hexagon::S2_storerf_io, Hexagon::PS_storerfabs },
  { Hexagon::S2_storerh_io, Hexagon::PS_storerhabs },
  { Hexagon::S2_storerhnew_io, Hexagon::PS_storerhnewabs },
  { Hexagon::S2_storeri_io, Hexagon::PS_storeriabs },
  { Hexagon::S2_storerinew_io, Hexagon::PS_storerinewabs },
  { Hexagon::S4_pstorerbfnew_io, Hexagon::S4_pstorerbfnew_abs },
  { Hexagon::S4_pstorerbnewfnew_io, Hexagon::S4_pstorerbnewfnew_abs },
  { Hexagon::S4_pstorerbnewtnew_io, Hexagon::S4_pstorerbnewtnew_abs },
  { Hexagon::S4_pstorerbtnew_io, Hexagon::S4_pstorerbtnew_abs },
  { Hexagon::S4_pstorerdfnew_io, Hexagon::S4_pstorerdfnew_abs },
  { Hexagon::S4_pstorerdtnew_io, Hexagon::S4_pstorerdtnew_abs },
  { Hexagon::S4_pstorerffnew_io, Hexagon::S4_pstorerffnew_abs },
  { Hexagon::S4_pstorerftnew_io, Hexagon::S4_pstorerftnew_abs },
  { Hexagon::S4_pstorerhfnew_io, Hexagon::S4_pstorerhfnew_abs },
  { Hexagon::S4_pstorerhnewfnew_io, Hexagon::S4_pstorerhnewfnew_abs },
  { Hexagon::S4_pstorerhnewtnew_io, Hexagon::S4_pstorerhnewtnew_abs },
  { Hexagon::S4_pstorerhtnew_io, Hexagon::S4_pstorerhtnew_abs },
  { Hexagon::S4_pstorerifnew_io, Hexagon::S4_pstorerifnew_abs },
  { Hexagon::S4_pstorerinewfnew_io, Hexagon::S4_pstorerinewfnew_abs },
  { Hexagon::S4_pstorerinewtnew_io, Hexagon::S4_pstorerinewtnew_abs },
  { Hexagon::S4_pstoreritnew_io, Hexagon::S4_pstoreritnew_abs },
}; // End of changeAddrMode_io_absTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 70;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_io_absTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_io_absTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_io_absTable[mid][1];
}

// changeAddrMode_io_pi
LLVM_READONLY
int changeAddrMode_io_pi(uint16_t Opcode) {
static const uint16_t changeAddrMode_io_piTable[][2] = {
  { Hexagon::L2_loadrb_io, Hexagon::L2_loadrb_pi },
  { Hexagon::L2_loadrd_io, Hexagon::L2_loadrd_pi },
  { Hexagon::L2_loadrh_io, Hexagon::L2_loadrh_pi },
  { Hexagon::L2_loadri_io, Hexagon::L2_loadri_pi },
  { Hexagon::L2_loadrub_io, Hexagon::L2_loadrub_pi },
  { Hexagon::L2_loadruh_io, Hexagon::L2_loadruh_pi },
  { Hexagon::S2_storerb_io, Hexagon::S2_storerb_pi },
  { Hexagon::S2_storerd_io, Hexagon::S2_storerd_pi },
  { Hexagon::S2_storerf_io, Hexagon::S2_storerf_pi },
  { Hexagon::S2_storerh_io, Hexagon::S2_storerh_pi },
  { Hexagon::S2_storeri_io, Hexagon::S2_storeri_pi },
}; // End of changeAddrMode_io_piTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 11;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_io_piTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_io_piTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_io_piTable[mid][1];
}

// changeAddrMode_io_rr
LLVM_READONLY
int changeAddrMode_io_rr(uint16_t Opcode) {
static const uint16_t changeAddrMode_io_rrTable[][2] = {
  { Hexagon::L2_loadrb_io, Hexagon::L4_loadrb_rr },
  { Hexagon::L2_loadrd_io, Hexagon::L4_loadrd_rr },
  { Hexagon::L2_loadrh_io, Hexagon::L4_loadrh_rr },
  { Hexagon::L2_loadri_io, Hexagon::L4_loadri_rr },
  { Hexagon::L2_loadrub_io, Hexagon::L4_loadrub_rr },
  { Hexagon::L2_loadruh_io, Hexagon::L4_loadruh_rr },
  { Hexagon::L2_ploadrbf_io, Hexagon::L4_ploadrbf_rr },
  { Hexagon::L2_ploadrbfnew_io, Hexagon::L4_ploadrbfnew_rr },
  { Hexagon::L2_ploadrbt_io, Hexagon::L4_ploadrbt_rr },
  { Hexagon::L2_ploadrbtnew_io, Hexagon::L4_ploadrbtnew_rr },
  { Hexagon::L2_ploadrdf_io, Hexagon::L4_ploadrdf_rr },
  { Hexagon::L2_ploadrdfnew_io, Hexagon::L4_ploadrdfnew_rr },
  { Hexagon::L2_ploadrdt_io, Hexagon::L4_ploadrdt_rr },
  { Hexagon::L2_ploadrdtnew_io, Hexagon::L4_ploadrdtnew_rr },
  { Hexagon::L2_ploadrhf_io, Hexagon::L4_ploadrhf_rr },
  { Hexagon::L2_ploadrhfnew_io, Hexagon::L4_ploadrhfnew_rr },
  { Hexagon::L2_ploadrht_io, Hexagon::L4_ploadrht_rr },
  { Hexagon::L2_ploadrhtnew_io, Hexagon::L4_ploadrhtnew_rr },
  { Hexagon::L2_ploadrif_io, Hexagon::L4_ploadrif_rr },
  { Hexagon::L2_ploadrifnew_io, Hexagon::L4_ploadrifnew_rr },
  { Hexagon::L2_ploadrit_io, Hexagon::L4_ploadrit_rr },
  { Hexagon::L2_ploadritnew_io, Hexagon::L4_ploadritnew_rr },
  { Hexagon::L2_ploadrubf_io, Hexagon::L4_ploadrubf_rr },
  { Hexagon::L2_ploadrubfnew_io, Hexagon::L4_ploadrubfnew_rr },
  { Hexagon::L2_ploadrubt_io, Hexagon::L4_ploadrubt_rr },
  { Hexagon::L2_ploadrubtnew_io, Hexagon::L4_ploadrubtnew_rr },
  { Hexagon::L2_ploadruhf_io, Hexagon::L4_ploadruhf_rr },
  { Hexagon::L2_ploadruhfnew_io, Hexagon::L4_ploadruhfnew_rr },
  { Hexagon::L2_ploadruht_io, Hexagon::L4_ploadruht_rr },
  { Hexagon::L2_ploadruhtnew_io, Hexagon::L4_ploadruhtnew_rr },
  { Hexagon::S2_pstorerbf_io, Hexagon::S4_pstorerbf_rr },
  { Hexagon::S2_pstorerbnewf_io, Hexagon::S4_pstorerbnewf_rr },
  { Hexagon::S2_pstorerbnewt_io, Hexagon::S4_pstorerbnewt_rr },
  { Hexagon::S2_pstorerbt_io, Hexagon::S4_pstorerbt_rr },
  { Hexagon::S2_pstorerdf_io, Hexagon::S4_pstorerdf_rr },
  { Hexagon::S2_pstorerdt_io, Hexagon::S4_pstorerdt_rr },
  { Hexagon::S2_pstorerff_io, Hexagon::S4_pstorerff_rr },
  { Hexagon::S2_pstorerft_io, Hexagon::S4_pstorerft_rr },
  { Hexagon::S2_pstorerhf_io, Hexagon::S4_pstorerhf_rr },
  { Hexagon::S2_pstorerhnewf_io, Hexagon::S4_pstorerhnewf_rr },
  { Hexagon::S2_pstorerhnewt_io, Hexagon::S4_pstorerhnewt_rr },
  { Hexagon::S2_pstorerht_io, Hexagon::S4_pstorerht_rr },
  { Hexagon::S2_pstorerif_io, Hexagon::S4_pstorerif_rr },
  { Hexagon::S2_pstorerinewf_io, Hexagon::S4_pstorerinewf_rr },
  { Hexagon::S2_pstorerinewt_io, Hexagon::S4_pstorerinewt_rr },
  { Hexagon::S2_pstorerit_io, Hexagon::S4_pstorerit_rr },
  { Hexagon::S2_storerb_io, Hexagon::S4_storerb_rr },
  { Hexagon::S2_storerbnew_io, Hexagon::S4_storerbnew_rr },
  { Hexagon::S2_storerd_io, Hexagon::S4_storerd_rr },
  { Hexagon::S2_storerf_io, Hexagon::S4_storerf_rr },
  { Hexagon::S2_storerh_io, Hexagon::S4_storerh_rr },
  { Hexagon::S2_storerhnew_io, Hexagon::S4_storerhnew_rr },
  { Hexagon::S2_storeri_io, Hexagon::S4_storeri_rr },
  { Hexagon::S2_storerinew_io, Hexagon::S4_storerinew_rr },
  { Hexagon::S4_pstorerbfnew_io, Hexagon::S4_pstorerbfnew_rr },
  { Hexagon::S4_pstorerbnewfnew_io, Hexagon::S4_pstorerbnewfnew_rr },
  { Hexagon::S4_pstorerbnewtnew_io, Hexagon::S4_pstorerbnewtnew_rr },
  { Hexagon::S4_pstorerbtnew_io, Hexagon::S4_pstorerbtnew_rr },
  { Hexagon::S4_pstorerdfnew_io, Hexagon::S4_pstorerdfnew_rr },
  { Hexagon::S4_pstorerdtnew_io, Hexagon::S4_pstorerdtnew_rr },
  { Hexagon::S4_pstorerffnew_io, Hexagon::S4_pstorerffnew_rr },
  { Hexagon::S4_pstorerftnew_io, Hexagon::S4_pstorerftnew_rr },
  { Hexagon::S4_pstorerhfnew_io, Hexagon::S4_pstorerhfnew_rr },
  { Hexagon::S4_pstorerhnewfnew_io, Hexagon::S4_pstorerhnewfnew_rr },
  { Hexagon::S4_pstorerhnewtnew_io, Hexagon::S4_pstorerhnewtnew_rr },
  { Hexagon::S4_pstorerhtnew_io, Hexagon::S4_pstorerhtnew_rr },
  { Hexagon::S4_pstorerifnew_io, Hexagon::S4_pstorerifnew_rr },
  { Hexagon::S4_pstorerinewfnew_io, Hexagon::S4_pstorerinewfnew_rr },
  { Hexagon::S4_pstorerinewtnew_io, Hexagon::S4_pstorerinewtnew_rr },
  { Hexagon::S4_pstoreritnew_io, Hexagon::S4_pstoreritnew_rr },
}; // End of changeAddrMode_io_rrTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 70;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_io_rrTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_io_rrTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_io_rrTable[mid][1];
}

// changeAddrMode_pi_io
LLVM_READONLY
int changeAddrMode_pi_io(uint16_t Opcode) {
static const uint16_t changeAddrMode_pi_ioTable[][2] = {
  { Hexagon::L2_loadrb_pi, Hexagon::L2_loadrb_io },
  { Hexagon::L2_loadrd_pi, Hexagon::L2_loadrd_io },
  { Hexagon::L2_loadrh_pi, Hexagon::L2_loadrh_io },
  { Hexagon::L2_loadri_pi, Hexagon::L2_loadri_io },
  { Hexagon::L2_loadrub_pi, Hexagon::L2_loadrub_io },
  { Hexagon::L2_loadruh_pi, Hexagon::L2_loadruh_io },
  { Hexagon::S2_storerb_pi, Hexagon::S2_storerb_io },
  { Hexagon::S2_storerd_pi, Hexagon::S2_storerd_io },
  { Hexagon::S2_storerf_pi, Hexagon::S2_storerf_io },
  { Hexagon::S2_storerh_pi, Hexagon::S2_storerh_io },
  { Hexagon::S2_storeri_pi, Hexagon::S2_storeri_io },
}; // End of changeAddrMode_pi_ioTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 11;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_pi_ioTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_pi_ioTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_pi_ioTable[mid][1];
}

// changeAddrMode_rr_io
LLVM_READONLY
int changeAddrMode_rr_io(uint16_t Opcode) {
static const uint16_t changeAddrMode_rr_ioTable[][2] = {
  { Hexagon::L4_loadrb_rr, Hexagon::L2_loadrb_io },
  { Hexagon::L4_loadrd_rr, Hexagon::L2_loadrd_io },
  { Hexagon::L4_loadrh_rr, Hexagon::L2_loadrh_io },
  { Hexagon::L4_loadri_rr, Hexagon::L2_loadri_io },
  { Hexagon::L4_loadrub_rr, Hexagon::L2_loadrub_io },
  { Hexagon::L4_loadruh_rr, Hexagon::L2_loadruh_io },
  { Hexagon::L4_ploadrbf_rr, Hexagon::L2_ploadrbf_io },
  { Hexagon::L4_ploadrbfnew_rr, Hexagon::L2_ploadrbfnew_io },
  { Hexagon::L4_ploadrbt_rr, Hexagon::L2_ploadrbt_io },
  { Hexagon::L4_ploadrbtnew_rr, Hexagon::L2_ploadrbtnew_io },
  { Hexagon::L4_ploadrdf_rr, Hexagon::L2_ploadrdf_io },
  { Hexagon::L4_ploadrdfnew_rr, Hexagon::L2_ploadrdfnew_io },
  { Hexagon::L4_ploadrdt_rr, Hexagon::L2_ploadrdt_io },
  { Hexagon::L4_ploadrdtnew_rr, Hexagon::L2_ploadrdtnew_io },
  { Hexagon::L4_ploadrhf_rr, Hexagon::L2_ploadrhf_io },
  { Hexagon::L4_ploadrhfnew_rr, Hexagon::L2_ploadrhfnew_io },
  { Hexagon::L4_ploadrht_rr, Hexagon::L2_ploadrht_io },
  { Hexagon::L4_ploadrhtnew_rr, Hexagon::L2_ploadrhtnew_io },
  { Hexagon::L4_ploadrif_rr, Hexagon::L2_ploadrif_io },
  { Hexagon::L4_ploadrifnew_rr, Hexagon::L2_ploadrifnew_io },
  { Hexagon::L4_ploadrit_rr, Hexagon::L2_ploadrit_io },
  { Hexagon::L4_ploadritnew_rr, Hexagon::L2_ploadritnew_io },
  { Hexagon::L4_ploadrubf_rr, Hexagon::L2_ploadrubf_io },
  { Hexagon::L4_ploadrubfnew_rr, Hexagon::L2_ploadrubfnew_io },
  { Hexagon::L4_ploadrubt_rr, Hexagon::L2_ploadrubt_io },
  { Hexagon::L4_ploadrubtnew_rr, Hexagon::L2_ploadrubtnew_io },
  { Hexagon::L4_ploadruhf_rr, Hexagon::L2_ploadruhf_io },
  { Hexagon::L4_ploadruhfnew_rr, Hexagon::L2_ploadruhfnew_io },
  { Hexagon::L4_ploadruht_rr, Hexagon::L2_ploadruht_io },
  { Hexagon::L4_ploadruhtnew_rr, Hexagon::L2_ploadruhtnew_io },
  { Hexagon::S4_pstorerbf_rr, Hexagon::S2_pstorerbf_io },
  { Hexagon::S4_pstorerbfnew_rr, Hexagon::S4_pstorerbfnew_io },
  { Hexagon::S4_pstorerbnewf_rr, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S4_pstorerbnewfnew_rr, Hexagon::S4_pstorerbnewfnew_io },
  { Hexagon::S4_pstorerbnewt_rr, Hexagon::S2_pstorerbnewt_io },
  { Hexagon::S4_pstorerbnewtnew_rr, Hexagon::S4_pstorerbnewtnew_io },
  { Hexagon::S4_pstorerbt_rr, Hexagon::S2_pstorerbt_io },
  { Hexagon::S4_pstorerbtnew_rr, Hexagon::S4_pstorerbtnew_io },
  { Hexagon::S4_pstorerdf_rr, Hexagon::S2_pstorerdf_io },
  { Hexagon::S4_pstorerdfnew_rr, Hexagon::S4_pstorerdfnew_io },
  { Hexagon::S4_pstorerdt_rr, Hexagon::S2_pstorerdt_io },
  { Hexagon::S4_pstorerdtnew_rr, Hexagon::S4_pstorerdtnew_io },
  { Hexagon::S4_pstorerff_rr, Hexagon::S2_pstorerff_io },
  { Hexagon::S4_pstorerffnew_rr, Hexagon::S4_pstorerffnew_io },
  { Hexagon::S4_pstorerft_rr, Hexagon::S2_pstorerft_io },
  { Hexagon::S4_pstorerftnew_rr, Hexagon::S4_pstorerftnew_io },
  { Hexagon::S4_pstorerhf_rr, Hexagon::S2_pstorerhf_io },
  { Hexagon::S4_pstorerhfnew_rr, Hexagon::S4_pstorerhfnew_io },
  { Hexagon::S4_pstorerhnewf_rr, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S4_pstorerhnewfnew_rr, Hexagon::S4_pstorerhnewfnew_io },
  { Hexagon::S4_pstorerhnewt_rr, Hexagon::S2_pstorerhnewt_io },
  { Hexagon::S4_pstorerhnewtnew_rr, Hexagon::S4_pstorerhnewtnew_io },
  { Hexagon::S4_pstorerht_rr, Hexagon::S2_pstorerht_io },
  { Hexagon::S4_pstorerhtnew_rr, Hexagon::S4_pstorerhtnew_io },
  { Hexagon::S4_pstorerif_rr, Hexagon::S2_pstorerif_io },
  { Hexagon::S4_pstorerifnew_rr, Hexagon::S4_pstorerifnew_io },
  { Hexagon::S4_pstorerinewf_rr, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S4_pstorerinewfnew_rr, Hexagon::S4_pstorerinewfnew_io },
  { Hexagon::S4_pstorerinewt_rr, Hexagon::S2_pstorerinewt_io },
  { Hexagon::S4_pstorerinewtnew_rr, Hexagon::S4_pstorerinewtnew_io },
  { Hexagon::S4_pstorerit_rr, Hexagon::S2_pstorerit_io },
  { Hexagon::S4_pstoreritnew_rr, Hexagon::S4_pstoreritnew_io },
  { Hexagon::S4_storerb_rr, Hexagon::S2_storerb_io },
  { Hexagon::S4_storerbnew_rr, Hexagon::S2_storerbnew_io },
  { Hexagon::S4_storerd_rr, Hexagon::S2_storerd_io },
  { Hexagon::S4_storerf_rr, Hexagon::S2_storerf_io },
  { Hexagon::S4_storerh_rr, Hexagon::S2_storerh_io },
  { Hexagon::S4_storerhnew_rr, Hexagon::S2_storerhnew_io },
  { Hexagon::S4_storeri_rr, Hexagon::S2_storeri_io },
  { Hexagon::S4_storerinew_rr, Hexagon::S2_storerinew_io },
}; // End of changeAddrMode_rr_ioTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 70;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_rr_ioTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_rr_ioTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_rr_ioTable[mid][1];
}

// changeAddrMode_rr_ur
LLVM_READONLY
int changeAddrMode_rr_ur(uint16_t Opcode) {
static const uint16_t changeAddrMode_rr_urTable[][2] = {
  { Hexagon::L4_loadrb_rr, Hexagon::L4_loadrb_ur },
  { Hexagon::L4_loadrd_rr, Hexagon::L4_loadrd_ur },
  { Hexagon::L4_loadrh_rr, Hexagon::L4_loadrh_ur },
  { Hexagon::L4_loadri_rr, Hexagon::L4_loadri_ur },
  { Hexagon::L4_loadrub_rr, Hexagon::L4_loadrub_ur },
  { Hexagon::L4_loadruh_rr, Hexagon::L4_loadruh_ur },
  { Hexagon::S4_storerb_rr, Hexagon::S4_storerb_ur },
  { Hexagon::S4_storerd_rr, Hexagon::S4_storerd_ur },
  { Hexagon::S4_storerf_rr, Hexagon::S4_storerf_ur },
  { Hexagon::S4_storerh_rr, Hexagon::S4_storerh_ur },
  { Hexagon::S4_storeri_rr, Hexagon::S4_storeri_ur },
}; // End of changeAddrMode_rr_urTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 11;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_rr_urTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_rr_urTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_rr_urTable[mid][1];
}

// changeAddrMode_ur_rr
LLVM_READONLY
int changeAddrMode_ur_rr(uint16_t Opcode) {
static const uint16_t changeAddrMode_ur_rrTable[][2] = {
  { Hexagon::L4_loadrb_ur, Hexagon::L4_loadrb_rr },
  { Hexagon::L4_loadrd_ur, Hexagon::L4_loadrd_rr },
  { Hexagon::L4_loadrh_ur, Hexagon::L4_loadrh_rr },
  { Hexagon::L4_loadri_ur, Hexagon::L4_loadri_rr },
  { Hexagon::L4_loadrub_ur, Hexagon::L4_loadrub_rr },
  { Hexagon::L4_loadruh_ur, Hexagon::L4_loadruh_rr },
  { Hexagon::S4_storerb_ur, Hexagon::S4_storerb_rr },
  { Hexagon::S4_storerd_ur, Hexagon::S4_storerd_rr },
  { Hexagon::S4_storerf_ur, Hexagon::S4_storerf_rr },
  { Hexagon::S4_storerh_ur, Hexagon::S4_storerh_rr },
  { Hexagon::S4_storeri_ur, Hexagon::S4_storeri_rr },
}; // End of changeAddrMode_ur_rrTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 11;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_ur_rrTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_ur_rrTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_ur_rrTable[mid][1];
}

// getFalsePredOpcode
LLVM_READONLY
int getFalsePredOpcode(uint16_t Opcode) {
static const uint16_t getFalsePredOpcodeTable[][2] = {
  { Hexagon::A2_tfrpt, Hexagon::A2_tfrpf },
  { Hexagon::A2_tfrptnew, Hexagon::A2_tfrpfnew },
  { Hexagon::A2_tfrt, Hexagon::A2_tfrf },
  { Hexagon::A2_tfrtnew, Hexagon::A2_tfrfnew },
  { Hexagon::A2_paddit, Hexagon::A2_paddif },
  { Hexagon::A2_padditnew, Hexagon::A2_paddifnew },
  { Hexagon::A2_paddt, Hexagon::A2_paddf },
  { Hexagon::A2_paddtnew, Hexagon::A2_paddfnew },
  { Hexagon::A2_pandt, Hexagon::A2_pandf },
  { Hexagon::A2_pandtnew, Hexagon::A2_pandfnew },
  { Hexagon::A2_port, Hexagon::A2_porf },
  { Hexagon::A2_portnew, Hexagon::A2_porfnew },
  { Hexagon::A2_psubt, Hexagon::A2_psubf },
  { Hexagon::A2_psubtnew, Hexagon::A2_psubfnew },
  { Hexagon::A2_pxort, Hexagon::A2_pxorf },
  { Hexagon::A2_pxortnew, Hexagon::A2_pxorfnew },
  { Hexagon::A4_paslht, Hexagon::A4_paslhf },
  { Hexagon::A4_paslhtnew, Hexagon::A4_paslhfnew },
  { Hexagon::A4_pasrht, Hexagon::A4_pasrhf },
  { Hexagon::A4_pasrhtnew, Hexagon::A4_pasrhfnew },
  { Hexagon::A4_psxtbt, Hexagon::A4_psxtbf },
  { Hexagon::A4_psxtbtnew, Hexagon::A4_psxtbfnew },
  { Hexagon::A4_psxtht, Hexagon::A4_psxthf },
  { Hexagon::A4_psxthtnew, Hexagon::A4_psxthfnew },
  { Hexagon::A4_pzxtbt, Hexagon::A4_pzxtbf },
  { Hexagon::A4_pzxtbtnew, Hexagon::A4_pzxtbfnew },
  { Hexagon::A4_pzxtht, Hexagon::A4_pzxthf },
  { Hexagon::A4_pzxthtnew, Hexagon::A4_pzxthfnew },
  { Hexagon::C2_ccombinewnewt, Hexagon::C2_ccombinewnewf },
  { Hexagon::C2_ccombinewt, Hexagon::C2_ccombinewf },
  { Hexagon::C2_cmoveit, Hexagon::C2_cmoveif },
  { Hexagon::C2_cmovenewit, Hexagon::C2_cmovenewif },
  { Hexagon::J2_callt, Hexagon::J2_callf },
  { Hexagon::J2_jumprt, Hexagon::J2_jumprf },
  { Hexagon::J2_jumprtnew, Hexagon::J2_jumprfnew },
  { Hexagon::J2_jumprtnewpt, Hexagon::J2_jumprfnewpt },
  { Hexagon::J2_jumprtpt, Hexagon::J2_jumprfpt },
  { Hexagon::J2_jumpt, Hexagon::J2_jumpf },
  { Hexagon::J2_jumptnew, Hexagon::J2_jumpfnew },
  { Hexagon::J2_jumptnewpt, Hexagon::J2_jumpfnewpt },
  { Hexagon::J2_jumptpt, Hexagon::J2_jumpfpt },
  { Hexagon::J4_cmpeq_t_jumpnv_nt, Hexagon::J4_cmpeq_f_jumpnv_nt },
  { Hexagon::J4_cmpeq_t_jumpnv_t, Hexagon::J4_cmpeq_f_jumpnv_t },
  { Hexagon::J4_cmpeq_tp0_jump_nt, Hexagon::J4_cmpeq_fp0_jump_nt },
  { Hexagon::J4_cmpeq_tp0_jump_t, Hexagon::J4_cmpeq_fp0_jump_t },
  { Hexagon::J4_cmpeq_tp1_jump_nt, Hexagon::J4_cmpeq_fp1_jump_nt },
  { Hexagon::J4_cmpeq_tp1_jump_t, Hexagon::J4_cmpeq_fp1_jump_t },
  { Hexagon::J4_cmpeqi_t_jumpnv_nt, Hexagon::J4_cmpeqi_f_jumpnv_nt },
  { Hexagon::J4_cmpeqi_t_jumpnv_t, Hexagon::J4_cmpeqi_f_jumpnv_t },
  { Hexagon::J4_cmpeqi_tp0_jump_nt, Hexagon::J4_cmpeqi_fp0_jump_nt },
  { Hexagon::J4_cmpeqi_tp0_jump_t, Hexagon::J4_cmpeqi_fp0_jump_t },
  { Hexagon::J4_cmpeqi_tp1_jump_nt, Hexagon::J4_cmpeqi_fp1_jump_nt },
  { Hexagon::J4_cmpeqi_tp1_jump_t, Hexagon::J4_cmpeqi_fp1_jump_t },
  { Hexagon::J4_cmpeqn1_t_jumpnv_nt, Hexagon::J4_cmpeqn1_f_jumpnv_nt },
  { Hexagon::J4_cmpeqn1_t_jumpnv_t, Hexagon::J4_cmpeqn1_f_jumpnv_t },
  { Hexagon::J4_cmpeqn1_tp0_jump_nt, Hexagon::J4_cmpeqn1_fp0_jump_nt },
  { Hexagon::J4_cmpeqn1_tp0_jump_t, Hexagon::J4_cmpeqn1_fp0_jump_t },
  { Hexagon::J4_cmpeqn1_tp1_jump_nt, Hexagon::J4_cmpeqn1_fp1_jump_nt },
  { Hexagon::J4_cmpeqn1_tp1_jump_t, Hexagon::J4_cmpeqn1_fp1_jump_t },
  { Hexagon::J4_cmpgt_t_jumpnv_nt, Hexagon::J4_cmpgt_f_jumpnv_nt },
  { Hexagon::J4_cmpgt_t_jumpnv_t, Hexagon::J4_cmpgt_f_jumpnv_t },
  { Hexagon::J4_cmpgt_tp0_jump_nt, Hexagon::J4_cmpgt_fp0_jump_nt },
  { Hexagon::J4_cmpgt_tp0_jump_t, Hexagon::J4_cmpgt_fp0_jump_t },
  { Hexagon::J4_cmpgt_tp1_jump_nt, Hexagon::J4_cmpgt_fp1_jump_nt },
  { Hexagon::J4_cmpgt_tp1_jump_t, Hexagon::J4_cmpgt_fp1_jump_t },
  { Hexagon::J4_cmpgti_t_jumpnv_nt, Hexagon::J4_cmpgti_f_jumpnv_nt },
  { Hexagon::J4_cmpgti_t_jumpnv_t, Hexagon::J4_cmpgti_f_jumpnv_t },
  { Hexagon::J4_cmpgti_tp0_jump_nt, Hexagon::J4_cmpgti_fp0_jump_nt },
  { Hexagon::J4_cmpgti_tp0_jump_t, Hexagon::J4_cmpgti_fp0_jump_t },
  { Hexagon::J4_cmpgti_tp1_jump_nt, Hexagon::J4_cmpgti_fp1_jump_nt },
  { Hexagon::J4_cmpgti_tp1_jump_t, Hexagon::J4_cmpgti_fp1_jump_t },
  { Hexagon::J4_cmpgtn1_t_jumpnv_nt, Hexagon::J4_cmpgtn1_f_jumpnv_nt },
  { Hexagon::J4_cmpgtn1_t_jumpnv_t, Hexagon::J4_cmpgtn1_f_jumpnv_t },
  { Hexagon::J4_cmpgtn1_tp0_jump_nt, Hexagon::J4_cmpgtn1_fp0_jump_nt },
  { Hexagon::J4_cmpgtn1_tp0_jump_t, Hexagon::J4_cmpgtn1_fp0_jump_t },
  { Hexagon::J4_cmpgtn1_tp1_jump_nt, Hexagon::J4_cmpgtn1_fp1_jump_nt },
  { Hexagon::J4_cmpgtn1_tp1_jump_t, Hexagon::J4_cmpgtn1_fp1_jump_t },
  { Hexagon::J4_cmpgtu_t_jumpnv_nt, Hexagon::J4_cmpgtu_f_jumpnv_nt },
  { Hexagon::J4_cmpgtu_t_jumpnv_t, Hexagon::J4_cmpgtu_f_jumpnv_t },
  { Hexagon::J4_cmpgtu_tp0_jump_nt, Hexagon::J4_cmpgtu_fp0_jump_nt },
  { Hexagon::J4_cmpgtu_tp0_jump_t, Hexagon::J4_cmpgtu_fp0_jump_t },
  { Hexagon::J4_cmpgtu_tp1_jump_nt, Hexagon::J4_cmpgtu_fp1_jump_nt },
  { Hexagon::J4_cmpgtu_tp1_jump_t, Hexagon::J4_cmpgtu_fp1_jump_t },
  { Hexagon::J4_cmpgtui_t_jumpnv_nt, Hexagon::J4_cmpgtui_f_jumpnv_nt },
  { Hexagon::J4_cmpgtui_t_jumpnv_t, Hexagon::J4_cmpgtui_f_jumpnv_t },
  { Hexagon::J4_cmpgtui_tp0_jump_nt, Hexagon::J4_cmpgtui_fp0_jump_nt },
  { Hexagon::J4_cmpgtui_tp0_jump_t, Hexagon::J4_cmpgtui_fp0_jump_t },
  { Hexagon::J4_cmpgtui_tp1_jump_nt, Hexagon::J4_cmpgtui_fp1_jump_nt },
  { Hexagon::J4_cmpgtui_tp1_jump_t, Hexagon::J4_cmpgtui_fp1_jump_t },
  { Hexagon::J4_cmplt_t_jumpnv_nt, Hexagon::J4_cmplt_f_jumpnv_nt },
  { Hexagon::J4_cmplt_t_jumpnv_t, Hexagon::J4_cmplt_f_jumpnv_t },
  { Hexagon::J4_cmpltu_t_jumpnv_nt, Hexagon::J4_cmpltu_f_jumpnv_nt },
  { Hexagon::J4_cmpltu_t_jumpnv_t, Hexagon::J4_cmpltu_f_jumpnv_t },
  { Hexagon::L2_ploadrbt_io, Hexagon::L2_ploadrbf_io },
  { Hexagon::L2_ploadrbt_pi, Hexagon::L2_ploadrbf_pi },
  { Hexagon::L2_ploadrbtnew_io, Hexagon::L2_ploadrbfnew_io },
  { Hexagon::L2_ploadrbtnew_pi, Hexagon::L2_ploadrbfnew_pi },
  { Hexagon::L2_ploadrdt_io, Hexagon::L2_ploadrdf_io },
  { Hexagon::L2_ploadrdt_pi, Hexagon::L2_ploadrdf_pi },
  { Hexagon::L2_ploadrdtnew_io, Hexagon::L2_ploadrdfnew_io },
  { Hexagon::L2_ploadrdtnew_pi, Hexagon::L2_ploadrdfnew_pi },
  { Hexagon::L2_ploadrht_io, Hexagon::L2_ploadrhf_io },
  { Hexagon::L2_ploadrht_pi, Hexagon::L2_ploadrhf_pi },
  { Hexagon::L2_ploadrhtnew_io, Hexagon::L2_ploadrhfnew_io },
  { Hexagon::L2_ploadrhtnew_pi, Hexagon::L2_ploadrhfnew_pi },
  { Hexagon::L2_ploadrit_io, Hexagon::L2_ploadrif_io },
  { Hexagon::L2_ploadrit_pi, Hexagon::L2_ploadrif_pi },
  { Hexagon::L2_ploadritnew_io, Hexagon::L2_ploadrifnew_io },
  { Hexagon::L2_ploadritnew_pi, Hexagon::L2_ploadrifnew_pi },
  { Hexagon::L2_ploadrubt_io, Hexagon::L2_ploadrubf_io },
  { Hexagon::L2_ploadrubt_pi, Hexagon::L2_ploadrubf_pi },
  { Hexagon::L2_ploadrubtnew_io, Hexagon::L2_ploadrubfnew_io },
  { Hexagon::L2_ploadrubtnew_pi, Hexagon::L2_ploadrubfnew_pi },
  { Hexagon::L2_ploadruht_io, Hexagon::L2_ploadruhf_io },
  { Hexagon::L2_ploadruht_pi, Hexagon::L2_ploadruhf_pi },
  { Hexagon::L2_ploadruhtnew_io, Hexagon::L2_ploadruhfnew_io },
  { Hexagon::L2_ploadruhtnew_pi, Hexagon::L2_ploadruhfnew_pi },
  { Hexagon::L4_ploadrbt_abs, Hexagon::L4_ploadrbf_abs },
  { Hexagon::L4_ploadrbt_rr, Hexagon::L4_ploadrbf_rr },
  { Hexagon::L4_ploadrbtnew_abs, Hexagon::L4_ploadrbfnew_abs },
  { Hexagon::L4_ploadrbtnew_rr, Hexagon::L4_ploadrbfnew_rr },
  { Hexagon::L4_ploadrdt_abs, Hexagon::L4_ploadrdf_abs },
  { Hexagon::L4_ploadrdt_rr, Hexagon::L4_ploadrdf_rr },
  { Hexagon::L4_ploadrdtnew_abs, Hexagon::L4_ploadrdfnew_abs },
  { Hexagon::L4_ploadrdtnew_rr, Hexagon::L4_ploadrdfnew_rr },
  { Hexagon::L4_ploadrht_abs, Hexagon::L4_ploadrhf_abs },
  { Hexagon::L4_ploadrht_rr, Hexagon::L4_ploadrhf_rr },
  { Hexagon::L4_ploadrhtnew_abs, Hexagon::L4_ploadrhfnew_abs },
  { Hexagon::L4_ploadrhtnew_rr, Hexagon::L4_ploadrhfnew_rr },
  { Hexagon::L4_ploadrit_abs, Hexagon::L4_ploadrif_abs },
  { Hexagon::L4_ploadrit_rr, Hexagon::L4_ploadrif_rr },
  { Hexagon::L4_ploadritnew_abs, Hexagon::L4_ploadrifnew_abs },
  { Hexagon::L4_ploadritnew_rr, Hexagon::L4_ploadrifnew_rr },
  { Hexagon::L4_ploadrubt_abs, Hexagon::L4_ploadrubf_abs },
  { Hexagon::L4_ploadrubt_rr, Hexagon::L4_ploadrubf_rr },
  { Hexagon::L4_ploadrubtnew_abs, Hexagon::L4_ploadrubfnew_abs },
  { Hexagon::L4_ploadrubtnew_rr, Hexagon::L4_ploadrubfnew_rr },
  { Hexagon::L4_ploadruht_abs, Hexagon::L4_ploadruhf_abs },
  { Hexagon::L4_ploadruht_rr, Hexagon::L4_ploadruhf_rr },
  { Hexagon::L4_ploadruhtnew_abs, Hexagon::L4_ploadruhfnew_abs },
  { Hexagon::L4_ploadruhtnew_rr, Hexagon::L4_ploadruhfnew_rr },
  { Hexagon::L4_return_t, Hexagon::L4_return_f },
  { Hexagon::L4_return_tnew_pnt, Hexagon::L4_return_fnew_pnt },
  { Hexagon::L4_return_tnew_pt, Hexagon::L4_return_fnew_pt },
  { Hexagon::PS_jmprett, Hexagon::PS_jmpretf },
  { Hexagon::PS_jmprettnew, Hexagon::PS_jmpretfnew },
  { Hexagon::PS_jmprettnewpt, Hexagon::PS_jmpretfnewpt },
  { Hexagon::S2_pstorerbnewt_io, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S2_pstorerbnewt_pi, Hexagon::S2_pstorerbnewf_pi },
  { Hexagon::S2_pstorerbnewtnew_pi, Hexagon::S2_pstorerbnewfnew_pi },
  { Hexagon::S2_pstorerbt_io, Hexagon::S2_pstorerbf_io },
  { Hexagon::S2_pstorerbt_pi, Hexagon::S2_pstorerbf_pi },
  { Hexagon::S2_pstorerbtnew_pi, Hexagon::S2_pstorerbfnew_pi },
  { Hexagon::S2_pstorerdt_io, Hexagon::S2_pstorerdf_io },
  { Hexagon::S2_pstorerdt_pi, Hexagon::S2_pstorerdf_pi },
  { Hexagon::S2_pstorerdtnew_pi, Hexagon::S2_pstorerdfnew_pi },
  { Hexagon::S2_pstorerft_io, Hexagon::S2_pstorerff_io },
  { Hexagon::S2_pstorerft_pi, Hexagon::S2_pstorerff_pi },
  { Hexagon::S2_pstorerftnew_pi, Hexagon::S2_pstorerffnew_pi },
  { Hexagon::S2_pstorerhnewt_io, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S2_pstorerhnewt_pi, Hexagon::S2_pstorerhnewf_pi },
  { Hexagon::S2_pstorerhnewtnew_pi, Hexagon::S2_pstorerhnewfnew_pi },
  { Hexagon::S2_pstorerht_io, Hexagon::S2_pstorerhf_io },
  { Hexagon::S2_pstorerht_pi, Hexagon::S2_pstorerhf_pi },
  { Hexagon::S2_pstorerhtnew_pi, Hexagon::S2_pstorerhfnew_pi },
  { Hexagon::S2_pstorerinewt_io, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S2_pstorerinewt_pi, Hexagon::S2_pstorerinewf_pi },
  { Hexagon::S2_pstorerinewtnew_pi, Hexagon::S2_pstorerinewfnew_pi },
  { Hexagon::S2_pstorerit_io, Hexagon::S2_pstorerif_io },
  { Hexagon::S2_pstorerit_pi, Hexagon::S2_pstorerif_pi },
  { Hexagon::S2_pstoreritnew_pi, Hexagon::S2_pstorerifnew_pi },
  { Hexagon::S4_pstorerbnewt_abs, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::S4_pstorerbnewt_rr, Hexagon::S4_pstorerbnewf_rr },
  { Hexagon::S4_pstorerbnewtnew_abs, Hexagon::S4_pstorerbnewfnew_abs },
  { Hexagon::S4_pstorerbnewtnew_io, Hexagon::S4_pstorerbnewfnew_io },
  { Hexagon::S4_pstorerbnewtnew_rr, Hexagon::S4_pstorerbnewfnew_rr },
  { Hexagon::S4_pstorerbt_abs, Hexagon::S4_pstorerbf_abs },
  { Hexagon::S4_pstorerbt_rr, Hexagon::S4_pstorerbf_rr },
  { Hexagon::S4_pstorerbtnew_abs, Hexagon::S4_pstorerbfnew_abs },
  { Hexagon::S4_pstorerbtnew_io, Hexagon::S4_pstorerbfnew_io },
  { Hexagon::S4_pstorerbtnew_rr, Hexagon::S4_pstorerbfnew_rr },
  { Hexagon::S4_pstorerdt_abs, Hexagon::S4_pstorerdf_abs },
  { Hexagon::S4_pstorerdt_rr, Hexagon::S4_pstorerdf_rr },
  { Hexagon::S4_pstorerdtnew_abs, Hexagon::S4_pstorerdfnew_abs },
  { Hexagon::S4_pstorerdtnew_io, Hexagon::S4_pstorerdfnew_io },
  { Hexagon::S4_pstorerdtnew_rr, Hexagon::S4_pstorerdfnew_rr },
  { Hexagon::S4_pstorerft_abs, Hexagon::S4_pstorerff_abs },
  { Hexagon::S4_pstorerft_rr, Hexagon::S4_pstorerff_rr },
  { Hexagon::S4_pstorerftnew_abs, Hexagon::S4_pstorerffnew_abs },
  { Hexagon::S4_pstorerftnew_io, Hexagon::S4_pstorerffnew_io },
  { Hexagon::S4_pstorerftnew_rr, Hexagon::S4_pstorerffnew_rr },
  { Hexagon::S4_pstorerhnewt_abs, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::S4_pstorerhnewt_rr, Hexagon::S4_pstorerhnewf_rr },
  { Hexagon::S4_pstorerhnewtnew_abs, Hexagon::S4_pstorerhnewfnew_abs },
  { Hexagon::S4_pstorerhnewtnew_io, Hexagon::S4_pstorerhnewfnew_io },
  { Hexagon::S4_pstorerhnewtnew_rr, Hexagon::S4_pstorerhnewfnew_rr },
  { Hexagon::S4_pstorerht_abs, Hexagon::S4_pstorerhf_abs },
  { Hexagon::S4_pstorerht_rr, Hexagon::S4_pstorerhf_rr },
  { Hexagon::S4_pstorerhtnew_abs, Hexagon::S4_pstorerhfnew_abs },
  { Hexagon::S4_pstorerhtnew_io, Hexagon::S4_pstorerhfnew_io },
  { Hexagon::S4_pstorerhtnew_rr, Hexagon::S4_pstorerhfnew_rr },
  { Hexagon::S4_pstorerinewt_abs, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S4_pstorerinewt_rr, Hexagon::S4_pstorerinewf_rr },
  { Hexagon::S4_pstorerinewtnew_abs, Hexagon::S4_pstorerinewfnew_abs },
  { Hexagon::S4_pstorerinewtnew_io, Hexagon::S4_pstorerinewfnew_io },
  { Hexagon::S4_pstorerinewtnew_rr, Hexagon::S4_pstorerinewfnew_rr },
  { Hexagon::S4_pstorerit_abs, Hexagon::S4_pstorerif_abs },
  { Hexagon::S4_pstorerit_rr, Hexagon::S4_pstorerif_rr },
  { Hexagon::S4_pstoreritnew_abs, Hexagon::S4_pstorerifnew_abs },
  { Hexagon::S4_pstoreritnew_io, Hexagon::S4_pstorerifnew_io },
  { Hexagon::S4_pstoreritnew_rr, Hexagon::S4_pstorerifnew_rr },
  { Hexagon::S4_storeirbt_io, Hexagon::S4_storeirbf_io },
  { Hexagon::S4_storeirbtnew_io, Hexagon::S4_storeirbfnew_io },
  { Hexagon::S4_storeirht_io, Hexagon::S4_storeirhf_io },
  { Hexagon::S4_storeirhtnew_io, Hexagon::S4_storeirhfnew_io },
  { Hexagon::S4_storeirit_io, Hexagon::S4_storeirif_io },
  { Hexagon::S4_storeiritnew_io, Hexagon::S4_storeirifnew_io },
  { Hexagon::V6_vL32b_cur_pred_ai, Hexagon::V6_vL32b_cur_npred_ai },
  { Hexagon::V6_vL32b_cur_pred_pi, Hexagon::V6_vL32b_cur_npred_pi },
  { Hexagon::V6_vL32b_cur_pred_ppu, Hexagon::V6_vL32b_cur_npred_ppu },
  { Hexagon::V6_vL32b_nt_cur_pred_ai, Hexagon::V6_vL32b_nt_cur_npred_ai },
  { Hexagon::V6_vL32b_nt_cur_pred_pi, Hexagon::V6_vL32b_nt_cur_npred_pi },
  { Hexagon::V6_vL32b_nt_cur_pred_ppu, Hexagon::V6_vL32b_nt_cur_npred_ppu },
  { Hexagon::V6_vL32b_nt_pred_ai, Hexagon::V6_vL32b_nt_npred_ai },
  { Hexagon::V6_vL32b_nt_pred_pi, Hexagon::V6_vL32b_nt_npred_pi },
  { Hexagon::V6_vL32b_nt_pred_ppu, Hexagon::V6_vL32b_nt_npred_ppu },
  { Hexagon::V6_vL32b_nt_tmp_pred_ai, Hexagon::V6_vL32b_nt_tmp_npred_ai },
  { Hexagon::V6_vL32b_nt_tmp_pred_pi, Hexagon::V6_vL32b_nt_tmp_npred_pi },
  { Hexagon::V6_vL32b_nt_tmp_pred_ppu, Hexagon::V6_vL32b_nt_tmp_npred_ppu },
  { Hexagon::V6_vL32b_pred_ai, Hexagon::V6_vL32b_npred_ai },
  { Hexagon::V6_vL32b_pred_pi, Hexagon::V6_vL32b_npred_pi },
  { Hexagon::V6_vL32b_pred_ppu, Hexagon::V6_vL32b_npred_ppu },
  { Hexagon::V6_vL32b_tmp_pred_ai, Hexagon::V6_vL32b_tmp_npred_ai },
  { Hexagon::V6_vL32b_tmp_pred_pi, Hexagon::V6_vL32b_tmp_npred_pi },
  { Hexagon::V6_vL32b_tmp_pred_ppu, Hexagon::V6_vL32b_tmp_npred_ppu },
  { Hexagon::V6_vS32Ub_pred_ai, Hexagon::V6_vS32Ub_npred_ai },
  { Hexagon::V6_vS32Ub_pred_pi, Hexagon::V6_vS32Ub_npred_pi },
  { Hexagon::V6_vS32Ub_pred_ppu, Hexagon::V6_vS32Ub_npred_ppu },
  { Hexagon::V6_vS32b_new_pred_ai, Hexagon::V6_vS32b_new_npred_ai },
  { Hexagon::V6_vS32b_new_pred_pi, Hexagon::V6_vS32b_new_npred_pi },
  { Hexagon::V6_vS32b_new_pred_ppu, Hexagon::V6_vS32b_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_new_pred_ai, Hexagon::V6_vS32b_nt_new_npred_ai },
  { Hexagon::V6_vS32b_nt_new_pred_pi, Hexagon::V6_vS32b_nt_new_npred_pi },
  { Hexagon::V6_vS32b_nt_new_pred_ppu, Hexagon::V6_vS32b_nt_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_pred_ai, Hexagon::V6_vS32b_nt_npred_ai },
  { Hexagon::V6_vS32b_nt_pred_pi, Hexagon::V6_vS32b_nt_npred_pi },
  { Hexagon::V6_vS32b_nt_pred_ppu, Hexagon::V6_vS32b_nt_npred_ppu },
  { Hexagon::V6_vS32b_pred_ai, Hexagon::V6_vS32b_npred_ai },
  { Hexagon::V6_vS32b_pred_pi, Hexagon::V6_vS32b_npred_pi },
  { Hexagon::V6_vS32b_pred_ppu, Hexagon::V6_vS32b_npred_ppu },
}; // End of getFalsePredOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 250;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getFalsePredOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getFalsePredOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getFalsePredOpcodeTable[mid][1];
}

// getNewValueOpcode
LLVM_READONLY
int getNewValueOpcode(uint16_t Opcode) {
static const uint16_t getNewValueOpcodeTable[][2] = {
  { Hexagon::PS_storerbabs, Hexagon::PS_storerbnewabs },
  { Hexagon::PS_storerhabs, Hexagon::PS_storerhnewabs },
  { Hexagon::PS_storeriabs, Hexagon::PS_storerinewabs },
  { Hexagon::S2_pstorerbf_io, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S2_pstorerbf_pi, Hexagon::S2_pstorerbnewf_pi },
  { Hexagon::S2_pstorerbfnew_pi, Hexagon::S2_pstorerbnewfnew_pi },
  { Hexagon::S2_pstorerbt_io, Hexagon::S2_pstorerbnewt_io },
  { Hexagon::S2_pstorerbt_pi, Hexagon::S2_pstorerbnewt_pi },
  { Hexagon::S2_pstorerbtnew_pi, Hexagon::S2_pstorerbnewtnew_pi },
  { Hexagon::S2_pstorerhf_io, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S2_pstorerhf_pi, Hexagon::S2_pstorerhnewf_pi },
  { Hexagon::S2_pstorerhfnew_pi, Hexagon::S2_pstorerhnewfnew_pi },
  { Hexagon::S2_pstorerht_io, Hexagon::S2_pstorerhnewt_io },
  { Hexagon::S2_pstorerht_pi, Hexagon::S2_pstorerhnewt_pi },
  { Hexagon::S2_pstorerhtnew_pi, Hexagon::S2_pstorerhnewtnew_pi },
  { Hexagon::S2_pstorerif_io, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S2_pstorerif_pi, Hexagon::S2_pstorerinewf_pi },
  { Hexagon::S2_pstorerifnew_pi, Hexagon::S2_pstorerinewfnew_pi },
  { Hexagon::S2_pstorerit_io, Hexagon::S2_pstorerinewt_io },
  { Hexagon::S2_pstorerit_pi, Hexagon::S2_pstorerinewt_pi },
  { Hexagon::S2_pstoreritnew_pi, Hexagon::S2_pstorerinewtnew_pi },
  { Hexagon::S2_storerb_io, Hexagon::S2_storerbnew_io },
  { Hexagon::S2_storerb_pbr, Hexagon::S2_storerbnew_pbr },
  { Hexagon::S2_storerb_pci, Hexagon::S2_storerbnew_pci },
  { Hexagon::S2_storerb_pcr, Hexagon::S2_storerbnew_pcr },
  { Hexagon::S2_storerb_pi, Hexagon::S2_storerbnew_pi },
  { Hexagon::S2_storerb_pr, Hexagon::S2_storerbnew_pr },
  { Hexagon::S2_storerbgp, Hexagon::S2_storerbnewgp },
  { Hexagon::S2_storerh_io, Hexagon::S2_storerhnew_io },
  { Hexagon::S2_storerh_pbr, Hexagon::S2_storerhnew_pbr },
  { Hexagon::S2_storerh_pci, Hexagon::S2_storerhnew_pci },
  { Hexagon::S2_storerh_pcr, Hexagon::S2_storerhnew_pcr },
  { Hexagon::S2_storerh_pi, Hexagon::S2_storerhnew_pi },
  { Hexagon::S2_storerh_pr, Hexagon::S2_storerhnew_pr },
  { Hexagon::S2_storerhgp, Hexagon::S2_storerhnewgp },
  { Hexagon::S2_storeri_io, Hexagon::S2_storerinew_io },
  { Hexagon::S2_storeri_pbr, Hexagon::S2_storerinew_pbr },
  { Hexagon::S2_storeri_pci, Hexagon::S2_storerinew_pci },
  { Hexagon::S2_storeri_pcr, Hexagon::S2_storerinew_pcr },
  { Hexagon::S2_storeri_pi, Hexagon::S2_storerinew_pi },
  { Hexagon::S2_storeri_pr, Hexagon::S2_storerinew_pr },
  { Hexagon::S2_storerigp, Hexagon::S2_storerinewgp },
  { Hexagon::S4_pstorerbf_abs, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::S4_pstorerbf_rr, Hexagon::S4_pstorerbnewf_rr },
  { Hexagon::S4_pstorerbfnew_abs, Hexagon::S4_pstorerbnewfnew_abs },
  { Hexagon::S4_pstorerbfnew_io, Hexagon::S4_pstorerbnewfnew_io },
  { Hexagon::S4_pstorerbfnew_rr, Hexagon::S4_pstorerbnewfnew_rr },
  { Hexagon::S4_pstorerbt_abs, Hexagon::S4_pstorerbnewt_abs },
  { Hexagon::S4_pstorerbt_rr, Hexagon::S4_pstorerbnewt_rr },
  { Hexagon::S4_pstorerbtnew_abs, Hexagon::S4_pstorerbnewtnew_abs },
  { Hexagon::S4_pstorerbtnew_io, Hexagon::S4_pstorerbnewtnew_io },
  { Hexagon::S4_pstorerbtnew_rr, Hexagon::S4_pstorerbnewtnew_rr },
  { Hexagon::S4_pstorerhf_abs, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::S4_pstorerhf_rr, Hexagon::S4_pstorerhnewf_rr },
  { Hexagon::S4_pstorerhfnew_abs, Hexagon::S4_pstorerhnewfnew_abs },
  { Hexagon::S4_pstorerhfnew_io, Hexagon::S4_pstorerhnewfnew_io },
  { Hexagon::S4_pstorerhfnew_rr, Hexagon::S4_pstorerhnewfnew_rr },
  { Hexagon::S4_pstorerht_abs, Hexagon::S4_pstorerhnewt_abs },
  { Hexagon::S4_pstorerht_rr, Hexagon::S4_pstorerhnewt_rr },
  { Hexagon::S4_pstorerhtnew_abs, Hexagon::S4_pstorerhnewtnew_abs },
  { Hexagon::S4_pstorerhtnew_io, Hexagon::S4_pstorerhnewtnew_io },
  { Hexagon::S4_pstorerhtnew_rr, Hexagon::S4_pstorerhnewtnew_rr },
  { Hexagon::S4_pstorerif_abs, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S4_pstorerif_rr, Hexagon::S4_pstorerinewf_rr },
  { Hexagon::S4_pstorerifnew_abs, Hexagon::S4_pstorerinewfnew_abs },
  { Hexagon::S4_pstorerifnew_io, Hexagon::S4_pstorerinewfnew_io },
  { Hexagon::S4_pstorerifnew_rr, Hexagon::S4_pstorerinewfnew_rr },
  { Hexagon::S4_pstorerit_abs, Hexagon::S4_pstorerinewt_abs },
  { Hexagon::S4_pstorerit_rr, Hexagon::S4_pstorerinewt_rr },
  { Hexagon::S4_pstoreritnew_abs, Hexagon::S4_pstorerinewtnew_abs },
  { Hexagon::S4_pstoreritnew_io, Hexagon::S4_pstorerinewtnew_io },
  { Hexagon::S4_pstoreritnew_rr, Hexagon::S4_pstorerinewtnew_rr },
  { Hexagon::S4_storerb_ap, Hexagon::S4_storerbnew_ap },
  { Hexagon::S4_storerb_rr, Hexagon::S4_storerbnew_rr },
  { Hexagon::S4_storerb_ur, Hexagon::S4_storerbnew_ur },
  { Hexagon::S4_storerh_ap, Hexagon::S4_storerhnew_ap },
  { Hexagon::S4_storerh_rr, Hexagon::S4_storerhnew_rr },
  { Hexagon::S4_storerh_ur, Hexagon::S4_storerhnew_ur },
  { Hexagon::S4_storeri_ap, Hexagon::S4_storerinew_ap },
  { Hexagon::S4_storeri_rr, Hexagon::S4_storerinew_rr },
  { Hexagon::S4_storeri_ur, Hexagon::S4_storerinew_ur },
  { Hexagon::V6_vS32b_ai, Hexagon::V6_vS32b_new_ai },
  { Hexagon::V6_vS32b_npred_ai, Hexagon::V6_vS32b_new_npred_ai },
  { Hexagon::V6_vS32b_npred_pi, Hexagon::V6_vS32b_new_npred_pi },
  { Hexagon::V6_vS32b_npred_ppu, Hexagon::V6_vS32b_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_ai, Hexagon::V6_vS32b_nt_new_ai },
  { Hexagon::V6_vS32b_nt_npred_ai, Hexagon::V6_vS32b_nt_new_npred_ai },
  { Hexagon::V6_vS32b_nt_npred_pi, Hexagon::V6_vS32b_nt_new_npred_pi },
  { Hexagon::V6_vS32b_nt_npred_ppu, Hexagon::V6_vS32b_nt_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_pi, Hexagon::V6_vS32b_nt_new_pi },
  { Hexagon::V6_vS32b_nt_ppu, Hexagon::V6_vS32b_nt_new_ppu },
  { Hexagon::V6_vS32b_nt_pred_ai, Hexagon::V6_vS32b_nt_new_pred_ai },
  { Hexagon::V6_vS32b_nt_pred_pi, Hexagon::V6_vS32b_nt_new_pred_pi },
  { Hexagon::V6_vS32b_nt_pred_ppu, Hexagon::V6_vS32b_nt_new_pred_ppu },
  { Hexagon::V6_vS32b_pi, Hexagon::V6_vS32b_new_pi },
  { Hexagon::V6_vS32b_ppu, Hexagon::V6_vS32b_new_ppu },
  { Hexagon::V6_vS32b_pred_ai, Hexagon::V6_vS32b_new_pred_ai },
  { Hexagon::V6_vS32b_pred_pi, Hexagon::V6_vS32b_new_pred_pi },
  { Hexagon::V6_vS32b_pred_ppu, Hexagon::V6_vS32b_new_pred_ppu },
}; // End of getNewValueOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 99;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getNewValueOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getNewValueOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getNewValueOpcodeTable[mid][1];
}

// getNonNVStore
LLVM_READONLY
int getNonNVStore(uint16_t Opcode) {
static const uint16_t getNonNVStoreTable[][2] = {
  { Hexagon::PS_storerbnewabs, Hexagon::PS_storerbabs },
  { Hexagon::PS_storerhnewabs, Hexagon::PS_storerhabs },
  { Hexagon::PS_storerinewabs, Hexagon::PS_storeriabs },
  { Hexagon::S2_pstorerbnewf_io, Hexagon::S2_pstorerbf_io },
  { Hexagon::S2_pstorerbnewf_pi, Hexagon::S2_pstorerbf_pi },
  { Hexagon::S2_pstorerbnewfnew_pi, Hexagon::S2_pstorerbfnew_pi },
  { Hexagon::S2_pstorerbnewt_io, Hexagon::S2_pstorerbt_io },
  { Hexagon::S2_pstorerbnewt_pi, Hexagon::S2_pstorerbt_pi },
  { Hexagon::S2_pstorerbnewtnew_pi, Hexagon::S2_pstorerbtnew_pi },
  { Hexagon::S2_pstorerhnewf_io, Hexagon::S2_pstorerhf_io },
  { Hexagon::S2_pstorerhnewf_pi, Hexagon::S2_pstorerhf_pi },
  { Hexagon::S2_pstorerhnewfnew_pi, Hexagon::S2_pstorerhfnew_pi },
  { Hexagon::S2_pstorerhnewt_io, Hexagon::S2_pstorerht_io },
  { Hexagon::S2_pstorerhnewt_pi, Hexagon::S2_pstorerht_pi },
  { Hexagon::S2_pstorerhnewtnew_pi, Hexagon::S2_pstorerhtnew_pi },
  { Hexagon::S2_pstorerinewf_io, Hexagon::S2_pstorerif_io },
  { Hexagon::S2_pstorerinewf_pi, Hexagon::S2_pstorerif_pi },
  { Hexagon::S2_pstorerinewfnew_pi, Hexagon::S2_pstorerifnew_pi },
  { Hexagon::S2_pstorerinewt_io, Hexagon::S2_pstorerit_io },
  { Hexagon::S2_pstorerinewt_pi, Hexagon::S2_pstorerit_pi },
  { Hexagon::S2_pstorerinewtnew_pi, Hexagon::S2_pstoreritnew_pi },
  { Hexagon::S2_storerbnew_io, Hexagon::S2_storerb_io },
  { Hexagon::S2_storerbnew_pbr, Hexagon::S2_storerb_pbr },
  { Hexagon::S2_storerbnew_pci, Hexagon::S2_storerb_pci },
  { Hexagon::S2_storerbnew_pcr, Hexagon::S2_storerb_pcr },
  { Hexagon::S2_storerbnew_pi, Hexagon::S2_storerb_pi },
  { Hexagon::S2_storerbnew_pr, Hexagon::S2_storerb_pr },
  { Hexagon::S2_storerbnewgp, Hexagon::S2_storerbgp },
  { Hexagon::S2_storerhnew_io, Hexagon::S2_storerh_io },
  { Hexagon::S2_storerhnew_pbr, Hexagon::S2_storerh_pbr },
  { Hexagon::S2_storerhnew_pci, Hexagon::S2_storerh_pci },
  { Hexagon::S2_storerhnew_pcr, Hexagon::S2_storerh_pcr },
  { Hexagon::S2_storerhnew_pi, Hexagon::S2_storerh_pi },
  { Hexagon::S2_storerhnew_pr, Hexagon::S2_storerh_pr },
  { Hexagon::S2_storerhnewgp, Hexagon::S2_storerhgp },
  { Hexagon::S2_storerinew_io, Hexagon::S2_storeri_io },
  { Hexagon::S2_storerinew_pbr, Hexagon::S2_storeri_pbr },
  { Hexagon::S2_storerinew_pci, Hexagon::S2_storeri_pci },
  { Hexagon::S2_storerinew_pcr, Hexagon::S2_storeri_pcr },
  { Hexagon::S2_storerinew_pi, Hexagon::S2_storeri_pi },
  { Hexagon::S2_storerinew_pr, Hexagon::S2_storeri_pr },
  { Hexagon::S2_storerinewgp, Hexagon::S2_storerigp },
  { Hexagon::S4_pstorerbnewf_abs, Hexagon::S4_pstorerbf_abs },
  { Hexagon::S4_pstorerbnewf_rr, Hexagon::S4_pstorerbf_rr },
  { Hexagon::S4_pstorerbnewfnew_abs, Hexagon::S4_pstorerbfnew_abs },
  { Hexagon::S4_pstorerbnewfnew_io, Hexagon::S4_pstorerbfnew_io },
  { Hexagon::S4_pstorerbnewfnew_rr, Hexagon::S4_pstorerbfnew_rr },
  { Hexagon::S4_pstorerbnewt_abs, Hexagon::S4_pstorerbt_abs },
  { Hexagon::S4_pstorerbnewt_rr, Hexagon::S4_pstorerbt_rr },
  { Hexagon::S4_pstorerbnewtnew_abs, Hexagon::S4_pstorerbtnew_abs },
  { Hexagon::S4_pstorerbnewtnew_io, Hexagon::S4_pstorerbtnew_io },
  { Hexagon::S4_pstorerbnewtnew_rr, Hexagon::S4_pstorerbtnew_rr },
  { Hexagon::S4_pstorerhnewf_abs, Hexagon::S4_pstorerhf_abs },
  { Hexagon::S4_pstorerhnewf_rr, Hexagon::S4_pstorerhf_rr },
  { Hexagon::S4_pstorerhnewfnew_abs, Hexagon::S4_pstorerhfnew_abs },
  { Hexagon::S4_pstorerhnewfnew_io, Hexagon::S4_pstorerhfnew_io },
  { Hexagon::S4_pstorerhnewfnew_rr, Hexagon::S4_pstorerhfnew_rr },
  { Hexagon::S4_pstorerhnewt_abs, Hexagon::S4_pstorerht_abs },
  { Hexagon::S4_pstorerhnewt_rr, Hexagon::S4_pstorerht_rr },
  { Hexagon::S4_pstorerhnewtnew_abs, Hexagon::S4_pstorerhtnew_abs },
  { Hexagon::S4_pstorerhnewtnew_io, Hexagon::S4_pstorerhtnew_io },
  { Hexagon::S4_pstorerhnewtnew_rr, Hexagon::S4_pstorerhtnew_rr },
  { Hexagon::S4_pstorerinewf_abs, Hexagon::S4_pstorerif_abs },
  { Hexagon::S4_pstorerinewf_rr, Hexagon::S4_pstorerif_rr },
  { Hexagon::S4_pstorerinewfnew_abs, Hexagon::S4_pstorerifnew_abs },
  { Hexagon::S4_pstorerinewfnew_io, Hexagon::S4_pstorerifnew_io },
  { Hexagon::S4_pstorerinewfnew_rr, Hexagon::S4_pstorerifnew_rr },
  { Hexagon::S4_pstorerinewt_abs, Hexagon::S4_pstorerit_abs },
  { Hexagon::S4_pstorerinewt_rr, Hexagon::S4_pstorerit_rr },
  { Hexagon::S4_pstorerinewtnew_abs, Hexagon::S4_pstoreritnew_abs },
  { Hexagon::S4_pstorerinewtnew_io, Hexagon::S4_pstoreritnew_io },
  { Hexagon::S4_pstorerinewtnew_rr, Hexagon::S4_pstoreritnew_rr },
  { Hexagon::S4_storerbnew_ap, Hexagon::S4_storerb_ap },
  { Hexagon::S4_storerbnew_rr, Hexagon::S4_storerb_rr },
  { Hexagon::S4_storerbnew_ur, Hexagon::S4_storerb_ur },
  { Hexagon::S4_storerhnew_ap, Hexagon::S4_storerh_ap },
  { Hexagon::S4_storerhnew_rr, Hexagon::S4_storerh_rr },
  { Hexagon::S4_storerhnew_ur, Hexagon::S4_storerh_ur },
  { Hexagon::S4_storerinew_ap, Hexagon::S4_storeri_ap },
  { Hexagon::S4_storerinew_rr, Hexagon::S4_storeri_rr },
  { Hexagon::S4_storerinew_ur, Hexagon::S4_storeri_ur },
  { Hexagon::V6_vS32b_new_ai, Hexagon::V6_vS32b_ai },
  { Hexagon::V6_vS32b_new_npred_ai, Hexagon::V6_vS32b_npred_ai },
  { Hexagon::V6_vS32b_new_npred_pi, Hexagon::V6_vS32b_npred_pi },
  { Hexagon::V6_vS32b_new_npred_ppu, Hexagon::V6_vS32b_npred_ppu },
  { Hexagon::V6_vS32b_new_pi, Hexagon::V6_vS32b_pi },
  { Hexagon::V6_vS32b_new_ppu, Hexagon::V6_vS32b_ppu },
  { Hexagon::V6_vS32b_new_pred_ai, Hexagon::V6_vS32b_pred_ai },
  { Hexagon::V6_vS32b_new_pred_pi, Hexagon::V6_vS32b_pred_pi },
  { Hexagon::V6_vS32b_new_pred_ppu, Hexagon::V6_vS32b_pred_ppu },
  { Hexagon::V6_vS32b_nt_new_ai, Hexagon::V6_vS32b_nt_ai },
  { Hexagon::V6_vS32b_nt_new_npred_ai, Hexagon::V6_vS32b_nt_npred_ai },
  { Hexagon::V6_vS32b_nt_new_npred_pi, Hexagon::V6_vS32b_nt_npred_pi },
  { Hexagon::V6_vS32b_nt_new_npred_ppu, Hexagon::V6_vS32b_nt_npred_ppu },
  { Hexagon::V6_vS32b_nt_new_pi, Hexagon::V6_vS32b_nt_pi },
  { Hexagon::V6_vS32b_nt_new_ppu, Hexagon::V6_vS32b_nt_ppu },
  { Hexagon::V6_vS32b_nt_new_pred_ai, Hexagon::V6_vS32b_nt_pred_ai },
  { Hexagon::V6_vS32b_nt_new_pred_pi, Hexagon::V6_vS32b_nt_pred_pi },
  { Hexagon::V6_vS32b_nt_new_pred_ppu, Hexagon::V6_vS32b_nt_pred_ppu },
}; // End of getNonNVStoreTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 99;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getNonNVStoreTable[mid][0]) {
      break;
    }
    if (Opcode < getNonNVStoreTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getNonNVStoreTable[mid][1];
}

// getPredNewOpcode
LLVM_READONLY
int getPredNewOpcode(uint16_t Opcode) {
static const uint16_t getPredNewOpcodeTable[][2] = {
  { Hexagon::A2_tfrf, Hexagon::A2_tfrfnew },
  { Hexagon::A2_tfrpf, Hexagon::A2_tfrpfnew },
  { Hexagon::A2_tfrpt, Hexagon::A2_tfrptnew },
  { Hexagon::A2_tfrt, Hexagon::A2_tfrtnew },
  { Hexagon::A2_paddf, Hexagon::A2_paddfnew },
  { Hexagon::A2_paddif, Hexagon::A2_paddifnew },
  { Hexagon::A2_paddit, Hexagon::A2_padditnew },
  { Hexagon::A2_paddt, Hexagon::A2_paddtnew },
  { Hexagon::A2_pandf, Hexagon::A2_pandfnew },
  { Hexagon::A2_pandt, Hexagon::A2_pandtnew },
  { Hexagon::A2_porf, Hexagon::A2_porfnew },
  { Hexagon::A2_port, Hexagon::A2_portnew },
  { Hexagon::A2_psubf, Hexagon::A2_psubfnew },
  { Hexagon::A2_psubt, Hexagon::A2_psubtnew },
  { Hexagon::A2_pxorf, Hexagon::A2_pxorfnew },
  { Hexagon::A2_pxort, Hexagon::A2_pxortnew },
  { Hexagon::A4_paslhf, Hexagon::A4_paslhfnew },
  { Hexagon::A4_paslht, Hexagon::A4_paslhtnew },
  { Hexagon::A4_pasrhf, Hexagon::A4_pasrhfnew },
  { Hexagon::A4_pasrht, Hexagon::A4_pasrhtnew },
  { Hexagon::A4_psxtbf, Hexagon::A4_psxtbfnew },
  { Hexagon::A4_psxtbt, Hexagon::A4_psxtbtnew },
  { Hexagon::A4_psxthf, Hexagon::A4_psxthfnew },
  { Hexagon::A4_psxtht, Hexagon::A4_psxthtnew },
  { Hexagon::A4_pzxtbf, Hexagon::A4_pzxtbfnew },
  { Hexagon::A4_pzxtbt, Hexagon::A4_pzxtbtnew },
  { Hexagon::A4_pzxthf, Hexagon::A4_pzxthfnew },
  { Hexagon::A4_pzxtht, Hexagon::A4_pzxthtnew },
  { Hexagon::C2_ccombinewf, Hexagon::C2_ccombinewnewf },
  { Hexagon::C2_ccombinewt, Hexagon::C2_ccombinewnewt },
  { Hexagon::C2_cmoveif, Hexagon::C2_cmovenewif },
  { Hexagon::C2_cmoveit, Hexagon::C2_cmovenewit },
  { Hexagon::J2_jumpf, Hexagon::J2_jumpfnew },
  { Hexagon::J2_jumpfpt, Hexagon::J2_jumpfnewpt },
  { Hexagon::J2_jumprf, Hexagon::J2_jumprfnew },
  { Hexagon::J2_jumprfpt, Hexagon::J2_jumprfnewpt },
  { Hexagon::J2_jumprt, Hexagon::J2_jumprtnew },
  { Hexagon::J2_jumprtpt, Hexagon::J2_jumprtnewpt },
  { Hexagon::J2_jumpt, Hexagon::J2_jumptnew },
  { Hexagon::J2_jumptpt, Hexagon::J2_jumptnewpt },
  { Hexagon::L2_ploadrbf_io, Hexagon::L2_ploadrbfnew_io },
  { Hexagon::L2_ploadrbf_pi, Hexagon::L2_ploadrbfnew_pi },
  { Hexagon::L2_ploadrbt_io, Hexagon::L2_ploadrbtnew_io },
  { Hexagon::L2_ploadrbt_pi, Hexagon::L2_ploadrbtnew_pi },
  { Hexagon::L2_ploadrdf_io, Hexagon::L2_ploadrdfnew_io },
  { Hexagon::L2_ploadrdf_pi, Hexagon::L2_ploadrdfnew_pi },
  { Hexagon::L2_ploadrdt_io, Hexagon::L2_ploadrdtnew_io },
  { Hexagon::L2_ploadrdt_pi, Hexagon::L2_ploadrdtnew_pi },
  { Hexagon::L2_ploadrhf_io, Hexagon::L2_ploadrhfnew_io },
  { Hexagon::L2_ploadrhf_pi, Hexagon::L2_ploadrhfnew_pi },
  { Hexagon::L2_ploadrht_io, Hexagon::L2_ploadrhtnew_io },
  { Hexagon::L2_ploadrht_pi, Hexagon::L2_ploadrhtnew_pi },
  { Hexagon::L2_ploadrif_io, Hexagon::L2_ploadrifnew_io },
  { Hexagon::L2_ploadrif_pi, Hexagon::L2_ploadrifnew_pi },
  { Hexagon::L2_ploadrit_io, Hexagon::L2_ploadritnew_io },
  { Hexagon::L2_ploadrit_pi, Hexagon::L2_ploadritnew_pi },
  { Hexagon::L2_ploadrubf_io, Hexagon::L2_ploadrubfnew_io },
  { Hexagon::L2_ploadrubf_pi, Hexagon::L2_ploadrubfnew_pi },
  { Hexagon::L2_ploadrubt_io, Hexagon::L2_ploadrubtnew_io },
  { Hexagon::L2_ploadrubt_pi, Hexagon::L2_ploadrubtnew_pi },
  { Hexagon::L2_ploadruhf_io, Hexagon::L2_ploadruhfnew_io },
  { Hexagon::L2_ploadruhf_pi, Hexagon::L2_ploadruhfnew_pi },
  { Hexagon::L2_ploadruht_io, Hexagon::L2_ploadruhtnew_io },
  { Hexagon::L2_ploadruht_pi, Hexagon::L2_ploadruhtnew_pi },
  { Hexagon::L4_ploadrbf_abs, Hexagon::L4_ploadrbfnew_abs },
  { Hexagon::L4_ploadrbf_rr, Hexagon::L4_ploadrbfnew_rr },
  { Hexagon::L4_ploadrbt_abs, Hexagon::L4_ploadrbtnew_abs },
  { Hexagon::L4_ploadrbt_rr, Hexagon::L4_ploadrbtnew_rr },
  { Hexagon::L4_ploadrdf_abs, Hexagon::L4_ploadrdfnew_abs },
  { Hexagon::L4_ploadrdf_rr, Hexagon::L4_ploadrdfnew_rr },
  { Hexagon::L4_ploadrdt_abs, Hexagon::L4_ploadrdtnew_abs },
  { Hexagon::L4_ploadrdt_rr, Hexagon::L4_ploadrdtnew_rr },
  { Hexagon::L4_ploadrhf_abs, Hexagon::L4_ploadrhfnew_abs },
  { Hexagon::L4_ploadrhf_rr, Hexagon::L4_ploadrhfnew_rr },
  { Hexagon::L4_ploadrht_abs, Hexagon::L4_ploadrhtnew_abs },
  { Hexagon::L4_ploadrht_rr, Hexagon::L4_ploadrhtnew_rr },
  { Hexagon::L4_ploadrif_abs, Hexagon::L4_ploadrifnew_abs },
  { Hexagon::L4_ploadrif_rr, Hexagon::L4_ploadrifnew_rr },
  { Hexagon::L4_ploadrit_abs, Hexagon::L4_ploadritnew_abs },
  { Hexagon::L4_ploadrit_rr, Hexagon::L4_ploadritnew_rr },
  { Hexagon::L4_ploadrubf_abs, Hexagon::L4_ploadrubfnew_abs },
  { Hexagon::L4_ploadrubf_rr, Hexagon::L4_ploadrubfnew_rr },
  { Hexagon::L4_ploadrubt_abs, Hexagon::L4_ploadrubtnew_abs },
  { Hexagon::L4_ploadrubt_rr, Hexagon::L4_ploadrubtnew_rr },
  { Hexagon::L4_ploadruhf_abs, Hexagon::L4_ploadruhfnew_abs },
  { Hexagon::L4_ploadruhf_rr, Hexagon::L4_ploadruhfnew_rr },
  { Hexagon::L4_ploadruht_abs, Hexagon::L4_ploadruhtnew_abs },
  { Hexagon::L4_ploadruht_rr, Hexagon::L4_ploadruhtnew_rr },
  { Hexagon::L4_return_f, Hexagon::L4_return_fnew_pt },
  { Hexagon::L4_return_t, Hexagon::L4_return_tnew_pt },
  { Hexagon::PS_jmpretf, Hexagon::PS_jmpretfnew },
  { Hexagon::PS_jmprett, Hexagon::PS_jmprettnew },
  { Hexagon::S2_pstorerbf_io, Hexagon::S4_pstorerbfnew_io },
  { Hexagon::S2_pstorerbf_pi, Hexagon::S2_pstorerbfnew_pi },
  { Hexagon::S2_pstorerbnewf_io, Hexagon::S4_pstorerbnewfnew_io },
  { Hexagon::S2_pstorerbnewf_pi, Hexagon::S2_pstorerbnewfnew_pi },
  { Hexagon::S2_pstorerbnewt_io, Hexagon::S4_pstorerbnewtnew_io },
  { Hexagon::S2_pstorerbnewt_pi, Hexagon::S2_pstorerbnewtnew_pi },
  { Hexagon::S2_pstorerbt_io, Hexagon::S4_pstorerbtnew_io },
  { Hexagon::S2_pstorerbt_pi, Hexagon::S2_pstorerbtnew_pi },
  { Hexagon::S2_pstorerdf_io, Hexagon::S4_pstorerdfnew_io },
  { Hexagon::S2_pstorerdf_pi, Hexagon::S2_pstorerdfnew_pi },
  { Hexagon::S2_pstorerdt_io, Hexagon::S4_pstorerdtnew_io },
  { Hexagon::S2_pstorerdt_pi, Hexagon::S2_pstorerdtnew_pi },
  { Hexagon::S2_pstorerff_io, Hexagon::S4_pstorerffnew_io },
  { Hexagon::S2_pstorerff_pi, Hexagon::S2_pstorerffnew_pi },
  { Hexagon::S2_pstorerft_io, Hexagon::S4_pstorerftnew_io },
  { Hexagon::S2_pstorerft_pi, Hexagon::S2_pstorerftnew_pi },
  { Hexagon::S2_pstorerhf_io, Hexagon::S4_pstorerhfnew_io },
  { Hexagon::S2_pstorerhf_pi, Hexagon::S2_pstorerhfnew_pi },
  { Hexagon::S2_pstorerhnewf_io, Hexagon::S4_pstorerhnewfnew_io },
  { Hexagon::S2_pstorerhnewf_pi, Hexagon::S2_pstorerhnewfnew_pi },
  { Hexagon::S2_pstorerhnewt_io, Hexagon::S4_pstorerhnewtnew_io },
  { Hexagon::S2_pstorerhnewt_pi, Hexagon::S2_pstorerhnewtnew_pi },
  { Hexagon::S2_pstorerht_io, Hexagon::S4_pstorerhtnew_io },
  { Hexagon::S2_pstorerht_pi, Hexagon::S2_pstorerhtnew_pi },
  { Hexagon::S2_pstorerif_io, Hexagon::S4_pstorerifnew_io },
  { Hexagon::S2_pstorerif_pi, Hexagon::S2_pstorerifnew_pi },
  { Hexagon::S2_pstorerinewf_io, Hexagon::S4_pstorerinewfnew_io },
  { Hexagon::S2_pstorerinewf_pi, Hexagon::S2_pstorerinewfnew_pi },
  { Hexagon::S2_pstorerinewt_io, Hexagon::S4_pstorerinewtnew_io },
  { Hexagon::S2_pstorerinewt_pi, Hexagon::S2_pstorerinewtnew_pi },
  { Hexagon::S2_pstorerit_io, Hexagon::S4_pstoreritnew_io },
  { Hexagon::S2_pstorerit_pi, Hexagon::S2_pstoreritnew_pi },
  { Hexagon::S4_pstorerbf_abs, Hexagon::S4_pstorerbfnew_abs },
  { Hexagon::S4_pstorerbf_rr, Hexagon::S4_pstorerbfnew_rr },
  { Hexagon::S4_pstorerbnewf_abs, Hexagon::S4_pstorerbnewfnew_abs },
  { Hexagon::S4_pstorerbnewf_rr, Hexagon::S4_pstorerbnewfnew_rr },
  { Hexagon::S4_pstorerbnewt_abs, Hexagon::S4_pstorerbnewtnew_abs },
  { Hexagon::S4_pstorerbnewt_rr, Hexagon::S4_pstorerbnewtnew_rr },
  { Hexagon::S4_pstorerbt_abs, Hexagon::S4_pstorerbtnew_abs },
  { Hexagon::S4_pstorerbt_rr, Hexagon::S4_pstorerbtnew_rr },
  { Hexagon::S4_pstorerdf_abs, Hexagon::S4_pstorerdfnew_abs },
  { Hexagon::S4_pstorerdf_rr, Hexagon::S4_pstorerdfnew_rr },
  { Hexagon::S4_pstorerdt_abs, Hexagon::S4_pstorerdtnew_abs },
  { Hexagon::S4_pstorerdt_rr, Hexagon::S4_pstorerdtnew_rr },
  { Hexagon::S4_pstorerff_abs, Hexagon::S4_pstorerffnew_abs },
  { Hexagon::S4_pstorerff_rr, Hexagon::S4_pstorerffnew_rr },
  { Hexagon::S4_pstorerft_abs, Hexagon::S4_pstorerftnew_abs },
  { Hexagon::S4_pstorerft_rr, Hexagon::S4_pstorerftnew_rr },
  { Hexagon::S4_pstorerhf_abs, Hexagon::S4_pstorerhfnew_abs },
  { Hexagon::S4_pstorerhf_rr, Hexagon::S4_pstorerhfnew_rr },
  { Hexagon::S4_pstorerhnewf_abs, Hexagon::S4_pstorerhnewfnew_abs },
  { Hexagon::S4_pstorerhnewf_rr, Hexagon::S4_pstorerhnewfnew_rr },
  { Hexagon::S4_pstorerhnewt_abs, Hexagon::S4_pstorerhnewtnew_abs },
  { Hexagon::S4_pstorerhnewt_rr, Hexagon::S4_pstorerhnewtnew_rr },
  { Hexagon::S4_pstorerht_abs, Hexagon::S4_pstorerhtnew_abs },
  { Hexagon::S4_pstorerht_rr, Hexagon::S4_pstorerhtnew_rr },
  { Hexagon::S4_pstorerif_abs, Hexagon::S4_pstorerifnew_abs },
  { Hexagon::S4_pstorerif_rr, Hexagon::S4_pstorerifnew_rr },
  { Hexagon::S4_pstorerinewf_abs, Hexagon::S4_pstorerinewfnew_abs },
  { Hexagon::S4_pstorerinewf_rr, Hexagon::S4_pstorerinewfnew_rr },
  { Hexagon::S4_pstorerinewt_abs, Hexagon::S4_pstorerinewtnew_abs },
  { Hexagon::S4_pstorerinewt_rr, Hexagon::S4_pstorerinewtnew_rr },
  { Hexagon::S4_pstorerit_abs, Hexagon::S4_pstoreritnew_abs },
  { Hexagon::S4_pstorerit_rr, Hexagon::S4_pstoreritnew_rr },
  { Hexagon::S4_storeirbf_io, Hexagon::S4_storeirbfnew_io },
  { Hexagon::S4_storeirbt_io, Hexagon::S4_storeirbtnew_io },
  { Hexagon::S4_storeirhf_io, Hexagon::S4_storeirhfnew_io },
  { Hexagon::S4_storeirht_io, Hexagon::S4_storeirhtnew_io },
  { Hexagon::S4_storeirif_io, Hexagon::S4_storeirifnew_io },
  { Hexagon::S4_storeirit_io, Hexagon::S4_storeiritnew_io },
}; // End of getPredNewOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 162;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getPredNewOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getPredNewOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getPredNewOpcodeTable[mid][1];
}

// getPredOldOpcode
LLVM_READONLY
int getPredOldOpcode(uint16_t Opcode) {
static const uint16_t getPredOldOpcodeTable[][2] = {
  { Hexagon::A2_tfrfnew, Hexagon::A2_tfrf },
  { Hexagon::A2_tfrpfnew, Hexagon::A2_tfrpf },
  { Hexagon::A2_tfrptnew, Hexagon::A2_tfrpt },
  { Hexagon::A2_tfrtnew, Hexagon::A2_tfrt },
  { Hexagon::A2_paddfnew, Hexagon::A2_paddf },
  { Hexagon::A2_paddifnew, Hexagon::A2_paddif },
  { Hexagon::A2_padditnew, Hexagon::A2_paddit },
  { Hexagon::A2_paddtnew, Hexagon::A2_paddt },
  { Hexagon::A2_pandfnew, Hexagon::A2_pandf },
  { Hexagon::A2_pandtnew, Hexagon::A2_pandt },
  { Hexagon::A2_porfnew, Hexagon::A2_porf },
  { Hexagon::A2_portnew, Hexagon::A2_port },
  { Hexagon::A2_psubfnew, Hexagon::A2_psubf },
  { Hexagon::A2_psubtnew, Hexagon::A2_psubt },
  { Hexagon::A2_pxorfnew, Hexagon::A2_pxorf },
  { Hexagon::A2_pxortnew, Hexagon::A2_pxort },
  { Hexagon::A4_paslhfnew, Hexagon::A4_paslhf },
  { Hexagon::A4_paslhtnew, Hexagon::A4_paslht },
  { Hexagon::A4_pasrhfnew, Hexagon::A4_pasrhf },
  { Hexagon::A4_pasrhtnew, Hexagon::A4_pasrht },
  { Hexagon::A4_psxtbfnew, Hexagon::A4_psxtbf },
  { Hexagon::A4_psxtbtnew, Hexagon::A4_psxtbt },
  { Hexagon::A4_psxthfnew, Hexagon::A4_psxthf },
  { Hexagon::A4_psxthtnew, Hexagon::A4_psxtht },
  { Hexagon::A4_pzxtbfnew, Hexagon::A4_pzxtbf },
  { Hexagon::A4_pzxtbtnew, Hexagon::A4_pzxtbt },
  { Hexagon::A4_pzxthfnew, Hexagon::A4_pzxthf },
  { Hexagon::A4_pzxthtnew, Hexagon::A4_pzxtht },
  { Hexagon::C2_ccombinewnewf, Hexagon::C2_ccombinewf },
  { Hexagon::C2_ccombinewnewt, Hexagon::C2_ccombinewt },
  { Hexagon::C2_cmovenewif, Hexagon::C2_cmoveif },
  { Hexagon::C2_cmovenewit, Hexagon::C2_cmoveit },
  { Hexagon::J2_jumpfnew, Hexagon::J2_jumpf },
  { Hexagon::J2_jumpfnewpt, Hexagon::J2_jumpfpt },
  { Hexagon::J2_jumprfnew, Hexagon::J2_jumprf },
  { Hexagon::J2_jumprfnewpt, Hexagon::J2_jumprfpt },
  { Hexagon::J2_jumprtnew, Hexagon::J2_jumprt },
  { Hexagon::J2_jumprtnewpt, Hexagon::J2_jumprtpt },
  { Hexagon::J2_jumptnew, Hexagon::J2_jumpt },
  { Hexagon::J2_jumptnewpt, Hexagon::J2_jumptpt },
  { Hexagon::L2_ploadrbfnew_io, Hexagon::L2_ploadrbf_io },
  { Hexagon::L2_ploadrbfnew_pi, Hexagon::L2_ploadrbf_pi },
  { Hexagon::L2_ploadrbtnew_io, Hexagon::L2_ploadrbt_io },
  { Hexagon::L2_ploadrbtnew_pi, Hexagon::L2_ploadrbt_pi },
  { Hexagon::L2_ploadrdfnew_io, Hexagon::L2_ploadrdf_io },
  { Hexagon::L2_ploadrdfnew_pi, Hexagon::L2_ploadrdf_pi },
  { Hexagon::L2_ploadrdtnew_io, Hexagon::L2_ploadrdt_io },
  { Hexagon::L2_ploadrdtnew_pi, Hexagon::L2_ploadrdt_pi },
  { Hexagon::L2_ploadrhfnew_io, Hexagon::L2_ploadrhf_io },
  { Hexagon::L2_ploadrhfnew_pi, Hexagon::L2_ploadrhf_pi },
  { Hexagon::L2_ploadrhtnew_io, Hexagon::L2_ploadrht_io },
  { Hexagon::L2_ploadrhtnew_pi, Hexagon::L2_ploadrht_pi },
  { Hexagon::L2_ploadrifnew_io, Hexagon::L2_ploadrif_io },
  { Hexagon::L2_ploadrifnew_pi, Hexagon::L2_ploadrif_pi },
  { Hexagon::L2_ploadritnew_io, Hexagon::L2_ploadrit_io },
  { Hexagon::L2_ploadritnew_pi, Hexagon::L2_ploadrit_pi },
  { Hexagon::L2_ploadrubfnew_io, Hexagon::L2_ploadrubf_io },
  { Hexagon::L2_ploadrubfnew_pi, Hexagon::L2_ploadrubf_pi },
  { Hexagon::L2_ploadrubtnew_io, Hexagon::L2_ploadrubt_io },
  { Hexagon::L2_ploadrubtnew_pi, Hexagon::L2_ploadrubt_pi },
  { Hexagon::L2_ploadruhfnew_io, Hexagon::L2_ploadruhf_io },
  { Hexagon::L2_ploadruhfnew_pi, Hexagon::L2_ploadruhf_pi },
  { Hexagon::L2_ploadruhtnew_io, Hexagon::L2_ploadruht_io },
  { Hexagon::L2_ploadruhtnew_pi, Hexagon::L2_ploadruht_pi },
  { Hexagon::L4_ploadrbfnew_abs, Hexagon::L4_ploadrbf_abs },
  { Hexagon::L4_ploadrbfnew_rr, Hexagon::L4_ploadrbf_rr },
  { Hexagon::L4_ploadrbtnew_abs, Hexagon::L4_ploadrbt_abs },
  { Hexagon::L4_ploadrbtnew_rr, Hexagon::L4_ploadrbt_rr },
  { Hexagon::L4_ploadrdfnew_abs, Hexagon::L4_ploadrdf_abs },
  { Hexagon::L4_ploadrdfnew_rr, Hexagon::L4_ploadrdf_rr },
  { Hexagon::L4_ploadrdtnew_abs, Hexagon::L4_ploadrdt_abs },
  { Hexagon::L4_ploadrdtnew_rr, Hexagon::L4_ploadrdt_rr },
  { Hexagon::L4_ploadrhfnew_abs, Hexagon::L4_ploadrhf_abs },
  { Hexagon::L4_ploadrhfnew_rr, Hexagon::L4_ploadrhf_rr },
  { Hexagon::L4_ploadrhtnew_abs, Hexagon::L4_ploadrht_abs },
  { Hexagon::L4_ploadrhtnew_rr, Hexagon::L4_ploadrht_rr },
  { Hexagon::L4_ploadrifnew_abs, Hexagon::L4_ploadrif_abs },
  { Hexagon::L4_ploadrifnew_rr, Hexagon::L4_ploadrif_rr },
  { Hexagon::L4_ploadritnew_abs, Hexagon::L4_ploadrit_abs },
  { Hexagon::L4_ploadritnew_rr, Hexagon::L4_ploadrit_rr },
  { Hexagon::L4_ploadrubfnew_abs, Hexagon::L4_ploadrubf_abs },
  { Hexagon::L4_ploadrubfnew_rr, Hexagon::L4_ploadrubf_rr },
  { Hexagon::L4_ploadrubtnew_abs, Hexagon::L4_ploadrubt_abs },
  { Hexagon::L4_ploadrubtnew_rr, Hexagon::L4_ploadrubt_rr },
  { Hexagon::L4_ploadruhfnew_abs, Hexagon::L4_ploadruhf_abs },
  { Hexagon::L4_ploadruhfnew_rr, Hexagon::L4_ploadruhf_rr },
  { Hexagon::L4_ploadruhtnew_abs, Hexagon::L4_ploadruht_abs },
  { Hexagon::L4_ploadruhtnew_rr, Hexagon::L4_ploadruht_rr },
  { Hexagon::L4_return_fnew_pt, Hexagon::L4_return_f },
  { Hexagon::L4_return_tnew_pt, Hexagon::L4_return_t },
  { Hexagon::PS_jmpretfnew, Hexagon::PS_jmpretf },
  { Hexagon::PS_jmprettnew, Hexagon::PS_jmprett },
  { Hexagon::S2_pstorerbfnew_pi, Hexagon::S2_pstorerbf_pi },
  { Hexagon::S2_pstorerbnewfnew_pi, Hexagon::S2_pstorerbnewf_pi },
  { Hexagon::S2_pstorerbnewtnew_pi, Hexagon::S2_pstorerbnewt_pi },
  { Hexagon::S2_pstorerbtnew_pi, Hexagon::S2_pstorerbt_pi },
  { Hexagon::S2_pstorerdfnew_pi, Hexagon::S2_pstorerdf_pi },
  { Hexagon::S2_pstorerdtnew_pi, Hexagon::S2_pstorerdt_pi },
  { Hexagon::S2_pstorerffnew_pi, Hexagon::S2_pstorerff_pi },
  { Hexagon::S2_pstorerftnew_pi, Hexagon::S2_pstorerft_pi },
  { Hexagon::S2_pstorerhfnew_pi, Hexagon::S2_pstorerhf_pi },
  { Hexagon::S2_pstorerhnewfnew_pi, Hexagon::S2_pstorerhnewf_pi },
  { Hexagon::S2_pstorerhnewtnew_pi, Hexagon::S2_pstorerhnewt_pi },
  { Hexagon::S2_pstorerhtnew_pi, Hexagon::S2_pstorerht_pi },
  { Hexagon::S2_pstorerifnew_pi, Hexagon::S2_pstorerif_pi },
  { Hexagon::S2_pstorerinewfnew_pi, Hexagon::S2_pstorerinewf_pi },
  { Hexagon::S2_pstorerinewtnew_pi, Hexagon::S2_pstorerinewt_pi },
  { Hexagon::S2_pstoreritnew_pi, Hexagon::S2_pstorerit_pi },
  { Hexagon::S4_pstorerbfnew_abs, Hexagon::S4_pstorerbf_abs },
  { Hexagon::S4_pstorerbfnew_io, Hexagon::S2_pstorerbf_io },
  { Hexagon::S4_pstorerbfnew_rr, Hexagon::S4_pstorerbf_rr },
  { Hexagon::S4_pstorerbnewfnew_abs, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::S4_pstorerbnewfnew_io, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S4_pstorerbnewfnew_rr, Hexagon::S4_pstorerbnewf_rr },
  { Hexagon::S4_pstorerbnewtnew_abs, Hexagon::S4_pstorerbnewt_abs },
  { Hexagon::S4_pstorerbnewtnew_io, Hexagon::S2_pstorerbnewt_io },
  { Hexagon::S4_pstorerbnewtnew_rr, Hexagon::S4_pstorerbnewt_rr },
  { Hexagon::S4_pstorerbtnew_abs, Hexagon::S4_pstorerbt_abs },
  { Hexagon::S4_pstorerbtnew_io, Hexagon::S2_pstorerbt_io },
  { Hexagon::S4_pstorerbtnew_rr, Hexagon::S4_pstorerbt_rr },
  { Hexagon::S4_pstorerdfnew_abs, Hexagon::S4_pstorerdf_abs },
  { Hexagon::S4_pstorerdfnew_io, Hexagon::S2_pstorerdf_io },
  { Hexagon::S4_pstorerdfnew_rr, Hexagon::S4_pstorerdf_rr },
  { Hexagon::S4_pstorerdtnew_abs, Hexagon::S4_pstorerdt_abs },
  { Hexagon::S4_pstorerdtnew_io, Hexagon::S2_pstorerdt_io },
  { Hexagon::S4_pstorerdtnew_rr, Hexagon::S4_pstorerdt_rr },
  { Hexagon::S4_pstorerffnew_abs, Hexagon::S4_pstorerff_abs },
  { Hexagon::S4_pstorerffnew_io, Hexagon::S2_pstorerff_io },
  { Hexagon::S4_pstorerffnew_rr, Hexagon::S4_pstorerff_rr },
  { Hexagon::S4_pstorerftnew_abs, Hexagon::S4_pstorerft_abs },
  { Hexagon::S4_pstorerftnew_io, Hexagon::S2_pstorerft_io },
  { Hexagon::S4_pstorerftnew_rr, Hexagon::S4_pstorerft_rr },
  { Hexagon::S4_pstorerhfnew_abs, Hexagon::S4_pstorerhf_abs },
  { Hexagon::S4_pstorerhfnew_io, Hexagon::S2_pstorerhf_io },
  { Hexagon::S4_pstorerhfnew_rr, Hexagon::S4_pstorerhf_rr },
  { Hexagon::S4_pstorerhnewfnew_abs, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::S4_pstorerhnewfnew_io, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S4_pstorerhnewfnew_rr, Hexagon::S4_pstorerhnewf_rr },
  { Hexagon::S4_pstorerhnewtnew_abs, Hexagon::S4_pstorerhnewt_abs },
  { Hexagon::S4_pstorerhnewtnew_io, Hexagon::S2_pstorerhnewt_io },
  { Hexagon::S4_pstorerhnewtnew_rr, Hexagon::S4_pstorerhnewt_rr },
  { Hexagon::S4_pstorerhtnew_abs, Hexagon::S4_pstorerht_abs },
  { Hexagon::S4_pstorerhtnew_io, Hexagon::S2_pstorerht_io },
  { Hexagon::S4_pstorerhtnew_rr, Hexagon::S4_pstorerht_rr },
  { Hexagon::S4_pstorerifnew_abs, Hexagon::S4_pstorerif_abs },
  { Hexagon::S4_pstorerifnew_io, Hexagon::S2_pstorerif_io },
  { Hexagon::S4_pstorerifnew_rr, Hexagon::S4_pstorerif_rr },
  { Hexagon::S4_pstorerinewfnew_abs, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S4_pstorerinewfnew_io, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S4_pstorerinewfnew_rr, Hexagon::S4_pstorerinewf_rr },
  { Hexagon::S4_pstorerinewtnew_abs, Hexagon::S4_pstorerinewt_abs },
  { Hexagon::S4_pstorerinewtnew_io, Hexagon::S2_pstorerinewt_io },
  { Hexagon::S4_pstorerinewtnew_rr, Hexagon::S4_pstorerinewt_rr },
  { Hexagon::S4_pstoreritnew_abs, Hexagon::S4_pstorerit_abs },
  { Hexagon::S4_pstoreritnew_io, Hexagon::S2_pstorerit_io },
  { Hexagon::S4_pstoreritnew_rr, Hexagon::S4_pstorerit_rr },
  { Hexagon::S4_storeirbfnew_io, Hexagon::S4_storeirbf_io },
  { Hexagon::S4_storeirbtnew_io, Hexagon::S4_storeirbt_io },
  { Hexagon::S4_storeirhfnew_io, Hexagon::S4_storeirhf_io },
  { Hexagon::S4_storeirhtnew_io, Hexagon::S4_storeirht_io },
  { Hexagon::S4_storeirifnew_io, Hexagon::S4_storeirif_io },
  { Hexagon::S4_storeiritnew_io, Hexagon::S4_storeirit_io },
}; // End of getPredOldOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 162;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getPredOldOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getPredOldOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getPredOldOpcodeTable[mid][1];
}

// getPredOpcode
LLVM_READONLY
int getPredOpcode(uint16_t Opcode, enum PredSense inPredSense) {
static const uint16_t getPredOpcodeTable[][3] = {
  { Hexagon::A2_tfrp, Hexagon::A2_tfrpt, Hexagon::A2_tfrpf },
  { Hexagon::A2_zxtb, Hexagon::A4_pzxtbt, Hexagon::A4_pzxtbf },
  { Hexagon::A2_add, Hexagon::A2_paddt, Hexagon::A2_paddf },
  { Hexagon::A2_addi, Hexagon::A2_paddit, Hexagon::A2_paddif },
  { Hexagon::A2_and, Hexagon::A2_pandt, Hexagon::A2_pandf },
  { Hexagon::A2_aslh, Hexagon::A4_paslht, Hexagon::A4_paslhf },
  { Hexagon::A2_asrh, Hexagon::A4_pasrht, Hexagon::A4_pasrhf },
  { Hexagon::A2_combinew, Hexagon::C2_ccombinewt, Hexagon::C2_ccombinewf },
  { Hexagon::A2_or, Hexagon::A2_port, Hexagon::A2_porf },
  { Hexagon::A2_sub, Hexagon::A2_psubt, Hexagon::A2_psubf },
  { Hexagon::A2_sxtb, Hexagon::A4_psxtbt, Hexagon::A4_psxtbf },
  { Hexagon::A2_sxth, Hexagon::A4_psxtht, Hexagon::A4_psxthf },
  { Hexagon::A2_tfr, Hexagon::A2_tfrt, Hexagon::A2_tfrf },
  { Hexagon::A2_tfrsi, Hexagon::C2_cmoveit, Hexagon::C2_cmoveif },
  { Hexagon::A2_xor, Hexagon::A2_pxort, Hexagon::A2_pxorf },
  { Hexagon::A2_zxth, Hexagon::A4_pzxtht, Hexagon::A4_pzxthf },
  { Hexagon::J2_call, Hexagon::J2_callt, Hexagon::J2_callf },
  { Hexagon::J2_jump, Hexagon::J2_jumpt, Hexagon::J2_jumpf },
  { Hexagon::J2_jumpr, Hexagon::J2_jumprt, Hexagon::J2_jumprf },
  { Hexagon::L2_loadrb_io, Hexagon::L2_ploadrbt_io, Hexagon::L2_ploadrbf_io },
  { Hexagon::L2_loadrb_pi, Hexagon::L2_ploadrbt_pi, Hexagon::L2_ploadrbf_pi },
  { Hexagon::L2_loadrbgp, Hexagon::L4_ploadrbt_abs, Hexagon::L4_ploadrbf_abs },
  { Hexagon::L2_loadrd_io, Hexagon::L2_ploadrdt_io, Hexagon::L2_ploadrdf_io },
  { Hexagon::L2_loadrd_pi, Hexagon::L2_ploadrdt_pi, Hexagon::L2_ploadrdf_pi },
  { Hexagon::L2_loadrdgp, Hexagon::L4_ploadrdt_abs, Hexagon::L4_ploadrdf_abs },
  { Hexagon::L2_loadrh_io, Hexagon::L2_ploadrht_io, Hexagon::L2_ploadrhf_io },
  { Hexagon::L2_loadrh_pi, Hexagon::L2_ploadrht_pi, Hexagon::L2_ploadrhf_pi },
  { Hexagon::L2_loadrhgp, Hexagon::L4_ploadrht_abs, Hexagon::L4_ploadrhf_abs },
  { Hexagon::L2_loadri_io, Hexagon::L2_ploadrit_io, Hexagon::L2_ploadrif_io },
  { Hexagon::L2_loadri_pi, Hexagon::L2_ploadrit_pi, Hexagon::L2_ploadrif_pi },
  { Hexagon::L2_loadrigp, Hexagon::L4_ploadrit_abs, Hexagon::L4_ploadrif_abs },
  { Hexagon::L2_loadrub_io, Hexagon::L2_ploadrubt_io, Hexagon::L2_ploadrubf_io },
  { Hexagon::L2_loadrub_pi, Hexagon::L2_ploadrubt_pi, Hexagon::L2_ploadrubf_pi },
  { Hexagon::L2_loadrubgp, Hexagon::L4_ploadrubt_abs, Hexagon::L4_ploadrubf_abs },
  { Hexagon::L2_loadruh_io, Hexagon::L2_ploadruht_io, Hexagon::L2_ploadruhf_io },
  { Hexagon::L2_loadruh_pi, Hexagon::L2_ploadruht_pi, Hexagon::L2_ploadruhf_pi },
  { Hexagon::L2_loadruhgp, Hexagon::L4_ploadruht_abs, Hexagon::L4_ploadruhf_abs },
  { Hexagon::L4_loadrb_rr, Hexagon::L4_ploadrbt_rr, Hexagon::L4_ploadrbf_rr },
  { Hexagon::L4_loadrd_rr, Hexagon::L4_ploadrdt_rr, Hexagon::L4_ploadrdf_rr },
  { Hexagon::L4_loadrh_rr, Hexagon::L4_ploadrht_rr, Hexagon::L4_ploadrhf_rr },
  { Hexagon::L4_loadri_rr, Hexagon::L4_ploadrit_rr, Hexagon::L4_ploadrif_rr },
  { Hexagon::L4_loadrub_rr, Hexagon::L4_ploadrubt_rr, Hexagon::L4_ploadrubf_rr },
  { Hexagon::L4_loadruh_rr, Hexagon::L4_ploadruht_rr, Hexagon::L4_ploadruhf_rr },
  { Hexagon::L4_return, Hexagon::L4_return_t, Hexagon::L4_return_f },
  { Hexagon::PS_jmpret, Hexagon::PS_jmprett, Hexagon::PS_jmpretf },
  { Hexagon::PS_loadrbabs, Hexagon::L4_ploadrbt_abs, Hexagon::L4_ploadrbf_abs },
  { Hexagon::PS_loadrdabs, Hexagon::L4_ploadrdt_abs, Hexagon::L4_ploadrdf_abs },
  { Hexagon::PS_loadrhabs, Hexagon::L4_ploadrht_abs, Hexagon::L4_ploadrhf_abs },
  { Hexagon::PS_loadriabs, Hexagon::L4_ploadrit_abs, Hexagon::L4_ploadrif_abs },
  { Hexagon::PS_loadrubabs, Hexagon::L4_ploadrubt_abs, Hexagon::L4_ploadrubf_abs },
  { Hexagon::PS_loadruhabs, Hexagon::L4_ploadruht_abs, Hexagon::L4_ploadruhf_abs },
  { Hexagon::PS_storerbabs, Hexagon::S4_pstorerbt_abs, Hexagon::S4_pstorerbf_abs },
  { Hexagon::PS_storerbnewabs, Hexagon::S4_pstorerbnewt_abs, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::PS_storerdabs, Hexagon::S4_pstorerdt_abs, Hexagon::S4_pstorerdf_abs },
  { Hexagon::PS_storerfabs, Hexagon::S4_pstorerft_abs, Hexagon::S4_pstorerff_abs },
  { Hexagon::PS_storerhabs, Hexagon::S4_pstorerht_abs, Hexagon::S4_pstorerhf_abs },
  { Hexagon::PS_storerhnewabs, Hexagon::S4_pstorerhnewt_abs, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::PS_storeriabs, Hexagon::S4_pstorerit_abs, Hexagon::S4_pstorerif_abs },
  { Hexagon::PS_storerinewabs, Hexagon::S4_pstorerinewt_abs, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S2_storerb_io, Hexagon::S2_pstorerbt_io, Hexagon::S2_pstorerbf_io },
  { Hexagon::S2_storerb_pi, Hexagon::S2_pstorerbt_pi, Hexagon::S2_pstorerbf_pi },
  { Hexagon::S2_storerbgp, Hexagon::S4_pstorerbt_abs, Hexagon::S4_pstorerbf_abs },
  { Hexagon::S2_storerbnew_io, Hexagon::S2_pstorerbnewt_io, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S2_storerbnew_pi, Hexagon::S2_pstorerbnewt_pi, Hexagon::S2_pstorerbnewf_pi },
  { Hexagon::S2_storerbnewgp, Hexagon::S4_pstorerbnewt_abs, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::S2_storerd_io, Hexagon::S2_pstorerdt_io, Hexagon::S2_pstorerdf_io },
  { Hexagon::S2_storerd_pi, Hexagon::S2_pstorerdt_pi, Hexagon::S2_pstorerdf_pi },
  { Hexagon::S2_storerdgp, Hexagon::S4_pstorerdt_abs, Hexagon::S4_pstorerdf_abs },
  { Hexagon::S2_storerf_io, Hexagon::S2_pstorerft_io, Hexagon::S2_pstorerff_io },
  { Hexagon::S2_storerf_pi, Hexagon::S2_pstorerft_pi, Hexagon::S2_pstorerff_pi },
  { Hexagon::S2_storerfgp, Hexagon::S4_pstorerft_abs, Hexagon::S4_pstorerff_abs },
  { Hexagon::S2_storerh_io, Hexagon::S2_pstorerht_io, Hexagon::S2_pstorerhf_io },
  { Hexagon::S2_storerh_pi, Hexagon::S2_pstorerht_pi, Hexagon::S2_pstorerhf_pi },
  { Hexagon::S2_storerhgp, Hexagon::S4_pstorerht_abs, Hexagon::S4_pstorerhf_abs },
  { Hexagon::S2_storerhnew_io, Hexagon::S2_pstorerhnewt_io, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S2_storerhnew_pi, Hexagon::S2_pstorerhnewt_pi, Hexagon::S2_pstorerhnewf_pi },
  { Hexagon::S2_storerhnewgp, Hexagon::S4_pstorerhnewt_abs, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::S2_storeri_io, Hexagon::S2_pstorerit_io, Hexagon::S2_pstorerif_io },
  { Hexagon::S2_storeri_pi, Hexagon::S2_pstorerit_pi, Hexagon::S2_pstorerif_pi },
  { Hexagon::S2_storerigp, Hexagon::S4_pstorerit_abs, Hexagon::S4_pstorerif_abs },
  { Hexagon::S2_storerinew_io, Hexagon::S2_pstorerinewt_io, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S2_storerinew_pi, Hexagon::S2_pstorerinewt_pi, Hexagon::S2_pstorerinewf_pi },
  { Hexagon::S2_storerinewgp, Hexagon::S4_pstorerinewt_abs, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S4_storeirb_io, Hexagon::S4_storeirbt_io, Hexagon::S4_storeirbf_io },
  { Hexagon::S4_storeirh_io, Hexagon::S4_storeirht_io, Hexagon::S4_storeirhf_io },
  { Hexagon::S4_storeiri_io, Hexagon::S4_storeirit_io, Hexagon::S4_storeirif_io },
  { Hexagon::S4_storerb_rr, Hexagon::S4_pstorerbt_rr, Hexagon::S4_pstorerbf_rr },
  { Hexagon::S4_storerbnew_rr, Hexagon::S4_pstorerbnewt_rr, Hexagon::S4_pstorerbnewf_rr },
  { Hexagon::S4_storerd_rr, Hexagon::S4_pstorerdt_rr, Hexagon::S4_pstorerdf_rr },
  { Hexagon::S4_storerf_rr, Hexagon::S4_pstorerft_rr, Hexagon::S4_pstorerff_rr },
  { Hexagon::S4_storerf_ur, Hexagon::S4_pstorerft_rr, Hexagon::S4_pstorerff_rr },
  { Hexagon::S4_storerh_rr, Hexagon::S4_pstorerht_rr, Hexagon::S4_pstorerhf_rr },
  { Hexagon::S4_storerhnew_rr, Hexagon::S4_pstorerhnewt_rr, Hexagon::S4_pstorerhnewf_rr },
  { Hexagon::S4_storeri_rr, Hexagon::S4_pstorerit_rr, Hexagon::S4_pstorerif_rr },
  { Hexagon::S4_storerinew_rr, Hexagon::S4_pstorerinewt_rr, Hexagon::S4_pstorerinewf_rr },
  { Hexagon::V6_vL32b_ai, Hexagon::V6_vL32b_pred_ai, Hexagon::V6_vL32b_npred_ai },
  { Hexagon::V6_vL32b_cur_ai, Hexagon::V6_vL32b_cur_pred_ai, Hexagon::V6_vL32b_cur_npred_ai },
  { Hexagon::V6_vL32b_cur_pi, Hexagon::V6_vL32b_cur_pred_pi, Hexagon::V6_vL32b_cur_npred_pi },
  { Hexagon::V6_vL32b_cur_ppu, Hexagon::V6_vL32b_cur_pred_ppu, Hexagon::V6_vL32b_cur_npred_ppu },
  { Hexagon::V6_vL32b_nt_ai, Hexagon::V6_vL32b_nt_pred_ai, Hexagon::V6_vL32b_nt_npred_ai },
  { Hexagon::V6_vL32b_nt_cur_ai, Hexagon::V6_vL32b_nt_cur_pred_ai, Hexagon::V6_vL32b_nt_cur_npred_ai },
  { Hexagon::V6_vL32b_nt_cur_pi, Hexagon::V6_vL32b_nt_cur_pred_pi, Hexagon::V6_vL32b_nt_cur_npred_pi },
  { Hexagon::V6_vL32b_nt_cur_ppu, Hexagon::V6_vL32b_nt_cur_pred_ppu, Hexagon::V6_vL32b_nt_cur_npred_ppu },
  { Hexagon::V6_vL32b_nt_pi, Hexagon::V6_vL32b_nt_pred_pi, Hexagon::V6_vL32b_nt_npred_pi },
  { Hexagon::V6_vL32b_nt_ppu, Hexagon::V6_vL32b_nt_pred_ppu, Hexagon::V6_vL32b_nt_npred_ppu },
  { Hexagon::V6_vL32b_nt_tmp_ai, Hexagon::V6_vL32b_nt_tmp_pred_ai, Hexagon::V6_vL32b_nt_tmp_npred_ai },
  { Hexagon::V6_vL32b_nt_tmp_pi, Hexagon::V6_vL32b_nt_tmp_pred_pi, Hexagon::V6_vL32b_nt_tmp_npred_pi },
  { Hexagon::V6_vL32b_nt_tmp_ppu, Hexagon::V6_vL32b_nt_tmp_pred_ppu, Hexagon::V6_vL32b_nt_tmp_npred_ppu },
  { Hexagon::V6_vL32b_pi, Hexagon::V6_vL32b_pred_pi, Hexagon::V6_vL32b_npred_pi },
  { Hexagon::V6_vL32b_ppu, Hexagon::V6_vL32b_pred_ppu, Hexagon::V6_vL32b_npred_ppu },
  { Hexagon::V6_vL32b_tmp_ai, Hexagon::V6_vL32b_tmp_pred_ai, Hexagon::V6_vL32b_tmp_npred_ai },
  { Hexagon::V6_vL32b_tmp_pi, Hexagon::V6_vL32b_tmp_pred_pi, Hexagon::V6_vL32b_tmp_npred_pi },
  { Hexagon::V6_vL32b_tmp_ppu, Hexagon::V6_vL32b_tmp_pred_ppu, Hexagon::V6_vL32b_tmp_npred_ppu },
  { Hexagon::V6_vS32Ub_ai, Hexagon::V6_vS32Ub_pred_ai, Hexagon::V6_vS32Ub_npred_ai },
  { Hexagon::V6_vS32Ub_pi, Hexagon::V6_vS32Ub_pred_pi, Hexagon::V6_vS32Ub_npred_pi },
  { Hexagon::V6_vS32Ub_ppu, Hexagon::V6_vS32Ub_pred_ppu, Hexagon::V6_vS32Ub_npred_ppu },
  { Hexagon::V6_vS32b_ai, Hexagon::V6_vS32b_pred_ai, Hexagon::V6_vS32b_npred_ai },
  { Hexagon::V6_vS32b_new_ai, Hexagon::V6_vS32b_new_pred_ai, Hexagon::V6_vS32b_new_npred_ai },
  { Hexagon::V6_vS32b_new_pi, Hexagon::V6_vS32b_new_pred_pi, Hexagon::V6_vS32b_new_npred_pi },
  { Hexagon::V6_vS32b_new_ppu, Hexagon::V6_vS32b_new_pred_ppu, Hexagon::V6_vS32b_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_ai, Hexagon::V6_vS32b_nt_pred_ai, Hexagon::V6_vS32b_nt_npred_ai },
  { Hexagon::V6_vS32b_nt_new_ai, Hexagon::V6_vS32b_nt_new_pred_ai, Hexagon::V6_vS32b_nt_new_npred_ai },
  { Hexagon::V6_vS32b_nt_new_pi, Hexagon::V6_vS32b_nt_new_pred_pi, Hexagon::V6_vS32b_nt_new_npred_pi },
  { Hexagon::V6_vS32b_nt_new_ppu, Hexagon::V6_vS32b_nt_new_pred_ppu, Hexagon::V6_vS32b_nt_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_pi, Hexagon::V6_vS32b_nt_pred_pi, Hexagon::V6_vS32b_nt_npred_pi },
  { Hexagon::V6_vS32b_nt_ppu, Hexagon::V6_vS32b_nt_pred_ppu, Hexagon::V6_vS32b_nt_npred_ppu },
  { Hexagon::V6_vS32b_pi, Hexagon::V6_vS32b_pred_pi, Hexagon::V6_vS32b_npred_pi },
  { Hexagon::V6_vS32b_ppu, Hexagon::V6_vS32b_pred_ppu, Hexagon::V6_vS32b_npred_ppu },
}; // End of getPredOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 128;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getPredOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getPredOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inPredSense == PredSense_true)
    return getPredOpcodeTable[mid][1];
  if (inPredSense == PredSense_false)
    return getPredOpcodeTable[mid][2];
  return -1;}

// getRealHWInstr
LLVM_READONLY
int getRealHWInstr(uint16_t Opcode, enum InstrType inInstrType) {
static const uint16_t getRealHWInstrTable[][3] = {
  { Hexagon::INSTRUCTION_LIST_END, Hexagon::INSTRUCTION_LIST_END }}; // End of getRealHWInstrTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 0;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getRealHWInstrTable[mid][0]) {
      break;
    }
    if (Opcode < getRealHWInstrTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inInstrType == InstrType_Pseudo)
    return getRealHWInstrTable[mid][1];
  if (inInstrType == InstrType_Real)
    return getRealHWInstrTable[mid][2];
  return -1;}

// getRegForm
LLVM_READONLY
int getRegForm(uint16_t Opcode) {
static const uint16_t getRegFormTable[][2] = {
  { Hexagon::M2_mpysmi, Hexagon::M2_mpyi },
  { Hexagon::A2_addi, Hexagon::A2_add },
  { Hexagon::A2_andir, Hexagon::A2_and },
  { Hexagon::A2_orir, Hexagon::A2_or },
  { Hexagon::A2_paddif, Hexagon::A2_paddf },
  { Hexagon::A2_paddifnew, Hexagon::A2_paddfnew },
  { Hexagon::A2_paddit, Hexagon::A2_paddt },
  { Hexagon::A2_padditnew, Hexagon::A2_paddtnew },
  { Hexagon::A2_subri, Hexagon::A2_sub },
  { Hexagon::A4_cmpbeqi, Hexagon::A4_cmpbeq },
  { Hexagon::A4_cmpbgti, Hexagon::A4_cmpbgt },
  { Hexagon::A4_cmpbgtui, Hexagon::A4_cmpbgtu },
  { Hexagon::A4_cmpheqi, Hexagon::A4_cmpheq },
  { Hexagon::A4_cmphgti, Hexagon::A4_cmphgt },
  { Hexagon::A4_cmphgtui, Hexagon::A4_cmphgtu },
  { Hexagon::C2_cmoveif, Hexagon::A2_tfrf },
  { Hexagon::C2_cmoveit, Hexagon::A2_tfrt },
  { Hexagon::C2_cmovenewif, Hexagon::A2_tfrfnew },
  { Hexagon::C2_cmovenewit, Hexagon::A2_tfrtnew },
  { Hexagon::C2_cmpeqi, Hexagon::C2_cmpeq },
  { Hexagon::C2_cmpgti, Hexagon::C2_cmpgt },
  { Hexagon::C2_cmpgtui, Hexagon::C2_cmpgtu },
  { Hexagon::C4_cmpltei, Hexagon::C4_cmplte },
  { Hexagon::C4_cmplteui, Hexagon::C4_cmplteu },
  { Hexagon::C4_cmpneqi, Hexagon::C4_cmpneq },
  { Hexagon::M2_accii, Hexagon::M2_acci },
  { Hexagon::M2_macsip, Hexagon::M2_maci },
  { Hexagon::M4_mpyrr_addi, Hexagon::M4_mpyrr_addr },
}; // End of getRegFormTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 28;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getRegFormTable[mid][0]) {
      break;
    }
    if (Opcode < getRegFormTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getRegFormTable[mid][1];
}

// getTruePredOpcode
LLVM_READONLY
int getTruePredOpcode(uint16_t Opcode) {
static const uint16_t getTruePredOpcodeTable[][2] = {
  { Hexagon::A2_tfrf, Hexagon::A2_tfrt },
  { Hexagon::A2_tfrfnew, Hexagon::A2_tfrtnew },
  { Hexagon::A2_tfrpf, Hexagon::A2_tfrpt },
  { Hexagon::A2_tfrpfnew, Hexagon::A2_tfrptnew },
  { Hexagon::A2_paddf, Hexagon::A2_paddt },
  { Hexagon::A2_paddfnew, Hexagon::A2_paddtnew },
  { Hexagon::A2_paddif, Hexagon::A2_paddit },
  { Hexagon::A2_paddifnew, Hexagon::A2_padditnew },
  { Hexagon::A2_pandf, Hexagon::A2_pandt },
  { Hexagon::A2_pandfnew, Hexagon::A2_pandtnew },
  { Hexagon::A2_porf, Hexagon::A2_port },
  { Hexagon::A2_porfnew, Hexagon::A2_portnew },
  { Hexagon::A2_psubf, Hexagon::A2_psubt },
  { Hexagon::A2_psubfnew, Hexagon::A2_psubtnew },
  { Hexagon::A2_pxorf, Hexagon::A2_pxort },
  { Hexagon::A2_pxorfnew, Hexagon::A2_pxortnew },
  { Hexagon::A4_paslhf, Hexagon::A4_paslht },
  { Hexagon::A4_paslhfnew, Hexagon::A4_paslhtnew },
  { Hexagon::A4_pasrhf, Hexagon::A4_pasrht },
  { Hexagon::A4_pasrhfnew, Hexagon::A4_pasrhtnew },
  { Hexagon::A4_psxtbf, Hexagon::A4_psxtbt },
  { Hexagon::A4_psxtbfnew, Hexagon::A4_psxtbtnew },
  { Hexagon::A4_psxthf, Hexagon::A4_psxtht },
  { Hexagon::A4_psxthfnew, Hexagon::A4_psxthtnew },
  { Hexagon::A4_pzxtbf, Hexagon::A4_pzxtbt },
  { Hexagon::A4_pzxtbfnew, Hexagon::A4_pzxtbtnew },
  { Hexagon::A4_pzxthf, Hexagon::A4_pzxtht },
  { Hexagon::A4_pzxthfnew, Hexagon::A4_pzxthtnew },
  { Hexagon::C2_ccombinewf, Hexagon::C2_ccombinewt },
  { Hexagon::C2_ccombinewnewf, Hexagon::C2_ccombinewnewt },
  { Hexagon::C2_cmoveif, Hexagon::C2_cmoveit },
  { Hexagon::C2_cmovenewif, Hexagon::C2_cmovenewit },
  { Hexagon::J2_callf, Hexagon::J2_callt },
  { Hexagon::J2_jumpf, Hexagon::J2_jumpt },
  { Hexagon::J2_jumpfnew, Hexagon::J2_jumptnew },
  { Hexagon::J2_jumpfnewpt, Hexagon::J2_jumptnewpt },
  { Hexagon::J2_jumpfpt, Hexagon::J2_jumptpt },
  { Hexagon::J2_jumprf, Hexagon::J2_jumprt },
  { Hexagon::J2_jumprfnew, Hexagon::J2_jumprtnew },
  { Hexagon::J2_jumprfnewpt, Hexagon::J2_jumprtnewpt },
  { Hexagon::J2_jumprfpt, Hexagon::J2_jumprtpt },
  { Hexagon::J4_cmpeq_f_jumpnv_nt, Hexagon::J4_cmpeq_t_jumpnv_nt },
  { Hexagon::J4_cmpeq_f_jumpnv_t, Hexagon::J4_cmpeq_t_jumpnv_t },
  { Hexagon::J4_cmpeq_fp0_jump_nt, Hexagon::J4_cmpeq_tp0_jump_nt },
  { Hexagon::J4_cmpeq_fp0_jump_t, Hexagon::J4_cmpeq_tp0_jump_t },
  { Hexagon::J4_cmpeq_fp1_jump_nt, Hexagon::J4_cmpeq_tp1_jump_nt },
  { Hexagon::J4_cmpeq_fp1_jump_t, Hexagon::J4_cmpeq_tp1_jump_t },
  { Hexagon::J4_cmpeqi_f_jumpnv_nt, Hexagon::J4_cmpeqi_t_jumpnv_nt },
  { Hexagon::J4_cmpeqi_f_jumpnv_t, Hexagon::J4_cmpeqi_t_jumpnv_t },
  { Hexagon::J4_cmpeqi_fp0_jump_nt, Hexagon::J4_cmpeqi_tp0_jump_nt },
  { Hexagon::J4_cmpeqi_fp0_jump_t, Hexagon::J4_cmpeqi_tp0_jump_t },
  { Hexagon::J4_cmpeqi_fp1_jump_nt, Hexagon::J4_cmpeqi_tp1_jump_nt },
  { Hexagon::J4_cmpeqi_fp1_jump_t, Hexagon::J4_cmpeqi_tp1_jump_t },
  { Hexagon::J4_cmpeqn1_f_jumpnv_nt, Hexagon::J4_cmpeqn1_t_jumpnv_nt },
  { Hexagon::J4_cmpeqn1_f_jumpnv_t, Hexagon::J4_cmpeqn1_t_jumpnv_t },
  { Hexagon::J4_cmpeqn1_fp0_jump_nt, Hexagon::J4_cmpeqn1_tp0_jump_nt },
  { Hexagon::J4_cmpeqn1_fp0_jump_t, Hexagon::J4_cmpeqn1_tp0_jump_t },
  { Hexagon::J4_cmpeqn1_fp1_jump_nt, Hexagon::J4_cmpeqn1_tp1_jump_nt },
  { Hexagon::J4_cmpeqn1_fp1_jump_t, Hexagon::J4_cmpeqn1_tp1_jump_t },
  { Hexagon::J4_cmpgt_f_jumpnv_nt, Hexagon::J4_cmpgt_t_jumpnv_nt },
  { Hexagon::J4_cmpgt_f_jumpnv_t, Hexagon::J4_cmpgt_t_jumpnv_t },
  { Hexagon::J4_cmpgt_fp0_jump_nt, Hexagon::J4_cmpgt_tp0_jump_nt },
  { Hexagon::J4_cmpgt_fp0_jump_t, Hexagon::J4_cmpgt_tp0_jump_t },
  { Hexagon::J4_cmpgt_fp1_jump_nt, Hexagon::J4_cmpgt_tp1_jump_nt },
  { Hexagon::J4_cmpgt_fp1_jump_t, Hexagon::J4_cmpgt_tp1_jump_t },
  { Hexagon::J4_cmpgti_f_jumpnv_nt, Hexagon::J4_cmpgti_t_jumpnv_nt },
  { Hexagon::J4_cmpgti_f_jumpnv_t, Hexagon::J4_cmpgti_t_jumpnv_t },
  { Hexagon::J4_cmpgti_fp0_jump_nt, Hexagon::J4_cmpgti_tp0_jump_nt },
  { Hexagon::J4_cmpgti_fp0_jump_t, Hexagon::J4_cmpgti_tp0_jump_t },
  { Hexagon::J4_cmpgti_fp1_jump_nt, Hexagon::J4_cmpgti_tp1_jump_nt },
  { Hexagon::J4_cmpgti_fp1_jump_t, Hexagon::J4_cmpgti_tp1_jump_t },
  { Hexagon::J4_cmpgtn1_f_jumpnv_nt, Hexagon::J4_cmpgtn1_t_jumpnv_nt },
  { Hexagon::J4_cmpgtn1_f_jumpnv_t, Hexagon::J4_cmpgtn1_t_jumpnv_t },
  { Hexagon::J4_cmpgtn1_fp0_jump_nt, Hexagon::J4_cmpgtn1_tp0_jump_nt },
  { Hexagon::J4_cmpgtn1_fp0_jump_t, Hexagon::J4_cmpgtn1_tp0_jump_t },
  { Hexagon::J4_cmpgtn1_fp1_jump_nt, Hexagon::J4_cmpgtn1_tp1_jump_nt },
  { Hexagon::J4_cmpgtn1_fp1_jump_t, Hexagon::J4_cmpgtn1_tp1_jump_t },
  { Hexagon::J4_cmpgtu_f_jumpnv_nt, Hexagon::J4_cmpgtu_t_jumpnv_nt },
  { Hexagon::J4_cmpgtu_f_jumpnv_t, Hexagon::J4_cmpgtu_t_jumpnv_t },
  { Hexagon::J4_cmpgtu_fp0_jump_nt, Hexagon::J4_cmpgtu_tp0_jump_nt },
  { Hexagon::J4_cmpgtu_fp0_jump_t, Hexagon::J4_cmpgtu_tp0_jump_t },
  { Hexagon::J4_cmpgtu_fp1_jump_nt, Hexagon::J4_cmpgtu_tp1_jump_nt },
  { Hexagon::J4_cmpgtu_fp1_jump_t, Hexagon::J4_cmpgtu_tp1_jump_t },
  { Hexagon::J4_cmpgtui_f_jumpnv_nt, Hexagon::J4_cmpgtui_t_jumpnv_nt },
  { Hexagon::J4_cmpgtui_f_jumpnv_t, Hexagon::J4_cmpgtui_t_jumpnv_t },
  { Hexagon::J4_cmpgtui_fp0_jump_nt, Hexagon::J4_cmpgtui_tp0_jump_nt },
  { Hexagon::J4_cmpgtui_fp0_jump_t, Hexagon::J4_cmpgtui_tp0_jump_t },
  { Hexagon::J4_cmpgtui_fp1_jump_nt, Hexagon::J4_cmpgtui_tp1_jump_nt },
  { Hexagon::J4_cmpgtui_fp1_jump_t, Hexagon::J4_cmpgtui_tp1_jump_t },
  { Hexagon::J4_cmplt_f_jumpnv_nt, Hexagon::J4_cmplt_t_jumpnv_nt },
  { Hexagon::J4_cmplt_f_jumpnv_t, Hexagon::J4_cmplt_t_jumpnv_t },
  { Hexagon::J4_cmpltu_f_jumpnv_nt, Hexagon::J4_cmpltu_t_jumpnv_nt },
  { Hexagon::J4_cmpltu_f_jumpnv_t, Hexagon::J4_cmpltu_t_jumpnv_t },
  { Hexagon::L2_ploadrbf_io, Hexagon::L2_ploadrbt_io },
  { Hexagon::L2_ploadrbf_pi, Hexagon::L2_ploadrbt_pi },
  { Hexagon::L2_ploadrbfnew_io, Hexagon::L2_ploadrbtnew_io },
  { Hexagon::L2_ploadrbfnew_pi, Hexagon::L2_ploadrbtnew_pi },
  { Hexagon::L2_ploadrdf_io, Hexagon::L2_ploadrdt_io },
  { Hexagon::L2_ploadrdf_pi, Hexagon::L2_ploadrdt_pi },
  { Hexagon::L2_ploadrdfnew_io, Hexagon::L2_ploadrdtnew_io },
  { Hexagon::L2_ploadrdfnew_pi, Hexagon::L2_ploadrdtnew_pi },
  { Hexagon::L2_ploadrhf_io, Hexagon::L2_ploadrht_io },
  { Hexagon::L2_ploadrhf_pi, Hexagon::L2_ploadrht_pi },
  { Hexagon::L2_ploadrhfnew_io, Hexagon::L2_ploadrhtnew_io },
  { Hexagon::L2_ploadrhfnew_pi, Hexagon::L2_ploadrhtnew_pi },
  { Hexagon::L2_ploadrif_io, Hexagon::L2_ploadrit_io },
  { Hexagon::L2_ploadrif_pi, Hexagon::L2_ploadrit_pi },
  { Hexagon::L2_ploadrifnew_io, Hexagon::L2_ploadritnew_io },
  { Hexagon::L2_ploadrifnew_pi, Hexagon::L2_ploadritnew_pi },
  { Hexagon::L2_ploadrubf_io, Hexagon::L2_ploadrubt_io },
  { Hexagon::L2_ploadrubf_pi, Hexagon::L2_ploadrubt_pi },
  { Hexagon::L2_ploadrubfnew_io, Hexagon::L2_ploadrubtnew_io },
  { Hexagon::L2_ploadrubfnew_pi, Hexagon::L2_ploadrubtnew_pi },
  { Hexagon::L2_ploadruhf_io, Hexagon::L2_ploadruht_io },
  { Hexagon::L2_ploadruhf_pi, Hexagon::L2_ploadruht_pi },
  { Hexagon::L2_ploadruhfnew_io, Hexagon::L2_ploadruhtnew_io },
  { Hexagon::L2_ploadruhfnew_pi, Hexagon::L2_ploadruhtnew_pi },
  { Hexagon::L4_ploadrbf_abs, Hexagon::L4_ploadrbt_abs },
  { Hexagon::L4_ploadrbf_rr, Hexagon::L4_ploadrbt_rr },
  { Hexagon::L4_ploadrbfnew_abs, Hexagon::L4_ploadrbtnew_abs },
  { Hexagon::L4_ploadrbfnew_rr, Hexagon::L4_ploadrbtnew_rr },
  { Hexagon::L4_ploadrdf_abs, Hexagon::L4_ploadrdt_abs },
  { Hexagon::L4_ploadrdf_rr, Hexagon::L4_ploadrdt_rr },
  { Hexagon::L4_ploadrdfnew_abs, Hexagon::L4_ploadrdtnew_abs },
  { Hexagon::L4_ploadrdfnew_rr, Hexagon::L4_ploadrdtnew_rr },
  { Hexagon::L4_ploadrhf_abs, Hexagon::L4_ploadrht_abs },
  { Hexagon::L4_ploadrhf_rr, Hexagon::L4_ploadrht_rr },
  { Hexagon::L4_ploadrhfnew_abs, Hexagon::L4_ploadrhtnew_abs },
  { Hexagon::L4_ploadrhfnew_rr, Hexagon::L4_ploadrhtnew_rr },
  { Hexagon::L4_ploadrif_abs, Hexagon::L4_ploadrit_abs },
  { Hexagon::L4_ploadrif_rr, Hexagon::L4_ploadrit_rr },
  { Hexagon::L4_ploadrifnew_abs, Hexagon::L4_ploadritnew_abs },
  { Hexagon::L4_ploadrifnew_rr, Hexagon::L4_ploadritnew_rr },
  { Hexagon::L4_ploadrubf_abs, Hexagon::L4_ploadrubt_abs },
  { Hexagon::L4_ploadrubf_rr, Hexagon::L4_ploadrubt_rr },
  { Hexagon::L4_ploadrubfnew_abs, Hexagon::L4_ploadrubtnew_abs },
  { Hexagon::L4_ploadrubfnew_rr, Hexagon::L4_ploadrubtnew_rr },
  { Hexagon::L4_ploadruhf_abs, Hexagon::L4_ploadruht_abs },
  { Hexagon::L4_ploadruhf_rr, Hexagon::L4_ploadruht_rr },
  { Hexagon::L4_ploadruhfnew_abs, Hexagon::L4_ploadruhtnew_abs },
  { Hexagon::L4_ploadruhfnew_rr, Hexagon::L4_ploadruhtnew_rr },
  { Hexagon::L4_return_f, Hexagon::L4_return_t },
  { Hexagon::L4_return_fnew_pnt, Hexagon::L4_return_tnew_pnt },
  { Hexagon::L4_return_fnew_pt, Hexagon::L4_return_tnew_pt },
  { Hexagon::PS_jmpretf, Hexagon::PS_jmprett },
  { Hexagon::PS_jmpretfnew, Hexagon::PS_jmprettnew },
  { Hexagon::PS_jmpretfnewpt, Hexagon::PS_jmprettnewpt },
  { Hexagon::S2_pstorerbf_io, Hexagon::S2_pstorerbt_io },
  { Hexagon::S2_pstorerbf_pi, Hexagon::S2_pstorerbt_pi },
  { Hexagon::S2_pstorerbfnew_pi, Hexagon::S2_pstorerbtnew_pi },
  { Hexagon::S2_pstorerbnewf_io, Hexagon::S2_pstorerbnewt_io },
  { Hexagon::S2_pstorerbnewf_pi, Hexagon::S2_pstorerbnewt_pi },
  { Hexagon::S2_pstorerbnewfnew_pi, Hexagon::S2_pstorerbnewtnew_pi },
  { Hexagon::S2_pstorerdf_io, Hexagon::S2_pstorerdt_io },
  { Hexagon::S2_pstorerdf_pi, Hexagon::S2_pstorerdt_pi },
  { Hexagon::S2_pstorerdfnew_pi, Hexagon::S2_pstorerdtnew_pi },
  { Hexagon::S2_pstorerff_io, Hexagon::S2_pstorerft_io },
  { Hexagon::S2_pstorerff_pi, Hexagon::S2_pstorerft_pi },
  { Hexagon::S2_pstorerffnew_pi, Hexagon::S2_pstorerftnew_pi },
  { Hexagon::S2_pstorerhf_io, Hexagon::S2_pstorerht_io },
  { Hexagon::S2_pstorerhf_pi, Hexagon::S2_pstorerht_pi },
  { Hexagon::S2_pstorerhfnew_pi, Hexagon::S2_pstorerhtnew_pi },
  { Hexagon::S2_pstorerhnewf_io, Hexagon::S2_pstorerhnewt_io },
  { Hexagon::S2_pstorerhnewf_pi, Hexagon::S2_pstorerhnewt_pi },
  { Hexagon::S2_pstorerhnewfnew_pi, Hexagon::S2_pstorerhnewtnew_pi },
  { Hexagon::S2_pstorerif_io, Hexagon::S2_pstorerit_io },
  { Hexagon::S2_pstorerif_pi, Hexagon::S2_pstorerit_pi },
  { Hexagon::S2_pstorerifnew_pi, Hexagon::S2_pstoreritnew_pi },
  { Hexagon::S2_pstorerinewf_io, Hexagon::S2_pstorerinewt_io },
  { Hexagon::S2_pstorerinewf_pi, Hexagon::S2_pstorerinewt_pi },
  { Hexagon::S2_pstorerinewfnew_pi, Hexagon::S2_pstorerinewtnew_pi },
  { Hexagon::S4_pstorerbf_abs, Hexagon::S4_pstorerbt_abs },
  { Hexagon::S4_pstorerbf_rr, Hexagon::S4_pstorerbt_rr },
  { Hexagon::S4_pstorerbfnew_abs, Hexagon::S4_pstorerbtnew_abs },
  { Hexagon::S4_pstorerbfnew_io, Hexagon::S4_pstorerbtnew_io },
  { Hexagon::S4_pstorerbfnew_rr, Hexagon::S4_pstorerbtnew_rr },
  { Hexagon::S4_pstorerbnewf_abs, Hexagon::S4_pstorerbnewt_abs },
  { Hexagon::S4_pstorerbnewf_rr, Hexagon::S4_pstorerbnewt_rr },
  { Hexagon::S4_pstorerbnewfnew_abs, Hexagon::S4_pstorerbnewtnew_abs },
  { Hexagon::S4_pstorerbnewfnew_io, Hexagon::S4_pstorerbnewtnew_io },
  { Hexagon::S4_pstorerbnewfnew_rr, Hexagon::S4_pstorerbnewtnew_rr },
  { Hexagon::S4_pstorerdf_abs, Hexagon::S4_pstorerdt_abs },
  { Hexagon::S4_pstorerdf_rr, Hexagon::S4_pstorerdt_rr },
  { Hexagon::S4_pstorerdfnew_abs, Hexagon::S4_pstorerdtnew_abs },
  { Hexagon::S4_pstorerdfnew_io, Hexagon::S4_pstorerdtnew_io },
  { Hexagon::S4_pstorerdfnew_rr, Hexagon::S4_pstorerdtnew_rr },
  { Hexagon::S4_pstorerff_abs, Hexagon::S4_pstorerft_abs },
  { Hexagon::S4_pstorerff_rr, Hexagon::S4_pstorerft_rr },
  { Hexagon::S4_pstorerffnew_abs, Hexagon::S4_pstorerftnew_abs },
  { Hexagon::S4_pstorerffnew_io, Hexagon::S4_pstorerftnew_io },
  { Hexagon::S4_pstorerffnew_rr, Hexagon::S4_pstorerftnew_rr },
  { Hexagon::S4_pstorerhf_abs, Hexagon::S4_pstorerht_abs },
  { Hexagon::S4_pstorerhf_rr, Hexagon::S4_pstorerht_rr },
  { Hexagon::S4_pstorerhfnew_abs, Hexagon::S4_pstorerhtnew_abs },
  { Hexagon::S4_pstorerhfnew_io, Hexagon::S4_pstorerhtnew_io },
  { Hexagon::S4_pstorerhfnew_rr, Hexagon::S4_pstorerhtnew_rr },
  { Hexagon::S4_pstorerhnewf_abs, Hexagon::S4_pstorerhnewt_abs },
  { Hexagon::S4_pstorerhnewf_rr, Hexagon::S4_pstorerhnewt_rr },
  { Hexagon::S4_pstorerhnewfnew_abs, Hexagon::S4_pstorerhnewtnew_abs },
  { Hexagon::S4_pstorerhnewfnew_io, Hexagon::S4_pstorerhnewtnew_io },
  { Hexagon::S4_pstorerhnewfnew_rr, Hexagon::S4_pstorerhnewtnew_rr },
  { Hexagon::S4_pstorerif_abs, Hexagon::S4_pstorerit_abs },
  { Hexagon::S4_pstorerif_rr, Hexagon::S4_pstorerit_rr },
  { Hexagon::S4_pstorerifnew_abs, Hexagon::S4_pstoreritnew_abs },
  { Hexagon::S4_pstorerifnew_io, Hexagon::S4_pstoreritnew_io },
  { Hexagon::S4_pstorerifnew_rr, Hexagon::S4_pstoreritnew_rr },
  { Hexagon::S4_pstorerinewf_abs, Hexagon::S4_pstorerinewt_abs },
  { Hexagon::S4_pstorerinewf_rr, Hexagon::S4_pstorerinewt_rr },
  { Hexagon::S4_pstorerinewfnew_abs, Hexagon::S4_pstorerinewtnew_abs },
  { Hexagon::S4_pstorerinewfnew_io, Hexagon::S4_pstorerinewtnew_io },
  { Hexagon::S4_pstorerinewfnew_rr, Hexagon::S4_pstorerinewtnew_rr },
  { Hexagon::S4_storeirbf_io, Hexagon::S4_storeirbt_io },
  { Hexagon::S4_storeirbfnew_io, Hexagon::S4_storeirbtnew_io },
  { Hexagon::S4_storeirhf_io, Hexagon::S4_storeirht_io },
  { Hexagon::S4_storeirhfnew_io, Hexagon::S4_storeirhtnew_io },
  { Hexagon::S4_storeirif_io, Hexagon::S4_storeirit_io },
  { Hexagon::S4_storeirifnew_io, Hexagon::S4_storeiritnew_io },
  { Hexagon::V6_vL32b_cur_npred_ai, Hexagon::V6_vL32b_cur_pred_ai },
  { Hexagon::V6_vL32b_cur_npred_pi, Hexagon::V6_vL32b_cur_pred_pi },
  { Hexagon::V6_vL32b_cur_npred_ppu, Hexagon::V6_vL32b_cur_pred_ppu },
  { Hexagon::V6_vL32b_npred_ai, Hexagon::V6_vL32b_pred_ai },
  { Hexagon::V6_vL32b_npred_pi, Hexagon::V6_vL32b_pred_pi },
  { Hexagon::V6_vL32b_npred_ppu, Hexagon::V6_vL32b_pred_ppu },
  { Hexagon::V6_vL32b_nt_cur_npred_ai, Hexagon::V6_vL32b_nt_cur_pred_ai },
  { Hexagon::V6_vL32b_nt_cur_npred_pi, Hexagon::V6_vL32b_nt_cur_pred_pi },
  { Hexagon::V6_vL32b_nt_cur_npred_ppu, Hexagon::V6_vL32b_nt_cur_pred_ppu },
  { Hexagon::V6_vL32b_nt_npred_ai, Hexagon::V6_vL32b_nt_pred_ai },
  { Hexagon::V6_vL32b_nt_npred_pi, Hexagon::V6_vL32b_nt_pred_pi },
  { Hexagon::V6_vL32b_nt_npred_ppu, Hexagon::V6_vL32b_nt_pred_ppu },
  { Hexagon::V6_vL32b_nt_tmp_npred_ai, Hexagon::V6_vL32b_nt_tmp_pred_ai },
  { Hexagon::V6_vL32b_nt_tmp_npred_pi, Hexagon::V6_vL32b_nt_tmp_pred_pi },
  { Hexagon::V6_vL32b_nt_tmp_npred_ppu, Hexagon::V6_vL32b_nt_tmp_pred_ppu },
  { Hexagon::V6_vL32b_tmp_npred_ai, Hexagon::V6_vL32b_tmp_pred_ai },
  { Hexagon::V6_vL32b_tmp_npred_pi, Hexagon::V6_vL32b_tmp_pred_pi },
  { Hexagon::V6_vL32b_tmp_npred_ppu, Hexagon::V6_vL32b_tmp_pred_ppu },
  { Hexagon::V6_vS32Ub_npred_ai, Hexagon::V6_vS32Ub_pred_ai },
  { Hexagon::V6_vS32Ub_npred_pi, Hexagon::V6_vS32Ub_pred_pi },
  { Hexagon::V6_vS32Ub_npred_ppu, Hexagon::V6_vS32Ub_pred_ppu },
  { Hexagon::V6_vS32b_new_npred_ai, Hexagon::V6_vS32b_new_pred_ai },
  { Hexagon::V6_vS32b_new_npred_pi, Hexagon::V6_vS32b_new_pred_pi },
  { Hexagon::V6_vS32b_new_npred_ppu, Hexagon::V6_vS32b_new_pred_ppu },
  { Hexagon::V6_vS32b_npred_ai, Hexagon::V6_vS32b_pred_ai },
  { Hexagon::V6_vS32b_npred_pi, Hexagon::V6_vS32b_pred_pi },
  { Hexagon::V6_vS32b_npred_ppu, Hexagon::V6_vS32b_pred_ppu },
  { Hexagon::V6_vS32b_nt_new_npred_ai, Hexagon::V6_vS32b_nt_new_pred_ai },
  { Hexagon::V6_vS32b_nt_new_npred_pi, Hexagon::V6_vS32b_nt_new_pred_pi },
  { Hexagon::V6_vS32b_nt_new_npred_ppu, Hexagon::V6_vS32b_nt_new_pred_ppu },
  { Hexagon::V6_vS32b_nt_npred_ai, Hexagon::V6_vS32b_nt_pred_ai },
  { Hexagon::V6_vS32b_nt_npred_pi, Hexagon::V6_vS32b_nt_pred_pi },
  { Hexagon::V6_vS32b_nt_npred_ppu, Hexagon::V6_vS32b_nt_pred_ppu },
}; // End of getTruePredOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 250;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getTruePredOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getTruePredOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getTruePredOpcodeTable[mid][1];
}

// notTakenBranchPrediction
LLVM_READONLY
int notTakenBranchPrediction(uint16_t Opcode) {
static const uint16_t notTakenBranchPredictionTable[][2] = {
  { Hexagon::J2_jumpfnewpt, Hexagon::J2_jumpfnew },
  { Hexagon::J2_jumpfpt, Hexagon::J2_jumpf },
  { Hexagon::J2_jumprfnewpt, Hexagon::J2_jumprfnew },
  { Hexagon::J2_jumprfpt, Hexagon::J2_jumprf },
  { Hexagon::J2_jumprtnewpt, Hexagon::J2_jumprtnew },
  { Hexagon::J2_jumprtpt, Hexagon::J2_jumprt },
  { Hexagon::J2_jumptnewpt, Hexagon::J2_jumptnew },
  { Hexagon::J2_jumptpt, Hexagon::J2_jumpt },
  { Hexagon::J4_cmpeq_f_jumpnv_t, Hexagon::J4_cmpeq_f_jumpnv_nt },
  { Hexagon::J4_cmpeq_fp0_jump_t, Hexagon::J4_cmpeq_fp0_jump_nt },
  { Hexagon::J4_cmpeq_fp1_jump_t, Hexagon::J4_cmpeq_fp1_jump_nt },
  { Hexagon::J4_cmpeq_t_jumpnv_t, Hexagon::J4_cmpeq_t_jumpnv_nt },
  { Hexagon::J4_cmpeq_tp0_jump_t, Hexagon::J4_cmpeq_tp0_jump_nt },
  { Hexagon::J4_cmpeq_tp1_jump_t, Hexagon::J4_cmpeq_tp1_jump_nt },
  { Hexagon::J4_cmpeqi_f_jumpnv_t, Hexagon::J4_cmpeqi_f_jumpnv_nt },
  { Hexagon::J4_cmpeqi_fp0_jump_t, Hexagon::J4_cmpeqi_fp0_jump_nt },
  { Hexagon::J4_cmpeqi_fp1_jump_t, Hexagon::J4_cmpeqi_fp1_jump_nt },
  { Hexagon::J4_cmpeqi_t_jumpnv_t, Hexagon::J4_cmpeqi_t_jumpnv_nt },
  { Hexagon::J4_cmpeqi_tp0_jump_t, Hexagon::J4_cmpeqi_tp0_jump_nt },
  { Hexagon::J4_cmpeqi_tp1_jump_t, Hexagon::J4_cmpeqi_tp1_jump_nt },
  { Hexagon::J4_cmpeqn1_f_jumpnv_t, Hexagon::J4_cmpeqn1_f_jumpnv_nt },
  { Hexagon::J4_cmpeqn1_fp0_jump_t, Hexagon::J4_cmpeqn1_fp0_jump_nt },
  { Hexagon::J4_cmpeqn1_fp1_jump_t, Hexagon::J4_cmpeqn1_fp1_jump_nt },
  { Hexagon::J4_cmpeqn1_t_jumpnv_t, Hexagon::J4_cmpeqn1_t_jumpnv_nt },
  { Hexagon::J4_cmpeqn1_tp0_jump_t, Hexagon::J4_cmpeqn1_tp0_jump_nt },
  { Hexagon::J4_cmpeqn1_tp1_jump_t, Hexagon::J4_cmpeqn1_tp1_jump_nt },
  { Hexagon::J4_cmpgt_f_jumpnv_t, Hexagon::J4_cmpgt_f_jumpnv_nt },
  { Hexagon::J4_cmpgt_fp0_jump_t, Hexagon::J4_cmpgt_fp0_jump_nt },
  { Hexagon::J4_cmpgt_fp1_jump_t, Hexagon::J4_cmpgt_fp1_jump_nt },
  { Hexagon::J4_cmpgt_t_jumpnv_t, Hexagon::J4_cmpgt_t_jumpnv_nt },
  { Hexagon::J4_cmpgt_tp0_jump_t, Hexagon::J4_cmpgt_tp0_jump_nt },
  { Hexagon::J4_cmpgt_tp1_jump_t, Hexagon::J4_cmpgt_tp1_jump_nt },
  { Hexagon::J4_cmpgti_f_jumpnv_t, Hexagon::J4_cmpgti_f_jumpnv_nt },
  { Hexagon::J4_cmpgti_fp0_jump_t, Hexagon::J4_cmpgti_fp0_jump_nt },
  { Hexagon::J4_cmpgti_fp1_jump_t, Hexagon::J4_cmpgti_fp1_jump_nt },
  { Hexagon::J4_cmpgti_t_jumpnv_t, Hexagon::J4_cmpgti_t_jumpnv_nt },
  { Hexagon::J4_cmpgti_tp0_jump_t, Hexagon::J4_cmpgti_tp0_jump_nt },
  { Hexagon::J4_cmpgti_tp1_jump_t, Hexagon::J4_cmpgti_tp1_jump_nt },
  { Hexagon::J4_cmpgtn1_f_jumpnv_t, Hexagon::J4_cmpgtn1_f_jumpnv_nt },
  { Hexagon::J4_cmpgtn1_fp0_jump_t, Hexagon::J4_cmpgtn1_fp0_jump_nt },
  { Hexagon::J4_cmpgtn1_fp1_jump_t, Hexagon::J4_cmpgtn1_fp1_jump_nt },
  { Hexagon::J4_cmpgtn1_t_jumpnv_t, Hexagon::J4_cmpgtn1_t_jumpnv_nt },
  { Hexagon::J4_cmpgtn1_tp0_jump_t, Hexagon::J4_cmpgtn1_tp0_jump_nt },
  { Hexagon::J4_cmpgtn1_tp1_jump_t, Hexagon::J4_cmpgtn1_tp1_jump_nt },
  { Hexagon::J4_cmpgtu_f_jumpnv_t, Hexagon::J4_cmpgtu_f_jumpnv_nt },
  { Hexagon::J4_cmpgtu_fp0_jump_t, Hexagon::J4_cmpgtu_fp0_jump_nt },
  { Hexagon::J4_cmpgtu_fp1_jump_t, Hexagon::J4_cmpgtu_fp1_jump_nt },
  { Hexagon::J4_cmpgtu_t_jumpnv_t, Hexagon::J4_cmpgtu_t_jumpnv_nt },
  { Hexagon::J4_cmpgtu_tp0_jump_t, Hexagon::J4_cmpgtu_tp0_jump_nt },
  { Hexagon::J4_cmpgtu_tp1_jump_t, Hexagon::J4_cmpgtu_tp1_jump_nt },
  { Hexagon::J4_cmpgtui_f_jumpnv_t, Hexagon::J4_cmpgtui_f_jumpnv_nt },
  { Hexagon::J4_cmpgtui_fp0_jump_t, Hexagon::J4_cmpgtui_fp0_jump_nt },
  { Hexagon::J4_cmpgtui_fp1_jump_t, Hexagon::J4_cmpgtui_fp1_jump_nt },
  { Hexagon::J4_cmpgtui_t_jumpnv_t, Hexagon::J4_cmpgtui_t_jumpnv_nt },
  { Hexagon::J4_cmpgtui_tp0_jump_t, Hexagon::J4_cmpgtui_tp0_jump_nt },
  { Hexagon::J4_cmpgtui_tp1_jump_t, Hexagon::J4_cmpgtui_tp1_jump_nt },
  { Hexagon::J4_cmplt_f_jumpnv_t, Hexagon::J4_cmplt_f_jumpnv_nt },
  { Hexagon::J4_cmplt_t_jumpnv_t, Hexagon::J4_cmplt_t_jumpnv_nt },
  { Hexagon::J4_cmpltu_f_jumpnv_t, Hexagon::J4_cmpltu_f_jumpnv_nt },
  { Hexagon::J4_cmpltu_t_jumpnv_t, Hexagon::J4_cmpltu_t_jumpnv_nt },
  { Hexagon::L4_return_fnew_pt, Hexagon::L4_return_fnew_pnt },
  { Hexagon::L4_return_tnew_pt, Hexagon::L4_return_tnew_pnt },
  { Hexagon::PS_jmpretfnewpt, Hexagon::PS_jmpretfnew },
  { Hexagon::PS_jmprettnewpt, Hexagon::PS_jmprettnew },
}; // End of notTakenBranchPredictionTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 64;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == notTakenBranchPredictionTable[mid][0]) {
      break;
    }
    if (Opcode < notTakenBranchPredictionTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return notTakenBranchPredictionTable[mid][1];
}

// takenBranchPrediction
LLVM_READONLY
int takenBranchPrediction(uint16_t Opcode) {
static const uint16_t takenBranchPredictionTable[][2] = {
  { Hexagon::J2_jumpf, Hexagon::J2_jumpfpt },
  { Hexagon::J2_jumpfnew, Hexagon::J2_jumpfnewpt },
  { Hexagon::J2_jumprf, Hexagon::J2_jumprfpt },
  { Hexagon::J2_jumprfnew, Hexagon::J2_jumprfnewpt },
  { Hexagon::J2_jumprt, Hexagon::J2_jumprtpt },
  { Hexagon::J2_jumprtnew, Hexagon::J2_jumprtnewpt },
  { Hexagon::J2_jumpt, Hexagon::J2_jumptpt },
  { Hexagon::J2_jumptnew, Hexagon::J2_jumptnewpt },
  { Hexagon::J4_cmpeq_f_jumpnv_nt, Hexagon::J4_cmpeq_f_jumpnv_t },
  { Hexagon::J4_cmpeq_fp0_jump_nt, Hexagon::J4_cmpeq_fp0_jump_t },
  { Hexagon::J4_cmpeq_fp1_jump_nt, Hexagon::J4_cmpeq_fp1_jump_t },
  { Hexagon::J4_cmpeq_t_jumpnv_nt, Hexagon::J4_cmpeq_t_jumpnv_t },
  { Hexagon::J4_cmpeq_tp0_jump_nt, Hexagon::J4_cmpeq_tp0_jump_t },
  { Hexagon::J4_cmpeq_tp1_jump_nt, Hexagon::J4_cmpeq_tp1_jump_t },
  { Hexagon::J4_cmpeqi_f_jumpnv_nt, Hexagon::J4_cmpeqi_f_jumpnv_t },
  { Hexagon::J4_cmpeqi_fp0_jump_nt, Hexagon::J4_cmpeqi_fp0_jump_t },
  { Hexagon::J4_cmpeqi_fp1_jump_nt, Hexagon::J4_cmpeqi_fp1_jump_t },
  { Hexagon::J4_cmpeqi_t_jumpnv_nt, Hexagon::J4_cmpeqi_t_jumpnv_t },
  { Hexagon::J4_cmpeqi_tp0_jump_nt, Hexagon::J4_cmpeqi_tp0_jump_t },
  { Hexagon::J4_cmpeqi_tp1_jump_nt, Hexagon::J4_cmpeqi_tp1_jump_t },
  { Hexagon::J4_cmpeqn1_f_jumpnv_nt, Hexagon::J4_cmpeqn1_f_jumpnv_t },
  { Hexagon::J4_cmpeqn1_fp0_jump_nt, Hexagon::J4_cmpeqn1_fp0_jump_t },
  { Hexagon::J4_cmpeqn1_fp1_jump_nt, Hexagon::J4_cmpeqn1_fp1_jump_t },
  { Hexagon::J4_cmpeqn1_t_jumpnv_nt, Hexagon::J4_cmpeqn1_t_jumpnv_t },
  { Hexagon::J4_cmpeqn1_tp0_jump_nt, Hexagon::J4_cmpeqn1_tp0_jump_t },
  { Hexagon::J4_cmpeqn1_tp1_jump_nt, Hexagon::J4_cmpeqn1_tp1_jump_t },
  { Hexagon::J4_cmpgt_f_jumpnv_nt, Hexagon::J4_cmpgt_f_jumpnv_t },
  { Hexagon::J4_cmpgt_fp0_jump_nt, Hexagon::J4_cmpgt_fp0_jump_t },
  { Hexagon::J4_cmpgt_fp1_jump_nt, Hexagon::J4_cmpgt_fp1_jump_t },
  { Hexagon::J4_cmpgt_t_jumpnv_nt, Hexagon::J4_cmpgt_t_jumpnv_t },
  { Hexagon::J4_cmpgt_tp0_jump_nt, Hexagon::J4_cmpgt_tp0_jump_t },
  { Hexagon::J4_cmpgt_tp1_jump_nt, Hexagon::J4_cmpgt_tp1_jump_t },
  { Hexagon::J4_cmpgti_f_jumpnv_nt, Hexagon::J4_cmpgti_f_jumpnv_t },
  { Hexagon::J4_cmpgti_fp0_jump_nt, Hexagon::J4_cmpgti_fp0_jump_t },
  { Hexagon::J4_cmpgti_fp1_jump_nt, Hexagon::J4_cmpgti_fp1_jump_t },
  { Hexagon::J4_cmpgti_t_jumpnv_nt, Hexagon::J4_cmpgti_t_jumpnv_t },
  { Hexagon::J4_cmpgti_tp0_jump_nt, Hexagon::J4_cmpgti_tp0_jump_t },
  { Hexagon::J4_cmpgti_tp1_jump_nt, Hexagon::J4_cmpgti_tp1_jump_t },
  { Hexagon::J4_cmpgtn1_f_jumpnv_nt, Hexagon::J4_cmpgtn1_f_jumpnv_t },
  { Hexagon::J4_cmpgtn1_fp0_jump_nt, Hexagon::J4_cmpgtn1_fp0_jump_t },
  { Hexagon::J4_cmpgtn1_fp1_jump_nt, Hexagon::J4_cmpgtn1_fp1_jump_t },
  { Hexagon::J4_cmpgtn1_t_jumpnv_nt, Hexagon::J4_cmpgtn1_t_jumpnv_t },
  { Hexagon::J4_cmpgtn1_tp0_jump_nt, Hexagon::J4_cmpgtn1_tp0_jump_t },
  { Hexagon::J4_cmpgtn1_tp1_jump_nt, Hexagon::J4_cmpgtn1_tp1_jump_t },
  { Hexagon::J4_cmpgtu_f_jumpnv_nt, Hexagon::J4_cmpgtu_f_jumpnv_t },
  { Hexagon::J4_cmpgtu_fp0_jump_nt, Hexagon::J4_cmpgtu_fp0_jump_t },
  { Hexagon::J4_cmpgtu_fp1_jump_nt, Hexagon::J4_cmpgtu_fp1_jump_t },
  { Hexagon::J4_cmpgtu_t_jumpnv_nt, Hexagon::J4_cmpgtu_t_jumpnv_t },
  { Hexagon::J4_cmpgtu_tp0_jump_nt, Hexagon::J4_cmpgtu_tp0_jump_t },
  { Hexagon::J4_cmpgtu_tp1_jump_nt, Hexagon::J4_cmpgtu_tp1_jump_t },
  { Hexagon::J4_cmpgtui_f_jumpnv_nt, Hexagon::J4_cmpgtui_f_jumpnv_t },
  { Hexagon::J4_cmpgtui_fp0_jump_nt, Hexagon::J4_cmpgtui_fp0_jump_t },
  { Hexagon::J4_cmpgtui_fp1_jump_nt, Hexagon::J4_cmpgtui_fp1_jump_t },
  { Hexagon::J4_cmpgtui_t_jumpnv_nt, Hexagon::J4_cmpgtui_t_jumpnv_t },
  { Hexagon::J4_cmpgtui_tp0_jump_nt, Hexagon::J4_cmpgtui_tp0_jump_t },
  { Hexagon::J4_cmpgtui_tp1_jump_nt, Hexagon::J4_cmpgtui_tp1_jump_t },
  { Hexagon::J4_cmplt_f_jumpnv_nt, Hexagon::J4_cmplt_f_jumpnv_t },
  { Hexagon::J4_cmplt_t_jumpnv_nt, Hexagon::J4_cmplt_t_jumpnv_t },
  { Hexagon::J4_cmpltu_f_jumpnv_nt, Hexagon::J4_cmpltu_f_jumpnv_t },
  { Hexagon::J4_cmpltu_t_jumpnv_nt, Hexagon::J4_cmpltu_t_jumpnv_t },
  { Hexagon::L4_return_fnew_pnt, Hexagon::L4_return_fnew_pt },
  { Hexagon::L4_return_tnew_pnt, Hexagon::L4_return_tnew_pt },
  { Hexagon::PS_jmpretfnew, Hexagon::PS_jmpretfnewpt },
  { Hexagon::PS_jmprettnew, Hexagon::PS_jmprettnewpt },
}; // End of takenBranchPredictionTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 64;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == takenBranchPredictionTable[mid][0]) {
      break;
    }
    if (Opcode < takenBranchPredictionTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return takenBranchPredictionTable[mid][1];
}

} // end namespace Hexagon
} // end namespace llvm
#endif // GET_INSTRMAP_INFO

